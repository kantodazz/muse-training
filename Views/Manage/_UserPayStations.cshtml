@model AdminUserPayStationVM

<fieldset>
    <legend>
        User Details
    </legend>
    <div class="row">
        <div class="col-md-4">
            <dl class="dl-horizontal">
                <dt>
                    @Html.DisplayNameFor(model => model.ApplicationUser.FirstName)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.ApplicationUser.FirstName)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.ApplicationUser.MiddleName)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.ApplicationUser.MiddleName)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.ApplicationUser.LastName)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.ApplicationUser.LastName)
                </dd>
            </dl>
        </div>
        <div class="col-md-4">
            <dl class="dl-horizontal">
                <dt>
                    @Html.DisplayNameFor(model => model.ApplicationUser.UserName)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.ApplicationUser.UserName)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.ApplicationUser.VoteCode)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.ApplicationUser.VoteCode)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.ApplicationUser.VoteName)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.ApplicationUser.VoteName)
                </dd>
            </dl>
        </div>
        <div class="col-md-4">
            <dl class="dl-horizontal">
                <dt>
                    @Html.DisplayNameFor(model => model.ApplicationUser.Email)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.ApplicationUser.Email)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.ApplicationUser.PhoneNumber)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.ApplicationUser.PhoneNumber)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.ApplicationUser.Designation)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.ApplicationUser.Designation)
                </dd>
            </dl>
        </div>
    </div>
</fieldset>

<fieldset>
    <legend>
        Institution To Manage: @Model.InstitutionCode - @Model.InstitutionName
    </legend>
    <form>
        @Html.HiddenFor(model => model.OriginalDefaultPayStationId)
        <div class="row">
            <div class="col-md-12">
                @{int itemCount = 0;}
                <ul style="float: left; padding-right:50px">
                    @foreach (var item in Model.UserPayStations)
                    {
                        <li>
                            @Html.CheckBoxFor(model => item.Selected, new { @value = item.Value })
                            @Html.Label("", item.Text)
                            @Html.RadioButtonFor(model => Model.DefaultPayStationId, item.Value)
                        </li>
                        if (Model.UserPayStations.Count() > 10 && itemCount == (int)(Model.UserPayStations.Count() / 2))
                        {
                            @Html.Raw("</ul><ul style=\"float: left; padding-right:50px\">");
                        }

                        itemCount++;
                    }
                </ul>
                <div class="clear"></div>
            </div>
        </div>

    </form>
</fieldset>

@section Scripts{
    <script>


        $(function () {

            var url = '@Url.Action("GetInstitutions", "Manage")';

            $("#InstitutionId").select2({
                minimumInputLength: 2,  // minimumInputLength for sending ajax request to server
                width: 'resolve',   // to adjust proper width of select2 wrapped elements
                ajax: {
                    url: url, // Controller - Select2Demo and Action -AccessRemoteData
                    type: "GET",
                    dataType: 'json',
                    data: function (term) {
                        return {
                            term: term
                        };
                    },
                    results: function (data, page) {
                        return { results: data.institutions }; // data.CountryList returning json data from Controlle
                    }
                }
            });

            $("#tblRoles").DataTable();
            $("#tblPayStations").DataTable();
        });

    </script>
}
