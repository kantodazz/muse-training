@model ApplicationUser

@{
    ViewBag.Title = "User Details";
}

<div id="divLoader"></div>
<!-- MAIN CONTENT -->
<div id="content" style="margin: 5px; padding-top: 30px">

    <div class="row">
        @*<div class="col-xs-12 col-sm-9 col-md-9 col-lg-9">
                <h1 class="page-title txt-color-blueDark">

                    <!-- PAGE HEADER -->
                    <!--
                    <i class="fa-fw fa fa-pencil-square-o"></i>
                    Payments
                    <span>
                        >
                        Bills
                    </span>
                        -->
                </h1>
            </div>*@

        <div class="col-xs-12 col-sm-3 col-md-3 col-lg-3">
            <!-- Button trigger modal -->
            <!--<a data-toggle="modal" href="#myModal" class="btn btn-success btn-lg pull-right header-btn hidden-mobile"><i class="fa fa-circle-arrow-up fa-lg"></i> Launch form modal</a>-->
        </div>
    </div>

    <!--
    <div class="alert alert-block alert-success">
        <a class="close" data-dismiss="alert" href="#">×</a>
        <h4 class="alert-heading"><i class="fa fa-check-square-o"></i> Check validation!</h4>
        <p>
            You may also check the form validation by clicking on the form action button. Please try and see the results below!
        </p>
    </div>
        -->
    <!-- widget grid -->
    <section id="widget-grid" class="">


        <!-- START ROW -->

        <div class="row">

            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">

                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">
                    <!-- widget options:
                        usage: <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false">

                        data-widget-colorbutton="false"
                        data-widget-editbutton="false"
                        data-widget-togglebutton="false"
                        data-widget-deletebutton="false"
                        data-widget-fullscreenbutton="false"
                        data-widget-custombutton="false"
                        data-widget-collapsed="true"
                        data-widget-sortable="false"

                    -->
                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2>User Details </h2>

                    </header>

                    <!-- widget div-->
                    <div>

                        <!-- widget edit box -->
                        <div class="jarviswidget-editbox">
                            <!-- This area used as dropdown edit box -->

                        </div>
                        <!-- end widget edit box -->
                        <!-- widget content -->
                        <div class="widget-body">
                            <div id="divLoader" style="display: none">
                                <img src="~/Media/Images/ajax_loader.gif" />
                            </div>
                            <div class="row">
                                <div class="col-md-4">
                                    <dl class="dl-horizontal">
                                        <dt>
                                            @Html.DisplayNameFor(model => model.FirstName)
                                        </dt>

                                        <dd>
                                            @Html.DisplayFor(model => model.FirstName)
                                        </dd>

                                        <dt>
                                            @Html.DisplayNameFor(model => model.MiddleName)
                                        </dt>

                                        <dd>
                                            @Html.DisplayFor(model => model.MiddleName)
                                        </dd>

                                        <dt>
                                            @Html.DisplayNameFor(model => model.LastName)
                                        </dt>

                                        <dd>
                                            @Html.DisplayFor(model => model.LastName)
                                        </dd>
                                    </dl>
                                </div>
                                <div class="col-md-4">
                                    <dl class="dl-horizontal">
                                        <dt>
                                            @Html.DisplayNameFor(model => model.UserName)
                                        </dt>

                                        <dd>
                                            @Html.DisplayFor(model => model.UserName)
                                        </dd>

                                        <dt>
                                            @Html.DisplayNameFor(model => model.VoteCode)
                                        </dt>

                                        <dd>
                                            @Html.DisplayFor(model => model.VoteCode)
                                        </dd>

                                        <dt>
                                            @Html.DisplayNameFor(model => model.VoteName)
                                        </dt>

                                        <dd>
                                            @Html.DisplayFor(model => model.VoteName)
                                        </dd>
                                    </dl>
                                </div>
                                <div class="col-md-4">
                                    <dl class="dl-horizontal">
                                        <dt>
                                            @Html.DisplayNameFor(model => model.Email)
                                        </dt>

                                        <dd>
                                            @Html.DisplayFor(model => model.Email)
                                        </dd>
                                        <dt>
                                            @Html.DisplayNameFor(model => model.PhoneNumber)
                                        </dt>

                                        <dd>
                                            @Html.DisplayFor(model => model.PhoneNumber)
                                        </dd>
                                        <dt>
                                            @Html.DisplayNameFor(model => model.Designation)
                                        </dt>

                                        <dd>
                                            @Html.DisplayFor(model => model.Designation)
                                        </dd>
                                    </dl>
                                </div>
                            </div>
                            <hr />
                            <div>
                                @Html.ActionLink("Edit", "EditUser", new { id = Model.Id }) |
                                @Html.ActionLink("Reset Password", "AdminResetPassword", "Manage", new { id = Model.Id }, new { }) |
                                <a href="#" onclick="changeUserStatus('@ViewBag.lblUserStatus', '@Model.Id')">@ViewBag.lblUserStatus</a> |
                                @if (Model.LockoutEndDateUtc != null)
                                {
                                    <a href="#" onclick="unlockUser('@Model.Id')">Unlock User</a> <span>|</span>
                                }
                                @Html.ActionLink("User Groups", "Edit", "UsersAdmin", new { id = Model.Id }, new { }) |
                                @Html.ActionLink("Back to List", "Users")
                            </div>
                            <div>
                                @ViewBag.Message
                            </div>
                            <hr />

                            <!-- Start of user paystation section -->
                            <div class="panel panel-success" style="border-radius: 0px">
                                <!-- Default panel contents -->
                                <div class="panel-heading">
                                    <h3 class="panel-title">User Pay Station</h3>
                                </div>
                                <div class="panel-body">
                                    <div class="row">
                                        <div class="form-group">
                                            <div class="col-md-6">
                                                <input type="text" name="InstitutionId" id="InstitutionId" class="form-control" placeholder="Select Institution" />
                                            </div>
                                            <div class="col-md-6">
                                                <input type="text" name="PayStationId" id="PayStationId" class="form-control" placeholder="Select Pay Station" />
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row" style="padding-top: 20px">
                                        <div class="form-group">
                                            <div class="col-md-6">
                                                <input type="text" name="ApprovalLevelId" id="ApprovalLevelId" class="form-control" placeholder="Select Approval Level" />
                                            </div>
                                            <div class="col-md-2">
                                                <button type="button" class="btn btn-info btn-flat" onclick="addUserToPayStation()">Save</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <!-- Table -->
                                <table class="table table-condensed table-striped table-hover table-responsive" id="tblPayStations">
                                    <thead>
                                        <tr>
                                            <th>#</th>
                                            <th>
                                                Institution
                                            </th>
                                            <th>
                                                Pay Station
                                            </th>
                                            <th>
                                                Approval Level
                                            </th>
                                            <th>
                                                Is Default
                                            </th>
                                            <th></th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @if (ViewBag.UserPayStations != null)
                                        {
                                            int i = 0;
                                            foreach (var userPayStation in ViewBag.UserPayStations)
                                            {
                                                i++;
                                                <tr>
                                                    <td>@i</td>
                                                    <td>@userPayStation.InstitutionCode</td>
                                                    <td>@userPayStation.PayStationCode</td>
                                                    <td>@userPayStation.ApprovalLevel</td>
                                                    <td><input type="radio" name="IdDefault" value="@userPayStation.IsDefault" checked="@(userPayStation.IsDefault.ToString() == "True")" onchange="changeDefaultPayStation('@userPayStation.UserPayStationId')" /></td>
                                                    <td>
                                                        <a href="#" onclick="editApprovalLevel('@userPayStation.UserPayStationId')">Edit</a>
                                                        @if (userPayStation.IsDefault == false)
                                                        {
                                                            <span> | </span>
                                                            <a href="#" onclick="deleteUserFromPayStation('@userPayStation.UserPayStationId')">Delete</a>
                                                        }
                                                    </td>
                                                </tr>
                                            }
                                        }
                                    </tbody>
                                </table>
                                <!-- Table -->
                            </div>
                            <hr />
                            <!-- End of user paystation section -->
                            <!-- Start of user roles section -->
                            <div class="panel panel-success" style="border-radius: 0px">
                                <!-- Default panel contents -->
                                <div class="panel-heading">
                                    <h3 class="panel-title">User Roles</h3>
                                </div>
                                <div class="panel-body">
                                    <div class="row">
                                        <div class="col-md-3">
                                            @Html.DropDownList("SystemModuleId", ViewBag.SystemModules as SelectList, "Select Module", new { @class = "form-control select2" })
                                        </div>
                                        <div class="col-md-3">
                                            @Html.DropDownList("SystemSubModuleId", ViewBag.SystemSubModules as SelectList, "Select Sub Module", new { @class = "form-control select2" })
                                        </div>
                                        <div class="col-md-3">
                                            @Html.DropDownList("RoleName", ViewBag.Roles as SelectList, "Select Role", new { @class = "form-control select2" })
                                        </div>
                                        <div class="col-md-3">
                                            <button type="button" class="btn btn-default btn-flat" onclick="addUserToRole()">Save</button>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-12">
                                            @if (User.Identity.Name == "amateso@mof.go.tz")
                                            {
                                                <button type="button" class="btn btn-default btn-flat" onclick="addRoleToUser()">Add Role(s) to User</button>
                                                <a href="@Url.Action("AddRoleToUser","Manage")" class="btn btn-default btn-flat">Add Role(s) to User</a>
                                            }
                                        </div>
                                    </div>
                                </div>

                                <!-- Table -->
                                <table class="table table-condensed table-striped table-hover table-responsive" id="tblRoles">
                                    <thead>
                                        <tr>
                                            <th>#</th>
                                            <th>
                                                Role Name
                                            </th>
                                            <th></th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @if (ViewBag.UserRoles != null)
                                        {
                                            int i = 0;
                                            foreach (string userRole in ViewBag.UserRoles)
                                            {
                                                i++;
                                                <tr>
                                                    <td>@i</td>
                                                    <td>@userRole</td>
                                                    <td>
                                                        <a href="#" onclick="deleteUserFromRole('@userRole')">Delete</a>
                                                    </td>
                                                </tr>
                                            }
                                        }
                                    </tbody>
                                </table>
                                <!-- Table -->
                            </div>
                            <hr />
                            <!-- End of user roles section -->
                        </div>
                        <!-- end widget content -->
                    </div>
                    <!-- end widget div -->

                </div>
                <!-- end widget -->

            </article>
            <!-- END COL -->

        </div>

        <!-- END ROW -->

    </section>
    <!-- end widget grid -->

</div>
<!-- END MAIN CONTENT -->
<!-- Start of Aproval modal -->
<div class="modal fade" id="divModal" tabindex="-1" role="dialog" aria-labelledby="lblmodal">
    <div class="modal-dialog" style="width: 80%">
        >
        <div class="modal-content">
            <div class="modal-header alert alert-info" style="font:bold 16px Trebuchet MS, Lucida Sans Unicode, Lucida Grande, Lucida Sans, Arial, sans-serif">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title" id="lblmodal">Edit Approval Level</h4>
            </div>
            <div class="modal-body" id="divModalBody" style="padding-top: 0px"></div>
            <div class="modal-footer">
                <button class="btn btn-info role-save" onclick="saveApprovalLevel()">Save</button>
                <button class="btn btn-default role-cancel" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
<!-- End of Aproval modal -->
@section Scripts{
    <script>


        $(function () {

            var url = '@Url.Action("GetInstitutions", "Manage")';

            $("#InstitutionId").select2({
                minimumInputLength: 2,  // minimumInputLength for sending ajax request to server
                width: 'resolve',   // to adjust proper width of select2 wrapped elements
                ajax: {
                    url: url, // Controller - Select2Demo and Action -AccessRemoteData
                    type: "GET",
                    dataType: 'json',
                    data: function (term) {
                        return {
                            term: term
                        };
                    },
                    results: function (data, page) {
                        return { results: data.institutions }; // data.CountryList returning json data from Controlle
                    }
                }
            });

            $("#tblRoles").DataTable();
            $("#tblPayStations").DataTable();
        });

        $("#InstitutionId").on("change", function () {

            var userId = "@Model.Id";
            var institutionId = $("#InstitutionId").val();
            var url = '@Url.Action("GetPayStations", "Manage")';
            $("#PayStationId").select2({
                minimumInputLength: 2,  // minimumInputLength for sending ajax request to server
                width: 'resolve',   // to adjust proper width of select2 wrapped elements
                ajax: {
                    url: url, // Controller - Select2Demo and Action -AccessRemoteData
                    type: "GET",
                    dataType: 'json',
                    data: function (term) {
                        return {
                            userId: userId,
                            institutionId: institutionId,
                            term: term
                        };
                    },
                    results: function (data, page) {
                        return { results: data.payStations }; // data.CountryList returning json data from Controlle
                    }
                }
            });

            $("#ApprovalLevelId").select2({
                minimumInputLength: 2,  // minimumInputLength for sending ajax request to server
                width: 'resolve',   // to adjust proper width of select2 wrapped elements
                ajax: {
                    url: '@Url.Action("GetApprovalLevels","Manage")', // Controller - Select2Demo and Action -AccessRemoteData
                    type: "GET",
                    dataType: 'json',
                    data: function (term) {
                        return {
                            userId: userId,
                            institutionId: institutionId,
                            term: term
                        };
                    },
                    results: function (data, page) {
                        return { results: data.approvalLevels }; // data.CountryList returning json data from Controlle
                    }
                }
            });
        });

        var addUserToPayStation = function () {
            var userId = '@Model.Id';
            var institutionId = $("#InstitutionId").val();
            var payStationId = $("#PayStationId").val();
            var approvalLevelId = $("#ApprovalLevelId").val();
            var url = '@Url.Action("AddUserToPayStation", "Manage")';

            if (institutionId == "" || payStationId == "") {
                return;
            };

            $("#divLoader").show();
            $.ajax({
                type: "POST",
                url: url,
                data: { userId: userId, payStationId: payStationId, ApprovalLevelId: approvalLevelId },
                success: function (response) {
                    if (response == "Success") {
                        swal({
                            text: "Pay Station Successfully Saved!",
                            icon: "success",
                            button: "OK",
                        }).then(function () {
                            location.reload();
                        });
                    } else if (response == "Duplicate") {
                        swal({
                            text: "Pay Station already exist for this user.",
                            icon: "warning",
                            button: "OK",
                        })
                    }
                    else {
                        swal({
                            text: "Error, pay station not saved successfully. Contact system support.",
                            icon: "error",
                            button: "OK",
                        })
                    }
                },
                error: function (err) {
                    swal({
                        text: err.statusText,
                        icon: "error",
                        button: "OK",
                    })
                },
                complete: function () {
                    $("#divLoader").hide();
                }
            });
        };

        var deleteUserFromPayStation = function (id) {
            var result = confirm("Are you sure you want to remove this item.");
            var url = '@Url.Action("DeleteUserFromPayStation", "Manage")';
            var userId = '@Model.Id';

            if (!result) {
                return false;
            }

            $("#divLoader").show();
            $.ajax({
                type: "POST",
                url: url,
                data: { userId: userId, userPayStationId: id },
                success: function (response) {
                    if (response == "Success") {
                        swal({
                            text: "Pay station successfully removed.",
                            icon: "success",
                            button: "OK",
                        }).then(function () {
                            location.reload();
                        });
                    } else {
                        swal({
                            text: "Error on removing pay station, contact system support.",
                            icon: "error",
                            button: "OK",
                        })
                    }
                },
                error: function (err) {
                    swal({
                        text: err.statusText,
                        icon: "error",
                        button: "OK",
                    })
                },
                complete: function () {
                    $("#divLoader").hide();
                }
            });
        };

        var addUserToRole = function () {
            var userId = '@Model.Id';
            var roleName = $("#RoleName").val();
            var url = '@Url.Action("AddUserToRole", "ApplicationRoles")';

            if ($("#RoleName").val() == "") {
                return;
            };

            $("#divLoader").show();
            $.ajax({
                type: "POST",
                url: url,
                data: { userId: userId, roleName: roleName },
                success: function (response) {
                    if (response == "Success") {
                        swal({
                            text: "Role Successfully Saved!",
                            icon: "success",
                            button: "OK",
                        }).then(function () {
                            //location.reload();
                        });
                    }
                    else {
                        swal({
                            text: response,
                            icon: "info",
                            button: "OK",
                        })
                    }
                },
                error: function (err) {
                    swal({
                        text: err.statusText,
                        icon: "error",
                        button: "OK",
                    })
                },
                complete: function () {
                    $("#divLoader").hide();
                }
            });
        };

        var deleteUserFromRole = function (id) {
            var result = confirm("Are you sure you want to remove this item.");
            var url = '@Url.Action("DeleteUserFromRole","Manage")';
            var userId = '@Model.Id';

            if (!result) {
                return false;
            }

            $("#divLoader").show();
            $.ajax({
                type: "POST",
                url: url,
                data: { userId: userId, roleName: id },
                success: function (response) {
                    if (response == "Success") {
                        swal({
                            text: "System successfully removed.",
                            icon: "success",
                            button: "OK",
                        }).then(function () {
                            location.reload();
                        });
                    } else {
                        swal({
                            text: "Error on removing system, contact system support.",
                            icon: "error",
                            button: "OK",
                        })
                    }
                },
                error: function (err) {
                    swal({
                        text: err.statusText,
                        icon: "error",
                        button: "OK",
                    })
                },
                complete: function () {
                    $("#divLoader").hide();
                }
            });
        };

        var changeUserStatus = function (action, userId) {

            var confirmMsg = "";

            if (action == "Block User") {
                confirmMsg = "Are you sure you want to block this user?";
            } else {
                confirmMsg = "Are you sure you want to activate this user?";
            }

            var r = confirm(confirmMsg);

            if (r == true) {

                var url = '@Url.Action("ChangeUserStatus", "Manage")';

                $("#divLoader").show();
                $.ajax({
                    type: "POST",
                    url: url,
                    data: { action: action, id: userId },
                    success: function (response) {
                        var text = "";
                        if (response == "success") {
                            if (action = "Block User") {
                                text = "Employee successfully blocked!";
                            } else {
                                text = "Employee successfully activated!";
                            }

                            swal({
                                text: text,
                                icon: "success",
                                button: "OK",
                            }).then(function () {
                                location.reload();
                            });
                        } else {
                            swal({
                                text: "Error, contact system administrator!",
                                icon: "error",
                                button: "OK",
                            }).then(function () {
                                location.reload();
                            });
                        }
                    },
                    error: function () {

                    },
                    complete: function () {
                        $("#divLoader").hide();
                    }
                })
            }
        }

        var changeDefaultPayStation = function (id) {
            var userId = '@Model.Id';

            $("#divLoader").show();
            $.ajax({
                type: "POST",
                url: '@Url.Action("ChangeDefaultUserPayStation", "Manage")',
                data: { userId: userId, payStationId: id },
                success: function (response) {
                    if (response == "Success") {
                        swal({
                            text: "Paystation successfully changed.",
                            icon: "success",
                            button: "OK",
                        }).then(function () {
                            location.reload();
                        });
                    } else {
                        swal({
                            text: "Error on changing paystation, contact system support.",
                            icon: "error",
                            button: "OK",
                        })
                    }
                },
                error: function (err) {
                    swal({
                        text: err.statusText,
                        icon: "error",
                        button: "OK",
                    })
                },
                complete: function () {
                    $("#divLoader").hide();
                }
            });
        }

        var editApprovalLevel = function (id) {

            var url = '@Url.Action("EditApprovalLevel", "Manage")/' + id;

            $("#divModalBody").load(url, function (response, status, xhr) {
                if (status == "error") {
                    if (!$(".modal-header").hasClass("alert-danger")) {
                        $(".modal-header").removeClass("alert-info").addClass("alert-danger");
                        $(".approve-confirm").css("display", "none");
                    }
                    $("#divModalBody").html("Error on creating role, contact system support");
                }
                $("#divModal").modal({
                    backdrop: "static",
                    keyboard: false
                });
            });
        }

        var saveApprovalLevel = function () {
            $.validator.unobtrusive.parse("#editApprovalLevelForm");
            if (!$("#editApprovalLevelForm").valid()) {
                return false;
            }
            var url = '@Url.Action("EditApprovalLevel", "Manage")';

            var model = $("#editApprovalLevelForm").serialize();

            $("#divLoader").show();
            $.ajax({
                type: "POST",
                url: url,
                data: model,
                success: function (response) {
                    if (response == "Success") {
                        swal({
                            text: "Approval level successfully saved!",
                            icon: "success",
                            button: "OK",
                        }).then(function () {
                            location.reload();
                        });
                    } else if (response == "Error") {
                        swal({
                            text: "Error, approval level not saved successfully. Contact system support.",
                            icon: "warning",
                            button: "OK",
                        })
                    }
                    else {
                        swal({
                            text: response,
                            icon: "warning",
                            button: "OK",
                        })
                    }
                },
                error: function (response) {
                    swal({
                        text: response,
                        icon: "error",
                        button: "OK",
                    }).then(function () {
                        location.reload();
                    });
                },
                complete: function () {
                    $("#divLoader").hide();
                }
            });
        }

        var addRoleToUser = function () {
            var url = '@Url.Action("AddRoleToUser", "Manage", new { id = Model.Id })';

            $("#divModalBody").load(url, function (response, status, xhr) {
                $("#divModal").modal({
                    backdrop: "static",
                    keyboard: false
                });
            });
        }

        $("#SystemModuleId").on("change", function () {

            var systemModuleId = $("#SystemModuleId").val();
            $("#divLoader").show();
            $.ajax({
                type: "GET",
                url: '@Url.Action("GetSystemModule", "ApplicationRoles")',
                data: { id: systemModuleId },
                success: function (data, status, jqXHR) {
                    $("#SystemSubModuleId option").remove();
                    $("#SystemSubModuleId").append('<option value="">Select Sub Module</option>');
                    $.each(data.SystemSubModules, function (i, systemSubModule) {
                        $("#SystemSubModuleId").append('<option value="'
                            + systemSubModule.SystemSubModuleId + '">'
                            + systemSubModule.SubModuleName + '</option>');
                    });
                },
                error: function () {
                    swal({
                        text: "Error on accessing module details",
                        icon: "error",
                        button: "OK",
                    })
                },
                complete: function () {
                    $("#divLoader").hide();
                }
            })
        })

        $("#SystemSubModuleId").on("change", function () {
            var systemSubModuleId = $("#SystemSubModuleId").val();
            $("#divLoader").show();
            $.ajax({
                type: "GET",
                url: '@Url.Action("GetSystemSubModule", "ApplicationRoles")',
                data: { id: systemSubModuleId },
                success: function (data, status, jqXHR) {
                    $("#RoleName option").remove();
                    $("#RoleName").append('<option value="">Select Role</option>');
                    $.each(data.Roles, function (i, role) {
                        $("#RoleName").append('<option value="'
                            + role.Name + '">'
                            + role.Name + '</option>');
                    });
                },
                error: function () {
                    swal({
                        text: "Error on accessing sub module details",
                        icon: "error",
                        button: "OK",
                    })
                },
                complete: function () {
                    $("#divLoader").hide();
                }
            })
        })

        var unlockUser = function (id) {
            swal({
                text: "Are you sure you want to unlock this user?",
                buttons: [
                  "Yes",
                  "No"
                ],
                closeOnClickOutside: false,
            }).then(function (isConfirm) {
                if (!isConfirm) {
                    $("#divLoader").show();
                    var url = '@Url.Action("UnlockUser", "Manage")';
                    $.ajax({
                        type: "POST",
                        url: url,
                        data: { id: id },
                        success: function (responseText) {
                                swal({
                                    text: responseText,
                                    icon: "success",
                                    button: "OK",
                                }).then(function () {
                                    location.reload();
                                });
                        },
                        error: function () {
                            swal({
                                text: "An error occured while processing your request. Contact system support",
                                icon: "error",
                                button: "OK",
                            }).then(function () {
                                location.reload();
                            });
                        },
                        complete: function () {
                            $("#divLoader").hide();
                        }
                    });
                }
            });
        }

    </script>
}
