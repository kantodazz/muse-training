@model EditApprovalLevelVM

<form class="form-horizontal" id="editApprovalLevelForm">
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.UserPayStationId)        

    <div class="form-group">       
        @Html.LabelFor(model => model.InstitutionName, htmlAttributes: new { @class = "control-label col-md-3" })
        <div class="col-md-6">
            @Html.EditorFor(model => model.InstitutionName, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
            @Html.ValidationMessageFor(model => model.InstitutionName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PayStationName, htmlAttributes: new { @class = "control-label col-md-3" })
        <div class="col-md-6">
            @Html.EditorFor(model => model.PayStationName, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
            @Html.ValidationMessageFor(model => model.PayStationName, "", new { @class = "text-danger" })
        </div>        
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ApprovalLevelId, htmlAttributes: new { @class = "control-label col-md-3" })
        <div class="col-md-6">
            @Html.DropDownListFor(model => model.ApprovalLevelId, Model.ApprovalLevelIds, "Select Approval Level", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ApprovalLevelId, "", new { @class = "text-danger" })
        </div>
    </div>
</form>
