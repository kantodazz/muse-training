@model IFMIS.Models.AddHandOverVM

@using (Html.BeginForm("", "", FormMethod.Post, new { id = "formHandOver" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.HandOverToUserName)
        @Html.HiddenFor(model => model.HandOverToFullName)
        @Html.HiddenFor(model => model.HandOverToJobTitle)
        @Html.HiddenFor(model => model.HandOverToStation)

        <div class="form-group">
            @Html.LabelFor(model => model.HandOverToUserId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.HandOverToUserId, Model.HandOverToUserIds, "Select Person", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.HandOverToUserId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Remarks, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
}

<script>
    $(function () {
        $("#HandOverToUserId").select2();

        $("#StartDate").datepicker({
                dateFormat: "yy-mm-dd",
                changeMonth: true,
                changeYear: true,
                //yearRange: "-110:+0",
                //maxDate: "+0D",
                minDate: 0,
                showOn: "both",
                buttonImage: '@Url.Content("~/Media/Images/calendar.gif")',
                buttonImageOnly: true,
                buttonText: "Select date",
            });

            $("#EndDate").datepicker({
                dateFormat: "yy-mm-dd",
                changeMonth: true,
                changeYear: true,
                //yearRange: "-110:+0",
                //maxDate: "+0D",
                minDate: 0,
                showOn: "both",
                buttonImage: '@Url.Content("~/Media/Images/calendar.gif")',
                buttonImageOnly: true,
                buttonText: "Select date",
            });

        $("#StartDate1")
            .wrap('<div class="input-group">')
            .datepicker({
                dateFormat: "yy-mm-dd",
                changeMonth: true,
                changeYear: true,
                yearRange: "-110:+0",
                showOn: "both",
                buttonImage: '@Url.Content("~/Media/Images/calendar.gif")',
                maxDate: "+0D"
            })
            .next("button").button({
                icons: { primary: "ui-icon-calendar" },
                label: "Select a date",
                text: false
            })
            .addClass("btn btn-default")
            .wrap('<span class="input-group-btn">')
            .find('.ui-button-text')
            .css({
                'visibility': 'hidden',
                'display': 'inline'
            });

        $("#EndDate1")
            .wrap('<div class="input-group">')
            .datepicker({
                dateFormat: "yy-mm-dd",
                changeMonth: true,
                changeYear: true,
                yearRange: "-110:+0",
                showOn: "both",
                buttonImage: '@Url.Content("~/Media/Images/calendar.gif")',
                maxDate: "+0D"
            })
            .next("button").button({
                icons: { primary: "ui-icon-calendar" },
                label: "Select a date",
                text: false
            })
            .addClass("btn btn-default")
            .wrap('<span class="input-group-btn">')
            .find('.ui-button-text')
            .css({
                'visibility': 'hidden',
                'display': 'inline'
            });
    });

    $("#HandOverToUserId").on("change", function () {
        $("#divLoader").show();
            var userId = $("#HandOverToUserId").val();
            if (userId == "") {
                $("#divLoader").hide();
                return;
            }
            var url = '@Url.Action("GetUserById", "Manage", new { area = ""})';
            $.ajax({
                type: "GET",
                url: url,
                data: {
                    userId: userId,
                },
                success: function (data, status, jqXHR) {
                    if (data.success) {
                        $("#HandOverToUserName").val(data.UserName);
                        $("#HandOverToFullName").val(data.FullName);
                        $("#HandOverToStation").val(data.Station);
                        $("#HandOverToJobTitle").val(data.JobTitle);
                    }
                },
                error: function () {
                    swal({
                            text: "An error occurred while processing your request, contact system support",
                            icon: "error",
                            button: "OK",
                        }).then(function () {
                            //location.reload();
                        });
                },
                complete: function () {
                    $("#divLoader").hide();
                }
            });
    });

    $("#btnAddHandOver").on("click", function () {
        $("#divLoader").show();
        $("#btnAddHandOver").prop("disabled", true);

        $.validator.unobtrusive.parse("#formHandOver");
        if (!$("#formHandOver").valid()) {
        $("#divLoader").hide();
            $("#btnAddHandOver").prop("disabled", false);
            return false;
        }

        var token = $("[name='__RequestVerificationToken']").val();

        var formData = new FormData();

        formData.append("__RequestVerificationToken", token);
        formData.append("HandOverToUserId", $('#HandOverToUserId').val());
        formData.append("HandOverToUserName", $('#HandOverToUserName').val());
        formData.append("HandOverToFullName", $('#HandOverToFullName').val());
        formData.append("HandOverToJobTitle", $('#HandOverToJobTitle').val());
        formData.append("HandOverToStation", $('#HandOverToStation').val());
        formData.append("StartDate", $('#StartDate').val());
        formData.append("EndDate", $('#EndDate').val());
        formData.append("Remarks", $('#Remarks').val());

        var url = '@Url.Action("AddHandOver", "HandOvers")';

        $.ajax({
        type: "POST",
        url: url,
        processData: false,
        contentType: false,
        data: formData,
        success: function(response) {
            if (response == "Success")
            {
            swal({
            text: "Hand over process successfully completed!",
            icon: "success",
            button: "OK",
            }).then(function() {
            location.reload();
            });
            }
            else
            {
            swal({
            text: response,
            icon: "warning",
            button: "OK",
        })
        }
        },
        error: function() {
                swal({
                text: "An error occured while processing your request, please contact system support",
                icon: "error",
                button: "OK",
            })
        },
        complete: function() {
            $("#divLoader").hide();
            $("#btnAddHandOver").prop("disabled", false);
                }
            });
    });
</script>