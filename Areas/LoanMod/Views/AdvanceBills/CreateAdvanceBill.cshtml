@model IFMIS.Areas.LoanMod.Models.CreateAdvanceBillVM

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- MAIN CONTENT -->
<div id="content" style="margin: 5px; padding-top: 30px">

    <div class="row">
        @*<div class="col-xs-12 col-sm-9 col-md-9 col-lg-9">
                <h1 class="page-title txt-color-blueDark">

                    <!-- PAGE HEADER -->
                    <!--
                    <i class="fa-fw fa fa-pencil-square-o"></i>
                    Payments
                    <span>
                        >
                        Bills
                    </span>
                        -->
                </h1>
            </div>*@

        <div class="col-xs-12 col-sm-3 col-md-3 col-lg-3">
            <!-- Button trigger modal -->
            <!--<a data-toggle="modal" href="#myModal" class="btn btn-success btn-lg pull-right header-btn hidden-mobile"><i class="fa fa-circle-arrow-up fa-lg"></i> Launch form modal</a>-->
        </div>
    </div>

    <!--
    <div class="alert alert-block alert-success">
        <a class="close" data-dismiss="alert" href="#">×</a>
        <h4 class="alert-heading"><i class="fa fa-check-square-o"></i> Check validation!</h4>
        <p>
            You may also check the form validation by clicking on the form action button. Please try and see the results below!
        </p>
    </div>
        -->
    <!-- widget grid -->
    <section id="widget-grid" class="">


        <!-- START ROW -->

        <div class="row">

            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">

                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">
                    <!-- widget options:
                        usage: <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false">

                        data-widget-colorbutton="false"
                        data-widget-editbutton="false"
                        data-widget-togglebutton="false"
                        data-widget-deletebutton="false"
                        data-widget-fullscreenbutton="false"
                        data-widget-custombutton="false"
                        data-widget-collapsed="true"
                        data-widget-sortable="false"

                    -->
                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2>Create Advance Bill </h2>

                    </header>

                    <!-- widget div-->
                    <div>

                        <!-- widget edit box -->
                        <div class="jarviswidget-editbox">
                            <!-- This area used as dropdown edit box -->

                        </div>
                        <!-- end widget edit box -->
                        <!-- widget content -->
                        <div class="widget-body">

                            <form action="@Url.Action("CreateAdvanceBill","AdvanceBills")" method="post" name="form" class="form-horizontal" novalidate autocomplete="off">
                                @Html.AntiForgeryToken()
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                @*@Html.HiddenFor(model => model.CostCode)
                                    @Html.HiddenFor(model => model.CostName)
                                    @Html.HiddenFor(model => model.UOM)
                                    @Html.HiddenFor(model => model.IsMainSource)
                                    @Html.HiddenFor(model => model.GLAccountReceivable)
                                    @Html.HiddenFor(model => model.GLAccountRevenue)
                                    @Html.HiddenFor(model => model.BillValidDays)
                                    @Html.HiddenFor(model => model.SubCostName)
                                    @Html.HiddenFor(model => model.IdTypeId)
                                    @Html.HiddenFor(model => model.VatPercentage)
                                    @Html.HiddenFor(model => model.VatAmount)
                                    @Html.HiddenFor(model => model.NetAmount)
                                    @Html.HiddenFor(model => model.GlAccountVat)
                                    @Html.HiddenFor(model => model.BillPayOption)
                                    @Html.HiddenFor(model => model.IsPreRevenue)*@
                                <fieldset>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.PayerName, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-4">
                                            @Html.EditorFor(model => model.PayerName, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                            @Html.ValidationMessageFor(model => model.PayerName, "", new { @class = "text-danger" })
                                        </div>
                                        @Html.LabelFor(model => model.GFSCode, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-4">
                                            @Html.EditorFor(model => model.GFSCode, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                            @Html.ValidationMessageFor(model => model.GFSCode, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.CustomerPhone, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-4">
                                            @Html.EditorFor(model => model.CustomerPhone, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                            @Html.ValidationMessageFor(model => model.CustomerPhone, "", new { @class = "text-danger" })
                                        </div>
                                        <div>
                                            @Html.LabelFor(model => model.CustomerEmail, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-4">
                                                @Html.EditorFor(model => model.CustomerEmail, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                                @Html.ValidationMessageFor(model => model.CustomerEmail, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Month, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-2">
                                            @Html.DropDownListFor(model => model.Month, Model.Months, "Select Month", new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.Month, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-md-2">
                                            @Html.EditorFor(model => model.Year, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Year" } })
                                            @Html.ValidationMessageFor(model => model.Year, "", new { @class = "text-danger" })
                                        </div>
                                        @Html.LabelFor(model => model.BillExpiryDate, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-4">
                                            @Html.EditorFor(model => model.BillExpiryDate, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.BillExpiryDate, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.BillAmount, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-4">
                                            @Html.EditorFor(model => model.BillAmount, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.BillAmount, "", new { @class = "text-danger" })
                                        </div>

                                        @Html.LabelFor(model => model.Currency, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-4">
                                            @Html.DropDownListFor(model => model.Currency, Model.Currencies, "Select Currency", new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.Currency, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.BillPayOption, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-4">
                                            @Html.DropDownListFor(model => model.BillPayOption, Model.BillPayOptions, "Select Pay Option", new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.BillPayOption, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.BillDesc, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.TextAreaFor(model => model.BillDesc, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.BillDesc, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.BillDesc, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-4">
                                            @Html.TextBoxFor(model => model.FileName, new { type = "file", @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.FileName, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                </fieldset>
                                <div class="form-actions">
                                    <div class="row">
                                        <div class="col-md-offset-2 col-md-8">
                                            <button class="btn btn-info" type="submit" style="float: left" id="btnSave">
                                                <i class="fa fa-save"></i>
                                                Save
                                            </button>
                                            <a href="@Url.Action("PendingBills","Billings")" class="btn btn-info" style="float: left; margin-left: 5px">
                                                <i class="fa fa-arrow-left"></i>
                                                Back
                                            </a>
                                        </div>
                                    </div>
                                </div>
                            </form>
                        </div>
                        <!-- end widget content -->
                    </div>
                    <!-- end widget div -->

                </div>
                <!-- end widget -->
            </article>
            <!-- END COL -->

        </div>

        <!-- END ROW -->
    </section>
    <!-- end widget grid -->
</div>
<!-- END MAIN CONTENT -->

@section pagespecific {
    <script>
        $(function () {

            $("#BillExpiryDate")
                .wrap('<div class="input-group">')
                .datepicker({
                    dateFormat: "yy-mm-dd",
                    changeMonth: true,
                    changeYear: true,
                    showOn: "both",
                    buttonImage: "../../Media/Images/calendar.gif",
                    //maxDate: "+0D"
                    minDate: "+0D"
                })
                .next("button").button({
                    icons: { primary: "ui-icon-calendar" },
                    label: "Select a date",
                    text: false
                })
                .addClass("btn btn-default")
                .wrap('<span class="input-group-btn">')
                .find('.ui-button-text')
                .css({
                    'visibility': 'hidden',
                    'display': 'inline'
                });

            $("#EndDate")
                .wrap('<div class="input-group">')
                .datepicker({
                    dateFormat: "yy-mm-dd",
                    changeMonth: true,
                    changeYear: true,
                    showOn: "both",
                    buttonImage: "../../Media/Images/calendar.gif",
                    maxDate: "+0D"
                })
                .next("button").button({
                    icons: { primary: "ui-icon-calendar" },
                    label: "Select a date",
                    text: false
                })
                .addClass("btn btn-default")
                .wrap('<span class="input-group-btn">')
                .find('.ui-button-text')
                .css({
                    'visibility': 'hidden',
                    'display': 'inline'
                });
        });
    </script>
}