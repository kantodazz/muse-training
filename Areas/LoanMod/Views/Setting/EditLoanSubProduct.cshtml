@model IFMIS.Areas.LoanMod.Models.LoanSubProductVM

@{
    ViewBag.Title = "Edit Loan Sub Product";

    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .search-btn {
        border: 1px solid #ccc;
        border-radius: 4px;
        padding: 5px;
        padding-right: 10px;
    }

    .search-container {
        display: inline-flex;
        flex: 1 1 300px;
        position: relative;
        border: 1px solid #ccc;
        border-radius: 5px;
        overflow: hidden;
        padding-left: 10px;
    }

    .name-input-container {
        display: inline-flex;
        flex: 1 1 300px;
        position: relative;
        overflow: hidden;
    }

    .search-icon {
        padding: 0.5rem;
    }

    .search-button {
        background: #538AC5;
        border: 0;
        color: white;
        padding: 8px;
        border-radius: 0;
    }

    input[type=number] {
        padding: 8px;
        border: 1px solid #ccc;
        width: 205px;
    }

    input[type=text] {
        padding: 8px;
        border: 1px solid #ccc;
    }

    input[type=search] {
        padding: 4px;
        border: hidden;
        border-radius: 4px;
    }

    textarea {
        border: 1px solid #ccc;
    }

    select {
        padding: 8px;
        border: 1px solid #ccc;
        resize: vertical;
        width: 230px;
    }

    .action-btn {
        width: 100px;
        color: white;
    }

    .form-label {
        text-align: right;
    }

    td {
        padding: 5px;
    }

    .info-box {
        padding: 10px;
        background-color: #ECF3F8;
        text-align: center;
        border: 1px solid #ccc;
        border-radius: 5px;
    }

    .loadingImg {
        display: none;
    }
</style>

<div id="content" style="margin: 5px; padding-top: 30px">
    <div class="row"></div>
    <section id="widget-grid">
        <div class="row">
            <article class="col-sm-12 col-md-12 col-lg-12">

                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">

                    <header>
                        <span class="widget-icon"> <i class="fa fa-table"></i> </span>
                        <h2>@ViewBag.Title </h2>
                    </header>
                    <div>
                        <div class="widget-body">
                            <center><img src="~/Media/Images/ajax_loader.gif" class="loadingImg" /></center>
                            <div class="row" style="padding:1% 5% 0 5%;">

                                <div class="col-md-6 col-lg-6 col-sm-12 ">
                                    <table>

                                        @Html.AntiForgeryToken()
                                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                        <tr>
                                            <td class="form-label">
                                                Customer Type
                                                <i class="fa fa-times" style="color:white" id="Loanype_1"></i>
                                            </td>
                                            <td>
                                                <select id="customerTypeId" style="width:300px" class="form-control select2">
                                                    @foreach (var customerType in ViewBag.CustomerTypeList)
                                                    {
                                                        if (ViewBag.CustomerTypeId == customerType.CustomerTypeId)
                                                        {
                                                            <option value='@customerType.CustomerTypeId' selected>@customerType.CustomerName</option>
                                                        }
                                                        else
                                                        {
                                                            <option value='@customerType.CustomerTypeId'>
                                                                @customerType.CustomerName
                                                            </option>
                                                        }
                                                    }
                                                </select>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td class="form-label">
                                                Loan Product Name
                                                <i class="fa fa-times" style="color:white"></i>
                                            </td>
                                            <td>
                                                <select id="LoanProductId" style="width:300px" class="form-control select2">
                                                    @foreach (var loanSubProduct in ViewBag.LoanProductList1)
                                                    {
                                                        if (ViewBag.LoanProductId == loanSubProduct.LoanProductId)
                                                        {
                                                            <option value='@loanSubProduct.LoanProductId' selected>@loanSubProduct.ProductName</option>
                                                        }
                                                        else
                                                        {
                                                            <option value='@loanSubProduct.LoanProductId'>@loanSubProduct.ProductName</option>
                                                        }
                                                    }
                                                </select>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td class="form-label">
                                                Sub Product Name
                                                <i class="fa fa-times" style="color:white"></i>
                                            </td>
                                            <td>
                                                <div class="input-group">
                                                    <input type="hidden" name="LoanSubProductId" value="@ViewBag.LoanSubProductId" id="LoanSubProductId" />
                                                    @Html.TextBoxFor(model => model.SubProductName, new { @Class = "input", @required = "required", style = "width:300px; " })
                                                    @Html.ValidationMessageFor(model => model.SubProductName, "", new { @class = "text-danger" })
                                                </div>
                                            </td>
                                        </tr>

                                        <tr>
                                            <td class="form-label">
                                                Sub Product Code
                                                <i class="fa fa-times" style="color:white"></i>
                                            </td>
                                            <td>
                                                <div class="input-group">
                                                    @Html.TextBoxFor(model => model.SubProductCode, new { @Class = "input", @required = "required", style = "width:300px; " })
                                                    @Html.ValidationMessageFor(model => model.SubProductCode, "", new { @class = "text-danger" })
                                                </div>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td class="form-label">
                                                Description
                                                <i class="fa fa-times" style="color:white" id="description"></i>
                                            </td>
                                            <td>
                                                @Html.TextArea("SubProductDesc", null, new { @class = "form-control", @required = "required", rows = "2", cols = "41", @style = "width:300px;" })

                                                @Html.ValidationMessageFor(model => model.SubProductDesc, "", new { @class = "text-danger" })
                                            </td>
                                        </tr>

                                        <tr>
                                            <td class="form-label">
                                                Receivable Account
                                            </td>
                                            <td>
                                                @Html.Hidden("AccountsReceivableDesc")
                                                @Html.TextBoxFor(model => model.AccountsReceivable, new { @Class = "input", @required = "required", style = "width:300px; ", type = "hidden" })
                                                @Html.ValidationMessageFor(model => model.AccountsReceivable, "", new { @class = "text-danger" })

                                                <a class="search-btn" onclick="SearchGl(5)" href="#" style="display:block;width:300px" id="AccountsReceivable2">
                                                    <i class="fa fa-search search-icon"></i>
                                                    Search...
                                                </a>
                                            </td>
                                        </tr>

                                        <tr>
                                            <td class="form-label">
                                                Interest Receivable Account
                                            </td>
                                            <td>
                                                @Html.Hidden("InterestReceivableAccountDesc")
                                                @Html.TextBoxFor(model => model.InterestReceivableAccount, new { @Class = "input", @required = "required", style = "width:300px; ", type = "hidden" })
                                                @Html.ValidationMessageFor(model => model.InterestReceivableAccount, "", new { @class = "text-danger" })

                                                <a class="search-btn" onclick="SearchGl(1)" href="#" style="display:block;width:300px" id="InterestReceivableAccount2">
                                                    <i class="fa fa-search search-icon"></i>
                                                    Search...
                                                </a>
                                            </td>
                                        </tr>

                                        <tr>
                                            <td class="form-label">
                                                Interest Revenue Account
                                            </td>
                                            <td>
                                                @Html.Hidden("InterestRevenueAccountDesc")
                                                @Html.TextBoxFor(model => model.InterestRevenueAccount, new { @Class = "input", @required = "required", style = "width:300px; ", type = "hidden" })
                                                @Html.ValidationMessageFor(model => model.InterestRevenueAccount, "", new { @class = "text-danger" })

                                                <a class="search-btn" onclick="SearchGl(7)" href="#" style="display:block;width:300px" id="InterestRevenueAccount2">
                                                    <i class="fa fa-search search-icon"></i>
                                                    Search...
                                                </a>
                                            </td>
                                        </tr>

                                        <tr>
                                            <td class="form-label">
                                                Interest Rate(%)
                                                <i class="fa fa-times" style="color:white" id="interestRate"></i>
                                            </td>
                                            <td>
                                                <div class="input-group">
                                                    @Html.TextBoxFor(model => model.InterestRate, new { @Class = "input", @required = "required", style = "width:300px; " })
                                                    @Html.ValidationMessageFor(model => model.InterestRate, "", new { @class = "text-danger" })
                                                </div>
                                            </td>
                                        </tr>

                                    </table>
                                </div>

                                <div class="col-lg-6 col-sm-12 ">
                                    <table>

                                        <tr>
                                            <td class="form-label">Loan In Progress Account</td>
                                            <td>
                                                @Html.Hidden("LoanInProgressAccountDesc")
                                                @Html.TextBoxFor(model => model.LoanInProgressAccount, new { @Class = "input", @required = "required", style = "width:300px; ", type = "hidden" })
                                                @Html.ValidationMessageFor(model => model.LoanInProgressAccount, "", new { @class = "text-danger" })
                                                <a class="search-btn" onclick="SearchGl(3)" href="#" style="display:block;width:300px" id="LoanInProgressAccount2">
                                                    <i class="fa fa-search search-icon"></i>
                                                    Search...
                                                </a>
                                            </td>
                                        </tr>

                                        <tr>
                                            <td class="form-label">Interest Deferred Account</td>
                                            <td>
                                                @Html.Hidden("InterestDeferredAccountDesc")
                                                @Html.TextBoxFor(model => model.InterestDeferredAccount, new { @Class = "input", @required = "required", style = "width:300px; ", type = "hidden" })
                                                @Html.ValidationMessageFor(model => model.InterestDeferredAccount, "", new { @class = "text-danger" })
                                                <a class="search-btn" onclick="SearchGl(4)" href="#" style="display:block;width:300px" id="InterestDeferredAccount2">
                                                    <i class="fa fa-search search-icon"></i>
                                                    Search...
                                                </a>
                                            </td>
                                        </tr>

                                        <tr>
                                            <td class="form-label">
                                                Account Receivable Over Payment
                                                <i class="fa fa-times" style="color:white"></i>
                                            </td>
                                            <td>
                                                @Html.Hidden("AccountReceivableOverPaymentDesc")
                                                @Html.TextBoxFor(model => model.AccountReceivableOverPayment, new { @Class = "input", @required = "required", style = "width:300px; ", type = "hidden" })
                                                @Html.ValidationMessageFor(model => model.AccountReceivableOverPayment, "", new { @class = "text-danger" })

                                                <a class="search-btn" onclick="SearchGl(6)" href="#" style="display:block;width:300px" id="AccountReceivableOverPayment2">
                                                    <i class="fa fa-search search-icon"></i>
                                                    Search...
                                                </a>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td class="form-label">Loan Control Account</td>
                                            <td>
                                                @Html.Hidden("LoanControlAccountDesc")
                                                @Html.TextBoxFor(model => model.LoanControlAccount, new { @Class = "input", @required = "required", style = "width:300px; ", type = "hidden" })
                                                @Html.ValidationMessageFor(model => model.LoanControlAccount, "", new { @class = "text-danger" })
                                                <a class="search-btn" onclick="SearchGl(2)" href="#" style="display:block;width:300px" id="LoanControlAccount2">
                                                    <i class="fa fa-search search-icon"></i>
                                                    Search...
                                                </a>
                                            </td>
                                        </tr>

                                        <tr>
                                            <td class="form-label">
                                                Penalty Debtor
                                            </td>
                                            <td>
                                                @Html.Hidden("PenaltyDebtorDesc")
                                                @Html.TextBoxFor(model => model.PenaltyDebtor, new { @Class = "input", @required = "required", style = "width:300px; ", type = "hidden" })
                                                @Html.ValidationMessageFor(model => model.PenaltyDebtor, "", new { @class = "text-danger" })

                                                <a class="search-btn" onclick="SearchGl(8)" href="#" style="display:block;width:300px" id="PenaltyDebtor2">
                                                    <i class="fa fa-search search-icon"></i>
                                                    Search...
                                                </a>
                                            </td>
                                        </tr>

                                        <tr>
                                            <td class="form-label">
                                                Penalty Income
                                            </td>
                                            <td>
                                                @Html.Hidden("PenaltyIncomeDesc")
                                                @Html.TextBoxFor(model => model.PenaltyIncome, new { @Class = "input", @required = "required", style = "width:300px; ", type = "hidden" })
                                                @Html.ValidationMessageFor(model => model.PenaltyIncome, "", new { @class = "text-danger" })

                                                <a class="search-btn" onclick="SearchGl(9)" href="#" style="display:block;width:300px" id="PenaltyIncome2">
                                                    <i class="fa fa-search search-icon"></i>
                                                    Search...
                                                </a>
                                            </td>
                                        </tr>

                                        <tr>
                                            <td class="form-label">
                                                Require Motor Registration
                                                <i class="fa fa-times" style="color:white"></i>
                                            </td>
                                            <td>
                                                <div class="input-group">
                                                    @Html.CheckBox("RequireMotorRegistration")
                                                </div>
                                            </td>
                                        </tr>

                                        <tr>
                                            <td class="form-label">
                                                Grace Period (Months)
                                                <i class="fa fa-times" style="color:white"></i>
                                            </td>
                                            <td>
                                                <div class="input-group">
                                                    @Html.TextBoxFor(model => model.GracePeriod, new { @Class = "input", @required = "required", style = "width:300px; ", type = "number", min = "0" })
                                                    @Html.ValidationMessageFor(model => model.GracePeriod, "", new { @class = "text-danger" })
                                                </div>
                                            </td>
                                        </tr>

                                        <tr>
                                            <td class="form-label">
                                                Status
                                                <i class="fa fa-times" style="color:white"></i>
                                            </td>
                                            <td>
                                                <div class="input-group">
                                                    @Html.DropDownList("Status", new List<SelectListItem>{
                                                new SelectListItem{ Text="--Select ---", Value = "" },
                                                new SelectListItem{ Text="ACTIVE", Value = "Active" },
                                                new SelectListItem{ Text="INACTIVE", Value = "Inactive" },
                                                 }, new { @class = "form-control", @required = "required", style = "width:300px;" })
                                                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                                                </div>
                                            </td>
                                        </tr>

                                    </table>
                                </div>

                            </div>

                            <div class="row">
                                <div class="col-md-2"></div>
                                <div class="col-md-6">

                                    <a class="btn btn-info" href='@Url.Action("LoanSubProductList", "Setting")' style="margin-right:5px">
                                        <i class="glyphicon glyphicon-arrow-left"></i>Back
                                    </a>
                                    <button type="submit" class="btn btn-info" id="form_submision">
                                        <i class="fa fa-save"></i>Update
                                        <img src="~/Content/img/loading.gif" id="saveLoader" />
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
            </article>
        </div>
    </section>
</div>

<!----------- Search GL Items ----------------->
<div class="modal fade" id="glItemsModal" style="left:4%">

    <div class="modal-dialog" style="width:80%;">
        <div class="modal-content panel-info">
            <div class="modal-header panel-heading">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h3 class="modal-title"> Search Gl Item</h3>
            </div>
            <div class="modal-body">
                <div>
                    <div class="row" style="padding-top:1%;padding-bottom:1%">
                        <div class="col-md-6">
                        </div>
                        <div class="col-md-6">
                            <div class="search-container submit-btn" style="float:right">
                                <i class="fa fa-search search-icon"></i>
                                <input type="search" name="search" placeholder="Search..." id="searchbox2">
                            </div>
                        </div>
                    </div>
                    <table id="dt_search_gl_item" class="table table-striped table-bordered table-hover table-condensed" width="100%">
                        <thead>
                            <tr>
                                <th>#</th>
                                <th>GLAccount String</th>
                                <th>GLAccount Description</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                    </table>

                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-info" id="btn_save_gl_items">
                        <i class="fa fa-save"></i>Save
                    </button>
                    <button class="btn btn-info" data-dismiss="modal">
                        <i class="fa  fa-times"></i>Cancel
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

@section pagespecific{
    <script>

        //SHOW LOADER ICON
        $(document).ajaxStart(function () {
            $(".loadingImg").show();

        });
        //HIDE LOADER ICON
        $(document).ajaxStop(function () {
            $(".loadingImg").hide();
        });

        $(document).ready(function () {
            $("#AccountsReceivable2").text('@ViewBag.AccountsReceivable'.split("|").join("-"));
            $("#LoanControlAccount2").text('@ViewBag.LoanControlAccount'.split("|").join("-"));
            $("#LoanInProgressAccount2").text('@ViewBag.LoanInProgressAccount'.split("|").join("-"));
            $("#InterestReceivableAccount2").text('@ViewBag.InterestReceivableAccount'.split("|").join("-"));
            $("#InterestRevenueAccount2").text('@ViewBag.InterestRevenueAccount'.split("|").join("-"));
            $("#AccountReceivableOverPayment2").text('@ViewBag.AccountReceivableOverPayment'.split("|").join("-"));
            $("#PenaltyDebtor2").text('@ViewBag.PenaltyDebtor'.split("|").join("-"));
            $("#PenaltyIncome2").text('@ViewBag.PenaltyIncome'.split("|").join("-"));
            $("#InterestDeferredAccount2").text('@ViewBag.InterestDeferredAccount'.split("|").join("-"));
        });

        $(document).ready(function () {

            var lpo_amount = $("#MaximumAmountx").val();
            if (lpo_amount) {
                $("#MaximumAmountx").val(inputThousandSeparator(lpo_amount))
            }

            $("#InterestReceivableAccount").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: "@Url.Action("GetGlAccounts", "Setting")",
                        type: "POST",
                        dataType: "json",
                        data: { Prefix: request.term },
                        success: function (data) {
                            response($.map(data, function (item) {
                                return { label: item.Text, value: item.value };
                            }))

                        }
                    })
                },
                messages: {
                    noResults: "",
                    results: function (count) {
                        return count + (count > 1 ? ' results' : ' result ') + ' found';
                    }
                }
            });
        })

        var dt_search_gl_item = $('#dt_search_gl_item').dataTable();
        $("#dt_search_gl_item_wrapper .dt-toolbar").remove();

        $("#searchbox2").on("keyup search input paste cut", function () {
            if (!this.value) {
                dt_search_gl_item.fnClearTable();
            } else {
                SearchGlAccount(this.value);
            }
        });

        var searchCode = 0;
        function SearchGl(code) {
            searchCode = code;
            $('#glItemsModal').modal('show');
        }


        var data = [];
        function SearchGlAccount(search) {
            var url = '@Url.Action("GetGLAccount", "Setting")/?search=' + search + '';

            $.ajax({
                type: "get",
                url: url,
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {
                    //=== UPDATE SEARCH GI TABLE ====
                    data = response.data;
                    dt_search_gl_item.fnClearTable();
                    for (var i = 0; i < data.length; i++) {
                        dt_search_gl_item.fnAddData([i,
                           data[i]["GlAccount"].split("|").join("-"),
                           data[i]["GlAccountDesc"],
                          '<a href="#" onclick="getcoa(' + i + ')"><i class="glyphicon glyphicon-plus-sign"></i></a>'
                        ]);
                    }
                },
                failure: function (error) {
                    swal(error);
                }
            });
        }

        function getcoa(rowId) {
            var data = dt_search_gl_item.DataTable().rows().data();
            var row = data[rowId];

            if (searchCode == 1) {
                $("#InterestReceivableAccount2").html(row[1]);
                $("#InterestReceivableAccount").val(row[1]);
                $("#InterestReceivableAccountDesc").val(row[2]);
            }
            if (searchCode == 2) {
                $("#LoanControlAccount2").html(row[1]);
                $("#LoanControlAccount").val(row[1]);
                $("#LoanControlAccountDesc").val(row[2]);
            }

            if (searchCode == 3) {
                $("#LoanInProgressAccount2").html(row[1]);
                $("#LoanInProgressAccount").val(row[1]);
                $("#LoanInProgressAccountDesc").val(row[2]);
            }
            if (searchCode == 4) {
                $("#InterestDeferredAccount2").html(row[1]);
                $("#InterestDeferredAccount").val(row[1]);
                $("#InterestDeferredAccountDesc").val(row[2]);
            }

            if (searchCode == 5) {
                $("#AccountsReceivable2").html(row[1]);
                $("#AccountsReceivable").val(row[1]);
                $("#AccountsReceivableDesc").val(row[2]);
            }

            if (searchCode == 6) {
                $("#AccountReceivableOverPayment2").html(row[1]);
                $("#AccountReceivableOverPayment").val(row[1]);
                $("#AccountReceivableOverPaymentDesc").val(row[2]);
            }

            if (searchCode == 7) {
                $("#InterestRevenueAccount2").html(row[1]);
                $("#InterestRevenueAccount").val(row[1]);
                $("#InterestRevenueAccountDesc").val(row[2]);
            }

            if (searchCode == 8) {
                $("#PenaltyDebtor2").html(row[1]);
                $("#PenaltyDebtor").val(row[1]);
                $("#PenaltyDebtorDesc").val(row[2]);
            }

            if (searchCode == 9) {
                $("#PenaltyIncome2").html(row[1]);
                $("#PenaltyIncome").val(row[1]);
                $("#PenaltyIncomeDesc").val(row[2]);
            }

            $('#glItemsModal').modal('hide');
        }

        $("#MaximumAmountx").on("keyup input paste", function () {
            $("#MaximumAmountx").val(inputThousandSeparator(this.value))
        });
        var OldVal = 0
        function inputThousandSeparator(NewVal) {
            if (NewVal) {
                try {
                    NewVal = parseFloat(NewVal.split(",").join(""))
                    if (typeof NewVal == 'number' && !Number.isNaN(NewVal)) {
                        OldVal = NewVal;
                        return NewVal.toLocaleString()
                    } else {
                        return OldVal
                    }
                } catch (e) {
                    console.log(e)
                }
            }
        }

        $("#saveLoader").toggle(false);

        $("#form_submision").click(function () {
            var RequireMotorRegistration = null;
            if (document.getElementById('RequireMotorRegistration').checked) {
                RequireMotorRegistration = "true";
            } else {
                RequireMotorRegistration = "false";
            }

            var LoanProductId = $("#LoanProductId").val();
            var SubProductName = $("#SubProductName").val();
            var SubProductCode = $("#SubProductCode").val();
            var SubProductDesc = $("#SubProductDesc").val();
            var LoanSubProductId = $("#LoanSubProductId").val();

            var RequireMotorRegistration = $("#RequireMotorRegistration").val();
            var Status = $("#Status").val();
            var AccountsReceivable = $("#AccountsReceivable").val();
            var InterestReceivableAccount = $("#InterestReceivableAccount").val();
            var LoanControlAccount = $("#LoanControlAccount").val();
            var LoanInProgressAccount = $("#LoanInProgressAccount").val();
            var AccountReceivableOverPayment = $("#AccountReceivableOverPayment").val();
            var InterestDeferredAccount = $("#InterestDeferredAccount").val();
            var InterestRevenueAccount = $("#InterestRevenueAccount").val();
            var PenaltyDebtor = $("#PenaltyDebtor").val();
            var PenaltyIncome = $("#PenaltyIncome").val();
            var GracePeriod = $("#GracePeriod").val();
            var InterestRate = $("#InterestRate").val();

            if (document.getElementById('RequireMotorRegistration').checked) {
                RequireMotorRegistration = "true";
            } else {
                RequireMotorRegistration = "false";
            }

            if (LoanProductId == '' || SubProductName == '' || SubProductCode == '' || Status == ''
                || AccountsReceivable == '' || InterestReceivableAccount == '' || LoanControlAccount == '' || LoanInProgressAccount == ''
                || AccountReceivableOverPayment == '' || InterestDeferredAccount == '' || InterestRevenueAccount == ''
                || PenaltyDebtor == '' || PenaltyIncome == '' || GracePeriod == '' || InterestRate == '') {

                var url = '@Url.Action("EditLoanSubProduct", "Setting")';
                swal("Please Fill All the required Fields");
                return false;
            }


            if (InterestRate > 100) {
                swal("Interest Rate should not Exceed 100");
                return false;
            }

            //if (new RegExp('^\[ 0-5]$ | (?=^.[1- 5]$) ^\d +\.\d[0, 2]$').test() == false) {

            //    swal("Interest Rate should be between 1 and 100");
            //    return false;
            //}

            if (new RegExp('^[0-9]+\.[0-9]+$').test(InterestRate) == false) {

                swal("Interest Rate should be between 1 and 100");
                return false;
            }

            //if (new RegExp('^[0-9]+$').test(InterestRate) == false) {
            //    swal("Interest Rate should be between 1 and 100");
            //    return false;
            //}


            if (/^[a-zA-Z0-9\-_\s]*$/.test(SubProductName) == false) {
                swal("Special Characters for Sub Product Name are not allowed");
                return false;
            }

            if (/^[a-zA-Z0-9\-_\s]*$/.test(SubProductCode) == false) {
                swal("Special Characters for Sub Product Code are not allowed");
                return false;
            }

            if (GracePeriod < 0 || InterestRate < 0) {
                swal("Negative Input is not allowed");
                return false;
            }

            //if (/^[a-zA-Z0-9\-_\s]*$/.test(SubProductDesc) == false) {
            //    swal("Special Characters for Sub Product Description are not allowed");
            //    return false;
            //}

            var form_data = {
                "__RequestVerificationToken": $('[name=__RequestVerificationToken]').val(),
                "SubProductCode": SubProductCode,
                "SubProductName": SubProductName,
                "SubProductDesc": SubProductDesc,
                "LoanProductId": LoanProductId,
                "LoanSubProductId": LoanSubProductId,
                "AccountsReceivable": $("#AccountsReceivable").val(),
                "AccountsReceivableDesc": $("#AccountsReceivableDesc").val(),
                "InterestReceivableAccountDesc": $("#InterestReceivableAccountDesc").val(),
                "InterestReceivableAccount": $("#InterestReceivableAccount").val(),
                "LoanControlAccountDesc": $("#LoanControlAccountDesc").val(),
                "LoanControlAccount": $("#LoanControlAccount").val(),
                "LoanInProgressAccountDesc": $("#LoanInProgressAccountDesc").val(),
                "LoanInProgressAccount": $("#LoanInProgressAccount").val(),
                "AccountReceivableOverPaymentDesc": $("#AccountReceivableOverPaymentDesc").val(),
                "AccountReceivableOverPayment": $("#AccountReceivableOverPayment").val(),
                "InterestDeferredAccountDesc": $("#InterestDeferredAccountDesc").val(),
                "InterestDeferredAccount": $("#InterestDeferredAccount").val(),
                "InterestRevenueAccountDesc": $("#InterestRevenueAccountDesc").val(),
                "InterestRevenueAccount": $("#InterestRevenueAccount").val(),
                "PenaltyDebtorDesc": $("#PenaltyDebtorDesc").val(),
                "PenaltyDebtor": $("#PenaltyDebtor").val(),
                "PenaltyIncomeDesc": $("#PenaltyIncomeDesc").val(),
                "PenaltyIncome": $("#PenaltyIncome").val(),
                "Status": $("#Status").val(),
                "RequireMotorRegistration": RequireMotorRegistration,
                "customerTypeId": $("#customerTypeId").val(),
                "InterestRate": InterestRate,
                "GracePeriod": GracePeriod
            }

            var url = '@Url.Action("EditLoanSubProduct", "Setting")';
            var urlList = '@Url.Action("LoanSubProductList", "Setting")';
            $("#form_submision").prop('disabled', true);
            $("#saveLoader").toggle(true);
            $.ajax({
                type: "post",
                url: url,
                data: form_data,
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {
                    $("#form_submision").prop('disabled', false);
                    $("#saveLoader").toggle(false);
                    if (response == "Success") {
                        swal("Updated Successfully!", { icon: "success" })
                            .then((value) => {
                                window.location.href = urlList;
                            });
                    }
                    else {
                        swal(response);
                    }
                },
                failure: function (error) {
                    $("#form_submision").prop('disabled', false);
                    $("#saveLoader").toggle(false);
                    swal(error);
                }
            });
        });
    </script>
}


