@model IFMIS.Areas.LoanMod.Models.LoanProductVM

@{
    ViewBag.Title = "Create Loan Product";

    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .search-btn {
        border: 1px solid #ccc;
        border-radius: 4px;
        padding: 5px;
        padding-right: 10px;
    }

    .search-container {
        display: inline-flex;
        flex: 1 1 300px;
        position: relative;
        border: 1px solid #ccc;
        border-radius: 5px;
        overflow: hidden;
        padding-left: 10px;
    }

    .name-input-container {
        display: inline-flex;
        flex: 1 1 300px;
        position: relative;
        overflow: hidden;
    }

    .search-icon {
        padding: 0.5rem;
    }

    .search-button {
        background: #538AC5;
        border: 0;
        color: white;
        padding: 8px;
        border-radius: 0;
    }

    input[type=number] {
        padding: 8px;
        border: 1px solid #ccc;
        width: 205px;
    }

    input[type=text] {
        padding: 8px;
        border: 1px solid #ccc;
    }

    input[type=search] {
        padding: 4px;
        border: hidden;
        border-radius: 4px;
    }

    textarea {
        border: 1px solid #ccc;
    }

    select {
        padding: 8px;
        border: 1px solid #ccc;
        resize: vertical;
        width: 230px;
    }

    .action-btn {
        width: 100px;
        color: white;
    }

    .form-label {
        text-align: right;
    }

    td {
        padding: 5px;
    }

    .info-box {
        padding: 10px;
        background-color: #ECF3F8;
        text-align: center;
        border: 1px solid #ccc;
        border-radius: 5px;
    }

    .loadingImg {
        display: none;
    }
</style>

<div id="content" style="margin: 5px; padding-top: 30px">
    <div class="row"></div>
    <section id="widget-grid">
        <div class="row">
            <article class="col-sm-12 col-md-12 col-lg-12">

                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">

                    <header>
                        <span class="widget-icon"> <i class="fa fa-table"></i> </span>
                        <h2>Create Loan Product</h2>
                    </header>
                    <div>
                        <div class="widget-body">
                            <center><img src="~/Media/Images/ajax_loader.gif" class="loadingImg" /></center>
                            @*@if (ViewBag.CustomerTypeCount > 0)
                                {*@
                            <div class="row" style="padding:1% 5% 0 5%;">

                                <div class="col-md-6 col-lg-6 col-sm-12 ">
                                    <table>

                                        @Html.AntiForgeryToken()
                                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                        <tr>
                                            <td class="form-label">
                                                Product Name
                                                <i class="fa fa-times" style="color:white"></i>
                                            </td>
                                            <td>
                                                <div class="input-group">
                                                    @Html.TextBoxFor(model => model.ProductName, new { @Class = "input", @required = "required", style = "width:300px; " })
                                                    @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
                                                </div>
                                            </td>
                                        </tr>

                                        <tr>
                                            <td class="form-label">
                                                Product Code
                                                <i class="fa fa-times" style="color:white"></i>
                                            </td>
                                            <td>
                                                <div class="input-group">
                                                    @Html.TextBoxFor(model => model.ProductCode, new { @Class = "input", @required = "required", style = "width:300px; " })
                                                    @Html.ValidationMessageFor(model => model.ProductCode, "", new { @class = "text-danger" })
                                                </div>
                                            </td>
                                        </tr>

                                        @*<tr>
                                                <td class="form-label">
                                                    Customer Type
                                                    <i class="fa fa-times" style="color:white" id="Loanype_1"></i>
                                                </td>
                                                <td>
                                                    <select id="customerTypeId" required style="width:300px" class="form-control select2">
                                                        @if (ViewBag.CustomerTypeList != null)
                                                        {
                                                            <option>Select Customer Type</option>
                                                            foreach (var customerType in ViewBag.CustomerTypeList)
                                                            {
                                                                <option value='@customerType.CustomerTypeId'>@customerType.CustomerName</option>
                                                            }
                                                        }
                                                        }

                                                    </select>
                                                </td>
                                            </tr>*@
                                        <tr>
                                            <td class="form-label">
                                                Description
                                                <i class="fa fa-times" style="color:white" id="description"></i>
                                            </td>
                                            <td>
                                                @Html.TextArea("ProductDesc", null, new { @class = "form-control", @required = "required", rows = "2", cols = "41", @style = "width:300px;" })

                                                @Html.ValidationMessageFor(model => model.ProductDesc, "", new { @class = "text-danger" })
                                            </td>
                                        </tr>
                                        <tr>
                                            <td class="form-label">
                                                Status
                                                <i class="fa fa-times" style="color:white"></i>
                                            </td>
                                            <td>
                                                <div class="input-group">
                                                    @Html.DropDownList("Status", new List<SelectListItem>{
                                                new SelectListItem{ Text="--Select ---", Value = "" },
                                                new SelectListItem{ Text="ACTIVE", Value = "Active" },
                                                new SelectListItem{ Text="INACTIVE", Value = "Inactive" },
                                                 }, new { @class = "form-control", @required = "required", style = "width:300px;" })
                                                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                                                </div>
                                            </td>
                                        </tr>
                                    </table>
                                </div>

                                <div class="col-lg-6 col-sm-12 ">
                                    <table>

                                        <tr>
                                            <td class="form-label">
                                                Recovery Period (Months)
                                                <i class="fa fa-times" style="color:white"></i>
                                            </td>
                                            <td>
                                                <div class="input-group">
                                                    @Html.TextBoxFor(model => model.LoanPeriod, new { @Class = "input", @required = "required", style = "width:300px; ", type = "number", min = "0" })
                                                    @Html.ValidationMessageFor(model => model.LoanPeriod, "", new { @class = "text-danger" })
                                                </div>
                                            </td>
                                        </tr>


                                        <tr>
                                            <td class="form-label">
                                                Penalty (%)
                                                <i class="fa fa-times" style="color:white"></i>
                                            </td>
                                            <td>
                                                <div class="input-group">
                                                    @Html.TextBoxFor(model => model.PenaltyPercentage, new { @Class = "input", @required = "required", style = "width:300px; ", type = "number", min = "0" })
                                                    @Html.ValidationMessageFor(model => model.PenaltyPercentage, "", new { @class = "text-danger" })
                                                </div>
                                            </td>
                                        </tr>


                                        <tr>
                                            <td class="form-label">
                                                Maximum Amount
                                                <i class="fa fa-times" style="color:white"></i>
                                            </td>
                                            <td>
                                                <div class="input-group">
                                                    <span class="input-group-addon">
                                                        <strong id="currency">TZS</strong>
                                                    </span>
                                                    <amount-input id="MaximumAmount" style="width:225px;" class="input" />
                                                    @*@Html.TextBoxFor(model => model.MaximumAmount, new { @Class = "input", @required = "required", style = "width:255px; ", type = "number", min = "0" })
                                                        @Html.ValidationMessageFor(model => model.MaximumAmount, "", new { @class = "text-danger" })*@
                                                </div>
                                            </td>
                                        </tr>

                                        <tr>
                                            <td class="form-label">
                                                Interest Paid Upfront
                                                <i class="fa fa-times" style="color:white"></i>
                                            </td>
                                            <td>
                                                <div class="input-group">
                                                    @Html.CheckBox("InterestPaidUpfront")
                                                </div>
                                            </td>
                                        </tr>

                                    </table>
                                </div>

                            </div>


                            <div class="row">
                                <div class="col-md-2"></div>
                                <div class="col-md-6">

                                    <a class="btn btn-info" href='@Url.Action("LoanProductList", "Setting")' style="margin-right:5px">
                                        <i class="glyphicon glyphicon-arrow-left"></i>Back
                                    </a>
                                    <button type="submit" class="btn btn-info" id="form_submision">
                                        <i class="fa fa-save"></i>Save
                                        <img src="~/Content/img/loading.gif" id="saveLoader" />
                                    </button>
                                </div>
                            </div>
                            @*}*@
                        </div>
                    </div>

                </div>
            </article>
        </div>
    </section>
</div>
<!----------- Search GL Items ----------------->
<div class="modal fade" id="glItemsModal" style="left:4%">

    <div class="modal-dialog" style="width:80%;">
        <div class="modal-content panel-info">
            <div class="modal-header panel-heading">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h3 class="modal-title"> Search Gl Item</h3>
            </div>
            <div class="modal-body">
                <div>
                    <div class="row" style="padding-top:1%;padding-bottom:1%">
                        <div class="col-md-6">
                        </div>
                        <div class="col-md-6">
                            <div class="search-container submit-btn" style="float:right">
                                <i class="fa fa-search search-icon"></i>
                                <input type="search" name="search" placeholder="Search..." id="searchbox2">
                            </div>
                        </div>
                    </div>
                    <table id="dt_search_gl_item" class="table table-striped table-bordered table-hover table-condensed" width="100%">
                        <thead>
                            <tr>
                                <th>#</th>
                                <th>GLAccount String</th>
                                <th>GLAccount Description</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                    </table>

                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-info" id="btn_save_gl_items">
                        <i class="fa fa-save"></i>Save
                    </button>
                    <button class="btn btn-info" data-dismiss="modal">
                        <i class="fa  fa-times"></i>Cancel
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

@section pagespecific{
    <script>

        //SHOW LOADER ICON
        $(document).ajaxStart(function () {
            $(".loadingImg").show();

        });
        //HIDE LOADER ICON
        $(document).ajaxStop(function () {
            $(".loadingImg").hide();
        });

        @*if ('@ViewBag.CustomerTypeCount' == 0) {
            swal("Customer Type not Found,Contact Administrator to add Customer Type", { icon: "warning" })
                              .then((value) => {
                                  var url = '@Url.Action("LoanProductList", "Setting")';
                                  window.location.replace(url);
                              });
        }*@

        $(document).ready(function () {

            var lpo_amount = $("#MaximumAmountx").val();
            if (lpo_amount) {
                $("#MaximumAmountx").val(inputThousandSeparator(lpo_amount))
            }

            $("#InterestReceivableAccount").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: "@Url.Action("GetGlAccounts", "Setting")",
                        type: "POST",
                        dataType: "json",
                        data: { Prefix: request.term },
                        success: function (data) {
                            response($.map(data, function (item) {
                                return { label: item.Text, value: item.value };
                            }))

                        }
                    })
                },
                messages: {
                    noResults: "",
                    results: function (count) {
                        return count + (count > 1 ? ' results' : ' result ') + ' found';
                    }
                }
            });
        })

        var dt_search_gl_item = $('#dt_search_gl_item').dataTable();
        $("#dt_search_gl_item_wrapper .dt-toolbar").remove();

        $("#searchbox2").on("keyup search input paste cut", function () {
            if (!this.value) {
                dt_search_gl_item.fnClearTable();
            } else {
                SearchGlAccount(this.value);
            }
        });

        var searchCode = 0;
        function SearchGl(code) {
            searchCode = code;
            $('#glItemsModal').modal('show');
        }


        var data = [];
        function SearchGlAccount(search) {
            var url = '@Url.Action("GetGLAccount", "Setting")/?search=' + search + '';

            $.ajax({
                type: "get",
                url: url,
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {
                    //=== UPDATE SEARCH GI TABLE ====
                    data = response.data;
                    dt_search_gl_item.fnClearTable();
                    for (var i = 0; i < data.length; i++) {
                        dt_search_gl_item.fnAddData([i,
                           data[i]["GlAccount"].split("|").join("-"),
                           data[i]["GlAccountDesc"],
                          '<a href="#" onclick="getcoa(' + i + ')"><i class="glyphicon glyphicon-plus-sign"></i></a>'
                        ]);
                    }
                },
                failure: function (error) {
                    swal(error);
                }
            });
        }

        function getcoa(rowId) {
            var data = dt_search_gl_item.DataTable().rows().data();
            var row = data[rowId];

            if (searchCode == 1) {
                $("#InterestReceivableAccount2").html(row[1]);
                $("#InterestReceivableAccount").val(row[1]);
                $("#InterestReceivableAccountDesc").val(row[2]);
            }
            if (searchCode == 2) {
                $("#LoanControlAccount2").html(row[1]);
                $("#LoanControlAccount").val(row[1]);
                $("#LoanControlAccountDesc").val(row[2]);
            }

            if (searchCode == 3) {
                $("#LoanInProgressAccount2").html(row[1]);
                $("#LoanInProgressAccount").val(row[1]);
                $("#LoanInProgressAccountDesc").val(row[2]);
            }
            if (searchCode == 4) {
                $("#InterestDeferredAccount2").html(row[1]);
                $("#InterestDeferredAccount").val(row[1]);
                $("#InterestDeferredAccountDesc").val(row[2]);
            }

            if (searchCode == 5) {
                $("#DrGLAccount2").html(row[1]);
                $("#DrGLAccount").val(row[1]);
                $("#DrGLAccountDesc").val(row[2]);
            }

            if (searchCode == 6) {
                $("#InterestCode2").html(row[1]);
                $("#InterestCode").val(row[1]);
                $("#InterestCodeDesc").val(row[2]);
            }

            if (searchCode == 7) {
                $("#InterestRevenueAccount2").html(row[1]);
                $("#InterestRevenueAccount").val(row[1]);
                $("#InterestRevenueAccountDesc").val(row[2]);
            }

            if (searchCode == 8) {
                $("#PenaltyDebtor2").html(row[1]);
                $("#PenaltyDebtor").val(row[1]);
                $("#PenaltyDebtorDesc").val(row[2]);
            }

            if (searchCode == 9) {
                $("#PenaltyIncome2").html(row[1]);
                $("#PenaltyIncome").val(row[1]);
                $("#PenaltyIncomeDesc").val(row[2]);
            }

            $('#glItemsModal').modal('hide');
        }

        $("#MaximumAmountx").on("keyup input paste", function () {
            $("#MaximumAmountx").val(inputThousandSeparator(this.value))
        });
        var OldVal = 0
        function inputThousandSeparator(NewVal) {
            if (NewVal) {
                try {
                    NewVal = parseFloat(NewVal.split(",").join(""))
                    if (typeof NewVal == 'number' && !Number.isNaN(NewVal)) {
                        OldVal = NewVal;
                        return NewVal.toLocaleString()
                    } else {
                        return OldVal
                    }
                } catch (e) {
                    console.log(e)
                }
            }
        }

        $("#saveLoader").toggle(false);

        $("#form_submision").click(function () {
            var InterestPaidUpfront = null;
            if (document.getElementById('InterestPaidUpfront').checked) {
                InterestPaidUpfront = "true";
            } else {
                InterestPaidUpfront = "false";
            }

            var LoanPeriod = $("#LoanPeriod").val();
            //var GracePeriod = $("#GracePeriod").val();
            var PenaltyPercentage = $("#PenaltyPercentage").val();
            //var InterestRate = $("#InterestRate").val();
            var MaximumAmount = $("#MaximumAmount").val();
            var ProductName = $("#ProductName").val();
            var ProductCode = $("#ProductCode").val();
            var ProductDesc = $("#ProductDesc").val();
            var Status = $("#Status").val();

            if (LoanPeriod == '' || PenaltyPercentage == '' ||  MaximumAmount == '' || ProductName == '' || ProductCode == '' || ProductDesc == '' || Status == '') {
                var url = '@Url.Action("CreateLoanProduct", "Setting")';
                swal("Please Fill All the required Fields");
                return false;
            }

            if (PenaltyPercentage > 100) {
                swal("Penalty should not Exceed 100");
                return false;
            }

            if (new RegExp('^[0-9]+$').test(PenaltyPercentage) == false) {
                swal("Penalty should be between 1 and 100");
                return false;
            }

            if (document.getElementById('InterestPaidUpfront').checked) {
                InterestPaidUpfront = "true";
            } else {
                InterestPaidUpfront = "false";
            }

            if (LoanPeriod < 0 || PenaltyPercentage < 0 ||  MaximumAmount < 0) {
                swal("Negative Input is not allowed");
                return false;
            }

            if (/^[a-zA-Z0-9\-_\s]*$/.test(ProductName) == false) {
                swal("Special Characters for Product Name are not allowed");
                return false;
            }

            if (/^[a-zA-Z0-9\-_\s]*$/.test(ProductCode) == false) {
                swal("Special Characters for Product Code are not allowed");
                return false;
            }

            //if (/^[a-zA-Z0-9\-_\s]*$/.test(ProductDesc) == false) {
            //    swal("Special Characters for Product Description are not allowed");
            //    return false;
            //}

            var form_data = {
            "__RequestVerificationToken": $('[name=__RequestVerificationToken]').val(),
            "ProductCode": ProductCode,
            "ProductName": ProductName,
            //"customerTypeId": $("#customerTypeId").val(),
            "ProductDesc": ProductDesc,
            "LoanPeriod": $("#LoanPeriod").val(),
            //"GracePeriod": $("#GracePeriod").val(),
            //"InterestRate": $("#InterestRate").val(),
            "MaximumAmount": $("#MaximumAmount").val(),
            "PenaltyPercentage": $("#PenaltyPercentage").val(),
            "Status": $("#Status").val(),
            "InterestPaidUpfront": InterestPaidUpfront

        }

       // console.log(form_data);

        var url = '@Url.Action("CreateLoanProduct", "Setting")';
        var urlList = '@Url.Action("LoanProductList", "Setting")';
        $("#form_submision").prop('disabled', true);
        $("#saveLoader").toggle(true);
        $.ajax({
            type: "post",
            url: url,
            data: form_data,
            contenttype: "application/json; charset=utf-8",
            datatype: "json",
            success: function (response) {
                $("#form_submision").prop('disabled', false);
                $("#saveLoader").toggle(false);
                if (response == "Success") {
                    swal("Saved Successfully!", { icon: "success" })
                        .then((value) => {
                            window.location.href = urlList;
                        });
                }
                else {
                    swal(response);
                }
            },
            failure: function (error) {
                $("#form_submision").prop('disabled', false);
                $("#saveLoader").toggle(false);
                swal(error);
            }
        });
        });
    </script>
}


