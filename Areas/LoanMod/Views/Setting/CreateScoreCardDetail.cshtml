@model IFMIS.Areas.LoanMod.Models.ScoreCardDetailVM
@{
    ViewBag.Title = "Create Score Card Detail";

    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .search-btn {
        border: 1px solid #ccc;
        border-radius: 4px;
        padding: 5px;
        padding-right: 10px;
    }

    .search-container {
        display: inline-flex;
        flex: 1 1 300px;
        position: relative;
        border: 1px solid #ccc;
        border-radius: 5px;
        overflow: hidden;
        padding-left: 10px;
    }

    .name-input-container {
        display: inline-flex;
        flex: 1 1 300px;
        position: relative;
        overflow: hidden;
    }

    .search-icon {
        padding: 0.5rem;
    }

    .search-button {
        background: #538AC5;
        border: 0;
        color: white;
        padding: 8px;
        border-radius: 0;
    }

    input[type=number] {
        padding: 8px;
        border: 1px solid #ccc;
        width: 205px;
    }

    input[type=text] {
        padding: 8px;
        border: 1px solid #ccc;
    }

    input[type=search] {
        padding: 4px;
        border: hidden;
        border-radius: 4px;
    }

    textarea {
        border: 1px solid #ccc;
    }

    select {
        padding: 8px;
        border: 1px solid #ccc;
        resize: vertical;
        width: 230px;
    }

    .action-btn {
        width: 100px;
        color: white;
    }

    .form-label {
        text-align: right;
    }

    td {
        padding: 5px;
    }

    .info-box {
        padding: 10px;
        background-color: #ECF3F8;
        text-align: center;
        border: 1px solid #ccc;
        border-radius: 5px;
    }

    .loadingImg {
        display: none;
    }

    .backgroundColor {
        background: #ff0000;
    }
</style>

<div id="content" style="margin: 5px; padding-top: 30px">
    <div class="row"></div>
    <section id="widget-grid">
        <div class="row">
            <article class="col-sm-12 col-md-12 col-lg-12">

                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">

                    <header>
                        <span class="widget-icon"> <i class="fa fa-table"></i> </span>
                        <h2>@ViewBag.Title</h2>
                    </header>
                    <div>
                        <div class="widget-body">
                            @if (ViewBag.ScoreCardCount > 0)
                            {
                                @Html.AntiForgeryToken()
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class="row" style="padding:1% 5% 0 5%;">
                                    <div class="col-md-2 col-lg-2 col-sm-12 "></div>
                                    <div class="col-md-7 col-lg-7 col-sm-12 ">
                                        <table>

                                            <tr>
                                                <td class="form-label">
                                                    Score Card
                                                    <i class="fa fa-times" style="color:white"></i>
                                                </td>
                                                <td>
                                                    <select id="ScoreCardId" required style="width:300px" class="form-control select2">
                                                        @if (ViewBag.ScoreCardList1 != null)
                                                        {
                                                            <option>Select Score Card</option>
                                                            foreach (var scoreCard in ViewBag.ScoreCardList1)
                                                            {
                                                                <option value='@scoreCard.ScoreCardId'>@scoreCard.SecurityName -@scoreCard.ScoreCardName</option>
                                                            }
                                                        }
                                                        }

                                                    </select>
                                                </td>
                                            </tr>

                                            <tr>
                                                <td class="form-label">
                                                    Description
                                                    <i class="fa fa-times" style="color:white"></i>
                                                </td>
                                                <td>
                                                    @Html.TextArea("ScoreDesc", null, new { @class = "form-control", @required = "required", rows = "2", cols = "41", @style = "width:300px;" })

                                                    @Html.ValidationMessageFor(model => model.ScoreDesc, "", new { @class = "text-danger" })
                                                </td>
                                            </tr>

                                            <tr>
                                                <td class="form-label">
                                                    Score Detail Minimum Value
                                                    <i class="fa fa-times" style="color:white"></i>
                                                </td>
                                                <td>
                                                    @Html.TextBoxFor(model => model.ScoreDetailMinVal, new { @Class = "input", @required = "required", style = "width:300px; ", type = "number", min = "0" })
                                                    @Html.ValidationMessageFor(model => model.ScoreDetailMinVal, "", new { @class = "text-danger" })
                                                </td>
                                            </tr>

                                            <tr>
                                                <td class="form-label">
                                                    Score Detail Maximum Value
                                                    <i class="fa fa-times" style="color:white"></i>
                                                </td>
                                                <td>
                                                    @Html.TextBoxFor(model => model.ScoreDetailMaxVal, new { @Class = "input", @required = "required", style = "width:300px; ", type = "number", min = "0" })
                                                    @Html.ValidationMessageFor(model => model.ScoreDetailMaxVal, "", new { @class = "text-danger" })
                                                </td>
                                            </tr>
                                            <tr>
                                                <td></td>
                                                <td>
                                                    <a class="btn btn-info" href='@Url.Action("ScoreCardDetailList", "Setting")' style="margin-right:5px">
                                                        <i class="glyphicon glyphicon-arrow-left"></i>Back
                                                    </a>
                                                    <button type="submit" class="btn btn-info" id="form_submision">
                                                        <i class="fa fa-save"></i>Save
                                                        <img src="~/Content/img/loading.gif" id="saveLoader" />
                                                    </button>
                                                </td>
                                            </tr>
                                        </table>
                                    </div>

                                    <div class="col-md-3 col-lg-3 col-sm-12 "></div>
                                </div>
                            }
                        </div>
                    </div>

                </div>
            </article>
        </div>
    </section>
</div>

@section pagespecific{
    <script>

        //SHOW LOADER ICON
        $(document).ajaxStart(function () {
            $(".loadingImg").show();

        });
        //HIDE LOADER ICON
        $(document).ajaxStop(function () {
            $(".loadingImg").hide();
        });

        if ('@ViewBag.ScoreCardCount' == 0) {
            swal("Score Detail not Found,Contact Administrator to add Score Detail", { icon: "warning" })
                              .then((value) => {
                                  var url = '@Url.Action("ScoreCardDetailList", "Setting")';
                                  window.location.replace(url);
                              });
        }

        $("#saveLoader").toggle(false);
        $("#form_submision").click(function () {
            var LoanSecurityId = $("#LoanSecurityId").val();
            var LoanScoreId = $("#LoanScoreId").val();
            var ScoreCardId = $("#ScoreCardId").val();
            var ScoreDesc = $("#ScoreDesc").val();
            var ScoreDetailMinVal = $("#ScoreDetailMinVal").val();
            var ScoreDetailMaxVal = $("#ScoreDetailMaxVal").val();


            if (LoanSecurityId == 'Select Loan Security' || LoanScoreId == 'Select Score Card Detail' || ScoreCardId == '' || ScoreDesc == '' || ScoreDetailMinVal == '' || ScoreDetailMaxVal == '') {
                var url = '@Url.Action("CreateScoreCardDetail", "Setting")';
                swal("Please Fill All the required Fields");
                return false;
            }

            if (ScoreDetailMinVal < 0 || ScoreDetailMaxVal < 0) {
                swal("Negative Input is not allowed");
                return false;
            }

            if (ScoreDetailMinVal >= ScoreDetailMaxVal) {
                swal("Score Detail Minimum Value should not be equal or exceed Score Detail Maximum Value ");
                return false;
            }

            //if (/^[a-zA-Z0-9\-_\s]*$/.test(ScoreDesc) == false) {
            //    swal("Special Characters for Score card Description are not allowed");
            //    return false;
            //}

            var form_data = {
            "__RequestVerificationToken": $('[name=__RequestVerificationToken]').val(),
            "LoanSecurityId": LoanSecurityId,
            "LoanScoreId": LoanScoreId,
            "ScoreCardId": ScoreCardId,
            "ScoreDesc": ScoreDesc,
            "ScoreDetailMinVal": ScoreDetailMinVal,
            "ScoreDetailMaxVal": ScoreDetailMaxVal
        }

        var url = '@Url.Action("CreateScoreCardDetail", "Setting")';
        var urlList = '@Url.Action("ScoreCardDetailList", "Setting")';
        $("#form_submision").prop('disabled', true);
        $("#saveLoader").toggle(true);
        $.ajax({
            type: "post",
            url: url,
            data: form_data,
            contenttype: "application/json; charset=utf-8",
            datatype: "json",
            success: function (response) {
                $("#form_submision").prop('disabled', false);
                $("#saveLoader").toggle(false);
                if (response == "Success") {
                    swal("Saved Successfully!", { icon: "success" })
                        .then((value) => {
                            window.location.href = urlList;
                        });
                }
                else {
                    swal(response);
                }
            },
            failure: function (error) {
                $("#form_submision").prop('disabled', false);
                $("#saveLoader").toggle(false);
                swal(error);
            }
        });
        });
    </script>
}


