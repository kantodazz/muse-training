@model IFMIS.Areas.CashManagement.Models.OpeningAccountPermitVM

@{
    ViewBag.Title = "Opening Account";
}

<style>
    .search-btn {
        border: 1px solid #ccc;
        border-radius: 4px;
        padding: 5px;
        padding-right: 10px;
    }

    .search-container {
        display: inline-flex;
        flex: 1 1 300px;
        position: relative;
        border: 1px solid #ccc;
        border-radius: 5px;
        overflow: hidden;
        padding-left: 10px;
    }

    .name-input-container {
        display: inline-flex;
        flex: 1 1 300px;
        position: relative;
        overflow: hidden;
    }

    .search-icon {
        padding: 0.5rem;
    }

    .search-button {
        background: #538AC5;
        border: 0;
        color: white;
        padding: 8px;
        border-radius: 0;
    }

    input[type=number] {
        padding: 8px;
        border: 1px solid #ccc;
        width: 205px;
    }

    input[type=text] {
        padding: 8px;
        border: 1px solid #ccc;
    }

    input[type=search] {
        padding: 4px;
        border: hidden;
        border-radius: 4px;
    }

    textarea {
        border: 1px solid #ccc;
    }

    select {
        padding: 8px;
        border: 1px solid #ccc;
        resize: vertical;
        width: 230px;
    }

    .action-btn {
        width: 100px;
        color: white;
    }

    .form-label {
        text-align: right;
    }

    td {
        padding: 5px;
    }

    .info-box {
        padding: 10px;
        background-color: #ECF3F8;
        text-align: center;
        border: 1px solid #ccc;
        border-radius: 5px;
    }

    .row-align {
        display: flex;
        flex-direction: row;
        flex-wrap: wrap;
        justify-content: space-between;
    }
</style>
<!-- MAIN CONTENT -->
<div id="content" style="margin: 5px; padding-top: 30px">
    <div class="row">
        <div class="col-xs-12 col-sm-3 col-md-3 col-lg-3">
        </div>
    </div>
    <section id="widget-grid" class="">

        <div class="row">
            <article class="col-sm-12 col-md-12 col-lg-12">
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">
                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2> Opening Account </h2>

                    </header>

                    <!-- widget div-->
                    <div>
                        <div class="jarviswidget-editbox">
                            <!-- This area used as dropdown edit box -->

                        </div>
                        <!-- end widget edit box -->
                        <!-- widget content -->
                        <div class="widget-body">
                            <form class="form-horizontal" name="openingAccount" id="openingAccount">
                                @Html.AntiForgeryToken()
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                <div class="form-group">
                                    @Html.LabelFor(model => model.AccountName, "Account Name", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-8">
                                        @Html.EditorFor(model => model.AccountName, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.AccountName, "", new { @class = "text-danger" })
                                    </div>

                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.CurrencyId, "Currency Name", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-3">
                                        <select id="CurrencyId" class="form-control select2">
                                            <option value="Select Currency" selected="selected">--Select Currency--</option>
                                            @foreach (var currencylist in ViewBag.CurrencyList)
                                            {
                                                <option value='@currencylist.CurrencyId'>
                                                    @currencylist.CurrencyCodeCurrencyName
                                                </option>
                                            }
                                        </select>
                                    </div>

                                    @Html.LabelFor(model => model.AccountCategoryName, "Account Category Name", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-3">
                                        <select id="AccountCategoryName" class="form-control select2">
                                            <option value="Select Account Category" selected="selected">--Select Account Category--</option>
                                            @foreach (var accountCategoryList in ViewBag.acccountcategoryList)
                                            {
                                                <option value='@accountCategoryList.AccountCategoryName'>
                                                    @accountCategoryList.AccountCategoryName
                                                </option>
                                            }
                                        </select>
                                    </div>


                                </div>
                                <div class="form-group">

                                    @Html.LabelFor(model => model.BankId, "Bank Name", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-3">
                                        <select id="BankId" class="form-control select2">
                                            <option value="Select Bank Name" selected="selected">--Select Bank Name--</option>
                                            @foreach (var banklist in ViewBag.bankNameList)
                                            {
                                                <option value='@banklist.BankId'>
                                                    @banklist.BankName
                                                </option>
                                            }
                                        </select>
                                    </div>

                                    @Html.LabelFor(model => model.BranchName, "Branch Name", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.BranchName, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.BranchName, "", new { @class = "text-danger" })
                                    </div>

                                </div>


                                <div class="form-group">
                                    @*@Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
                                    </div>*@

                                    @Html.LabelFor(model => model.Purpose, "Purpose", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-8">
                                        (<span style="font-weight:bold;" id="PurposeCount">300 Characters Remaining</span>)
                                        @Html.TextAreaFor(model => model.Purpose, new { cols = 93, @rows = 3, htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Purpose, "", new { @class = "text-danger" })
                                    </div>

                                </div>

                                <div class="form-actions">
                                    <div class="row">
                                        <div class="col-md-8 col-md-offset-2">
                                            <button class="btn btn-info" type="button" style="float: left" id="form_submision">
                                                <i class="fa fa-save"></i>
                                                Save
                                            </button>
                                            <a href="@Url.Action("OpeningAccountsList", "governmentaccounts" )" class="btn btn-info" style="float: left; margin-left: 5px">
                                                <i class="fa fa-arrow-left"></i>
                                                Back
                                            </a>
                                        </div>
                                    </div>
                                </div>
                            </form>
                        </div>
                        <!-- end widget content -->
                    </div>
                    <!-- end widget div -->

                </div>
                <!-- end widget -->

            </article>
            <!-- END COL -->

        </div>

        <!-- END ROW -->

    </section>
    <!-- end widget grid -->

</div>
<!-- END MAIN CONTENT -->
@section pagespecific {
    <script>

     //====== FORM SUBMISSION =========
        $("#saveLoader").toggle(false);
        $("#form_submision").click(function () {
            debugger
            if (!$("#openingAccount").valid()) {
                $('#form_submision').prop("disabled", false);
                $("#divLoader").hide();
                return false;
            }

            var token = $("[name='__RequestVerificationToken']").val();
            var data = {
                __RequestVerificationToken: token,
                "AccountName": $("#AccountName").val(),
                "Purpose": $("#Purpose").val(),
                "CurrencyId": parseInt($("#CurrencyId").val()),
                "BankId": parseInt($("#BankId").val()),
                "BranchName": $("#BranchName").val(),
                "AccountCategoryName": $("#AccountCategoryName").val()
            }

                var url = '@Url.Action("OpeningAccountEmbassy", "GovernmentAccounts")';
                var urlList = '@Url.Action("OpeningAccountsEmbassyList", "GovernmentAccounts")';
                $("#form_submision").prop('disabled', true);
                $("#saveLoader").toggle(true);
                $.ajax({

                    url: url,
                    type: "POST",
                    data: data,
                    dataType: "JSON",
                    contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                    success: function (response) {
                        $("#form_submision").prop('disabled', false);
                        $("#saveLoader").toggle(false);

                        if (response == "Success") {
                            swal("Saved Successfully!", { icon: "success" })
                                .then((value) => {
                                    window.location.href = urlList;
                                });
                        }
                        else {
                            swal(response, { icon: "warning" }).then((value) => {window.location.href=ur });
                        }
                    },
                    failure: function (error) {
                        $("#form_submision").prop('disabled', false);
                        $("#saveLoader").toggle(false);
                        swal(error);
                    }
                });
        });

    

        $('#Purpose').on("keyup", function () {
            var count = $('#Purpose').val().split('');
            var numChars = 300 - parseInt(count.length);
            $('#PurposeCount').text(parseInt(numChars) + " Characters Remaining");

            if (numChars == 0) {
                $("#Purpose").addClass("input-has-exceeded");
            } else {
                $("#Purpose").removeClass("input-has-exceeded");
            }
        });


    </script>
}


