@model IFMIS.Areas.CashManagement.Models.EditForecastVM

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "formForecast" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.result.ForecastId)
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.result.FundFlowCategory, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.result.FundFlowCategory, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                @Html.ValidationMessageFor(model => model.result.FundFlowCategory, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.result.FundFlowSubCategory, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.result.FundFlowSubCategory, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                @Html.ValidationMessageFor(model => model.result.FundFlowSubCategory, "", new { @class = "text-danger" })
            </div>
        </div>

        
          <div class="form-group">
            @Html.LabelFor(model => model.result.ApplyDate, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.result.ApplyDate, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                @Html.ValidationMessageFor(model => model.result.ApplyDate, "", new { @class = "text-danger" })
            </div>
          </div>
        

        <div class="form-group">
            @Html.LabelFor(model => model.result.OperationalCurrency, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.result.OperationalCurrency, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                @Html.ValidationMessageFor(model => model.result.OperationalCurrency, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.result.OperationalAmount, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.result.OperationalAmount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.result.OperationalAmount, "", new { @class = "text-danger" })
            </div>
        </div>

    </div>

}
