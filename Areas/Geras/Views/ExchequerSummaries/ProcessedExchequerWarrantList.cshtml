@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style type="text/css">
    .loadingImg {
        margin-left: auto;
        margin-right: auto;
        position: absolute;
        top: 50%;
    }

    .redStar {
        color: red;
        font-size: 15px;
    }
</style>
<div id="content" style="margin: 5px;">
    <div class="row"></div>
    <!-- widget grid -->
    <section id="widget-grid" class="">
        <div class="row">
            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">
                @Html.AntiForgeryToken()
                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">

                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2> Processed Exchequer Warrant List</h2>
                    </header>
                    <div>
                        <div class="row">
                            <div class="col-md-6" style="height:80px;font-size:14px;">
                                <b>Recurrent Exchequer (TZS):</b>
                                <span id="totalRecurrentExchequer">
                                    @if (ViewBag.TotalRecurrentExchequer != 0)
                                    {
                                        <span>TZS:@string.Format("{0:#,0.00}", ViewBag.TotalRecurrentExchequer)</span>
                                    }
                                    else
                                    {
                                        <span>TZS:@ViewBag.TotalRecurrentExchequer</span>
                                    }
                                </span><br />
                                <b>Development Exchequer (TZS):</b>
                                <span id="totalDevelopmentExchequer">
                                    @if (ViewBag.TotalDevelopmentExchequer != 0)
                                    {
                                        <span>TZS:@string.Format("{0:#,0.00}", ViewBag.TotalDevelopmentExchequer)</span>
                                    }
                                    else
                                    {
                                        <span>TZS:@ViewBag.TotalDevelopmentExchequer</span>
                                    }
                                </span><br />
                                <b>Total Exchequer (TZS):</b>
                                <span id="totalExchequer">
                                    @if (ViewBag.TotalExchequer != 0)
                                    {
                                        <span>TZS:@string.Format("{0:#,0.00}", ViewBag.TotalExchequer)</span>
                                    }
                                    else
                                    {
                                        <span>TZS:@ViewBag.TotalExchequer</span>
                                    }
                                </span><br />
                            </div>
                            <div class="col-md-6">
                                <b>9921180001 – TSA Account (TZS):</b>
                                <span id="totalExchequer">
                                    @if (ViewBag.TotalExchequer != 0)
                                    {
                                        <span>TZS:@string.Format("{0:#,0.00}", ViewBag.TotalExchequer)</span>
                                    }
                                    else
                                    {
                                        <span>TZS:@ViewBag.TotalExchequer</span>
                                    }
                                </span><br />
                            </div>
                        </div>

                        <div class="widget-body " style="padding-top:10px;width:100%">
                            <div align="center">
                                <img src="~/Media/Images/ajax_loader.gif" class="loadingImg" id="ImageLoader" />
                            </div>
                            <table class="table  table-bordered table-hover table-condensed" id="dataTableList">
                                <thead>
                                    <tr>
                                        <th style="text-align:right;width:4%">Serial Number</th>
                                        @*<th>Vote</th>*@
                                        <th style="text-align:left;">Exchequer Reference</th>
                                        <th style="text-align:left;">Exchequer Description</th>
                                        <th>Exchequer Category</th>
                                        <th>Exchequer Type</th>
                                        <th>NumTrx</th>
                                        <th>Amount (TZS)</th>
                                        <th>Apply Date</th>
                                        <th>Sent ACGEN At</th>
                                        <th>Sent BOT At</th>
                                        <th>Description</th>
                                        @*<th>Created Date</th>*@
                                        <th>Status</th>
                                        <th style="text-align:center">Action</th>
                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </article>

        </div>
    </section>
</div>
<div class="modal fade" id="RejectModal" tabindex="-1" role="dialog" aria-labelledby="lblmodal">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header alert alert-info" style="font:bold 16px Trebuchet MS, Lucida Sans Unicode, Lucida Grande, Lucida Sans, Arial, sans-serif">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title">Add Rejection Reason</h4>
            </div>
            <div class="modal-body">
                @Html.AntiForgeryToken()
                <div class="modal-body">
                    <div class="form-horizontal">
                        <div class="form-group">
                            <div class="col-md-12">
                                <label>Enter Reason (<span style="font-weight:bold;" id="RejectionReasonsCount">250</span>)</label>
                                <textarea rows="4" id="RejectionReasons" name="RejectionReasons" class="form-control" style="resize: none;" maxlength="250"></textarea>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer" style="padding-left:10% !important;">
                <button type="button" class="btn btn-info pull-left" id="btnSaveRemarks" onclick="RejectExchequerSummary()">
                    <i class="fa fa-save"></i>Save
                    <img src="~/Content/img/loading.gif" class="batchLoader" />
                </button>
                <button class="btn btn-default delete-cancel pull-left" data-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="attachFileModal">
    <div class="modal-dialog">
        <div class="modal-content panel-info">
            <div class="modal-header panel-heading">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h3 class="modal-title">Attach File</h3>
            </div>

            <div class="modal-body">
                <input type="file" name="file" id="file" accept=".pdf" />

            </div>
            <div class="modal-footer">
                <button type="submit" class="btn btn-info" onclick="uploadFile()" style="width:100px;" id="form_submision">
                    <i class="fa fa-save"></i>Save
                    <img src="/Content/img/loading.gif" class="saveLoader" />
                </button>
                <button class="btn btn-info"
                        data-dismiss="modal" style="width:100px;">
                    <i class="fa fa-times"></i>Close
                </button>
            </div>

        </div>
    </div>
</div>

<div class="modal fade modal-backdrop-transparent" id="documentModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header" style="color: #31708f; background-color: #d9edf7; border-color: #bce8f1; ">
                <h5 class="modal-title" id="title"></h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" style="color:white;">
                    <span aria-hidden="true"><i class="fa fa-times"></i></span>
                </button>
            </div>
            <div class="modal-body">
                <embed style="height: 70vh !important;" width="100" id="embedDocument" class="embed-responsive-item col-md-12"
                       src="" allowfullscreen />

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
@section pagespecific {
    <!-- PAGE RELATED PLUGIN(S) -->
    <script type="text/javascript">
     $(".saveLoader").toggle(false);
      $(".loadingImg").hide();
        $(document).ajaxStart(function () {
            $(".loadingImg").show();
           document.getElementById("ImageLoader").style.marginLeft = "auto";
                document.getElementById("ImageLoader").style.marginRight = "auto";
                document.getElementById("ImageLoader").style.position = "absolute";
                document.getElementById("ImageLoader").style.top = "50%";
        });
        //HIDE LOADER ICON
        $(document).ajaxStop(function () {
            $(".loadingImg").hide();
        });

        $(document).ready(function () {
            $(".saveLoader").toggle(false);
            BindDataTable();
        });

        function ToJavaScriptDate(value) {
            if (value != null && value != '') {
                var pattern = /Date\(([^)]+)\)/;
                var results = pattern.exec(value);
                var dt = new Date(parseFloat(results[1]));
                return dt.getDate() + "/" + (dt.getMonth() + 1) + "/" + dt.getFullYear();
            }
        }

        function DateYear(value) {
            if (value != null && value != '') {
                var pattern = /Date\(([^)]+)\)/;
                var results = pattern.exec(value);
                var dt = new Date(parseFloat(results[1]));
                var monthInWords = '';
                switch ((dt.getMonth() + 1)) {
                    case 1:
                        monthInWords = "January";
                        break;

                    case 2:
                        monthInWords = "February";
                        break;

                    case 3:
                        monthInWords = "March";
                        break;

                    case 4:
                        monthInWords = "April";
                        break;

                    case 5:
                        monthInWords = "May";
                        break;

                    case 6:
                        monthInWords = "June";
                        break;

                    case 7:
                        monthInWords = "July";
                        break;

                    case 8:
                        monthInWords = "August";
                        break;

                    case 9:
                        monthInWords = "September";
                        break;

                    case 10:
                        monthInWords = "October";
                        break;

                    case 11:
                        monthInWords = "November";
                        break;

                    case 12:
                        monthInWords = "December";
                        break;
                }
                return monthInWords + " " + dt.getFullYear();
            }
        }

        var BindDataTable = function (response) {
            $("#dataTableList").DataTable({
                "bServerSide": true,
                "sAjaxSource": '@Url.Action("GetProcessedExchequerWarrantList", "ExchequerSummaries")',
                "iDisplayLength": 10,
                "aLengthMenu": [[10, 25, 50, 100], [10, 25, 50, 100]],
                "fnServerData": function (sSource, aoData, fnCallback) {

                    $.ajax({
                        type: "Get",
                        data: aoData,
                        url: sSource,
                        success: fnCallback
                    })
                },
                "aoColumns": [
                    {
                        render: function (data, type, row, meta) {
                            return meta.row + meta.settings._iDisplayStart + 1;
                        }
                    },
                    /*{
                        "mData": "VoteCode",
                        "render": function (VoteCode, type, full, meta) {
                            return VoteCode + "-" + full.VoteName;
                        }
                    },*/
                    { "mData": "ExchequerRef"},
                    {
                        "mData": "CheckDate",
                        "render": function (CheckDate, type, full, meta) {
                            if (CheckDate != null && CheckDate != "") {
                                return "Exchequer of " + DateYear(CheckDate);
                            } else {
                                return "Details not Found";
                            }
                        }
                    },
                    { "mData": "ExchequerCategory" },
                    {
                        "mData": "ExchequerType",
                        "render": function (ExchequerType, type, full, meta) {
                            if (ExchequerType != null && ExchequerType != "") {
                                if (ExchequerType == "Local") {
                                    return "Local - 201";
                                }
                                else if (ExchequerType == "Foreign") {
                                    return "Foreign - 202";
                                }
                                else if (ExchequerType == "Other Charges" || ExchequerType == "OC") {
                                    return "Other Charges - 102";
                                }
                                else if (ExchequerType == "PE" || ExchequerType == "Wages and Salaries") {
                                    return "PE - 101";
                                } else {
                                    return "Details Not Found";
                                }
                            } else {
                                return "Details Not Found";
                            }
                        }
                    },
                    {
                        "mData": "NumTrxs",
                        "render": function (NumTrxs, type, full, meta) {
                            var num = null;
                            if (NumTrxs == null) {
                                num = "<p align='right'>0</p>";
                            }
                            else {
                                num = "<p align='right'>" + NumTrxs.toLocaleString() + "</p>";
                            }
                            return num;
                        }
                    },
                    {
                        "mData": "Amount",
                        "render": function (Amount, type, full, meta) {
                            var amount = null;
                            if (Amount == null) {
                                amount = "<p align='right'>0</p>";
                            }
                            else {
                                amount = "<p align='right'>" + Amount.toLocaleString() + "</p>";
                            }
                            return amount;
                        }
                    },

                    {
                        "mData": "CheckDate",
                        "render": function (CheckDate, type, full, meta) {
                            if (CheckDate != null && CheckDate != "") {
                                return ToJavaScriptDate(CheckDate);
                            } else {
                                return "Not Found";
                            }
                        }
                    },
                    {
                        "mData": "SentToAcgenAt",
                        "render": function (SentToAcgenAt, type, full, meta) {
                            if (SentToAcgenAt != null && SentToAcgenAt != "") {
                                return ToJavaScriptDate(SentToAcgenAt);
                            } else {
                                return "Not Found";
                            }
                        }
                    },
                    {
                        "mData": "SentToBotAt",
                        "render": function (SentToBotAt, type, full, meta) {
                            if (SentToBotAt != null && SentToBotAt != "") {
                                return ToJavaScriptDate(SentToBotAt);
                            }
                            else {
                                return "Not Found";
                            }
                        }
                    },
                    { "mData": "StatusDescription" },
                    /*{
                        "mData": "CreatedAt",
                        "render": function (CreatedAt, type, full, meta) {
                            if (CreatedAt != null && CreatedAt != "") {
                                return ToJavaScriptDate(CreatedAt);
                            } else {
                                return "Not Found";
                            }
                        }
                    },*/
                    { "mData": "OverallStatus" },
                    {
                        "mData": "ExchequerInstructionId",
                        "render": function (ExchequerInstructionId, type, full, meta) {
                            var sendtoBOT = 'display:none';
                            var rejectedView = 'display:none';
                            var previewFile = 'display:none';
                            if (full.FileName != null && (full.OverallStatus == "REJECTED" || full.OverallStatus == "Rejected")) {
                                sendtoBOT = "";
                            }
                            if (full.OverallStatus == "REJECTED" || full.OverallStatus == "Rejected") {
                                rejectedView = "";
                            }

                            if (full.FileName != null) {
                                previewFile = "";
                            }
                               return '<div class="btn-group" id="drop">\
                                <button type="button" class="btn btn-info btn-xs dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\
                                <span class="caret"></span\
                                <span class="sr-only"></span>\
                                </button>\
                                <ul class="dropdown-menu dropdown-menu-right">\
                                    <li><a class="dropdown-item" href="@Url.Action("ExchequerSummaryDetails", "ExchequerSummaries")/?id=' + full.ExchequerInstructionId + '&&summaryId=' + full.ExchequerSummaryId +'">Details</a></li>\
                                    <li style="cursor:pointer;'+ rejectedView + '"><a class="dropdown-item" onclick="attachSlip(' + full.ExchequerInstructionId + ')">Attach File</a></li>\
                                    <li style="cursor:pointer;'+ previewFile + '"><a class="dropdown-item" onclick="previewDocument(`' + full.FileName +'`,`'+ full.ExchequerRef +'`)">Preview File</a></li>\
                                    <li style="cursor:pointer;'+ sendtoBOT + '"><a class="dropdown-item" onclick="sendExchqToBot(`' + full.ExchequerRef + '`,`' + full.ExchequerInstructionId +'`)">Send To BOT</a></li>\
                                    <li style="cursor:pointer;'+ rejectedView + '"><a class="dropdown-item" onclick="rejectExchequer(`' + full.ExchequerRef + '`,`' + full.ExchequerSummaryId +'`)">Reject</a></li>\
                                </ul>\
                            </div>\ ';
                        }
                    },
                ]
            });
        }
        var exchequerReference = null;
                /*BEGINNING SOURCE CODE TO REJECT EXCHEQUER*/
        $(".batchLoader").toggle(false);
        var exchequerSummaryId = null;
        $('#RejectionReasons').on("keyup", function () {
            var count = $('#RejectionReasons').val().split('');
            var numChars = 250 - parseInt(count.length);
            $('#RejectionReasonsCount').text(parseInt(numChars));
	    });
        function rejectExchequer(exchequerRef, exchequerSummaryId) {
            exchequerReference = exchequerRef;
            swal({
                title: 'Exchequer Rejection',
                text: 'Are you sure you want to Reject Exchequer: ' + exchequerRef,
                buttons: [
                    'No',
                    'Yes'
                ],
            }).then(function (isConfirm) {
                if (isConfirm) {
                    ExchequerSummaryId = exchequerSummaryId;
                    $('#RejectModal').modal('show');
                } else {
                    swal("Cancelled", "No change was made");
                }
            });
        }
        function RejectExchequerSummary() {
             $(".batchLoader").toggle(true);
             $("#btnSaveRemarks").prop('disabled', true);
             var RejectionReasons = $("#RejectionReasons").val();

             if (RejectionReasons == '') {
                 swal("Please Enter Reasons", { icon: "warning" });
                 $(".batchLoader").toggle(false);
                 $("#btnSaveRemarks").prop('disabled', false);
                 return false;
             }

              var successMessage = "Exchequer: " + exchequerReference +' @IFMIS.Libraries.Constants.REJECTED '+"Successfully";
              var failureMessage = "An error occurred during Rejection of Exchequer:  " + exchequerReference;

                 var formData = new FormData();
                 formData.append('__RequestVerificationToken', $('[name=__RequestVerificationToken]').val());
                 formData.append('ExchequerSummaryId', ExchequerSummaryId);
                 formData.append('Remarks', RejectionReasons);
                 formData.append('ModuleName', "Exchequer Warrant");
                 formData.append('ModuleLevel', "Exchequer Warrant Submission");
                 formData.append('Destination', "Exchequer Warrant Authorization");
                 formData.append('OverallStatus', "Rejected in Submission");

                 var url = '@Url.Action("RejectExchequerSummary", "ExchequerSummaries")';
                 $.ajax({
                     type: "POST",
                     url: url,
                     data: formData,
                     contentType: false,
                     processData: false,
                     success: function (response) {
                         switch (response.data) {
                             case "Success":
                                swal(successMessage, { icon: "success" })
                                 .then((value) => {
                                  var url = '@Url.Action("ApprovedExchequerList", "ExchequerSummaries")';
                                   window.location.replace(url);
                                 });

                                 $(".batchLoader").toggle(false);
                                 $("#btnSaveRemarks").prop('disabled', false);
                                 break;
                         }
                     },
                     failure: function (response) {
                         swal(failureMessage, { icon: "warning" });
                         $(".batchLoader").toggle(false);
                         $("#btnSaveRemarks").prop('disabled', false);
                     }
                 });

         }
        /*ENDING SOURCE CODE TO REJECT EXCHEQUER*/
        var ExchequerInstructionId = null;
        function attachSlip(exchequerInstructionId) {
            ExchequerInstructionId = exchequerInstructionId;
            $('#attachFileModal').modal('show');
        }

        function uploadFile() {
            swal({
                text: "Are you sure you want to Upload File?",
                buttons: ["NO", "YES"],
            }).then((confirmed) => {
                if (confirmed) {
                    var file = $("#file").val();
                    if (file == '') {
                        $("#form_submision").prop('disabled', false);
                        $(".loadingImg").hide();
                        $(".saveLoader").toggle(false);
                        swal("Please Upload Attachment (PDF Format)");
                        return false;
                    }

                    if (file != '') {
                        $("#form_submision").prop('disabled', false);
                        $(".loadingImg").hide();
                        $(".saveLoader").toggle(false);
                        var attachment = document.querySelector("#file");
                        if (/\.(pdf)$/i.test(attachment.files[0].name) === false) {
                            swal("Please Upload Attachment (PDF Format)");
                            return false;
                        }
                    }
                    var formData = new FormData();
                    formData.append('__RequestVerificationToken', $('[name=__RequestVerificationToken]').val());
                    formData.append('ExchequerInstructionId', ExchequerInstructionId);
                    formData.append('File', $('input[type=file]')[0].files[0]);
                    uploadFilesConfirmed(formData);
                } else {
                    swal("Cancelled");
                }
            });
         }

        function uploadFilesConfirmed(formData) {
            $("#form_submision").prop('disabled', true);
            $("#saveLoader").toggle(true);
            $.ajax({
                url: '@Url.Action("AttachProcessedSlip", "ExchequerSummaries")',
                data: formData,
                type: 'POST',
                contentType: false,
                processData: false,
                success: function (response) {
                    $("#form_submision").prop('disabled', false);
                    $("#saveLoader").toggle(false);
                    if (response.data == "Success") {
                        swal("File Uploaded successfully!", { icon: 'success' })
                          .then((e) => {
                              $('#attachFileModal').modal('hide');
                              window.location.reload();
                          });
                    } else {
                        swal(response.data)
                         .then((e) => {
                             $('#attachFileModal').modal('hide');
                             window.location.reload();
                         });
                    }

                },
                failure: function (error) {
                    $("#form_submision").prop('disabled', false);
                    $("#saveLoader").toggle(false);
                    swal(error)
                     .then((e) => {
                         $('#attachFileModal').modal('hide');
                         window.location.reload();
                     });
                }
            });
        }

         function previewDocument(documentUrl, exchequerRef) {
             $("#title").text(exchequerRef);
            var url = '@Url.Content("~/Content/uploads/")' + documentUrl;
            document.getElementById("embedDocument").setAttribute("src", url);
            $("#documentModal").modal("show");
        }

        function sendExchqToBot(exchequerRef,exchequerInstructionId) {
            swal({
                title: 'Sent Exchequer To BOT',
                text: 'Are you sure you want to Send Exchequer: '+exchequerRef,
                buttons: [
                  'No',
                  'Yes'
                ],
            }).then(function (isConfirm) {
                if (isConfirm) {
                   var formData = new FormData()
                    formData.append('__RequestVerificationToken', $('[name=__RequestVerificationToken]').val());
                    formData.append('exchequerInstructionId', exchequerInstructionId);
                    postFormData(formData);
                } else {
                    swal("Cancelled", "No change was made");
                }
            });
         }

          function postFormData(formData) {
              var successMessage = "EFT File  Successfully Sent to BOT";
              var failureMessage = "An error occurred during Sending of Exchequer to BOT";

              $(".loadingImg").show();
              $(".saveLoader").toggle(true);
              var url = '@Url.Action("SendExchqToBot", "ExchequerSummaries")';
              var urlList = '@Url.Action("ApprovedExchequerList", "ExchequerSummaries")';
              $.ajax({
                  url: url,
                  data: formData,
                  type: 'POST',
                  contentType: false,
                  processData: false,
                  success: function (response) {
                      $(".saveLoader").toggle(true);
                      if (response == "Success") {
                          swal(successMessage, { icon: "success" })
                              .then((m) => {
                                  window.location.replace(urlList);
                              });
                      }
                      else if (response == "NotOk") {
                          swal("An Error occurred on sending file to BOT, Please Contact System Support.", { icon: "warning" })
                              .then((m) => {
                                  window.location.replace(urlList);
                              });
                      } else {
                          $(".saveLoader").toggle(false);
                          swal(failureMessage + ": " + response, { icon: "warning" });
                      }
                  },
                  failure: function (error) {
                      $(".saveLoader").toggle(false);
                      swal(failureMessage, { icon: "warning" });
                  }
              });
          }
    </script>
}




