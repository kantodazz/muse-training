
@model IFMIS.Areas.IFMISTZ.Models.UploadBankStatementVM
@{
    ViewBag.Title = "Remove Bank Statement";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div style="padding:1em;padding-top:4em">
    <section id="widget-grid">
        <div class="row">
            <article class="col-sm-12 col-md-12 col-lg-12">
                <div class="jarviswidget " id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">
                    <header>
                        <span class="widget-icon"> <i class="fa fa-table"></i> </span>
                        <h2>Remove Bank Statement</h2>
                    </header>

                    <div class="widget-body " style="padding-top:10px">
                        @using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data", id = "statementForm" }))
                        {
                            @Html.AntiForgeryToken()
                        <div class="form-horizontal">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="row" style="padding:12px">
                            </div>

                            <div class="row" style="padding:12px">
                                @Html.LabelFor(model => model.BankAccountNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    @Html.DropDownListFor(model => model.BankAccountNumber, Model.AccountNumberNameList, "Select Account Number", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.BankAccountNumber, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="row" style="padding:12px">
                                @Html.LabelFor(model => model.RemoveType, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    @Html.DropDownList("RemoveType", new List<SelectListItem>
                                            {
                                            new SelectListItem{ Text="--Select--", Value = "" },
                                            new SelectListItem{ Text="Full", Value = "Full" },
                                            new SelectListItem{ Text="Partial", Value = "Partial" },
                                            }, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.RemoveType, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div id="Date" class="row" style="padding:12px">
                                <label class="col-md-2 control-label">Statement Date</label>
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.StatementDate, new { htmlAttributes = new { @class = "form-control", autocomplete = "off", @placeholder = "Select Statement Date", @required = "required" } })
                                    @Html.ValidationMessageFor(model => model.StatementDate, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div id="FullDateFrom" class="row" style="padding:12px">
                                <label class="col-md-2 control-label">Statement Date From</label>
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.StatementDateFrom, new { htmlAttributes = new { @class = "form-control", autocomplete = "off", @placeholder = "Select Statement Date", @required = "required" } })
                                    @Html.ValidationMessageFor(model => model.StatementDateFrom, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div id="FullDateTo" class="row" style="padding:12px">
                                <label class="col-md-2 control-label">Statement Date To</label>
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.StatementDateTo, new { htmlAttributes = new { @class = "form-control", autocomplete = "off", @placeholder = "Select Statement Date", @required = "required" } })
                                    @Html.ValidationMessageFor(model => model.StatementDateTo, "", new { @class = "text-danger" })
                                </div>
                            </div>



                            <br />
                            <br />

                            <div class="form-actions">
                                <div class="row">

                                    <div class="col-md-3">
                                        <a class="btn btn-info" href='@Url.Action("BankstatementList", "BankStatements")' style="margin-right:5px">
                                            <i class="glyphicon glyphicon-arrow-left"></i>Back
                                        </a>
                                        <button type="button" class="btn btn-info" onclick="Remove()" style="width:100px;  color:black">
                                            <span class="glyphicon glyphicon-upload" aria-hidden="true"></span>
                                            Remove
                                            <img src="~/Content/img/loading.gif" id="saveLoader" />
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>

                        }
                    </div>
                    <!-- Start of div loader-->
                   
                </div>
                <!-- End of div loader-->
            </article>
        </div>
    </section>
</div>

@section pagespecific{
    <script>

        $('#Date').toggle(false);
        $('#FullDateFrom').toggle(false);
        $('#FullDateTo').toggle(false);

        $("#RemoveType").change(function () {
            var type = $("#RemoveType").val();
            if (type == "Partial") {
                $('#Date').toggle(true)
                $('#FullDateFrom').toggle(false)
                $('#FullDateTo').toggle(false)
            }
            else {
               
                $('#FullDateFrom').toggle(true);
                $('#FullDateTo').toggle(true);
                $('#Date').toggle(false)

            }
        });
        $("#saveLoader").toggle(false);

        function Remove() {

            let accountNumber = $("#BankAccountNumber").val()
            let type = $("#RemoveType").val();
            let statementDate = $("#StatementDate").val();
            let statementDateFrom = $("#StatementDateFrom").val();
            let statementDateTo = $("#StatementDateTo").val();
            if (type == "Partial") {
                swal({
                    title: "Remove",
                    text: "Are you sure you want to Remove the Bank Statement Date  " + statementDate + " for Account Number   " + accountNumber + " ?",
                    buttons: [
                        'Yes',
                        'No'
                    ],
                    closeOnClickOutside: false,
                }).then(function (isConfirm) {
                    if (isConfirm) {
                        swal("Cancelled", "No change was made");
                    } else {

                        validation();
                    }
                });
                $('#confirmModal').modal('hide');

            } else {

                swal({
                    title: "Remove",
                    text: "Are you sure you want to Remove the Bank Statement Date From:  " + statementDateFrom + " To: " + statementDateTo +" for Account Number   " + accountNumber + " ?",
                    buttons: [
                        'Yes',
                        'No'
                    ],
                    closeOnClickOutside: false,
                }).then(function (isConfirm) {
                    if (isConfirm) {
                        swal("Cancelled", "No change was made");
                    } else {
                        validation();
                    }
                });
                $('#confirmModal').modal('hide');

            }
        }


        function validation() {
            debugger
            let accountNumber = $("#BankAccountNumber").val()
            let type = $("#RemoveType").val();
            let statementDate = $("#StatementDate").val();
            let statementDateFrom = $("#StatementDateFrom").val();
            let statementDateTo = $("#StatementDateTo").val();
            if (accountNumber == "") {
                swal({
                    icon: "warning",
                    title: "Please Select Account Number !",
                });
                return false;
            }
            if (type == "") {
                swal({
                    icon: "warning",
                    title: "Please Remove type is Required !",
                });

                return false;
            }

            if (type == "Partial" && statementDate == "") {

                swal({
                    icon: "warning",
                    title: "Please Statement Date is Required !",
                });

                return false;
            }
               if (type == "Full" && (statementDateFrom == "" || statementDateTo == "")) {

                    swal({
                        icon: "warning",
                        title: "Please Statement Date From or To is Required !",
                    });

                    return false;
               }


              RemoveStatement();
              
            };
        

        function RemoveStatement() {
            debugger
           var account= $("#BankAccountNumber").val();
           var removeType=$("#RemoveType").val();
            var statementDate = $("#StatementDate").val();
            let statementDateFrom = $("#StatementDateFrom").val();
            let statementDateTo = $("#StatementDateTo").val();
            if (removeType == "Full") {
                statementDate = statementDateFrom;
            }
            if (removeType == "Partial") {
                statementDateFrom = statementDate;
                statementDateTo = statementDate;
            }

                var url = '@Url.Action("RemoveStatement", "BankStatements")';
                $("#saveLoader").toggle(true);
                $.ajax({
                    type: "POST",
                    url: url,
                    data: { account: account, removeType: removeType, statementDate: statementDate, statementDateFrom: statementDateFrom, statementDateTo: statementDateTo },
                    success: function (response) {
                        if (response == "Success") {
                            swal("Removed Successfully!", { icon: "success" }).then((e) => {
                                $("#saveLoader").toggle(false);
                                window.location.reload();
                                @*window.location.href = '@Url.Action("BankstatementList", "BankStatements")';*@
                            });

                        
                        } else {
                            swal(response, { icon: "warning" }).then((e) => {
                                $("#saveLoader").toggle(false);
                                window.location.reload();
                                @*window.location.href = '@Url.Action("BankstatementList", "BankStatements")';*@
                            });
                        };
                    },
                    error: function (err) {
                        swal(err.statusText)
                        $("#saveLoader").toggle(false);
                    }
                });
            };
 

    
    </script>
}

