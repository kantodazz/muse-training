@model IFMIS.Areas.IFMISTZ.Models.UploadBankStatementVM
@{
    ViewBag.Title = "BankStatementAnalysis";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div style="padding:1em;padding-top:4em">
    <section id="widget-grid">
        <div class="row">
            <article class="col-sm-12 col-md-12 col-lg-12">
                <div class="jarviswidget " id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">
                    <header>
                        <span class="widget-icon"> <i class="fa fa-table"></i> </span>
                        <h2>Bank Statement Analysis</h2>
                    </header>

                    <div class="widget-body " style="padding-top:10px">
                        @using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data", id = "statementForm" }))
                        {
                            @Html.AntiForgeryToken()
                        <div class="form-horizontal">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="row" style="padding:12px">
                            </div>

                            <div class="row" style="padding:12px">
                                @Html.LabelFor(model => model.BankAccountNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    @Html.DropDownListFor(model => model.BankAccountNumber, Model.AccountNumberNameList, "Select Account Number", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.BankAccountNumber, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="row" style="padding:12px">
                                <label class="col-md-2 control-label">Statement Date From:</label>
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.StatementDateFrom, new { htmlAttributes = new { @class = "form-control", autocomplete = "off", @placeholder = "Select Statement Date", @required = "required" } })
                                    @Html.ValidationMessageFor(model => model.StatementDateFrom, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="row" style="padding:12px">
                                <label class="col-md-2 control-label">Statement Date To</label>
                                @*<div class="col-md-10">
                                    @Html.EditorFor(model => model.StatementDateTo, new { htmlAttributes = new { @class = "form-control", autocomplete = "off", @placeholder = "Select Statement Date", @required = "required" } })
                                    @Html.ValidationMessageFor(model => model.StatementDateTo, "", new { @class = "text-danger" })
                                </div>*@

                            
                            <div class="col-md-4">
                                <div class="flatpickr date-group">
                                    <input type="text" placeholder="Select Statement Date"
                                           data-input
                                           style="width:190px;height: 35px;border: none;"
                                           autocomplete="off" name="StatementDateTo" id="StatementDateTo">

                                    <a class="input-button" title="open" data-toggle href="#">
                                        <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                    </a>
                                </div>

                            </div>
                           </div>





                                <br />
                                <br />

                                <div class="form-actions">
                                    <div class="row">

                                        <div class="col-md-3">
                                            <a class="btn btn-info" href='@Url.Action("BankStatementAnalysisList", "BankStatements")' style="margin-right:5px">
                                                <i class="glyphicon glyphicon-arrow-left"></i>Back
                                            </a>
                                            <button type="button" class="btn btn-info" onclick="Analysed()" style="width:100px;  color:black">
                                                <span class="glyphicon glyphicon-upload" aria-hidden="true"></span>
                                                Analyse
                                                <img src="~/Content/img/loading.gif" id="saveLoader" />
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>

                        }
                    </div>
                    <!-- Start of div loader-->

                </div>
                <!-- End of div loader-->
            </article>
        </div>
    </section>
</div>

@section pagespecific{
    <script>

            var currentDate = new Date();
            $('#StatementDateT6o').datepicker({
                format: 'dd-mm-yyyy',
                autoclose: true,
                endDate: "currentDate",
                maxDate: currentDate
            }).on('changeDate', function (ev) {
                $(this).datepicker('hide');
            });

            $('#StatementDate6To').keyup(function () {
                if (this.value.match(/[^0-9]/g)) {
                    this.value = this.value.replace(/[^0-9^-]/g, '');
                }
            });
  


        $("#saveLoader").toggle(false);

        function Analysed() {
            let accountNumber = $("#BankAccountNumber").val()
            let dateFrom = $("#StatementDateFrom").val();
            let dateTo = $("#StatementDateTo").val();

                swal({
                    title: "Analyse",
                    text: "Are you sure you want to Analyse the Bank Statement Date From:  " + dateFrom + " To: " + dateTo + " for Account Number   " + accountNumber + " ?",
                    buttons: [
                        'Yes',
                        'No'
                    ],
                    closeOnClickOutside: false,
                }).then(function (isConfirm) {
                    if (isConfirm) {
                        swal("Cancelled", "No change was made");
                    } else {

                        validation();
                    }
                });
                $('#confirmModal').modal('hide');


        }


        function validation() {
            //debugger
            let accountNumber = $("#BankAccountNumber").val();
            let statementDateFrom = $("#StatementDateFrom").val();
            let statementDateTo = $("#StatementDateTo").val();

            if (accountNumber == "") {
                swal({
                    icon: "warning",
                    title: "Please Select Account Number !",
                });
                return false;
            }

            if (statementDateFrom == "") {

                swal({
                    icon: "warning",
                    title: "Please Statement Date From is Required !",
                });

                return false;
            }

            if (statementDateTo == "") {

                swal({
                    icon: "warning",
                    title: "Please Statement Date To is Required !",
                });

                return false;
            }
              AnalysedStatement();
            };


        function AnalysedStatement() {
            //debugger
            let account= $("#BankAccountNumber").val();
            let statementDateFrom = $("#StatementDateFrom").val();
            let statementDateTo = $("#StatementDateTo").val();

            var url = '@Url.Action("BankStatementAnalysis", "BankStatements")';

                $("#saveLoader").toggle(true);
                $.ajax({
                    type: "POST",
                    url: url,
                    data: { account: account, startDate: statementDateFrom, EndDate: statementDateTo },
                    success: function (response) {
                        if (response == "Success") {
                            swal("Analysed Successfully!", { icon: "success" }).then((e) => {
                                $("#saveLoader").toggle(false);
                                //window.location.reload();
                                window.location.href = '@Url.Action("BankStatementAnalysisList", "BankStatements")';
                            });


                        } else {
                            swal(response, { icon: "warning" }).then((e) => {
                                $("#saveLoader").toggle(false);
                               //window.location.reload();
                                window.location.href = '@Url.Action("BankStatementAnalysisList", "BankStatements")';
                            });
                        };
                    },
                    error: function (err) {
                        swal(err.statusText)
                        $("#saveLoader").toggle(false);
                    }
                });
            };



    </script>
}

