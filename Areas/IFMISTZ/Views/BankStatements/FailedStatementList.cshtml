@{
    ViewBag.Title = "Failed Bank Statement List";
}

<!-- MAIN CONTENT -->
<div id="content">

    <div class="row">
        @*<div class="col-xs-12 col-sm-9 col-md-9 col-lg-9">
                <h1 class="page-title txt-color-blueDark">

                    <!-- PAGE HEADER -->
                    <!--
                    <i class="fa-fw fa fa-pencil-square-o"></i>
                    Payments
                    <span>
                        >
                        Bills
                    </span>
                        -->
                </h1>
            </div>*@

        <div class="col-xs-12 col-sm-3 col-md-3 col-lg-3">
            <!-- Button trigger modal -->
            <!--<a data-toggle="modal" href="#myModal" class="btn btn-success btn-lg pull-right header-btn hidden-mobile"><i class="fa fa-circle-arrow-up fa-lg"></i> Launch form modal</a>-->
        </div>
    </div>

    <!--
    <div class="alert alert-block alert-success">
        <a class="close" data-dismiss="alert" href="#">×</a>
        <h4 class="alert-heading"><i class="fa fa-check-square-o"></i> Check validation!</h4>
        <p>
            You may also check the form validation by clicking on the form action button. Please try and see the results below!
        </p>
    </div>
        -->
    <!-- widget grid -->
    <section id="widget-grid" class="">


        <!-- START ROW -->

        <div class="row">

            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">

                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">
                    <!-- widget options:
                        usage: <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false">

                        data-widget-colorbutton="false"
                        data-widget-editbutton="false"
                        data-widget-togglebutton="false"
                        data-widget-deletebutton="false"
                        data-widget-fullscreenbutton="false"
                        data-widget-custombutton="false"
                        data-widget-collapsed="true"
                        data-widget-sortable="false"

                    -->
                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2>@ViewBag.Title</h2>

                    </header>

                    <!-- widget div-->
                    <div>

                        <!-- widget edit box -->
                        <div class="jarviswidget-editbox">
                            <!-- This area used as dropdown edit box -->

                        </div>
                        <!-- end widget edit box -->
                        <!-- widget content -->
                        <div class="widget-body">
                            <hr />
                            <table class="table table-striped table-bordered table-hover table-condensed" id="tblFailedBank" width="100%">

                                <thead>
                                    <tr>
                                        <th>#</th>
                                        <th>Account Number</th>
                                        <th>Account Name</th>
                                        <th>Statement Date</th>
                                        <th>Created At</th>
                                        @*<th>PrevClose Balance</th>*@
                                        <th>Opening Balance</th>
                                        @*<th>Opening Balance Discrepancy</th>*@
                                        @*<th>Total Debit</th>
                                            <th>Total Credit</th>*@
                                        <th>Closing Balance</th>
                                        @*<th>Expected Closing Balance</th>
                                            <th>Closing Balance Discrepancy</th>*@
                                        <th>OverallStatus</th>
                                        <th>OverallStatus Description</th>
                                        <th>Action</th>
                                    </tr>
                                </thead>

                                <tbody></tbody>

                            </table>
                        </div>
                        <!-- end widget content -->
                    </div>
                    <!-- end widget div -->

                </div>
                <!-- end widget -->

            </article>
            <!-- END COL -->

        </div>

        <!-- END ROW -->

    </section>
    <!-- end widget grid -->

</div>
<!-- END MAIN CONTENT -->
@section Scripts{

    <script>

        //$(function () {
        //    BindDataTable();
        //});

        $(document).ready(function () {
            BindDataTable();
        })



        var BindDataTable = function (response) {

            var url = '@Url.Action("GetFailedBankStatementList", "BankStatements")';

            $("#tblFailedBank").DataTable({

                "bServerSide": true,
                "sAjaxSource": url,
                "fnServerData": function (sSource, aoData, fnCallback) {
                    $.ajax({
                        type: "GET",
                        url: sSource,
                        data: aoData,
                        success: fnCallback
                    });
                },


                "aoColumns": [
                    {
                        render: function (data, type, row, meta) {
                            return meta.row + meta.settings._iDisplayStart + 1;
                        }
                    },
                    { "mData": "BankAccountNumber"},
                    { "mData": "BankAccountName" },

                    {
                        "mData": "StatementDate",
                        "render": function (data, type, row) {
                            var dt = data;
                            var dx = new Date(parseInt(dt.substr(6)));
                            var dd = ("0" + dx.getDate()).slice(-2);
                            var mm = ("0" + (dx.getMonth() + 1)).slice(-2);
                            var yy = dx.getFullYear();
                            var hh = ("0" + dx.getHours()).slice(-2);
                            var m = ("0" + dx.getMinutes()).slice(-2);
                            var ss = ("0" + dx.getSeconds()).slice(-2);
                            return dd + "-" + mm + "-" + yy;
                        }
                    },
                    {
                        "mData": "CreatedDateTime",
                        "render": function (data, type, row) {
                            var dt = data;
                            var dx = new Date(parseInt(dt.substr(6)));
                            var dd = ("0" + dx.getDate()).slice(-2);
                            var mm = ("0" + (dx.getMonth() + 1)).slice(-2);
                            var yy = dx.getFullYear();
                            var HH = ("0" + dx.getHours()).slice(-2);
                            var m = ("0" + dx.getMinutes()).slice(-2);
                            var ss = ("0" + dx.getSeconds()).slice(-2);
                            return dd + "-" + mm + "-" + yy + " " + HH + ":" + m +":"+ss;
                        }
                    },
                    {
                        data: 'OpeningBalance',
                        render: $.fn.dataTable.render.number(',', '.', 2),
                        className: "text-right"
                    },
             
                    {
                        data: 'ClosingBalance',
                        render: $.fn.dataTable.render.number(',', '.', 2),
                        className: "text-right"
                    },
                
                    { "mData": "OverallStatus" },
                    { "mData": "OverallStatusDescription" },

                    {
                        "mData": "AbnormalBankStatementSummaryId",
                        "bSortable": false,
                        "render": function (AbnormalBankStatementSummaryId, type, full, meta) {
                            return '<div class="btn-group">\
                            <button type="button" class="btn btn-info btn-xs">\
                              Action\
                                </button>\
                                <button type="button" class="btn btn-info btn-xs dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\
                                <span class="caret" ></span>\
                                <span class="sr-only">Toggle Dropdown</span>\
                                </button>\
                                <ul class="dropdown-menu">\
                                <li><a class="dropdown-item" href="@Url.Action("FailedBankStatementDetails", "Bankstatements")/' + AbnormalBankStatementSummaryId + '">Details</a><li>\
                            </ul>'
                        }
                    },
                ]
            });
        };

          function Request(i) {
           //debugger
            let accountNumber = data[i]["BankAccountNumber"];
            let statementDate = data[i]["StatementDateFormatted"];
            swal({
                title: "RequestBankStatement",
                text: "Are you sure you want to Request Bank Statement of Statement Date  " + statementDate + " for Account Number   " + accountNumber + " ?",
                buttons: [
                    'Yes',
                    'No'
                ],
                closeOnClickOutside: false,
            }).then(function (isConfirm) {
                if (isConfirm) {
                    swal("Cancelled", "No change was made");
                } else {

                    validation(i);
                }
            });
            $('#confirmModal').modal('hide');
          }


         function validation(i) {
            //debugger

            let accountNumber = data[i]["BankAccountNumber"];
            let statementDate = data[i]["StatementDateFormatted"];

            if (accountNumber == "") {
                swal({
                    icon: "warning",
                    title: "Please Select Account Number !",
                });
                return false;
            }


            if (statementDate == "") {

                swal({
                    icon: "warning",
                    title: "Please Statement Date is Required !",
                });

                return false;
            }
            //debugger
            RequestBankStatement(accountNumber, statementDate);
         };

          function RequestBankStatement(a,b) {
          //debugger

              let account = a;
              let statementDate = b;

              console.log(account, statementDate);

                var url = '@Url.Action("RequestBankStatement", "BankStatements")';
                $("#saveLoader").toggle(true);
                $.ajax({
                    type: "POST",
                    url: url,
                    data: { account: account,  statementDate: statementDate },
                    success: function (response) {
                        if (response == "Success") {
                            swal("Bank Statement Requested Successfully!", { icon: "success" }).then((e) => {
                                $("#saveLoader").toggle(false);
                                window.location.reload();

                            });


                        } else {
                            swal(response, { icon: "warning" }).then((e) => {
                                $("#saveLoader").toggle(false);
                                window.location.reload();

                            });
                        };
                    },
                    error: function (err) {
                        swal(err.statusText)
                        $("#saveLoader").toggle(false);
                    }
                });
          };


    </script>
}



