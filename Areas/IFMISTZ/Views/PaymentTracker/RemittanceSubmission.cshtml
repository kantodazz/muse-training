@model IEnumerable<IFMIS.Areas.IFMISTZ.Models.MeridianVoucherVM>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div id="content">

    <div class="row">


    </div>


    <!-- widget grid -->
    <section id="widget-grid" class="">


        <!-- START ROW -->

        <div class="row">

            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">

                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">

                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2>Debt List</h2>

                    </header>
                    <div>
                        <div class="widget-body">
                            <div class="nav-tabs-custom">
                                <ul class="nav nav-tabs">
                                    <li class="active"><a href="#tab_1" data-toggle="tab">Obligation</a></li>
                                    <li><a href="#tab_2" data-toggle="tab">Redemption</a></li>
                                </ul>
                                <hr />
                                <div class="tab-content">
                                    <div class="tab-pane active" id="tab_1">
                                        <hr class="simple" />
                                        @if (Model.Where(a => a.Payeename.Contains("OBLIGATION")).Count() > 0)
                                        {
                                            <table id="dt_basic" class="table table-striped table-bordered table-hover table-condensed" width="100%">
                                                <thead>
                                                    <tr style="background-color: #f5f5f5; color:black">
                                                        <th>#</th>
                                                        <th>Legal Number</th>
                                                        <th>Payee Name</th>
                                                        <th>Payee Bank Account</th>
                                                        <th>Payee Bank Name</th>
                                                        <th>Paying Account</th>
                                                        <th>Amount</th>
                                                        <th>MsgID</th>
                                                        <th>Voucher Status</th>
                                                        <th>Instruction Status</th>
                                                        <th>Instruction Status Desc</th>
                                                        <th></th>
                                                    </tr>
                                                </thead>
                                                @{
                                                    int i = 0;

                                                }
                                                @foreach (var item in Model.Where(a => a.OverallStatus == "SETTLED" && a.Payeename.Contains("OBLIGATION")))
                                                {
                                                    i++;
                                                    <tr>
                                                        <td>@i</td>
                                                        <td>
                                                            @Html.DisplayFor(modelItem => item.PVNo)
                                                        </td>
                                                        <td>
                                                            @Html.DisplayFor(modelItem => item.CreditorAccName)
                                                        </td>
                                                        <td>
                                                            @Html.DisplayFor(modelItem => item.CreditorAccNumber)
                                                        </td>
                                                        <td>
                                                            @Html.DisplayFor(modelItem => item.CreditorAccName)
                                                        </td>
                                                        <td>
                                                            @Html.DisplayFor(modelItem => item.PayerBankAccount)
                                                        </td>
                                                        <td>
                                                            @Html.DisplayFor(modelItem => item.OperationalAmount)
                                                        </td>
                                                        <td>
                                                            @Html.DisplayFor(modelItem => item.InstructionMsgId)  
                                                        </td>
                                                        <td>
                                                            @Html.DisplayFor(modelItem => item.OverallStatus)
                                                        </td>
                                                        <td>
                                                            @Html.DisplayFor(modelItem => item.InstructionStatus)
                                                        </td>
                                                        <td>
                                                            @Html.DisplayFor(modelItem => item.InstructionStatusDesc)
                                                        </td>
                                                        <td style="text-align: center">
                                                            <!-- Split button -->
                                                            <div class="btn-group">
                                                                @*<button type="button" class="btn btn-info btn-xs">Action</button>*@
                                                                <button type="button" class="btn btn-info btn-xs dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                                    <span class="caret"></span>
                                                                    <span class="sr-only">Toggle Dropdown</span>
                                                                </button>
                                                                <ul class="dropdown-menu">
                                                                    @*<li><a href="#" onclick="openViewDialog(@item.PaymentVoucherId)">View Details</a></li>*@
                                                                    <li><a href="@Url.Action("RemittanceSubmissionDetails","PaymentTracker",new { id = item.MeridianVoucherId })">Details</a></li>
                                                                    @if (item.InstructionStatus != "Sent to BOT" || item.InstructionStatus == "REJECTED" || item.InstructionStatus != "SETTLED")
                                                                    {
                                                                        <li><a href="#" onclick="attach(@item.PaymentVoucherId)">Attach Remmitance</a></li>
                                                                    }
                                                                    <li><a href="#" onclick="viewAttachment(@item.PaymentVoucherId)">View Attachment</a></li>

                                                                    @if (item.InstructionStatus != "Sent to BOT" || item.InstructionStatus == "REJECTED" || item.InstructionStatus != "SETTLED")
                                                                    {
                                                                        <li><a href="#" onclick="submit(@item.PaymentVoucherId)">Send to Bot</a></li>
                                                                    }

                                                                </ul>

                                                            </div>
                                                            <img src="~/Content/img/loading.gif" id="submitLoader + @item.PaymentVoucherId" class="loading-gif" style="visibility:hidden" />
                                                        </td>
                                                    </tr>
                                                }

                                            </table>
                                        }
                                        else
                                        {
                                            <div class="alert alert-info" role="alert">
                                                No Records!
                                            </div>
                                        }
                                    </div>
                                    <div class="tab-pane" id="tab_2">
                                        @Html.Partial("_RedemptionList")
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </article>
        </div>
    </section>
</div>

<div class="modal fade" id="confirmModal" style="left:4%">
    <div class="modal-dialog" style="width:80%;">
        <div class="modal-content panel-info">

            <div class="modal-header panel-heading">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h3 class="modal-title">Debt Details</h3>

            </div>
            <div class="modal-body">
                <div>
                    <div class="widget-body ">
                        <div class="payee-entry">
                            <div class="entry-label"></div>
                            <div style="padding-left:20px">
                                <div class="row">
                                    <div class="col-md-6">
                                        <table>
                                            <tr>
                                                <th>Creditor Account No: </th>
                                                <td id="CreditorAccNumber"></td>
                                            </tr>
                                            <tr>
                                                <th>Creditor Account Name:</th>
                                                <td id="CreditorAccName"></td>
                                            </tr>
                                            <tr>
                                                <th>Due Date:</th>
                                                <td id="DueDate"></td>
                                            </tr>
                                        </table>
                                    </div>
                                    <div class="col-md-6">
                                        <table>
                                            <tr>
                                                <th>Creditor BIC:</th>
                                                <td id="CreditorBIC"></td>
                                            </tr>
                                            <tr>
                                                <th>Swift Code:</th>
                                                <td id="SwiftCode"></td>
                                            </tr>
                                            <tr>
                                                <th>Reference No:</th>
                                                <td id="ReferenceNo"></td>
                                            </tr>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <br />
                        <table id="dt_voucher_detail" class="table table-striped table-bordered table-hover table-condensed table-view-details" width="100%"></table>
                        <table>
                            <tr>
                                <td><strong style="color:#2196F3">Remarks:</strong> <label id="reasonId">-</label></td>
                            </tr>
                        </table>
                    </div>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-info" data-dismiss="modal" style="width:100px;">
                        <i class="fa fa-times"></i>Close
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>
@section pagespecific {
    <!-- PAGE RELATED PLUGIN(S) -->

    <script type="text/javascript">


        $(document).ready(function () {
            /* // DOM Position key index //
     l - Length changing (dropdown)
     f - Filtering input (search)
     t - The Table! (datatable)
     i - Information (records)
     p - Pagination (paging)
     r - pRocessing
     < and > - div elements
     <"#id" and > - div with an id
     <"class" and > - div with a class
     <"#id.class" and > - div with an id and class
     Also see: http://legacy.datatables.net/usage/features
     */
            /* BASIC ;*/
            var responsiveHelper_dt_salaries = undefined;
            var responsiveHelper_datatable_fixed_column = undefined;
            var responsiveHelper_datatable_col_reorder = undefined;
            var responsiveHelper_datatable_tabletools = undefined;

            var breakpointDefinition = {
                tablet: 1024,
                phone: 480
            };

            var dt_search_change_account = $('#dt_salaries').dataTable({
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-12 hidden-xs'l>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_dt_salaries) {
                        responsiveHelper_dt_salaries = new ResponsiveDatatablesHelper($('#dt_salaries'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_dt_salaries.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_dt_salaries.respond();
                }
            });

            /* END BASIC */

            /* COLUMN FILTER  */
            var otable = $('#datatable_fixed_column').DataTable({
                //"bFilter": false,
                //"bInfo": false,
                //"bLengthChange": false
                //"bAutoWidth": false,
                //"bPaginate": false,
                //"bStateSave": true // saves sort state using localStorage
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6 hidden-xs'f><'col-sm-6 col-xs-12 hidden-xs'<'toolbar'>>r>" +
                        "t" +
                        "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_fixed_column) {
                        responsiveHelper_datatable_fixed_column = new ResponsiveDatatablesHelper($('#datatable_fixed_column'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_datatable_fixed_column.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_datatable_fixed_column.respond();
                }
            });

            // custom toolbar
            $("div.toolbar").html('<div class="text-right"><img src="/Content/img/logo.png" alt="SmartAdmin" style="width: 111px; margin-top: 3px; margin-right: 10px;"></div>');

            // Apply the filter
            $("#datatable_fixed_column thead th input[type=text]").on('keyup change', function () {
                otable
                    .column($(this).parent().index() + ':visible')
                    .search(this.value)
                    .draw();
            });
            /* END COLUMN FILTER */

            /* COLUMN SHOW - HIDE */
            $('#datatable_col_reorder').dataTable({
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'C>r>" +
                        "t" +
                        "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_col_reorder) {
                        responsiveHelper_datatable_col_reorder = new ResponsiveDatatablesHelper($('#datatable_col_reorder'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_datatable_col_reorder.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_datatable_col_reorder.respond();
                }
            });

            /* END COLUMN SHOW - HIDE */

            /* TABLETOOLS */
            $('#datatable_tabletools').dataTable({

                // Tabletools options:
                //   https://datatables.net/extensions/tabletools/button_options
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'T>r>" +
                        "t" +
                        "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
                "oTableTools": {
                    "aButtons": [
                    "copy",
                    "csv",
                    "xls",
                       {
                           "sExtends": "pdf",
                           "sTitle": "SmartAdmin_PDF",
                           "sPdfMessage": "SmartAdmin PDF Export",
                           "sPdfSize": "letter"
                       },
                       {
                           "sExtends": "print",
                           "sMessage": "Generated by SmartAdmin <i>(press Esc to close)</i>"
                       }
                    ],
                    "sSwfPath": "/Scripts/plugin/datatables/swf/copy_csv_xls_pdf.swf"
                },
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_tabletools) {
                        responsiveHelper_datatable_tabletools = new ResponsiveDatatablesHelper($('#datatable_tabletools'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_datatable_tabletools.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_datatable_tabletools.respond();
                }
            });
            /* END TABLETOOLS */


        });

        //SHOW LOADER ICON
        $(document).ajaxStart(function () {
            $(".loadingImg").show();

        });
        //HIDE LOADER ICON
        $(document).ajaxStop(function () {
            $(".loadingImg").hide();
        });

        var dt_voucher_detail = $('#dt_voucher_detail').dataTable({
            "sDom": 't',
            "autoWidth": true,
            "searching": false,
            "bPaginate": false,
            "info": false,
            "data": [],
            "columns": [
                { title: "Expenditure Line Item" },
                { title: "Base Amount" },
                { title: "Operational Amount" }
            ]
        });


        function attach(PaymentVoucherId) {
            window.location.href =
            /*      `${}` */
                '@Url.Action("AttachmentEntry", "PaymentVoucherAttachments")/?groupId=' + PaymentVoucherId + '&&sourceModule='+ 'Meridian'
        }

        function viewAttachment(PaymentVoucherId) {
           window.location.href =
               '@Url.Action("AttachmentView", "PaymentVoucherAttachments")/?groupId=' + PaymentVoucherId + '&&sourceModule='+'Meridian';
        }

         var submit = function (id) {
            swal({
                text: "Are you sure you want to submit?",
                buttons: [
                  "Yes",
                  "No"
                ],
                closeOnClickOutside: false,
            }).then(function (isConfirm) {
                if (!isConfirm) {
                   $("#submitLoader" + id + "").toggle(true)
                   var url = '@Url.Action("SendToBOTAsync", "MeridianVouchers")';
                    $.ajax({
                        type: "POST",
                        url: url,
                        data: { id: id },
                        success: function (response) {
                            $("#submitLoader" + id + "").toggle(false)
                            if (response == "Success") {
                                swal({
                                    text: "Submitted successfully!",
                                    icon: "success",
                                    button: "OK",
                                }).then(function () {
                                    location.reload();
                                });
                            }
                            else {
                                swal({
                                    text: response,
                                    icon: "error",
                                    button: "OK",
                                }).then(function () {
                                    location.reload();
                                });
                            }
                        },
                        error: function (response) {
                            swal({
                                text: response,
                                icon: "error",
                                button: "OK",
                            }).then(function () {
                                location.reload();
                            });
                        }
                    });
                }
            });
        }

        function openViewDialog(PaymentVoucherId) {
            globalPayeeId = PaymentVoucherId;

            $("#CreditorAccName").text("CreditorAccName");
            $("#CreditorAccNumber").text("CreditorAccNumber");
            $("#SwiftCode").text("SwiftCode");
            $("#CreditorBIC").text("CreditorBIC");
            $("#DueDate").text("DueDateFormatted");
            $("#ReferenceNo").text("ReferenceNo");

            dt_voucher_detail.fnClearTable();
            var totalBaseAmount = 0;
            var totalOpAmount = 0;
            var tableRows = []
            ["MeridianDetails"].forEach(row => {
                tableRows.push([
                    row["DrGlAccount"].split("|").join("-"),
                    `${data[i].BaseCurrency} ${toLabel(row["BaseAmount"])}`,
                    `${data[i].OperationalCurrency} ${toLabel(row["OperationalAmount"])}`,
                ])
                totalOpAmount = totalOpAmount + parseFloat(row["OperationalAmount"]);
                totalBaseAmount = totalBaseAmount + parseFloat(row["BaseAmount"]);
            });

            dt_voucher_detail.fnAddData([
                '<strong style="text-align: right">TOTAL</strong>',
                `<strong>${BaseCurrency} ${toLabel(totalBaseAmount)}</strong>`,
                `<strong>${OperationalCurrency} ${toLabel(totalOpAmount)}</strong>`]);

            tableRows.forEach(row => {
                dt_voucher_detail.fnAddData(row);
            })


            // $("#totalAmount").text(`${data[i].OperationalCurrency} ${toLabel(totalAmount)}`);

            $('#confirmModal').modal('show');

        }
    </script>
}
