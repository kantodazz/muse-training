@model IFMIS.Areas.IFMISTZ.Models.GfsCodeDataVm
@{
    ViewBag.Title = "Create Gfs Code";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .input[type="text"], select {
        border: 1px solid lightgray;
        width: 100%;
        height: 35px;
    }

    .textarea {
        border: 1px solid lightgray;
        width: 100%;
    }

    .input[type="text"]:focus {
        border: 1px solid lightblue;
    }

    th {
        text-align: left;
    }
</style>
<!-- widget grid -->
<div id="content" style="margin: 5px; padding-top: 50px">

    <section id="widget-grid" class="">
        <div class="row">

            <article class="col-sm-12 col-md-12 col-lg-12">

                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">
                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>

                        <h2 style="color:black;">Create GFS Code</h2>

                    </header>
                    <div>
                        <div class="widget-body" style="padding-top:10px; width:100%;">

                            <table style="width:100%;">
                                <tr>
                                    <td colspan="1">
                                        @using (Html.BeginForm(null, null, FormMethod.Post, new { @class = "form-horizontal" }))
                                        {
                                            <div class="form-horizontal">
                                                @Html.AntiForgeryToken()
                                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                                <div class="form-group">
                                                    <label class="col-md-2 control-label">Chapter:</label>
                                                    <div class="col-md-4">
                                                            @Html.DropDownList("ChapterId", ViewBag.Chapter as SelectList, "Select Chapter", new { @class = "form-control  select2", style = "width:300px", required = "required"})
                                                            @Html.ValidationMessageFor(model => model.ChapterId, "", new { @class = "text-danger", style = "width:370px;" })
                                                       </div>
                                                    <label class="col-md-2 control-label">SubChapter:</label>
                                                    <div class="col-md-3">
                                                            @Html.DropDownListFor(model => model.SubChapterId, new SelectList(""), "Select Sub Chapter", new { @class = "form-control  select2", style = "width:370px", required = "required" })
                                                            @Html.ValidationMessageFor(model => model.SubChapterId, "", new { @class = "text-danger", style = "width:370px;" })
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label class="col-md-2 control-label">Item Level One:</label>
                                                    <div class="col-md-4">
                                                            @Html.DropDownListFor(model => model.GfscodeItemId, new SelectList(""), "Select Item Level One", new { @class = "form-control  select2", style = "width:300px", required = "required" })
                                                            @Html.ValidationMessageFor(model => model.GfscodeItemId, "", new { @class = "text-danger", style = "width:300px;" })
                                                    </div>
                                                    <label class="col-md-2 control-label">Item Level Two:</label>
                                                    <div class="col-md-3">
                                                        @Html.DropDownListFor(model => model.ItemSetupLevel2Id, new SelectList(""), "Select Item Level Two", new { @class = "form-control  select2", style = "width:300px", required = "required" })
                                                        @Html.ValidationMessageFor(model => model.ItemSetupLevel2Id, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label class="col-md-2 control-label">Item Level Three:</label>
                                                    <div class="col-md-4">
                                                            @Html.DropDownListFor(model => model.ItemSetupLevel3Id, new SelectList(""), "Select Item", new { @class = "form-control  select2", style = "width:300px", required = "required" })
                                                            @Html.ValidationMessageFor(model => model.ItemSetupLevel3Id, "", new { @class = "text-danger", style = "width:300px;" })
                                                    </div>
                                                    <label class="col-md-2 control-label">Sub Item:</label>
                                                    <div class="col-md-3">
                                                            @Html.TextBoxFor(model => model.SubItemNo, new { @class = "input", style = "width:300px;", disabled = "disabled" })
                                                            @Html.ValidationMessageFor(model => model.SubItemNo, "", new { @class = "text-danger" })
                                                      </div>
                                                </div>
                                                <div class="form-group">
                                                    <label class="col-md-2 control-label">Gfs Code Name:</label>
                                                    <div class="col-md-4">
                                                            @Html.TextBoxFor(model => model.GfscodeName, new { @class = "input", style = "width:370px;", disabled = "disabled" })
                                                            @Html.ValidationMessageFor(model => model.GfscodeName, "", new { @class = "text-danger" })
                                                      </div>
                                               
                                                    <label class="col-md-2 control-label">Gfs Code Desc:</label>
                                                    <div class="col-md-3">
                                                            @Html.TextBoxFor(model => model.GfscodeDesc, new { @Class = "input", style = "width:300px;", required = "required" })
                                                            @Html.ValidationMessageFor(model => model.GfscodeDesc, "", new { @class = "text-danger" })
                                                      </div>
                                                </div> 
                                                
                                                <div class="form-group">
                                                    <label class="col-md-2 control-label">Note:</label>
                                                    <div class="col-md-9">
                                                        @Html.TextBoxFor(model => model.NoteNo, new { @Class = "input", style = "width:370px;", disabled = "disabled" })
                                                        @Html.ValidationMessageFor(model => model.NoteNo, "", new { @class = "text-danger" })
                                                       </div>
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <div class="col-md-12">
                                                    <div style="margin-left:50%">
                                                        <button type="button" class="btn action-btn btn btn-info" id="submit" onclick="addGfsCode()">
                                                            <i class="fa fa-save"></i>
                                                            <img src="~/Content/img/loading.gif" id="saveLoader" />
                                                            Save
                                                        </button>
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                    </td>
                                    <td colspan="1"></td>
                                </tr>
                            </table>

                        </div>
                        <table id="dt_basic" class="table table-condensed table-bordered">
                            <thead>
                                <tr>
                                    <th> No.</th>
                                    <th style="text-align:left"> Chapter Name</th>
                                    <th style="text-align:left"> Sub Chapter Name</th>
                                    <th style="text-align:left"> GfsCode</th>
                                    <th style="width:50px">Action</th>
                                </tr>
                            </thead>
                            @{ int i = 0;}
                            @foreach (var group in ((IEnumerable<IFMIS.Areas.IFMISTZ.Models.GfscodeSetup>)ViewBag.list).GroupBy(a => a.GfscodeSetupId))
                            {

                                <tbody>
                                    @foreach (var item in group)
                                    {
                                        i++;
                                        <tr>
                                            <td>@i</td>
                                            <td style="text-align:left">@item.Chapter.ChapterNo : @item.Chapter.ChapterName</td>
                                            <td style="text-align:left"> @item.SubChapter.SubChapterNo : @item.SubChapter.SubChapterName</td>
                                            <td style="text-align:left"> @item.GfscodeName : @item.GfscodeDesc</td>
                                            <td style="text-align:center; width:15%;">

                                                <div class="btn-group">
                                                    <button type="button" class="btn btn-info btn-xs dropdown-toggle" data-toggle="dropdown" style="width:40px;border-radius:1px;" aria-haspopup="true" aria-expanded="false">
                                                        <span class="caret"></span>
                                                        <span class="sr-only">Toggle Dropdown</span>
                                                    </button>
                                                    <ul class="dropdown-menu">
                                                        <li>
                                                            <a href="@Url.Action("GfsCodeSetupEdit", "GfscodeSetup",new {id=item.GfscodeSetupId })" class="btn-xs edit">
                                                                <i class="fa fa-edit"></i>  Edit
                                                            </a>
                                                        </li>
                                                        <li>
                                                            <a href="#" Onclick="Cancel(@item.GfscodeSetupId)" class="btn-xs edit">
                                                                <i class="fa fa-trash-o"></i>  Cancel
                                                            </a>
                                                        </li>

                                                    </ul>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            }
                        </table>
                        <br />
                        <br />
                    </div>
                </div>
            </article>
        </div>
    </section>
</div>

@section pagespecific {
    <script type="text/javascript">
        if ('@TempData["Success"]' == 'Success') {
            swal("Successfully Saved", { icon: 'success'})
        } else if ('@TempData["Success"]' == 'No') {
            swal("Already Created!!", { icon: 'warning'})
                .then(Ok => {
                    window.location.href = '@Url.Action("GfsCodeSetupCreate", "GfscodeSetup")';
                });
        } else if ('@TempData["Success"]' == 'Exist'){
            swal("Chapter Number Already in Used!!", { icon: 'warning' })
                .then(Ok => {
                    window.location.href = '@Url.Action("GfsCodeSetupCreate", "GfscodeSetup")';
                });
        };

        $("form").submit(function () {
            $("#saveLoader").toggle(true);
            $('#submit').attr("disabled", true);
        });

        $("#saveLoader").toggle(false);
        $("#submit").prop('disabled', false);


        $(document).ready(function () {

            var responsiveHelper_dt_basic = undefined;
            var responsiveHelper_datatable_fixed_column = undefined;
            var responsiveHelper_datatable_col_reorder = undefined;
            var responsiveHelper_datatable_tabletools = undefined;

            var breakpointDefinition = {
                tablet: 1024,
                phone: 480
            };
            $('#dt_basic').dataTable({
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-12 hidden-xs'l>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_dt_basic) {
                        responsiveHelper_dt_basic = new ResponsiveDatatablesHelper($('#dt_basic'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_dt_basic.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_dt_basic.respond();
                }
            });

            var otable = $('#datatable_fixed_column').DataTable({

                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6 hidden-xs'f><'col-sm-6 col-xs-12 hidden-xs'<'toolbar'>>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_fixed_column) {
                        responsiveHelper_datatable_fixed_column = new ResponsiveDatatablesHelper($('#datatable_fixed_column'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_datatable_fixed_column.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_datatable_fixed_column.respond();
                }

            });

            // custom toolbar
            $("div.toolbar").html('<div class="text-right"><img src="/Content/img/logo.png" alt="SmartAdmin" style="width: 111px; margin-top: 3px; margin-right: 10px;"></div>');
            $("#datatable_fixed_column thead th input[type=text]").on('keyup change', function () {

                otable
                    .column($(this).parent().index() + ':visible')
                    .search(this.value)
                    .draw();

            });
            $('#datatable_col_reorder').dataTable({
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'C>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_col_reorder) {
                        responsiveHelper_datatable_col_reorder = new ResponsiveDatatablesHelper($('#datatable_col_reorder'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_datatable_col_reorder.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_datatable_col_reorder.respond();
                }
            });

            $('#datatable_tabletools').dataTable({

                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'T>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
                "oTableTools": {
                    "aButtons": [
                        "copy",
                        "csv",
                        "xls",
                        {
                            "sExtends": "pdf",
                            "sTitle": "SmartAdmin_PDF",
                            "sPdfMessage": "SmartAdmin PDF Export",
                            "sPdfSize": "letter"
                        },
                        {
                            "sExtends": "print",
                            "sMessage": "Generated by SmartAdmin <i>(press Esc to close)</i>"
                        }
                    ],
                    "sSwfPath": "/Scripts/plugin/datatables/swf/copy_csv_xls_pdf.swf"
                },
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_tabletools) {
                        responsiveHelper_datatable_tabletools = new ResponsiveDatatablesHelper($('#datatable_tabletools'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_datatable_tabletools.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_datatable_tabletools.respond();
                }
            });

            /* END TABLETOOLS */

        })


        $("#ChapterId").change(function () {
            debugger;
            $("#saveLoader").toggle(true);
            var chapter = $(this).val();
            ///var url = "GetSubChapterByChapter/?chapter=" + chapter;

             var url = '@Url.Action("GetSubChapterByChapter", "GfscodeSetup")';
                     url += '?chapter=' + chapter;

            $.ajax({
                type: "POST",
                url: url,
                contentType: "html",
                success: function (response) {
                    $("#saveLoader").toggle(false);
                    $("#SubChapterId").empty();
                    $("#SubChapterId").append(response);
                },
                complete: function () {
                    $("#divLoader").hide();
                }
            })
        });

        $("#SubChapterId").change(function () {
            debugger;
            $("#saveLoader").toggle(true);
            var subChapter = $(this).val();
            var chapter = $("#ChapterId").val();

             var url = '@Url.Action("GetItemByChapter", "GfscodeSetup")';
                     url += '?chapter=' + chapter + '&subChapter=' + subChapter;

            $.ajax({
                type: "POST",
                url: url,
                contentType: "html",
                success: function (response) {
                    $("#saveLoader").toggle(false);
                    $("#GfscodeItemId").empty();
                    $("#GfscodeItemId").append(response);
                },
                complete: function () {
                    $("#divLoader").hide();
                }
            })
        });

        $("#GfscodeItemId").change(function () {
            debugger;
            $("#saveLoader").toggle(true);
            var gfscodeItem = $(this).val();

             var url = '@Url.Action("GetItemLevel2", "GfscodeSetup")';
                 url += '?itemLevelId='  + gfscodeItem;

            $.ajax({
                type: "POST",
                url: url,
                contentType: "html",
                success: function (response) {
                    $("#saveLoader").toggle(false);
                    $("#ItemSetupLevel2Id").empty();
                    $("#ItemSetupLevel2Id").append(response);
                },
                complete: function () {
                    $("#divLoader").hide();
                }
            })
        });

        $("#ItemSetupLevel2Id").change(function () {
            debugger;
            $("#saveLoader").toggle(true);
            var itemLevel2 = $(this).val();

             var url = '@Url.Action("GetItemLevel3", "GfscodeSetup")';
                url += '?itemLevel2Id=' + itemLevel2;

            $.ajax({
                type: "POST",
                url: url,
                contentType: "html",
                success: function (response) {
                    $("#saveLoader").toggle(false);
                    $("#ItemSetupLevel3Id").empty();
                    $("#ItemSetupLevel3Id").append(response);
                },
                complete: function () {
                    $("#divLoader").hide();
                }
            })
        });

        $("#ItemSetupLevel3Id").change(function () {
            debugger;
            $("#saveLoader").toggle(true);
            var chapter = $("#ChapterId").val();
            var subchapter = $("#SubChapterId").val();
            var itemLevel1 = $("#GfscodeItemId").val();
            var itemLevel2 = $("#ItemSetupLevel2Id").val();
            var itemLevel3 = $(this).val();

            $("#submit").attr('disabled', false);
             var url = '@Url.Action("GetSubItemNextNumber", "GfscodeSetup")';
            url += '?chapter=' + chapter + '&subChapter=' + subchapter + '&item1=' + itemLevel1 + '&item2=' + itemLevel2 + '&item3=' + itemLevel3;

            $.ajax({
                type: "POST",
                url: url,
                contentType: "html",
                success: function (response) {
                    $("#saveLoader").toggle(false);
                    $("#submit").attr('disabled', false);
                    if (response[4] == "Success") {
                        console.log('respItem', response);
                        $("#SubItemNo").val(response[0]);
                        $("#GfscodeName").val(response[1]);
                        $("#NoteNo").val(response[2]);
                    } else if (response[4] == "Failed") {
                        swal("You have exceed the limit of GfsCode " + response[0], { icon: "warning" });
                        return false;
                    } else {
                        swal("No GFS Code related to the information you Provide", { icon: "error" });
                        return false;
                    }
                    
                },
                complete: function () {
                    $("#divLoader").hide();
                }
            })
        });



        function Cancel(i) {
            status = "Cancelled";
            swal({
                title: "Are you sure?",
                text: "Gfs Code will be Cancelled!",
                buttons: [
                    'No',
                    'Yes'
                ],
            }).then(function (isConfirm) {
                if (isConfirm) {
                    ChangeItemStatus(i);

                } else {
                    swal("Cancelled", "No change was made");
                }
            });
        }

         function ChangeItemStatus(i) {
                var url = '@Url.Action("GfsCodeSetupRemove", "GfscodeSetup")';
                $.ajax({
                    type: "post",
                    url: url,
                    data: {
                        Id: i
                    },
                    contenttype: "application/json; charset=utf-8",
                    datatype: "json",
                    success: function (response) {

                        if (response == "Success") {
                            swal("Changed Successfully!", { icon: "success" })
                                .then((value) => {
                                    window.location.reload();
                                });
                        }
                        else {
                            swal(response);
                        }

                    },
                    failure: function (error) {
                        swal(error);
                    }
                });
        }

        function addGfsCode() {

            var chapterId = $("#ChapterId").val();
            var subChapterId = $("#SubChapterId").val();
            var gfscodeItemId = $("#GfscodeItemId").val();
            var itemSetupLevel2Id = $("#ItemSetupLevel2Id").val();
            var itemSetupLevel3Id = $("#ItemSetupLevel3Id").val();
            var subItemNo = $("#SubItemNo").val();
            var gfscodeName = $("#GfscodeName").val();
            var gfscodeDesc = $("#GfscodeDesc").val();
            var noteNo = $("#NoteNo").val();

            if (chapterId == "" || chapterId == null) {
                swal("Please Select Chapter", { icon: "warning" });
                return false;
            } if (subChapterId == "" || subChapterId == null) {
                swal("Please Select Sub Chapter", { icon: "warning" });
                return false;
            } if (gfscodeItemId == "" || gfscodeItemId == null) {
                swal("Please Select Item Level One", { icon: "warning" });
                return false;
            } if (itemSetupLevel2Id == "" || itemSetupLevel2Id == null) {
                swal("Please Select Item Level Two", { icon: "warning" });
                return false;
            } if (itemSetupLevel3Id == "" || itemSetupLevel3Id == null) {
                swal("Please Select Item Level Three", { icon: "warning" });
                return false;
            } if (gfscodeDesc == "" || gfscodeDesc == null) {
                swal("Please provide Gfs Code Description", { icon: "warning" });
                return false;
            }
            if (noteNo == "N/A") {
                swal("Please, Make sure Your GFSCode is in Range", { icon: "warning" });
                return false;
            }

            var token = $("[name='__RequestVerificationToken']").val();
            var formData = new FormData();
            formData.append("__RequestVerificationToken", token);
            formData.append("ChapterId", chapterId);
            formData.append("SubChapterId", subChapterId);
            formData.append("GfscodeItemId", gfscodeItemId);
            formData.append("ItemSetupLevel2Id", itemSetupLevel2Id);
            formData.append("ItemSetupLevel3Id", itemSetupLevel3Id);
            formData.append("SubItemNo", subItemNo);
            formData.append("GfscodeName", gfscodeName);
            formData.append("GfscodeDesc", gfscodeDesc);
            formData.append("NoteNo", noteNo);

            for (var value of formData.values()) {
                console.log('Data', value);
            }


            $("#submit").attr('disabled', false);
            var url = '@Url.Action("GfsCodeSetupCreate", "GfscodeSetup")';

            $("#divLoader").show();
            $.ajax({
                type: "POST",
                url: url,
                data: formData,
                dataType: "json",
                contentType: false,
                processData: false,
                success: function (response) {
                    $("#submit").attr('disabled', true);
                    $("#divLoader").hide()
                    if (response == "Success") {
                        swal({
                            text: "Gfs Code Save Successfully!",
                            icon: "success",
                            button: "OK",
                            customClass: {
                                container: 'my-swal',
                            }
                        }).then(function () {
                            window.location.reload();
                        });
                    }
                    else if (response == "Duplicate Record") {
                        swal({
                            text: "Dublicate Record Found.",
                            icon: "warning",
                            customClass: {
                                container: 'my-swal'
                            }
                        });
                        return false;
                    } else if (response == "Duplicate Name") {
                        swal({
                            text: "Gfs Code Description Already Created",
                            icon: "warning",
                            customClass: {
                                container: 'my-swal'
                            }
                        });
                        return false;
                    }
                    else {
                         swal({
                            text: response,
                            icon: "warning",
                            customClass: {
                                container: 'my-swal'
                            }
                        });
                    }
                },
                error: function (xhr) {
                    console.log('errorResp', xhr.responseText)
                    $("#divLoader").hide()
                    swal({
                        text: 'Error Please try again',
                        icon: "error",
                        customClass: {
                            container: 'my-swal'
                        }
                    });
                }
            });
        }
    </script>
}
