@model IFMIS.Areas.IFMISTZ.Models.GfscodeSetup
@{
    ViewBag.Title = "Edit Gfs Code";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .input[type="text"], select {
        border: 1px solid lightgray;
        width: 100%;
        height: 35px;
    }

    .textarea {
        border: 1px solid lightgray;
        width: 100%;
    }

    .input[type="text"]:focus {
        border: 1px solid lightblue;
    }

    th {
        text-align: left;
    }
</style>
<!-- widget grid -->
<div id="content" style="margin: 5px; padding-top: 50px">

    <section id="widget-grid" class="">
        <div class="row">

            <article class="col-sm-12 col-md-12 col-lg-12">

                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">
                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2 style="color:black;">Edit GFS Code</h2>
                    </header>
                    <div>
                        <div class="widget-body" style="padding-top:10px; width:100%;">

                            <table style="width:100%;">
                                <tr>
                                    <td colspan="1">
                                        @using (Html.BeginForm(null, null, FormMethod.Post, new { @class = "form-horizontal" }))
                                        {
                                            <div class="form-horizontal">
                                                @Html.AntiForgeryToken()
                                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                                @Html.HiddenFor(model => model.GfscodeSetupId)
                                                <div class="form-group">
                                                    <label class="col-md-2 control-label">Chapter:</label>
                                                    <div class="col-md-4">
                                                        @Html.DropDownList("ChapterId", null, htmlAttributes: new { @class = "form-control  select2", style = "width:300px", required = "required" })
                                                        @Html.ValidationMessageFor(model => model.ChapterId, "", new { @class = "text-danger", style = "width:370px;" })
                                                    </div>
                                                    <label class="col-md-2 control-label">SubChapter:</label>
                                                    <div class="col-md-3">
                                                        @Html.DropDownList("SubChapterId", null, htmlAttributes: new { @class = "form-control  select2", style = "width:370px", required = "required" })
                                                        @Html.ValidationMessageFor(model => model.SubChapterId, "", new { @class = "text-danger", style = "width:370px;" })
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label class="col-md-2 control-label">Item Level One:</label>
                                                    <div class="col-md-4">
                                                        @Html.DropDownList("GfsCodeItemId", null, htmlAttributes: new { @class = "form-control  select2", style = "width:300px", required = "required" })
                                                        @Html.ValidationMessageFor(model => model.GfsCodeItemId, "", new { @class = "text-danger", style = "width:300px;" })
                                                    </div>
                                                    <label class="col-md-2 control-label">Item Level Two:</label>
                                                    <div class="col-md-3">
                                                        @Html.DropDownList("ItemSetupLevel2Id", null, htmlAttributes: new { @class = "form-control  select2", style = "width:300px", required = "required" })
                                                        @Html.ValidationMessageFor(model => model.ItemSetupLevel2Id, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label class="col-md-2 control-label">Item Level Three:</label>
                                                    <div class="col-md-4">
                                                        @Html.DropDownList("ItemSetupLevel3Id", null, htmlAttributes: new { @class = "form-control  select2", style = "width:300px", required = "required" })
                                                        @Html.ValidationMessageFor(model => model.ItemSetupLevel3Id, "", new { @class = "text-danger", style = "width:300px;" })
                                                    </div>
                                                    <label class="col-md-2 control-label">Sub Item:</label>
                                                    <div class="col-md-3">
                                                        @Html.TextBoxFor(model => model.SubItemNo, new { @class = "input", style = "width:300px;", disabled = "disabled" })
                                                        @Html.ValidationMessageFor(model => model.SubItemNo, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label class="col-md-2 control-label">Gfs Code Name:</label>
                                                    <div class="col-md-4">
                                                        @Html.TextBoxFor(model => model.GfscodeName, new { @class = "input", style = "width:370px;", disabled = "disabled" })
                                                        @Html.ValidationMessageFor(model => model.GfscodeName, "", new { @class = "text-danger" })
                                                    </div>

                                                    <label class="col-md-2 control-label">Gfs Code Desc:</label>
                                                    <div class="col-md-3">
                                                        @Html.TextBoxFor(model => model.GfscodeDesc, new { @Class = "input", style = "width:300px;", required = "required" })
                                                        @Html.ValidationMessageFor(model => model.GfscodeDesc, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    <label class="col-md-2 control-label">Note:</label>
                                                    <div class="col-md-4">
                                                        @Html.TextBoxFor(model => model.NoteNo, new { @Class = "input", style = "width:370px;", disabled = "disabled" })
                                                        @Html.ValidationMessageFor(model => model.NoteNo, "", new { @class = "text-danger" })
                                                    </div>
                                                    <label class="col-md-2 control-label">Assignment Status:</label>
                                                    <div class="col-md-3">
                                                        @Html.DropDownList("AssignmentStatus", new SelectList(new List<SelectListItem>
                                                           {
                                                               new SelectListItem { Text = "Assigned", Value = "Assigned"},
                                                               new SelectListItem { Text = "Not Assigned", Value = "Not Assigned"}
                                                           }, "Value", "Text"), "Select Assignment Status", new { @class = "form-control  select2" })
                                                        @Html.ValidationMessageFor(model => model.AssignmentStatus, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <div class="col-md-12">
                                                    <div style="margin-left:50%">
                                                        <a href='@Url.Action("GfsCodeSetupCreate", "GfscodeSetup")' class="btn btn-info" style="   width:80px;border-radius:1px;color:black">
                                                            <i class="glyphicon glyphicon-arrow-left"></i>
                                                            Back
                                                        </a>
                                                        <button type="button" class="btn action-btn btn btn-info" id="submit" onclick="updateGfsCode()">
                                                            <i class="fa fa-save"></i>
                                                            <img src="~/Content/img/loading.gif" id="saveLoader" />
                                                            Update
                                                        </button>
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                    </td>
                                    <td colspan="1"></td>
                                </tr>
                            </table>

                        </div>
                       
                    </div>
                </div>
            </article>
        </div>
    </section>
</div>

@section pagespecific {
    <script type="text/javascript">


        $("#saveLoader").toggle(false);
        $("#submit").prop('disabled', false);

        $("#ChapterId").change(function () {
            debugger;
            $("#saveLoader").toggle(true);
            var chapter = $(this).val();
             var url = '@Url.Action("GetSubChapterByChapter", "GfscodeSetup")';
                     url += '?chapter=' + chapter;

            $.ajax({
                type: "POST",
                url: url,
                contentType: "html",
                success: function (response) {
                    $("#saveLoader").toggle(false);
                    $("#SubChapterId").empty();
                    $("#SubChapterId").append(response);
                    $('#SubChapterId').val("");
                    $('#SubChapterId').change();

                    $("#GfsCodeItemId").empty();
                    $('#GfsCodeItemId').val("");
                    $('#GfsCodeItemId').change();

                    $("#ItemSetupLevel2Id").empty();
                    $('#ItemSetupLevel2Id').val("");
                    $('#ItemSetupLevel2Id').change();

                    $("#ItemSetupLevel3Id").empty();
                    $('#ItemSetupLevel3Id').val("");
                    $('#ItemSetupLevel3Id').change();

                    $('#SubItemNo').val("");
                    $('#GfscodeName').val("");
                    $('#NoteNo').val("");

                },
                complete: function () {
                    $("#divLoader").hide();
                }
            })
        });


         $("#SubChapterId").change(function () {
            debugger;
             $("#divLoader").toggle(true);
             $("#saveLoader").toggle(true);
            var subChapter = $(this).val();
            var chapter = $("#ChapterId").val();

             var url = '@Url.Action("GetItemByChapter", "GfscodeSetup")';
                     url += '?chapter=' + chapter + '&subChapter=' + subChapter;

            $.ajax({
                type: "POST",
                url: url,
                contentType: "html",
                success: function (response) {
                    $("#saveLoader").toggle(false);
                    console.log("item1", response);
                    $("#GfsCodeItemId").empty();
                    $("#GfsCodeItemId").append(response);

                    //$('#ItemSetupLevel2Id').val("");
                    //$('#ItemSetupLevel2Id').change();
                    //$('#ItemSetupLevel3Id').val("");
                    //$('#ItemSetupLevel3Id').change();
                },
                complete: function () {
                    $("#divLoader").hide();
                }
            })
         });

        $("#GfsCodeItemId").change(function () {
            debugger;
            $("#divLoader").toggle(true);
            $("#saveLoader").toggle(true);
            var gfscodeItem = $(this).val();

             var url = '@Url.Action("GetItemLevel2", "GfscodeSetup")';
                 url += '?itemLevelId='  + gfscodeItem;

            $.ajax({
                type: "POST",
                url: url,
                contentType: "html",
                success: function (response) {
                    $("#saveLoader").toggle(false);
                    $("#ItemSetupLevel2Id").empty();
                    $("#ItemSetupLevel2Id").append(response);
                },
                complete: function () {
                    $("#divLoader").hide();
                }
            })
        });


        $("#ItemSetupLevel2Id").change(function () {
            debugger;
            $("#divLoader").toggle(true);
            $("#saveLoader").toggle(true);
            var itemLevel2 = $(this).val();

             var url = '@Url.Action("GetItemLevel3", "GfscodeSetup")';
                url += '?itemLevel2Id=' + itemLevel2;

            $.ajax({
                type: "POST",
                url: url,
                contentType: "html",
                success: function (response) {
                    $("#saveLoader").toggle(false);
                    $("#ItemSetupLevel3Id").empty();
                    $("#ItemSetupLevel3Id").append(response);
                },
                complete: function () {
                    $("#divLoader").hide();
                }
            })
        });

        $("#ItemSetupLevel3Id").change(function () {
            debugger;
            $("#divLoader").toggle(true);
            var chapter = $("#ChapterId").val();
            var subchapter = $("#SubChapterId").val();
            var itemLevel1 = $("#GfsCodeItemId").val();
            var itemLevel2 = $("#ItemSetupLevel2Id").val();
            var itemLevel3 = $(this).val();
            $("#saveLoader").toggle(true);
            $("#submit").attr('disabled', false);
             var url = '@Url.Action("GetSubItemNextNumber", "GfscodeSetup")';
            url += '?chapter=' + chapter + '&subChapter=' + subchapter + '&item1=' + itemLevel1 + '&item2=' + itemLevel2 + '&item3=' + itemLevel3;

            $.ajax({
                type: "POST",
                url: url,
                contentType: "html",
                success: function (response) {
                    $("#saveLoader").toggle(false);
                    if (response[4] == "Success") {
                        console.log('respItem', response);
                        $("#SubItemNo").val(response[0]);
                        $("#GfscodeName").val(response[1]);
                        $("#NoteNo").val(response[2]);
                    } else if (response[4] == "Failed") {
                        swal("You have exceed the limit of GfsCode " + response[0], { icon: "warning" });
                        return false;
                    } else {
                        swal("No GFS Code related to the information you Provide", { icon: "error" });
                        return false;
                    }

                },
                complete: function () {
                    $("#divLoader").hide();
                }
            })
        });

        function updateGfsCode() {

            debugger;
            var gfscodeSetupId = $("#GfscodeSetupId").val();
            var chapterId = $("#ChapterId").val();
            var subChapterId = $("#SubChapterId").val();
            var gfscodeItemId = $("#GfsCodeItemId").val();
            var itemSetupLevel2Id = $("#ItemSetupLevel2Id").val();
            var itemSetupLevel3Id = $("#ItemSetupLevel3Id").val();
            var subItemNo = $("#SubItemNo").val();
            var gfscodeName = $("#GfscodeName").val();
            var gfscodeDesc = $("#GfscodeDesc").val();
            var noteNo = $("#NoteNo").val();

            if (chapterId == "" || chapterId == null) {
                swal("Please Select Chapter", { icon: "warning" });
                return false;
            } if (subChapterId == "" || subChapterId == null) {
                swal("Please Select Sub Chapter", { icon: "warning" });
                return false;
            } if (gfscodeItemId == "" || gfscodeItemId == null) {
                swal("Please Select Item Level One", { icon: "warning" });
                return false;
            } if (itemSetupLevel2Id == "" || itemSetupLevel2Id == null) {
                swal("Please Select Item Level Two", { icon: "warning" });
                return false;
            } if (itemSetupLevel3Id == "" || itemSetupLevel3Id == null) {
                swal("Please Select Item Level Three", { icon: "warning" });
                return false;
            } if (gfscodeDesc == "" || gfscodeDesc == null) {
                swal("Please provide Gfs Code Description", { icon: "warning" });
                return false;
            }
            if (noteNo == "N/A") {
                swal("Please, Make sure Your GFSCode is in Range", { icon: "warning" });
                return false;
            }

            var token = $("[name='__RequestVerificationToken']").val();
            var formData = new FormData();
            formData.append("__RequestVerificationToken", token);
            formData.append("GfscodeSetupId", gfscodeSetupId);
            formData.append("ChapterId", chapterId);
            formData.append("SubChapterId", subChapterId);
            formData.append("GfscodeItemId", gfscodeItemId);
            formData.append("ItemSetupLevel2Id", itemSetupLevel2Id);
            formData.append("ItemSetupLevel3Id", itemSetupLevel3Id);
            formData.append("SubItemNo", subItemNo);
            formData.append("GfscodeName", gfscodeName);
            formData.append("GfscodeDesc", gfscodeDesc);
            formData.append("NoteNo", noteNo);

            for (var value of formData.values()) {
                console.log('Data', value);
            }

            $("#saveLoader").toggle(true);
            $("#saveLoader").attr('disabled', false);
            var url = '@Url.Action("GfsCodeSetupUpdate", "GfscodeSetup")';

            $("#divLoader").show();
            $.ajax({
                type: "POST",
                url: url,
                data: formData,
                dataType: "json",
                contentType: false,
                processData: false,
                success: function (response) {
                    $("#saveLoader").toggle(false);
                    $("#saveLoader").attr('disabled', true);
                    $("#divLoader").hide()
                    if (response == "Success") {
                        swal({
                            text: "Gfs Code Update Successfully!",
                            icon: "success",
                            button: "OK",
                            customClass: {
                                container: 'my-swal',
                            }
                        }).then(function () {
                            window.location.reload();
                        });
                    }
                    else if (response == "Duplicate Record") {
                         swal({
                            text: "Dublicate Record Found.",
                            icon: "warning",
                            customClass: {
                                container: 'my-swal'
                            }
                        });
                        return false;
                    }else if (response == "Duplicate Name") {
                          swal({
                            text: "Gfs Code Description Already Created",
                            icon: "warning",
                            customClass: {
                                container: 'my-swal'
                            }
                        });
                        return false;
                    }
                    else {
                          swal({
                            text: response,
                            icon: "warning",
                            customClass: {
                                container: 'my-swal'
                            }
                        });
                    }
                },
                error: function (xhr) {
                    console.log('errorResp', xhr.responseText)
                    $("#divLoader").hide()
                    swal({
                        text: 'Error Please try again',
                        icon: "error",
                        customClass: {
                            container: 'my-swal'
                        }
                    });
                }
            });
        }
    </script>
}
