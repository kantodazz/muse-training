@model IFMIS.Areas.IFMISTZ.Models.BatchDetailsViewModel
@{
    ViewBag.Title = "Batch Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .input[type="text"], select {
        border: 1px solid lightgray;
        width: 100%;
        height: 35px;
    }

    .textarea {
        border: 1px solid lightgray;
        width: 100%;
    }

    .input[type="text"]:focus {
        border: 1px solid lightblue;
    }

    th {
        text-align: left;
    }

    .action-buttons {
        margin-bottom: 20px;
    }
</style>
<!-- widget grid -->
<div id="content" style="margin: 5px; padding-top: 50px">

    <section id="widget-grid" class="">
        <div class="row">

            <article class="col-sm-12 col-md-12 col-lg-12">
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">
                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2 style="color:black;">Batch Request Details - @Model.Summary.BatchRefNo</h2>
                    </header>
                    <div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label>Batch Reference:</label>
                                    <span>@Model.Summary.BatchRefNo</span>
                                </div>
                                <div class="form-group">
                                    <label>Total GFS Codes:</label>
                                    <span>@Model.Summary.TotalNoGfsCodeReq</span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label>Status:</label>
                                    <span class="badge @(Model.Summary.Overallstatus == "Approved" ? "badge-success" : Model.Summary.Overallstatus == "Rejected" ? "badge-danger" : Model.Summary.Overallstatus == "Split" ? "badge-warning" : "badge-secondary")">
                                        @Model.Summary.Overallstatus
                                    </span>
                                </div>
                                <div class="form-group">
                                    <label>Created By:</label>
                                    <span>@Model.Summary.CreatedBy</span>
                                </div>
                                <div class="form-group">
                                    <label>Created Date:</label>
                                    <span>@Model.Summary.CreatedAt.ToString("dd-MM-yyyy")</span>
                                </div>
                            </div>
                        </div>

                        <hr />

                        <!-- Action Buttons for Batch Processing -->
                        <div class="action-buttons">
                            <div class="row">
                                <div class="col-md-6">
                                    @if (Model.Summary.Overallstatus == "Requested" || Model.Summary.Overallstatus =="Pending")
                                    {
                                        <button id="approveAllBtn" class="btn btn-success">
                                            <i class="fa fa-check-circle"></i> Approve All
                                        </button>
                                        <button id="rejectAllBtn" class="btn btn-danger">
                                            <i class="fa fa-times-circle"></i> Reject All
                                        </button>
                                    }
                                    else
                                    {
                                        <button id="resubmitAllBtn" class="btn btn-success">
                                            <i class="fa fa-check-circle"></i> Resubmit All
                                        </button>
                                    }
                                </div>
                                <div class="col-md-6 text-right">
                                    <button id="processSelectedBtn" class="btn btn-primary">
                                        <i class="fa fa-cogs"></i> Process Selected
                                    </button>
                                </div>
                            </div>
                        </div>

                        <table class="table table-striped table-bordered">
                            <thead>
                                <tr>
                                    <th style="width: 20px;"><input type="checkbox" id="checkAll" /></th>
                                    <th>ID</th>
                                    <th>Name</th>
                                    <th>Description</th>
                                    <th>Status</th>
                                    <th>Created By</th>
                                    <th>Created Date</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @{ int i = 0;}
                                @foreach (var detail in Model.Details)
                                {
                                    i++;
                                    <tr>
                                        <td><input type="checkbox" class="rowCheckbox" value="@detail.BatchDetailId" /></td>
                                        <td>@i</td>
                                        <td>@detail.GfsCodeName</td>
                                        <td>@detail.GfsCodeDesc</td>
                                        <td>
                                            @if (detail.GfsCodeStatus == "Approved")
                                            {
                                                <span class="badge badge-success">@detail.GfsCodeStatus</span>
                                            }
                                            else if (detail.GfsCodeStatus == "Rejected")
                                            {
                                                <span class="badge badge-danger">@detail.GfsCodeStatus</span>
                                            }
                                            else
                                            {
                                                <span class="badge badge-secondary">@detail.GfsCodeStatus</span>
                                            }
                                        </td>
                                        <td>@detail.CreatedBy</td>
                                        <td>@detail.CreatedAt.ToString("dd-MM-yyyy")</td>
                                        <td>
                                            <div class="btn-group">
                                                @if (detail.GfsCodeStatus == "Approved")
                                                {
                                                    <button class="btn btn-xs btn-info viewBtn" data-id="@detail.BatchDetailId">
                                                        <i class="fa fa-eye"></i>
                                                    </button>
                                                }
                                                else if (detail.GfsCodeStatus == "Pending" || detail.GfsCodeStatus == "Resubmitted")
                                                {
                                                    <button class="btn btn-xs btn-success approveBtn" data-id="@detail.BatchDetailId" data-name="@detail.GfsCodeName">
                                                        <i class="fa fa-check"></i>
                                                    </button> 
                                                    <button class="btn btn-xs btn-danger rejectBtn" data-id="@detail.BatchDetailId" data-name="@detail.GfsCodeName">
                                                        <i class="fa fa-times"></i>
                                                    </button>
                                                }
                                                else
                                                {
                                                    <button class="btn btn-xs btn-success resubmitBtn" data-id="@detail.BatchDetailId" data-name="@detail.GfsCodeName">
                                                        <i class="fa fa-paper-plane"></i>
                                                    </button>
                                                }


                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>

                        <div class="row">
                            <div class="col-md-12">
                                @if (Model.Summary.Overallstatus == "Requested")
                                {
                                    <a href="@Url.Action("GfsCodePendingRequest", "GfscodeSetup")" class="btn btn-default">
                                        <i class="fa fa-arrow-left"></i> Back to List
                                    </a>
                                }
                                else if (Model.Summary.Overallstatus == "Rejected")
                                {
                                    <a href="@Url.Action("GfsCodeProcessedRequest", "GfscodeSetup")" class="btn btn-default">
                                        <i class="fa fa-arrow-left"></i> Back to List
                                    </a>
                                }

                                <a href="@Url.Action("GfsCodeConversionHistory", new { batchSummaryId = Model.Summary.BatchSummaryId })" class="btn btn-info">
                                    <i class="fa fa-history"></i> View Conversion History
                                </a>
                            </div>
                        </div>
                        <br />
                    </div>
                </div>
            </article>
        </div>
    </section>
</div>

<!-- Modal for approval/rejection comments -->
<div class="modal fade" id="commentModal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="modalTitle">Add Comment</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <input type="hidden" id="modalItemId" />
                <input type="hidden" id="modalAction" />
                <div class="form-group">
                    <label for="comment">Comment:</label>
                    <textarea id="comment" class="form-control" rows="4"></textarea>
                </div>
                <div id="modalItemList" class="alert alert-info d-none">
                    <p><strong>Items to be processed:</strong></p>
                    <ul id="itemListContainer"></ul>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="submitComment">Submit</button>
            </div>
        </div>
    </div>
</div>

@section pagespecific {
    <script type="text/javascript">
        $(document).ready(function () {
            var responsiveHelper_dt_basic = undefined;
            var breakpointDefinition = {
                tablet: 1024,
                phone: 480
            };

            $('.table').dataTable({
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-12 hidden-xs'l>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                "autoWidth": true,
                "preDrawCallback": function () {
                    if (!responsiveHelper_dt_basic) {
                        responsiveHelper_dt_basic = new ResponsiveDatatablesHelper($('.table'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_dt_basic.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_dt_basic.respond();
                }
            });

            // Check/uncheck all checkboxes
            $("#checkAll").on("click", function() {
                $(".rowCheckbox").prop("checked", $(this).prop("checked"));
            });

            // Update checkAll state when individual rows are checked/unchecked
            $(document).on("change", ".rowCheckbox", function() {
                if ($(".rowCheckbox:checked").length == $(".rowCheckbox").length) {
                    $("#checkAll").prop("checked", true);
                } else {
                    $("#checkAll").prop("checked", false);
                }
            });

            // Individual item resubmit
            $(".resubmitBtn").on("click", function() {
                var id = $(this).data("id");
                var name = $(this).data("name");

                $("#modalTitle").text("Resubmit GFS Code");
                $("#modalItemId").val(id);
                $("#modalAction").val("resubmit");
                $("#modalItemList").addClass("d-none");
                $("#comment").val("");
                $("#commentModal").modal("show");
            });

            // Individual item approval
            $(".approveBtn").on("click", function() {
                var id = $(this).data("id");
                var name = $(this).data("name");

                $("#modalTitle").text("Approve GFS Code");
                $("#modalItemId").val(id);
                $("#modalAction").val("approve");
                $("#modalItemList").addClass("d-none");
                $("#comment").val("");
                $("#commentModal").modal("show");
            });

            // Individual item rejection
            $(".rejectBtn").on("click", function() {
                var id = $(this).data("id");
                var name = $(this).data("name");

                $("#modalTitle").text("Reject GFS Code");
                $("#modalItemId").val(id);
                $("#modalAction").val("reject");
                $("#modalItemList").addClass("d-none");
                $("#comment").val("");
                $("#commentModal").modal("show");
            });

            // Resubmit all items
            $("#resubmitAllBtn").on("click", function() {
                var allIds = [];
                $(".rowCheckbox").each(function() {
                    allIds.push($(this).val());
                });

                $("#modalTitle").text("Resubmit All GFS Codes");
                $("#modalAction").val("resubmitAll");
                $("#modalItemList").addClass("d-none");
                $("#comment").val("");
                $("#commentModal").modal("show");
            });

            // Approve all items
            $("#approveAllBtn").on("click", function() {
                var allIds = [];
                $(".rowCheckbox").each(function() {
                    allIds.push($(this).val());
                });

                $("#modalTitle").text("Approve All GFS Codes");
                $("#modalAction").val("approveAll");
                $("#modalItemList").addClass("d-none");
                $("#comment").val("");
                $("#commentModal").modal("show");
            });

            // Reject all items
            $("#rejectAllBtn").on("click", function() {
                var allIds = [];
                $(".rowCheckbox").each(function() {
                    allIds.push($(this).val());
                });

                $("#modalTitle").text("Reject All GFS Codes");
                $("#modalAction").val("rejectAll");
                $("#modalItemList").addClass("d-none");
                $("#comment").val("");
                $("#commentModal").modal("show");
            });

            // Process selected items
            $("#processSelectedBtn").on("click", function() {
                var selectedIds = [];
                var selectedNames = [];

                $(".rowCheckbox:checked").each(function() {
                    var id = $(this).val();
                    selectedIds.push(id);
                    var name = $(this).closest("tr").find("td:eq(2)").text();
                    selectedNames.push(name);
                });

                if (selectedIds.length === 0) {
                    swal("No Items Selected", "Please select at least one GFS code to process.", "warning");
                    return;
                }

                // Populate the item list in the modal
                $("#itemListContainer").empty();
                for (var i = 0; i < selectedNames.length; i++) {
                    $("#itemListContainer").append("<li>" + selectedNames[i] + "</li>");
                }

                $("#modalTitle").text("Process Selected GFS Codes");
                $("#modalAction").val("processSelected");
                $("#modalItemList").removeClass("d-none");
                $("#comment").val("");
                $("#commentModal").modal("show");
            });

            // Comment submission
            $("#submitComment").on("click", function () {
                debugger;
                var action = $("#modalAction").val();
                var comment = $("#comment").val();
                var batchSummaryId = @Model.Summary.BatchSummaryId;

                // Check if comment is provided for rejections
                if ((action === "reject" || action === "rejectAll" || action==="resubmit" || action ==="resubmitAll") && comment.trim() === "") {
                    swal("Comment Required", "Please provide a reason for rejection.", "warning");
                    return;
                }

                var data = {
                    batchSummaryId: batchSummaryId,
                    comment: comment
                };

                var url;

                // Set up the appropriate action URL and data
                if (action === "approve") {
                    url = '@Url.Action("ApproveItem", "GfscodeSetup")';
                    data.itemId = $("#modalItemId").val();
                }
                else if (action === "reject") {
                    url = '@Url.Action("RejectItem", "GfscodeSetup")';
                    data.itemId = $("#modalItemId").val();
                }
                else if (action === "resubmit") {
                    url = '@Url.Action("ResubmitItem", "GfscodeSetup")';
                    data.itemId = $("#modalItemId").val();
                }
                else if (action === "approveAll") {
                    url = '@Url.Action("ApproveAllItems", "GfscodeSetup")';
                }
                else if (action === "resubmitAll") {
                    url = '@Url.Action("ResubmitAllItems", "GfscodeSetup")';
                }
                else if (action === "rejectAll") {
                    url = '@Url.Action("RejectAllItems", "GfscodeSetup")';
                }
                else if (action === "processSelected") {
                    url = '@Url.Action("ProcessSelectedItems", "GfscodeSetup")';

                    // Get all selected IDs
                    var approvedIds = [];
                    var rejectedIds = [];
                    var resubmitedIds = [];

                    // Prompt user for which items to approve/reject
                    swal({
                        title: "Process Items",
                        text: "Do you want to approve or reject the selected items?",
                        icon: "warning",
                        buttons: {
                            approve: {
                                text: "Approve All Selected",
                                value: "approve",
                            },
                            reject: {
                                text: "Reject All Selected",
                                value: "reject",
                            },
                            split: {
                                text: "Split Approval (Advanced)",
                                value: "split",
                            },
                            cancel: "Cancel",
                        },
                    })
                    .then((value) => {
                        if (value === "approve") {
                            // Approve all selected
                            $(".rowCheckbox:checked").each(function () {
                                approvedIds.push($(this).val());
                            });

                            $.ajax({
                                url: '@Url.Action("ProcessBatchItems", "GfscodeSetup")',
                                type: 'POST',
                                data: {
                                    batchSummaryId: batchSummaryId,
                                    approvedIds: approvedIds,
                                    rejectedIds: null,
                                    resubmitedIds: null,
                                    comments: comment
                                },
                                traditional: true,
                                success: function (response) {
                                    if (response.success) {
                                        swal("Success", "Items have been processed successfully.", "success")
                                            .then(() => {
                                                location.reload();
                                            });
                                    } else {
                                        swal("Error", response.message, "error");
                                    }
                                },
                                error: function () {
                                    swal("Error", "An error occurred during processing.", "error");
                                }
                            });
                        }
                        else if (value === "reject") {
                            // Reject all selected
                            $(".rowCheckbox:checked").each(function () {
                                rejectedIds.push($(this).val());
                            });

                            $.ajax({
                                url: '@Url.Action("ProcessBatchItems", "GfscodeSetup")',
                                type: 'POST',
                                data: {
                                    batchSummaryId: batchSummaryId,
                                    approvedIds: null,
                                    rejectedIds: rejectedIds,
                                    resubmitedIds: null,
                                    comments: comment
                                },
                                traditional: true,
                                success: function (response) {
                                    if (response.success) {
                                        swal("Success", "Items have been processed successfully.", "success")
                                            .then(() => {
                                                location.reload();
                                            });
                                    } else {
                                        swal("Error", response.message, "error");
                                    }
                                },
                                error: function () {
                                    swal("Error", "An error occurred during processing.", "error");
                                }
                            });
                        }
                        else if (value === "split") {
                            // Go to split approval screen
                            var selectedIds = [];
                            $(".rowCheckbox:checked").each(function () {
                                selectedIds.push($(this).val());
                            });

                            // Redirect to split approval page
                            window.location.href = '@Url.Action("SplitApproval", "GfscodeSetup")' +
                                '?batchSummaryId=' + batchSummaryId +
                                '&selectedIds=' + selectedIds.join(',');
                        }
                        else if (value === "submit") {
                            // Submit selected
                            $(".rowCheckbox:checked").each(function () {
                                submitedIds.push($(this).val());
                            });

                            $.ajax({
                                url: '@Url.Action("ProcessBatchItems", "GfscodeSetup")',
                                type: 'POST',
                                data: {
                                    batchSummaryId: batchSummaryId,
                                    approvedIds: null,
                                    rejectedIds: null,
                                    resubmitedIds: submitedIds,
                                    comments: comment
                                },
                                traditional: true,
                                success: function (response) {
                                    if (response.success) {
                                        swal("Success", "Items have been processed successfully.", "success")
                                            .then(() => {
                                                location.reload();
                                            });
                                    } else {
                                        swal("Error", response.message, "error");
                                    }
                                },
                                error: function () {
                                    swal("Error", "An error occurred during processing.", "error");
                                }
                            });
                        }
                    });

                    // Close the modal since we're handling the processing in the SweetAlert
                    $("#commentModal").modal("hide");
                    return;
                }

                // Send the request to the server
                $.ajax({
                    url: url,
                    type: 'POST',
                    data: data,
                    success: function(response) {
                        if (response.success) {
                            swal("Success", "Operation completed successfully.", "success")
                                .then(() => {
                                    if (response.message == 1) {
                                         window.location.href = '@Url.Action("GfsCodeProcessedRequest", "GfscodeSetup")';
                                    }
                                    else if (response.message == 2) {
                                        window.location.href = '@Url.Action("GfsCodePendingRequest", "GfscodeSetup")';
                                    }
                                    
                                    else {
                                        location.reload();
                                    }
                            });
                        } else {
                            swal("Error", response.message, "error");
                        }
                    },
                    error: function() {
                        swal("Error", "An error occurred during the operation.", "error");
                    }
                });

                $("#commentModal").modal("hide");
            });
        });
    </script>
}