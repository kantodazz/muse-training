@model IFMIS.Areas.IFMISTZ.Models.StageViewModel
@{
    ViewBag.Title = "Approved Items";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .input[type="text"], select {
        border: 1px solid lightgray;
        width: 100%;
        height: 35px;
    }

    .textarea {
        border: 1px solid lightgray;
        width: 100%;
    }

    .input[type="text"]:focus {
        border: 1px solid lightblue;
    }

    th {
        text-align: left;
    }
</style>
<!-- widget grid -->
<div id="content" style="margin: 5px; padding-top: 50px">

    <section id="widget-grid" class="">
        <div class="row">

            <article class="col-sm-12 col-md-12 col-lg-12">
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">
                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2 style="color:black;">Approved Items - @Model.BatchSummary.BatchRefNo</h2>
                        <div class="badge badge-pill badge-success">@Model.TotalCount Items</div>
                    </header>
                    <div>
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <strong>Batch Reference:</strong> @Model.BatchSummary.BatchRefNo
                            </div>
                            <div class="col-md-6">
                                <strong>Created By:</strong> @Model.BatchSummary.CreatedBy
                            </div>
                        </div>

                        <table class="table table-striped table-bordered">
                            <thead>
                                <tr>
                                    <th>GFS Code</th>
                                    <th>Name</th>
                                    <th>Description</th>
                                    <th>Status</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.BatchDetails)
                                {
                                <tr>
                                    <td>@item.GfsCodeId</td>
                                    <td>@item.GfsCodeName</td>
                                    <td>@item.GfsCodeDesc</td>
                                    <td><span class="badge badge-success">@item.GfsCodeStatus</span></td>
                                    <td>
                                        <button class="btn btn-sm btn-primary" data-toggle="modal" data-target="#viewDetail@(item.BatchDetailId)">
                                            View Details
                                        </button>
                                    </td>
                                </tr>
                                }
                            </tbody>
                        </table>

                        <div class="mt-3">
                            <a href="@Url.Action("GfsCodeBatchDetails", "GfscodeSetup")" class="btn btn-secondary">Back to List</a>
                            <button id="processApproved" class="btn btn-success">Process Approved Items</button>
                        </div>
                    </div>
                </div>
            </article>
        </div>
    </section>
</div>

@foreach (var item in Model.BatchDetails)
{
    <!-- Detail Modal for each item -->
<div class="modal fade" id="viewDetail@(item.BatchDetailId)" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">GFS Code Details</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <dl class="row">
                    <dt class="col-sm-4">GFS Code ID:</dt>
                    <dd class="col-sm-8">@item.GfsCodeId</dd>

                    <dt class="col-sm-4">Name:</dt>
                    <dd class="col-sm-8">@item.GfsCodeName</dd>

                    <dt class="col-sm-4">Description:</dt>
                    <dd class="col-sm-8">@item.GfsCodeDesc</dd>

                    <dt class="col-sm-4">Status:</dt>
                    <dd class="col-sm-8">@item.GfsCodeStatus</dd>

                    <dt class="col-sm-4">Created By:</dt>
                    <dd class="col-sm-8">@item.CreatedBy</dd>

                    <dt class="col-sm-4">Created Date:</dt>
                    <dd class="col-sm-8">@item.CreatedAt.ToString("yyyy-MM-dd HH:mm")</dd>
                </dl>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
}

@section pagespecific {
    <script type="text/javascript">
        $(document).ready(function () {
            var responsiveHelper_dt_basic = undefined;
            var breakpointDefinition = {
                tablet: 1024,
                phone: 480
            };

            $('.table').dataTable({
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-12 hidden-xs'l>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                "autoWidth": true,
                "preDrawCallback": function () {
                    if (!responsiveHelper_dt_basic) {
                        responsiveHelper_dt_basic = new ResponsiveDatatablesHelper($('.table'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_dt_basic.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_dt_basic.respond();
                }
            });

            $("#processApproved").on("click", function () {
                // Implementation for processing approved items
                swal({
                    title: "Process Approved Items",
                    text: "Are you sure you want to process these approved items?",
                    icon: "warning",
                    buttons: true,
                    dangerMode: false,
                })
                    .then((willProcess) => {
                        if (willProcess) {
                            // Add AJAX call to process items
                            swal("Processing complete!", {
                                icon: "success",
                            });
                        }
                    });
            });
        });
    </script>
}