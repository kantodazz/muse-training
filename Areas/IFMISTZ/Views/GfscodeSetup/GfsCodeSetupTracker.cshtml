@model IFMIS.Areas.IFMISTZ.Models.GfsCodeDataVm
@{
    ViewBag.Title = "Create Gfs Code";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .input[type="text"], select {
        border: 1px solid lightgray;
        width: 100%;
        height: 35px;
    }

    .textarea {
        border: 1px solid lightgray;
        width: 100%;
    }

    .input[type="text"]:focus {
        border: 1px solid lightblue;
    }

    th {
        text-align: left;
    }
</style>
<!-- widget grid -->
<div id="content" style="margin: 5px; padding-top: 50px">

    <section id="widget-grid" class="">
        <div class="row">

            <article class="col-sm-12 col-md-12 col-lg-12">
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">
                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2 style="color:black;">Tracker GFS Code</h2>
                    </header>
                    <div>
                        <div class="widget-body">
                            <div class="panel-body">
                                <form name="trackForm" id="trackForm" class="form-horizontal">
                                    @Html.AntiForgeryToken()
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                    <div class="form-group">
                                        <div class="col-md-3">
                                            @Html.LabelFor(model => model.GfscodeName, htmlAttributes: new { @class = "control-label required" })
                                            @Html.EditorFor(model => model.GfscodeName, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.OverallStatus, "", new { @class = "text-danger" })
                                        </div>

                                        <div class="col-md-4">
                                            @Html.LabelFor(model => model.GfscodeDesc, htmlAttributes: new { @class = "control-label" })
                                            <div class="input-group">
                                                <input type="text" class="form-control" name="GfscodeDesc" placeholder="Search for...">
                                                <span class="input-group-btn">
                                                    <button class="btn btn-default" type="button" onclick="trackProforma()">Search</button>
                                                </span>
                                            </div>
                                            @Html.ValidationMessageFor(model => model.GfscodeDesc, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </form>
                            </div>

                            <hr />
                            <div id="searchResults" style="margin-top: 20px; display: none"> </div>
                        </div>
                    </div>


                </div>
            </article>
        </div>
    </section>
</div>

@section pagespecific {
    <script type="text/javascript">

        var trackProforma = function () {

           var url = '@Url.Action("GetGfscodeByStatus", "GfsCodeSetup")';
           var model = $("#trackForm").serialize();

           $.ajax({
               type: "get",
               url: url,
               data: model,
               success: function (response) {
                   $("#searchResults").show();
                   $("#searchResults").html(response);
               }
           });
        }

    </script>
}
