@model IFMIS.Areas.IFMISTZ.Models.ActivityNoteItemVM
@{
    ViewBag.Title = "Create Gfs Code Item";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .input[type="text"], select {
        border: 1px solid lightgray;
        width: 100%;
        height: 35px;
    }

    .textarea {
        border: 1px solid lightgray;
        width: 100%;
    }

    .input[type="text"]:focus {
        border: 1px solid lightblue;
    }

    th {
        text-align: left;
    }
    #myTab2 {
        height: 42px;
    }

</style>
<!-- widget grid -->
<div id="content" style="margin: 5px; padding-top: 50px">

    <section id="widget-grid" class="">
        <div class="row">

            <article class="col-sm-12 col-md-12 col-lg-12">

                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">
                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2 style="color:black;">Create GFS Code Items</h2>

                    </header>
                    <div>
                        <div id="exTab2" class="container" style="padding-top:10px; width:100%;">
                             <ul class="nav nav-tabs bordered">
                                 <li class="active">
                                     <a href="#sP1" data-toggle="tab" aria-expanded="false">
                                         Item Level One
                                         <span class="badge bg-color-blue txt-color-white"></span>
                                     </a>
                                 </li>
                                 <li>
                                     <a href="#sP2" data-toggle="tab" aria-expanded="false">
                                         Item Level Two
                                         <span class="badge bg-color-blue txt-color-white"></span>
                                     </a>
                                 </li>
                                 <li>
                                     <a href="#sP3" data-toggle="tab" aria-expanded="false">
                                         Item Level Three
                                         <span class="badge bg-color-blue txt-color-white"></span>
                                     </a>
                                 </li>
                               
                             </ul>
                            <div class="tab-content padding-10">
                                <div class="tab-pane fade active in" id="sP1">
                                    <div class="row">
                                        <div class="col-md-12">
                                            <table style="width:100%;">
                                                <tr>
                                                    <td colspan="1">
                                                        @using (Html.BeginForm(null, null, FormMethod.Post, new { @class = "form-horizontal" }))
                                                        {
                                                            <div class="form-horizontal">
                                                                @Html.AntiForgeryToken()
                                                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                                                <div class="form-group">
                                                                    <label class="col-md-2 control-label">Chapter:</label>
                                                                    <div class="col-md-4">
                                                                        @Html.DropDownList("ChapterId", ViewBag.Chapter as SelectList, "Select Chapter", new { @class = "form-control  select2",  required = "required" })
                                                                        @Html.ValidationMessageFor(model => model.ChapterId, "", new { @class = "text-danger", style = "width:300px;" })
                                                                    </div>
                                                                    <label class="col-md-2 control-label">SubChapter:</label>
                                                                    <div class="col-md-3">
                                                                        @Html.DropDownListFor(model => model.SubChapterId, new SelectList(""), "Select Sub Chapter", new { @class = "form-control  select2", style = "width:300px;",  required = "required" })
                                                                        @Html.ValidationMessageFor(model => model.SubChapterId, "", new { @class = "text-danger", style = "width:315px;" })
                                                                    </div>
                                                                </div>
                                                                <div class="form-group">
                                                                    <label class="col-md-2 control-label">Item Name:</label>
                                                                    <div class="col-md-4">
                                                                        @Html.TextBoxFor(model => model.itemName, new { @class = "input", style = "width:360px;padding:10px", required = "required" })
                                                                        @Html.ValidationMessageFor(model => model.itemName, "", new { @class = "text-danger" })
                                                                    </div>
                                                                    <label class="col-md-2 control-label">Item No:</label>
                                                                    <div class="col-md-4">
                                                                        <div class="input-group">
                                                                            <span class="input-group-addon itemPrex"><strong> 00 </strong></span>
                                                                            @Html.TextBoxFor(model => model.ItemNo, new { @class = "input", style = "width:230px;", required = "required" })
                                                                            @Html.ValidationMessageFor(model => model.ItemNo, "", new { @class = "text-danger" })
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <div class="form-group">
                                                                <div class="col-md-12">
                                                                    <div style="margin-left:50%">
                                                                        <button type="submit" class="btn action-btn btn btn-info" id="submit">
                                                                            <i class="fa fa-save"></i>
                                                                            <img src="~/Content/img/loading.gif" id="saveLoader" />
                                                                            Save
                                                                        </button>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        }
                                                    </td>
                                                    <td colspan="1"></td>
                                                </tr>
                                            </table>
                                            <table id="dt_basic" class="table table-condensed table-bordered">
                                                <thead>
                                                    <tr>
                                                        <th> No.</th>
                                                        <th style="text-align:left"> Chapter Name</th>
                                                        <th style="text-align:left"> Sub Chapter Name</th>
                                                        <th style="text-align:left"> Item Name</th>
                                                        <th style="text-align:left"> Combinated Code</th>
                                                        <th style="width:50px">Action</th>
                                                    </tr>
                                                </thead>
                                                @{ int i = 0;}
                                                @foreach (var group in ((IEnumerable<IFMIS.Areas.IFMISTZ.Models.GfsCodeItems>)ViewBag.list).GroupBy(a => a.GfsCodeItemId))
                                                {

                                                    <tbody>
                                                        @foreach (var item in group)
                                                        {
                                                            i++;
                                                            <tr>
                                                                <td>@i</td>
                                                                <td style="text-align:left">@item.Chapter.ChapterNo : @item.Chapter.ChapterName</td>
                                                                <td style="text-align:left">@item.SubChapter.SubChapterNo: @item.SubChapter.SubChapterName</td>
                                                                <td style="text-align:left">@item.ItemNo : @item.itemName</td>
                                                                <td style="text-align:left"> @item.CombinedCode</td>
                                                                <td style="text-align:center; width:15%;">

                                                                    <div class="btn-group">
                                                                        <button type="button" class="btn btn-info btn-xs dropdown-toggle" data-toggle="dropdown" style="width:40px;border-radius:1px;" aria-haspopup="true" aria-expanded="false">
                                                                            <span class="caret"></span>
                                                                            <span class="sr-only">Toggle Dropdown</span>
                                                                        </button>
                                                                        <ul class="dropdown-menu">
                                                                            <li>
                                                                                <a href="@Url.Action("ItemSetupEdit", "GfscodeSetup",new {id=item.GfsCodeItemId })" class="btn-xs edit">
                                                                                    <i class="fa fa-edit"></i>  Edit
                                                                                </a>
                                                                            </li>
                                                                            <li>
                                                                                <a href="#" Onclick="Cancel(@item.GfsCodeItemId)" class="btn-xs edit">
                                                                                    <i class="fa fa-trash-o"></i>  Cancel
                                                                                </a>
                                                                            </li>

                                                                        </ul>
                                                                    </div>
                                                                </td>
                                                            </tr>
                                                        }
                                                    </tbody>
                                                }
                                            </table>
                                        </div>
                                    </div>
                                </div>
                                <div class="tab-pane fade" id="sP2">
                                    <div class="row">
                                        <div class="col-md-12">
                                            <table style="width:100%;">
                                                <tr>
                                                    <td colspan="1">
                                                        @using (Html.BeginForm(null, null, FormMethod.Post, new { @class = "form-horizontal", id = "ItemLevel2" }))
                                                        {
                                                            <div class="form-horizontal">
                                                                @Html.AntiForgeryToken()
                                                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                                                <div class="form-group">
                                                                    <label class="col-md-2 control-label">Item Level One:</label>
                                                                    <div class="col-md-9">
                                                                        @Html.DropDownList("GfsCodeItemId", ViewBag.gfsCodeItem as SelectList, "Select Item Level One", new { @class = "form-control  select2", required = "required" })
                                                                        @Html.ValidationMessageFor(model => model.GfsCodeItemId, "", new { @class = "text-danger", style = "width:300px;" })
                                                                    </div>

                                                                </div>
                                                                <div class="form-group">
                                                                    <label class="col-md-2 control-label">Item Level Two Name:</label>
                                                                    <div class="col-md-4">
                                                                        @Html.TextBoxFor(model => model.ItemLevel2Name, new { @class = "input", style = "width:360px;", required = "required" })
                                                                        @Html.ValidationMessageFor(model => model.ItemLevel2Name, "", new { @class = "text-danger" })
                                                                    </div>
                                                                    <label class="col-md-2 control-label">Item Level Two No:</label>
                                                                    <div class="col-md-4">
                                                                        <div class="input-group">
                                                                            <span class="input-group-addon itemLevel1Prex"><strong> 00 </strong></span>
                                                                            @Html.TextBoxFor(model => model.ItemLevel2No, new { @class = "input", style = "width:230px;", required = "required" })
                                                                            @Html.ValidationMessageFor(model => model.ItemLevel2No, "", new { @class = "text-danger" })
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <div class="form-group">
                                                                <div class="col-md-12">
                                                                    <div style="margin-left:50%">
                                                                        <button type="button" class="btn action-btn btn btn-info" id="submitLevel2" onclick="addItemLevel2()">
                                                                            <i class="fa fa-save"></i>
                                                                            <img src="~/Content/img/loading.gif" id="saveLoaderl2" />
                                                                            Save
                                                                        </button>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        }
                                                    </td>
                                                    <td colspan="1"></td>
                                                </tr>
                                            </table>
                                            <table id="dt_basicLevel2" class="table table-condensed table-bordered">
                                                <thead>
                                                    <tr>
                                                        <th> No.</th>
                                                        <th style="text-align:left"> Item Level One Name</th>
                                                        <th style="text-align:left"> Item Level Two Name</th>
                                                        <th style="text-align:left"> Combined Code</th>
                                                        <th style="width:50px">Action</th>
                                                    </tr>
                                                </thead>
                                                @{ int z = 0;}
                                                @foreach (var group in ((IEnumerable<IFMIS.Areas.IFMISTZ.Models.ItemSetupLevel2>)ViewBag.ItemLevel2List).GroupBy(a => a.ItemSetupLevel2Id))
                                                {

                                                    <tbody>
                                                        @foreach (var item in group)
                                                        {
                                                            z++;
                                                            <tr>
                                                                <td>@z</td>
                                                                <td style="text-align:left"> @item.ItemLevel1Code:@item.ItemLevel1Name</td>
                                                                <td style="text-align:left"> @item.ItemLevel2No  : @item.ItemLevel2Name</td>
                                                                <td style="text-align:left"> @item.CombinedCode</td>
                                                                <td style="text-align:center; width:15%;">

                                                                    <div class="btn-group">
                                                                        <button type="button" class="btn btn-info btn-xs dropdown-toggle" data-toggle="dropdown" style="width:40px;border-radius:1px;" aria-haspopup="true" aria-expanded="false">
                                                                            <span class="caret"></span>
                                                                            <span class="sr-only">Toggle Dropdown</span>
                                                                        </button>
                                                                        <ul class="dropdown-menu">
                                                                            <li>
                                                                                <a href="@Url.Action("GfsCodeItemLevelTwoEdit", "GfscodeSetup",new {id=item.ItemSetupLevel2Id })" class="btn-xs edit">
                                                                                    <i class="fa fa-edit"></i>  Edit
                                                                                </a>
                                                                            </li>
                                                                            <li>
                                                                                <a href="#" Onclick="Cancel(@item.ItemSetupLevel2Id)" class="btn-xs edit">
                                                                                    <i class="fa fa-trash-o"></i>  Cancel
                                                                                </a>
                                                                            </li>

                                                                        </ul>
                                                                    </div>
                                                                </td>
                                                            </tr>
                                                        }
                                                    </tbody>
                                                }
                                            </table>
                                        </div>
                                    </div>
                                </div>
                                <div class="tab-pane fade" id="sP3">
                                    <div class="row">
                                        <div class="col-md-12">
                                            <table style="width:100%;">
                                                <tr>
                                                    <td colspan="1">
                                                        @using (Html.BeginForm(null, null, FormMethod.Post, new { @class = "form-horizontal", id = "ItemLevel3" }))
                                                        {
                                                            <div class="form-horizontal">
                                                                @Html.AntiForgeryToken()
                                                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                                                <div class="form-group">
                                                                    <label class="col-md-2 control-label">Item Level Two:</label>
                                                                    <div class="col-md-9">
                                                                        @Html.DropDownList("ItemSetupLevel2Id", ViewBag.itemLevel2 as SelectList, "Select Item Level two", new { @class = "form-control  select2", required = "required" })
                                                                        @Html.ValidationMessageFor(model => model.ItemSetupLevel2Id, "", new { @class = "text-danger", style = "width:300px;" })
                                                                    </div>

                                                                </div>
                                                                <div class="form-group">
                                                                    <label class="col-md-2 control-label">Item Level Three Name:</label>
                                                                    <div class="col-md-4">
                                                                        @Html.TextBoxFor(model => model.ItemLevel3Name, new { @class = "input", style = "width:360px;", required = "required" })
                                                                        @Html.ValidationMessageFor(model => model.ItemLevel3Name, "", new { @class = "text-danger" })
                                                                    </div>
                                                                    <label class="col-md-2 control-label">Item Level Three No:</label>
                                                                    <div class="col-md-4">
                                                                        <div class="input-group">
                                                                            <span class="input-group-addon itemLevel2Prex"><strong> 00 </strong></span>
                                                                            @Html.TextBoxFor(model => model.ItemLevel3No, new { @class = "input", style = "width:230px;", required = "required" })
                                                                            @Html.ValidationMessageFor(model => model.ItemLevel3No, "", new { @class = "text-danger" })
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <div class="form-group">
                                                                <div class="col-md-12">
                                                                    <div style="margin-left:50%">
                                                                        <button type="button" class="btn action-btn btn btn-info" id="submitLevel3" onclick="addItemLevel3()">
                                                                            <i class="fa fa-save"></i>
                                                                            <img src="~/Content/img/loading.gif" id="saveLoaderl3" />
                                                                            Save
                                                                        </button>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        }
                                                    </td>
                                                    <td colspan="1"></td>
                                                </tr>
                                            </table>
                                            <table id="dt_basicLevel3" class="table table-condensed table-bordered">
                                                <thead>
                                                    <tr>
                                                        <th> No.</th>
                                                        <th style="text-align:left"> Item Level two Name</th>
                                                        <th style="text-align:left"> Item Level three Name</th>
                                                        <th style="text-align:left"> Combined Code</th>
                                                        <th style="width:50px">Action</th>
                                                    </tr>
                                                </thead>
                                                @{ int gt = 0;}
                                                @foreach (var group in ((IEnumerable<IFMIS.Areas.IFMISTZ.Models.ItemSetupLevel3>)ViewBag.ItemLevel3List).GroupBy(a => a.ItemSetupLevel3Id))
                                                {

                                                    <tbody>
                                                        @foreach (var item in group)
                                                        {
                                                            gt++;
                                                            <tr>
                                                                <td>@i</td>
                                                                <td style="text-align:left"> @item.ItemLevel2Code:@item.ItemLevel2Name</td>
                                                                <td style="text-align:left"> @item.ItemLevel3No  : @item.ItemLevel3Name</td>
                                                                <td style="text-align:left"> @item.CombinedCode</td>
                                                                <td style="text-align:center; width:15%;">

                                                                    <div class="btn-group">
                                                                        <button type="button" class="btn btn-info btn-xs dropdown-toggle" data-toggle="dropdown" style="width:40px;border-radius:1px;" aria-haspopup="true" aria-expanded="false">
                                                                            <span class="caret"></span>
                                                                            <span class="sr-only">Toggle Dropdown</span>
                                                                        </button>
                                                                        <ul class="dropdown-menu">
                                                                            <li>
                                                                                <a href="@Url.Action("GfsCodeItemLevelThreeEdit", "GfscodeSetup",new {id=item.ItemSetupLevel3Id })" class="btn-xs edit">
                                                                                    <i class="fa fa-edit"></i>  Edit
                                                                                </a>
                                                                            </li>
                                                                            <li>
                                                                                <a href="#" Onclick="Cancel(@item.ItemSetupLevel3Id)" class="btn-xs edit">
                                                                                    <i class="fa fa-trash-o"></i>  Cancel
                                                                                </a>
                                                                            </li>

                                                                        </ul>
                                                                    </div>
                                                                </td>
                                                            </tr>
                                                        }
                                                    </tbody>
                                                }
                                            </table>
                                        </div>
                                    </div>
                                </div>
                                
                            </div>

                        </div>
                    </div>
                </div>
            </article>
        </div>
    </section>
</div>

@section pagespecific {
    <script type="text/javascript">
        if ('@TempData["Success"]' == 'Success') {
            swal("Successfully Saved", { icon: 'success'})
        } else if ('@TempData["Success"]' == 'No') {
            swal("Already Created!!", { icon: 'warning'})
                .then(Ok => {
                    window.location.href = '@Url.Action("ItemSetupCreate", "GfscodeSetup")';
                });
        } else if ('@TempData["Success"]' == 'Exist'){
            swal("Item Level One Already in Used!!", { icon: 'warning' })
                .then(Ok => {
                    window.location.href = '@Url.Action("ItemSetupCreate", "GfscodeSetup")';
                });
        } else if ('@TempData["Success"]' == 'Code Exist'){
            swal("Item Level One Already in Used!!", { icon: 'warning' })
                .then(Ok => {
                    window.location.href = '@Url.Action("ItemSetupCreate", "GfscodeSetup")';
                });
        };

        $("form").submit(function () {
            $("#saveLoader").toggle(true);
            $("#saveLoaderl2").toggle(true);
            $("#saveLoaderl3").toggle(true);
            $("#saveSub").toggle(true);
            $('#submit').attr("disabled", true);
            $('#submitLevel2').attr("disabled", true);
            $('#submitLevel3').attr("disabled", true);
            $('#submitSubItem').attr("disabled", true);
        });

        $("#saveLoader").toggle(false);
        $("#saveLoaderl2").toggle(false);
        $("#saveLoaderl3").toggle(false);
        $("#saveSub").toggle(false);
        $("#submit").prop('disabled', false);
        $("#submitLevel2").prop('disabled', false);
        $("#submitLevel3").prop('disabled', false);
        $("#submitSubItem").prop('disabled', false);


        $(document).ready(function () {

            var responsiveHelper_dt_basic = undefined;
            var responsiveHelper_datatable_fixed_column = undefined;
            var responsiveHelper_datatable_col_reorder = undefined;
            var responsiveHelper_datatable_tabletools = undefined;

            var responsiveHelper_dt_basicLevel2 = undefined;
            var responsiveHelper_dt_basicLevel3 = undefined;



            var breakpointDefinition = {
                tablet: 1024,
                phone: 480
            };

            $('#dt_basic, #dt_basicLevel2, #dt_basicLevel3, #dt_basic_SubItem').dataTable({
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-12 hidden-xs'l>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_dt_basic) {
                        responsiveHelper_dt_basic = new ResponsiveDatatablesHelper($('#dt_basic'), breakpointDefinition);
                    }
                    if (!responsiveHelper_dt_basicLevel2) {
                        responsiveHelper_dt_basicLevel2 = new ResponsiveDatatablesHelper($('#dt_basicLevel2'), breakpointDefinition);
                    } if (!responsiveHelper_dt_basicLevel3) {
                        responsiveHelper_dt_basicLevel3 = new ResponsiveDatatablesHelper($('#dt_basicLevel3'), breakpointDefinition);
                    }

                },
                "rowCallback": function (nRow) {
                    responsiveHelper_dt_basic.createExpandIcon(nRow);
                    responsiveHelper_dt_basicLevel2.createExpandIcon(nRow);
                    responsiveHelper_dt_basicLevel3.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_dt_basic.respond();
                    responsiveHelper_dt_basicLevel2.respond();
                    responsiveHelper_dt_basicLevel3.respond();
                }
            });

            var otable = $('#datatable_fixed_column').DataTable({

                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6 hidden-xs'f><'col-sm-6 col-xs-12 hidden-xs'<'toolbar'>>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_fixed_column) {
                        responsiveHelper_datatable_fixed_column = new ResponsiveDatatablesHelper($('#datatable_fixed_column'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_datatable_fixed_column.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_datatable_fixed_column.respond();
                }

            });

            // custom toolbar
            $("div.toolbar").html('<div class="text-right"><img src="/Content/img/logo.png" alt="SmartAdmin" style="width: 111px; margin-top: 3px; margin-right: 10px;"></div>');
            $("#datatable_fixed_column thead th input[type=text]").on('keyup change', function () {

                otable
                    .column($(this).parent().index() + ':visible')
                    .search(this.value)
                    .draw();

            });
            $('#datatable_col_reorder').dataTable({
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'C>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_col_reorder) {
                        responsiveHelper_datatable_col_reorder = new ResponsiveDatatablesHelper($('#datatable_col_reorder'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_datatable_col_reorder.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_datatable_col_reorder.respond();
                }
            });

            $('#datatable_tabletools').dataTable({

                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'T>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
                "oTableTools": {
                    "aButtons": [
                        "copy",
                        "csv",
                        "xls",
                        {
                            "sExtends": "pdf",
                            "sTitle": "SmartAdmin_PDF",
                            "sPdfMessage": "SmartAdmin PDF Export",
                            "sPdfSize": "letter"
                        },
                        {
                            "sExtends": "print",
                            "sMessage": "Generated by SmartAdmin <i>(press Esc to close)</i>"
                        }
                    ],
                    "sSwfPath": "/Scripts/plugin/datatables/swf/copy_csv_xls_pdf.swf"
                },
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_tabletools) {
                        responsiveHelper_datatable_tabletools = new ResponsiveDatatablesHelper($('#datatable_tabletools'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_datatable_tabletools.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_datatable_tabletools.respond();
                }
            });

            /* END TABLETOOLS */

        })


        $("#ChapterId").change(function () {
            debugger;
            $("#saveLoader").toggle(true);
            var chapter = $(this).val();
            var url = "GetSubChapterByChapter/?chapter=" + chapter;

            $.ajax({
                type: "POST",
                url: url,
                contentType: "html",
                success: function (response) {
                    $("#saveLoader").toggle(false);
                    $("#SubChapterId").empty();
                    $("#SubChapterId").append(response);
                },
                complete: function () {
                    $("#divLoader").hide();
                }
            })
        });

        $("#SubChapterId").change(function () {
            debugger;
            $("#divLoader").toggle(true);
            $("#saveLoader").toggle(true);
            var subchapter = $(this).val();
            var chapter = $("#ChapterId").val();

             var url = '@Url.Action("GetPrexItemLevel1Number", "GfscodeSetup")';
                url += '?chapter=' + chapter + '&subChapter=' + subchapter;

            $.ajax({
                type: "POST",
                url: url,
                contentType: "html",
                success: function (response) {
                    $("#saveLoader").toggle(false);
                    $(".itemPrex").text(response);
                },
                complete: function () {
                    $("#divLoader").hide();
                }
            })
        });

        $("#GfsCodeItemId").change(function () {
            debugger;
            $("#saveLoaderl2").toggle(true);
            $("#saveLoader").toggle(true);
            var gfsCodeItem = $(this).val();
            var chapter = $("#ChapterId").val();

             var url = '@Url.Action("GetPrexItemLevel2Number", "GfscodeSetup")';
                  url += '?itemLevel1=' + gfsCodeItem;

            $.ajax({
                type: "POST",
                url: url,
                contentType: "html",
                success: function (response) {
                    $("#saveLoaderl2").toggle(false);
                    $(".itemLevel1Prex").text(response);
                },
                complete: function () {
                    $("#divLoader").hide();
                }
            })
        });

        $("#ItemSetupLevel2Id").change(function () {
            debugger;
            $("#divLoader").toggle(true);
            $("#saveLoader").toggle(true);
            var itemLevel2Id = $(this).val();

             var url = '@Url.Action("GetPrexItemLevel3Number", "GfscodeSetup")';
                 url += '?itemLevel2=' + itemLevel2Id;

            $.ajax({
                type: "POST",
                url: url,
                contentType: "html",
                success: function (response) {
                    $("#saveLoader").toggle(false);
                    $(".itemLevel2Prex").text(response);
                },
                complete: function () {
                    $("#divLoader").hide();
                }
            })
        });

        $("#ItemSetupLevel3Id").change(function () {
            debugger;
            $("#divLoader").toggle(true);
            $("#saveLoader").toggle(true);
            var itemLevel3Id = $(this).val();

             var url = '@Url.Action("GetPrexSubItemNumber", "GfscodeSetup")';
                 url += '?itemLevel3=' + itemLevel3Id;

            $.ajax({
                type: "POST",
                url: url,
                contentType: "html",
                success: function (response) {
                    $("#saveLoader").toggle(false);
                    $(".itemLevel3Prex").text(response);
                },
                complete: function () {
                    $("#divLoader").hide();
                }
            })
        });



        ///Clear code above
        function Cancel(i) {
            status = "Cancelled";
            swal({
                title: "Are you sure?",
                text: "Sub chapter will be Cancelled!",
                buttons: [
                    'No',
                    'Yes'
                ],
            }).then(function (isConfirm) {
                if (isConfirm) {
                    ChangeItemStatus(i);

                } else {
                    swal("Cancelled", "No change was made");
                }
            });
        }

        function ChangeItemStatus(i) {
            $("#saveLoader").toggle(true);
                var url = '@Url.Action("SubChapterRemove", "GfscodeSetup")';
                $.ajax({
                    type: "post",
                    url: url,
                    data: {
                        Status: status,
                        SubSectorId: i
                    },
                    contenttype: "application/json; charset=utf-8",
                    datatype: "json",
                    success: function (response) {
                        $("#saveLoader").toggle(false);
                        if (response == "Success") {
                            swal("Changed Successfully!", { icon: "success" })
                                .then((value) => {
                                    window.location.reload();
                                });
                        }
                        else {
                            swal(response);
                        }

                    },
                    failure: function (error) {
                        swal(error);
                    }
                });
        }

        function addItemLevel2() {
            debugger;
            var itemLevel1 = $("#GfsCodeItemId").val();
            var itemLevel2Name = $("#ItemLevel2Name").val();
            var itemLevel2No = $("#ItemLevel2No").val();

            if (itemLevel1 == "" || itemLevel1== null) {
                swal("Please Select item Level", { icon: "warning" });
                return false;
            } if (itemLevel2Name == "" || itemLevel2Name== null) {
                swal("Please provide Name of Level two", { icon: "warning" });
                return false;
            } if (itemLevel2No == "" || itemLevel2No == null) {
                swal("Please provide Code of Level two", { icon: "warning" });
                return false;
            }

            var token = $("[name='__RequestVerificationToken']").val();
            var formData = new FormData();
            formData.append("__RequestVerificationToken", token);
            formData.append("GfsCodeItemId", itemLevel1);
            formData.append("ItemLevel2Name", itemLevel2Name);
            formData.append("ItemLevel2No", itemLevel2No);

            for (var value of formData.values()) {
                console.log('Data', value);
            }

            $("#addItemLevel2").attr('disabled', false);
            var url = '@Url.Action("PostLevel2Request", "GfscodeSetup")';

            $("#divLoader").show();
            $.ajax({
                type: "POST",
                url: url,
                data: formData,
                dataType: "json",
                contentType: false,
                processData: false,
                success: function (response) {
                    $("#addItemLevel2").attr('disabled', true);
                    $("#divLoader").hide()
                    if (response == "Success") {
                        swal({
                            text: "Item Level Two Save Successfully!",
                            icon: "success",
                            button: "OK",
                            customClass: {
                                container: 'my-swal',
                            }
                        }).then(function () {
                            window.location.reload();
                        });
                    }
                    else if (response == "Dublicate") {
                         swal({
                            text: "Dublicate Record Found.",
                            icon: "warning",
                            customClass: {
                                container: 'my-swal'
                            }
                        });
                        return false;
                    }
                    else {
                         swal({
                            text: response,
                            icon: "warning",
                            customClass: {
                                container: 'my-swal'
                            }
                        });
                    }
                },
                error: function (xhr) {
                    console.log('errorResp', xhr.responseText)
                    $("#divLoader").hide()
                    swal({
                        text: 'Error Please try again',
                        icon: "error",
                        customClass: {
                            container: 'my-swal'
                        }
                    });
                }
            });
        }

        function addItemLevel3() {
            debugger;
            var itemLevel2 = $("#ItemSetupLevel2Id").val();
            var itemLevel3Name = $("#ItemLevel3Name").val();
            var itemLevel3No = $("#ItemLevel3No").val();

            if (itemLevel2 == "" || itemLevel2 == null) {
                swal("Please Select item Level", { icon: "warning" });
                return false;
            } if (itemLevel3Name == "" || itemLevel3Name == null) {
                swal("Please provide Name of Level two", { icon: "warning" });
                return false;
            } if (itemLevel3No == "" || itemLevel3No == null) {
                swal("Please provide Code of Level two", { icon: "warning" });
                return false;
            }

            var token = $("[name='__RequestVerificationToken']").val();
            var formData = new FormData();
            formData.append("__RequestVerificationToken", token);
            formData.append("ItemSetupLevel2Id", itemLevel2);
            formData.append("ItemLevel3Name", itemLevel3Name);
            formData.append("ItemLevel3No", itemLevel3No);

            for (var value of formData.values()) {
                console.log('Data', value);
            }

            $("#addItemLevel3").attr('disabled', false);
            var url = '@Url.Action("PostLevel3Request", "GfscodeSetup")';

            $("#divLoader").show();
            $.ajax({
                type: "POST",
                url: url,
                data: formData,
                dataType: "json",
                contentType: false,
                processData: false,
                success: function (response) {
                    $("#addItemLevel3").attr('disabled', true);
                    $("#divLoader").hide()
                    if (response == "Success") {
                        swal({
                            text: "Item Level Three Save Successfully!",
                            icon: "success",
                            button: "OK",
                            customClass: {
                                container: 'my-swal',
                            }
                        }).then(function () {
                            window.location.reload();
                        });
                    }
                    else if (response == "Dublicate") {
                         swal({
                            text: "Dublicate Record Found.",
                            icon: "warning",
                            customClass: {
                                container: 'my-swal'
                            }
                        });
                        return false;
                    }
                    else {
                         swal({
                            text: response,
                            icon: "warning",
                            customClass: {
                                container: 'my-swal'
                            }
                        });
                    }
                },
                error: function (xhr) {
                    console.log('errorResp', xhr.responseText)
                    $("#divLoader").hide()
                    swal({
                        text: 'Error Please try again',
                        icon: "error",
                        customClass: {
                            container: 'my-swal'
                        }
                    });
                }
            });
        }

        function addSubItem() {
            debugger;
            var itemLevel3 = $("#ItemSetupLevel3Id").val();
            var subItemNo = $("#GfsCodeSubItemNo").val();
            var subItemName = $("#GfsCodeSubItemName").val();

            if (itemLevel3 == "" || itemLevel3 == null) {
                swal("Please Select item Level", { icon: "warning" });
                return false;
            } if (subItemNo == "" || subItemNo == null) {
                swal("Please provide Name for Sub Item", { icon: "warning" });
                return false;
            } if (subItemName == "" || subItemName == null) {
                swal("Please provide Code Sub Item", { icon: "warning" });
                return false;
            }

            var token = $("[name='__RequestVerificationToken']").val();
            var formData = new FormData();
            formData.append("__RequestVerificationToken", token);
            formData.append("ItemSetupLevel3Id", itemLevel3);
            formData.append("GfsCodeSubItemNo", subItemNo);
            formData.append("GfsCodeSubItemName", subItemName);

            for (var value of formData.values()) {
                console.log('Data', value);
            }

            $("#submitSubItem").attr('disabled', false);
            var url = '@Url.Action("PostSubItemRequest", "GfscodeSetup")';

            $("#divLoader").show();
            $.ajax({
                type: "POST",
                url: url,
                data: formData,
                dataType: "json",
                contentType: false,
                processData: false,
                success: function (response) {
                    $("#submitSubItem").attr('disabled', true);
                    $("#divLoader").hide()
                    if (response == "Success") {
                        swal({
                            text: "Sub Item Save Successfully!",
                            icon: "success",
                            button: "OK",
                            customClass: {
                                container: 'my-swal',
                            }
                        }).then(function () {
                            window.location.reload();
                        });
                    }
                    else if (response == "Dublicate") {
                         swal({
                            text: "Dublicate Record Found.",
                            icon: "warning",
                            customClass: {
                                container: 'my-swal'
                            }
                        });
                        return false;
                    }
                    else {
                         swal({
                            text: response,
                            icon: "warning",
                            customClass: {
                                container: 'my-swal'
                            }
                        });
                    }
                },
                error: function (xhr) {
                    console.log('errorResp', xhr.responseText)
                    $("#divLoader").hide()
                    swal({
                        text: 'Error Please try again',
                        icon: "error",
                        customClass: {
                            container: 'my-swal'
                        }
                    });
                }
            });
        }
    </script>
}
