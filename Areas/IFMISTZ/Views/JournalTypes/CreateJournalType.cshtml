
@model IFMIS.Areas.IFMISTZ.Models.CreateJournalTypeVM

<div id="divLoader"></div>
<!-- MAIN CONTENT -->
<div id="content">

    <div class="row">
        @*<div class="col-xs-12 col-sm-9 col-md-9 col-lg-9">
                <h1 class="page-title txt-color-blueDark">

                    <!-- PAGE HEADER -->
                    <!--
                    <i class="fa-fw fa fa-pencil-square-o"></i>
                    Payments
                    <span>
                        >
                        Bills
                    </span>
                        -->
                </h1>
            </div>*@

        <div class="col-xs-12 col-sm-3 col-md-3 col-lg-3">
            <!-- Button trigger modal -->
            <!--<a data-toggle="modal" href="#myModal" class="btn btn-success btn-lg pull-right header-btn hidden-mobile"><i class="fa fa-circle-arrow-up fa-lg"></i> Launch form modal</a>-->
        </div>
    </div>

    <!--
    <div class="alert alert-block alert-success">
        <a class="close" data-dismiss="alert" href="#">×</a>
        <h4 class="alert-heading"><i class="fa fa-check-square-o"></i> Check validation!</h4>
        <p>
            You may also check the form validation by clicking on the form action button. Please try and see the results below!
        </p>
    </div>
        -->
    <!-- widget grid -->
    <section id="widget-grid" class="">


        <!-- START ROW -->

        <div class="row">

            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">

                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">
                    <!-- widget options:
                        usage: <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false">

                        data-widget-colorbutton="false"
                        data-widget-editbutton="false"
                        data-widget-togglebutton="false"
                        data-widget-deletebutton="false"
                        data-widget-fullscreenbutton="false"
                        data-widget-custombutton="false"
                        data-widget-collapsed="true"
                        data-widget-sortable="false"

                    -->
                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2> Create Journal Type </h2>

                    </header>

                    <!-- widget div-->
                    <div>

                        <!-- widget edit box -->
                        <div class="jarviswidget-editbox">
                            <!-- This area used as dropdown edit box -->

                        </div>
                        <!-- end widget edit box -->
                        <!-- widget content -->
                        <div class="widget-body">
                            <form name="createJournalTypeForm" id="createJournalTypeForm">
                                @Html.AntiForgeryToken()
                                <div class="form-horizontal">
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    @Html.HiddenFor(model => model.JournalTypeCode)

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.JournalTypeSummaryId, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-4">
                                            @Html.DropDownListFor(model => model.JournalTypeSummaryId, Model.JournalTypeSummaryList, "Select Journal Type", new { @class = "select2 form-control" })
                                            @Html.ValidationMessageFor(model => model.JournalTypeSummaryId, "", new { @class = "text-danger" })
                                        </div>
                                        @Html.LabelFor(model => model.JournalTypeDesc, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-4">
                                            @Html.EditorFor(model => model.JournalTypeDesc, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.JournalTypeDesc, "", new { @class = "text-danger" })
                                        </div>

                                    </div>


                                    <div class="form-group">
                                        @Html.LabelFor(model => model.DrGfsFrom, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-4">
                                            @Html.EditorFor(model => model.DrGfsFrom, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.DrGfsFrom, "", new { @class = "text-danger" })
                                        </div>
                                        @Html.LabelFor(model => model.DrGfsTo, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-4">
                                            @Html.EditorFor(model => model.DrGfsTo, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.DrGfsTo, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.CrGfsFrom, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-4">
                                            @Html.EditorFor(model => model.CrGfsFrom, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.CrGfsFrom, "", new { @class = "text-danger" })
                                        </div>
                                        @Html.LabelFor(model => model.CrGfsTo, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-4">
                                            @Html.EditorFor(model => model.CrGfsTo, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.CrGfsTo, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.SourceModule, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-4">
                                            @Html.DropDownListFor(model => model.SourceModule, Model.SourceModuleList, "Select Source Module", new { @class = "select2 form-control" })
                                            @Html.ValidationMessageFor(model => model.SourceModule, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-actions">
                                        <div class="row">
                                            <div class="col-md-offset-2 col-md-8">
                                                <button class="btn btn-info" type="button" style="float: left" id="btnSave">
                                                    <i class="fa fa-save"></i>
                                                    Save
                                                </button>
                                                <a href="@Url.Action("JornalTypelist", "JournalTypes")" class="btn btn-info" style="float: left; margin-left: 5px">
                                                    <i class="fa fa-arrow-left"></i>
                                                    Back
                                                </a>
                                            </div>
                                        </div>
                                    </div>

                                </div>
                            </form>
                        </div>
                        <!-- end widget content -->
                    </div>
                    <!-- end widget div -->

                </div>
                <!-- end widget -->

            </article>
            <!-- END COL -->

        </div>

        <!-- END ROW -->

    </section>
    <!-- end widget grid -->

</div>
<!-- END MAIN CONTENT -->
@section pagespecific{

    <script type="text/javascript">

        $('#JournalTypeSummaryId').on("change", function () {
            debugger
            $("#divLoader").show();
            var journalTypeSummaryId = $("#JournalTypeSummaryId").val();
            $.ajax({
                type: "GET",
                url: '@Url.Action("GetJournalTypeCodeByJournalTypeSummaryId", "JournalTypes")',
                data: { id: journalTypeSummaryId },
                success: function (data, status, jqXHR) {
                    if (data.success) {
                        $("#JournalTypeCode").val(data.JournalCode);
                        $("#JournalTypeDesc").val(data.JournalCodeDesc);
                    } else {
                        swal({
                            text: "Exception on accessing JournalTypes summary, try again",
                            icon: "warning",
                            button: "OK",
                        }).then(function () {
                            location.reload();
                        });
                    }
                },
                error: function () {
                    swal({
                        text: "Error on accessing JournalTypes summary, try again",
                        icon: "error",
                        button: "OK",
                    }).then(function () {
                        location.reload();
                    });
                },
                complete: function () {
                    $("#divLoader").hide();
                }
            })
        });

        $("#btnSave").click(function () {

            $('#btnSave').prop("disabled", true);

            $("#divLoader").show();

               if (!$("#createJournalTypeForm").valid()) {
                $('#btnSave').prop("disabled", false);
                $("#divLoader").hide();
                return false;
               }

            var token = $("[name='__RequestVerificationToken']").val();
            var data = {
                __RequestVerificationToken: token,
                JournalTypeSummaryId: $('#JournalTypeSummaryId').val(),
                JournalTypeCode: $('#JournalTypeCode').val(),
                JournalTypeDesc: $('#JournalTypeDesc').val(),
                DrGfsFrom: $('#DrGfsFrom').val(),
                DrGfsTo: $('#DrGfsTo').val(),
                CrGfsFrom: $('#CrGfsFrom').val(),
                CrGfsTo: $('#CrGfsTo').val(),
                SourceModule: $('#SourceModule').val(),
            }

            var url = '@Url.Action("CreateJournalType", "JournalTypes")';
            $.ajax({
                url: url,
                type: "POST",
                //data: JSON.stringify(data),
                data: data,
                dataType: "JSON",
                //contentType: "application/json",
                contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                success: function (response) {
                    //check is successfully save to database
                    if (response == "Success") {
                        //will send status from server side
                        swal({
                            text: "successfully saved.",
                            icon: "success",
                            button: "OK",
                        }).then(function () {
                            window.location = '@Url.Action("Jornaltypelist", "Journaltypes")'; 
                        });
                    }
                    else {
                        swal({
                            text: response,
                            icon: "warning",
                            button: "OK",
                        })
                    }
                },
                error: function () {
                    swal({
                        text: "Error on saving journal Code, try again.",
                        icon: "error",
                        button: "OK",
                    })
                },
                complete: function () {
                    $('#btnSave').prop("disabled", false);
                    $("#divLoader").hide();
                }
            });
        });




        $("#DrGfsFrom").on("keyup input paste cut", function () {
                var val = this.value
                if (val.length > 8) {
                    $("#DrGfsFrom").val(val.substring(0, 8));
                }
        });
        $("#DrGfsTo").on("keyup input paste cut", function () {
            var val = this.value
            if (val.length > 8) {
                $("#DrGfsTo").val(val.substring(0, 8));
            }
        });
        $("#CrGfsFrom").on("keyup input paste cut", function () {
            var val = this.value
            if (val.length > 8) {
                $("#CrGfsFrom").val(val.substring(0, 8));
            }
        });
        $("#CrGfsTo").on("keyup input paste cut", function () {
            var val = this.value
            if (val.length > 8) {
                $("#CrGfsTo").val(val.substring(0, 8));
            }
        });
    </script>
}
