@model IFMIS.Areas.IFMISTZ.Models.InstitutionSector

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .input[type="text"], select {
        border: 1px solid lightgray;
        width: 100%;
        height: 35px;
    }

    .textarea {
        border: 1px solid lightgray;
        width: 100%;
    }

    .input[type="text"]:focus {
        border: 1px solid lightblue;
    }

    th {
        text-align: left;
    }
</style>
<!-- widget grid -->
<div id="content" style="margin: 5px; padding-top: 50px">

    <section id="widget-grid" class="">
        <div class="row">

            <article class="col-sm-12 col-md-12 col-lg-12">

                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">
                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>

                        <h2 style="color:black;">Create Institution Sector.</h2>

                    </header>
                    <div>
                        <div class="widget-body" style="padding-top:10px; width:100%;">
                            @*@if (TempData["Message"] != null)
                            {
                                <h4 style="color:red;">  @TempData["Message"] </h4>
                            }*@
                       
                            <table style="width:100%;">
                                <tr>
                                    <td colspan="1">
                                        @using (Html.BeginForm(null, null, FormMethod.Post, new { @class = "form-horizontal" }))
                                        {
                                            <div style="padding-left:17%">
                                                @Html.AntiForgeryToken()
                                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                                <div class="form-group">
                                                    <label class="col-md-3 control-label" style="text-align:right;">Sector:</label>
                                                    <div class="col-md-9 inputGroupContainer">
                                                        <div class="input-group">
                                                            @Html.TextBoxFor(model => model.SectorName, new { @Class = "input", style = "width:300px; ", required = "required", Type="Text" })
                                                            @Html.ValidationMessageFor(model => model.SectorName, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                                <div style="margin-left:50%;">
                                                    <div class="form-group">

                                                        <div class="col-md-5">

                                                            <button type="submit" class="btn action-btn btn btn-info" id="submit">
                                                                <i class="fa fa-save"></i>
                                                                <img src="~/Content/img/loading.gif" id="saveLoader" />
                                                                Save
                                                            </button>
                                                        </div>
                                                    </div>
                                                </div>
                                        }
                                    </td>
                                    <td colspan="1"></td>
                                </tr>
                            </table>

                        </div>
                       <table id="dt_basic" class="table table-condensed table-bordered">
                                <thead>
                                    <tr>
                                        <th>No.</th>
                                        <th> Sector Name</th>
                                        <th style="width:50px">Action</th>
                                    </tr>
                                </thead>
                                @{ int i = 0;

                                }
                               
                                    @foreach (var group in ((IEnumerable<IFMIS.Areas.IFMISTZ.Models.InstitutionSector>)ViewBag.list).GroupBy(a => a.SectorId))
                                    {

                                        <tbody>
                                            @foreach (var item in group)
                                            {
                                                i++;
                                                <tr>
                                                    <td>@i</td>
                                                    <td style="text-align:left"> @item.SectorName</td>

                                                    <td style="text-align:left">
                                                    <div class="btn-group">
                                                            <button type="button" class="btn btn-info btn-xs dropdown-toggle" data-toggle="dropdown" style="width:40px;border-radius:1px;" aria-haspopup="true" aria-expanded="false">
                                                                <span class="caret"></span>
                                                                <span class="sr-only">Toggle Dropdown</span>
                                                            </button>
                                                            <ul class="dropdown-menu">

                                                                <li>
                                                                    <a href="@Url.Action("Edit", "InstitutionSectors",new {id=item.SectorId })" class="btn-xs edit">
                                                                        <i class="fa fa-edit"></i>  Edit
                                                                    </a>
                                                                </li>
                                                                <li>
                                                                    <a href="@Url.Action("Details", "InstitutionSectors",new {id=item.SectorId })" class="btn-xs edit">
                                                                        <i class="fa fa-edit"></i>  Details
                                                                    </a>
                                                                </li>
                                                                <li>
                                                                    <a href="#" Onclick="Cancel(@item.SectorId)" class="btn-xs edit">
                                                                        <i class="fa fa-trash-o"></i>  Cancel
                                                                    </a>
                                                                </li>

                                                            </ul>
                                                        </div>
                                                    </td>

                                                </tr>
                                            }
                                        </tbody>
                                    }
                                </table>
                                <br />
                                <br />
                       </div>
                </div>
            </article>
        </div>
    </section>
</div>
@section pagespecific {
    <script type="text/javascript">

        $("form").submit(function () {
            $("#saveLoader").toggle(true);
            $('#submit').attr("disabled", true);
        });

        $("#saveLoader").toggle(false);
        $("#submit").prop('disabled', false);


        if ('@TempData["Success"]' == 'Success') {
            swal("Successfully Saved", { icon: 'success' })
        } else if ('@TempData["Success"]' == 'No') {

            swal("Already Created!!")
            @*.then(Ok=> {
                window.location.href = '@Url.Action("CreateSector", "InstitutionSectors")';
            });*@
        };

        $(document).ready(function () {

            var responsiveHelper_dt_basic = undefined;
            var responsiveHelper_datatable_fixed_column = undefined;
            var responsiveHelper_datatable_col_reorder = undefined;
            var responsiveHelper_datatable_tabletools = undefined;

            var breakpointDefinition = {
                tablet: 1024,
                phone: 480
            };
            $('#dt_basic').dataTable({
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-12 hidden-xs'l>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_dt_basic) {
                        responsiveHelper_dt_basic = new ResponsiveDatatablesHelper($('#dt_basic'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_dt_basic.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_dt_basic.respond();
                }
            });

            var otable = $('#datatable_fixed_column').DataTable({

                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6 hidden-xs'f><'col-sm-6 col-xs-12 hidden-xs'<'toolbar'>>r>" +
                        "t" +
                        "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_fixed_column) {
                        responsiveHelper_datatable_fixed_column = new ResponsiveDatatablesHelper($('#datatable_fixed_column'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_datatable_fixed_column.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_datatable_fixed_column.respond();
                }

            });

            // custom toolbar
            $("div.toolbar").html('<div class="text-right"><img src="/Content/img/logo.png" alt="SmartAdmin" style="width: 111px; margin-top: 3px; margin-right: 10px;"></div>');
            $("#datatable_fixed_column thead th input[type=text]").on('keyup change', function () {

                otable
                    .column($(this).parent().index() + ':visible')
                    .search(this.value)
                    .draw();

            });
            $('#datatable_col_reorder').dataTable({
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'C>r>" +
                        "t" +
                        "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_col_reorder) {
                        responsiveHelper_datatable_col_reorder = new ResponsiveDatatablesHelper($('#datatable_col_reorder'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_datatable_col_reorder.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_datatable_col_reorder.respond();
                }
            });
            $('#datatable_tabletools').dataTable({

                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'T>r>" +
                        "t" +
                        "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
                "oTableTools": {
                    "aButtons": [
                    "copy",
                    "csv",
                    "xls",
                       {
                           "sExtends": "pdf",
                           "sTitle": "SmartAdmin_PDF",
                           "sPdfMessage": "SmartAdmin PDF Export",
                           "sPdfSize": "letter"
                       },
                       {
                           "sExtends": "print",
                           "sMessage": "Generated by SmartAdmin <i>(press Esc to close)</i>"
                       }
                    ],
                    "sSwfPath": "/Scripts/plugin/datatables/swf/copy_csv_xls_pdf.swf"
                },
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_tabletools) {
                        responsiveHelper_datatable_tabletools = new ResponsiveDatatablesHelper($('#datatable_tabletools'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_datatable_tabletools.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_datatable_tabletools.respond();
                }
            });

            /* END TABLETOOLS */

        })

       function Cancel(i) {
                status = "Cancelled";
                swal({
                    title: "Are you sure?",
                    text: "Institution Sectors will be Cancelled!",
                    buttons: [
                      'No',
                      'Yes'
                    ],
                }).then(function (isConfirm) {
                    if (isConfirm) {
                        ChangeItemStatus(i, status);

                    } else {
                        swal("Cancelled", "No change was made");
                    }
                });
            }

            function ChangeItemStatus(i, status) {
                var url = '@Url.Action("ChangeStatus", "InstitutionSectors")';
                $.ajax({
                    type: "post",
                    url: url,
                    data: {
                        Status: status,
                        SectorId: i
                    },
                    contenttype: "application/json; charset=utf-8",
                    datatype: "json",
                    success: function (response) {

                        if (response == "Success") {
                            swal("Changed Successfully!", { icon: "success" })
                                .then((value) => {
                                    window.location.reload();
                                });
                        }
                        else {
                            swal(response);
                        }

                    },
                    failure: function (error) {
                        swal(error);
                    }
                });
            }





</script>
}
