@model IFMIS.Areas.IFMISTZ.Models.MeridianVoucherSignatoryVM
<style>
    #formAssignTask label {
        text-align: right;
    }
</style>
@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "formAssignTask" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.MeridianVoucherId)
        @*@Html.HiddenFor(model => model.SignatoryA)
        @Html.HiddenFor(model => model.SignatoryB)*@
        <div class="form-group row">
            @Html.LabelFor(model => model.SignatoryA, htmlAttributes: new { @class = "control-label col-md-offset-2 col-md-2" })
            <div class="col-md-8">
                @Html.DropDownListFor(model => model.SignatoryA, Model.SignatoryAList, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SignatoryA, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group row">
            @Html.LabelFor(model => model.SignatoryB, htmlAttributes: new { @class = "control-label col-md-offset-2 col-md-2" })
            <div class="col-md-8">
                @Html.DropDownListFor(model => model.SignatoryB, Model.SignatoryBList, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SignatoryB, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
}

<script>

    $("#btnSave").on("click", function () {
        debugger;
                    $("#btnSave").prop("disabled", true);

                    $.validator.unobtrusive.parse("#formAssignTask");
                    if (!$("#formAssignTask").valid()) {
                        $("#btnSave").prop("disabled", false);
                        return false;
                    }

        var sig=$("#SignatoryA").val();
        console.log( sig);
            var formData = new FormData();
            formData.append("MeridianVoucherId", $('#MeridianVoucherId').val());
            formData.append("SignatoryA", $('#SignatoryA').val());
            formData.append("SignatoryB", $('#SignatoryB').val());

                  var url = '@Url.Action("SaveSignatory", "MeridianVouchers")';

                    $.ajax({
                        type: "POST",
                        url: url,
                        data: formData,
                        processData: false,
                        contentType: false,
                        success: function(response) {
                            if (response == "Success") {
                                $('#assignmodal').modal('hide');
                                swal({
                                    text: "Signatories Assigned successfuly!",
                                    icon: "success",
                                    button: "OK",
                                }).then(function() {
                                    location.reload();
                                });
                            } else {
                                swal({
                                    text: "An error occured while processing your request, please contact system support",
                                    icon: "warning",
                                    button: "OK",
                                })
                            }
                        },
                        error: function() {
                            swal({
                                text: "An error occured while processing your request, please contact system support",
                                icon: "error",
                                button: "OK",
                            })
                        },
                        complete: function() {
                            $("#btnSaveAssignment").prop("disabled", false);
                        }
                    });
        });

</script>


