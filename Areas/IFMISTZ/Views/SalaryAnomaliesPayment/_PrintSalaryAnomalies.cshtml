@model IFMIS.Areas.IFMISTZ.Models.SalaryAnomaliesSummary
@{
    ViewBag.Title = "Preview Salary Missing Accounts";

}

<style>
    body {
        font-family: 'Gill Sans','lucida grande', helvetica, arial, sans-serif;
        font-size: 15px;
    }

    table {
        border-collapse: collapse;
        width: 100%;
    }

    th {
        height: 30px;
    }
    /*td {
            height: 25px;
        }*/
    th {
        background-color: darkgrey;
    }

    table, td, th {
        border: 1px solid black;
    }

    tr {
        page-break-inside: avoid;
    }
</style>
<div id="content">
    <div class="panel panel-default">
        <!-- Default panel contents -->
        <div class="panel-heading"></div>

        <div class="panel-body">
            <div align="center">

                <img src="@Server.MapPath(" ~/Media/Images/log20180504093652.png")" width="120" height="120" /><br />
                <strong>
                    THE UNITED REPUBLIC OF TANZANIA<br />
                    MINISTRY OF FINANCE AND PLANNING<br />
                </strong>
            </div>
            @if (Model.OverallStatus == "MisMatched")
            {
                <H4 align="center"><strong>LIST OF EMPLOYEE(S) WITH DATA MISMATCHED AFTER VERIFICATION</strong></H4>
            }
            else if (Model.OverallStatus == "Matched")
            {
                <H4 align="center"><strong>LIST OF EMPLOYEES WITH DATA MATCHED AFTER VERIFICATION</strong></H4>
            }
            else
            {
                if (Model.AnomaliesType == "Unapplied")
                {
                    <H4 align="center"><strong>LIST OF EMPLOYEES WITH UNAPPLIED SALARY</strong></H4>
                }
                else if (Model.AnomaliesType == "UnpaidSalaries")
                {
                    <H4 align="center"><strong>LIST OF EMPLOYEES WITH UNPAID SALARY</strong></H4>
                }
                else
                {
                    <H4 align="center"><strong>LIST OF EMPLOYEES WITH SALARY MISSING BANK ACCOUNT</strong></H4>
                }

            }
            <p align="left">
                <strong>Description &nbsp;:</strong>@Html.DisplayFor(model => model.Description)<br>
                <strong>ReferenceID &nbsp;:</strong>@Html.DisplayFor(model => model.ReferenceId)<br>
                <strong>Number of Employees&nbsp;:</strong>@Html.DisplayFor(model => model.EmpNum)<br>
                <strong>Salary Month &nbsp;:</strong>@Html.DisplayFor(model => model.SalaryMonthDesc)<br>
            </p>

            <table class="table table-bordered table-condensed table-striped" style="font-size:16px;width:1300px" align="center">
                <thead style="display:table-header-group;">
                    <tr style="background:#f5f5f5; color:#000000;">
                        <th>#</th>
                        <th>Check Number</th>
                        <th>Name</th>
                        <th>BankAccountNo</th>
                        <th>BankName</th>
                        <th>Vote</th>
                        @if (Model.OverallStatus == "MisMatched")
                        {
                            <th>Reason</th>
                        }

                        <th style="text-align:right">Net Amount</th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        int m = 0;
                        decimal? TotalAmount = 0;
                    }
                    @if (Model.AnomaliesType == "Unapplied")
                    {

                        foreach (var item in Model.UnappliedSalaryGspp)
                        {
                            m++;
                            TotalAmount = TotalAmount + item.TrxAmount;
                            <tr>
                                <td>@m</td>
                                <td> @item.CheckNo.ToString()</td>
                                <td>@Html.DisplayFor(modelItem => item.BenName)</td>
                                <td> @Html.DisplayFor(modelItem => item.BenAcct)</td>
                                <td> @Html.DisplayFor(modelItem => item.BankName)</td>
                                <td style="text-align:left"> @Html.DisplayFor(modelItem => item.Vote)</td>

                                @if (Model.OverallStatus == "MisMatched")
                                {
                                    <td> @Html.DisplayFor(modelItem => item.MissMatchDesc)</td>
                                }
                                <td align="right">@Html.DisplayFor(modelItem => item.TrxAmount)</td>
                            </tr>
                        }

                    }
                    else if (Model.AnomaliesType == "UnpaidSalaries")
                    {

                        foreach (var item in Model.UnpaidSalaryGspps)
                        {
                            m++;
                            TotalAmount = TotalAmount + item.Amount;
                            <tr>
                                <td>@m</td>
                                <td> @item.CheckNo.ToString()</td>
                                <td>@Html.DisplayFor(modelItem => item.FirstName) @Html.DisplayFor(modelItem => item.MiddleName) @Html.DisplayFor(modelItem => item.LastName)</td>
                                <td> @Html.DisplayFor(modelItem => item.BankAcct)</td>
                                <td> @Html.DisplayFor(modelItem => item.BankName)</td>
                                <td style="text-align:left"> @Html.DisplayFor(modelItem => item.VoteCode)-@Html.DisplayFor(modelItem => item.VoteName)</td>

                                @if (Model.OverallStatus == "MisMatched")
                                {
                                    <td> @Html.DisplayFor(modelItem => item.MissMatchDesc)</td>
                                }
                                <td align="right">@Html.DisplayFor(modelItem => item.Amount)</td>
                            </tr>
                        }

                    }
                    else
                    {

                        foreach (var item in Model.PaylistCurrentAnomalies)
                        {
                            m++;
                            TotalAmount = TotalAmount + item.NetAmountAdjusted;
                            <tr>
                                <td>@m</td>
                                <td> @item.EMPLOYEE.ToString()</td>
                                <td>@Html.DisplayFor(modelItem => item.FIRST_NAME) @Html.DisplayFor(modelItem => item.MIDDLE_NAME) @Html.DisplayFor(modelItem => item.LAST_NAME)</td>
                                <td> @Html.DisplayFor(modelItem => item.AccountNo)</td>
                                <td> @Html.DisplayFor(modelItem => item.BANK_NAME)</td>
                                <td style="text-align:left"> @Html.DisplayFor(modelItem => item.VOTE_CODE)-@Html.DisplayFor(modelItem => item.VOTE_DESC)</td>

                                @if (Model.OverallStatus == "MisMatched")
                                {
                                    <td> @Html.DisplayFor(modelItem => item.MissMatchDesc)</td>
                                }
                                <td align="right">@Html.DisplayFor(modelItem => item.NetAmountAdjusted)</td>
                            </tr>
                        }
                    }

                </tbody>
                @if (Model.OverallStatus != "MisMatched")
                {
                    <tfoot>
                        <tr>
                            <th colspan="6" style="text-align:right">TOTAL</th>
                            <th style="text-align:right">
                                @string.Format("{0:#,0.00}", TotalAmount)
                            </th>
                        </tr>
                    </tfoot>
                }
            </table>

        </div>
    </div>
</div>







