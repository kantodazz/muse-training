<style>
    .search-btn {
        border: 1px solid #ccc;
        border-radius: 4px;
        padding: 5px;
        padding-right: 10px;
    }

    .search-container {
        display: inline-flex;
        position: relative;
        border: 1px solid #ccc;
        border-radius: 5px;
        overflow: hidden;
        padding-left: 10px;
    }

    .name-input-container {
        display: inline-flex;
        flex: 1 1 300px;
        position: relative;
        overflow: hidden;
    }

    .search-icon {
        padding: 0.5rem;
    }

    .search-button {
        background: #538AC5;
        border: 0;
        color: white;
        padding: 8px;
        border-radius: 0;
    }

    input[type=number] {
        padding: 8px;
        border: 1px solid #ccc;
        width: 205px;
    }

    input[type=text] {
        padding: 8px;
        border: 1px solid #ccc;
    }

    input[type=search] {
        padding: 4px;
        border: hidden;
        border-radius: 4px;
    }

    textarea {
        border: 1px solid #ccc;
    }

    select {
        padding: 8px;
        border: 1px solid #ccc;
        resize: vertical;
        width: 230px;
    }

    .action-btn {
        width: 100px;
        color: white;
    }

    .form-label {
        text-align: right;
    }

    td {
        padding: 5px;
    }

    .info-box {
        padding: 10px;
        background-color: #ECF3F8;
        text-align: center;
        border: 1px solid #ccc;
        border-radius: 5px;
    }

    .row-align {
        display: flex;
        flex-direction: row;
        flex-wrap: wrap;
        justify-content: space-between;
    }
</style>

<div style="padding:1em;padding-top:4em">
    <section id="widget-grid">
        <div class="row">
            <article class="col-sm-12 col-md-12 col-lg-12">

                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">

                    <header>
                        <span class="widget-icon"> <i class="fa fa-table"></i> </span>
                        <h2>Create Imprest</h2>

                    </header>
                    <div>
                        <div class="widget-body">
                            <div class="row">
                                <div class="col-md-6 col-lg-6 col-sm-12 ">
                                    <table>

                                        <tr style="background-color: #FBFBFB" id="approvalTypeDropDown">
                                            <td class="form-label">
                                                AO Approval Type
                                                <i class="fa fa-times" style="color:white" id="AOApprovalRef_1"></i>
                                            </td>
                                            <td>
                                                <div class="input-group">
                                                    <select id="AOApprovalType" style="width:300px" onchange="toggleAOFields()">
                                                        <option value="0">Manual</option>
                                                        <option value="1">Electronic</option>
                                                    </select>
                                                </div>
                                            </td>
                                        </tr>

                                        <tr style="background-color: #FBFBFB" class="ao-fields">
                                            <td class="form-label">
                                                AO Approval Ref
                                                <i class="fa fa-times" style="color:white" id="AOApprovalRef_1"></i>
                                            </td>
                                            <td>
                                                <div class="name-input-container">
                                                    <input type="text" name="AOApprovalId" id="AOApprovalId" class="form-control" placeholder="Select Approval Reference"
                                                           style="width:300px" />
                                                </div>
                                            </td>
                                        </tr>

                                        <tr style="background-color: #FBFBFB" class="ao-fields">
                                            <td class="form-label">
                                                AO Balance
                                            </td>
                                            <td>
                                                <div class="input-group">
                                                    <span class="input-group-addon">
                                                        <strong class="ao-currency">TZS</strong>
                                                    </span>
                                                    <input type="text" disabled id="AOBalance" style="width: 250px" />
                                                </div>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td class="form-label">
                                                Account Name
                                                <i class="fa fa-times" style="color:white" id="PayeeName_1"></i>
                                            </td>
                                            <td>
                                                <div class="name-input-container submit-btn">
                                                    <input type="text" readonly id="PayeeName" placeholder="No Payee Selected" style="width:260px" />
                                                    <a class="search-btn" onclick="SearchPayee()"
                                                       href="#" style="float:right">
                                                        <i class="fa fa-search search-icon"></i>
                                                    </a>
                                                </div>
                                                <div id="verificationIcons"></div>
                                                <div id="errorVerification" style="color:red">
                                                    Payee is having Unretired imprest!
                                                </div>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td class="form-label">
                                                Payee Acc No
                                            </td>
                                            <td>
                                                <div class="input-group">
                                                    <input type="text" disabled id="PayeeAccountNumber" style="width:300px" />
                                                </div>
                                            </td>
                                        </tr>
                                        <tr class="IsStPayment">
                                            <td class="form-label">
                                                Parent Institution
                                                <i class="fa fa-times" style="color:white" id="ParentInstitution_1"></i>
                                            </td>
                                            <td>
                                                <select id="ParentInstitution" style="width:300px"></select>
                                            </td>

                                        </tr>
                                        <tr class="IsStPayment">
                                            <td class="form-label">
                                                SubWarrant
                                                <i class="fa fa-times" style="color:white" id="SubWarrant_1"></i>
                                            </td>
                                            <td>
                                                <select id="SubWarrant" style="width:300px"></select>
                                            </td>

                                        </tr>
                                        <tr>
                                            <td class="form-label">
                                                Sub Budget Class
                                                <i class="fa fa-times" style="color:white" id="SubBudgetClass_1"></i>
                                            </td>
                                            <td>
                                                <select id="SubBudgetClass" style="width:300px">
                                                    <option value="Please choose sub budget class" selected="selected">Please choose sub budget class</option>
                                                    @foreach (var subBudgetClass in ViewBag.subBudgetClassList)
                                                    {
                                                        <option value='@subBudgetClass.SubBudgetClass;
                                 @subBudgetClass.OperationalCurrencyCode;
                                 @subBudgetClass.OperationalExchangeRate;
                                 @subBudgetClass.BaseCurrencyCode'>
                                                            @subBudgetClass.SubBudgetClassSubBudgetClassDesc
                                                        </option>
                                                    }
                                                </select>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td class="form-label">
                                                Total Fund Balance
                                            </td>
                                            <td>
                                                <div class="input-group">
                                                    <span class="input-group-addon">
                                                        <strong class="currency">TZS</strong>
                                                    </span>
                                                    <input type="text" disabled id="FundBalance" style="width:250px" />
                                                </div>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td class="form-label">
                                                Payer Account
                                                <i class="fa fa-times" style="color:white" id="PayerAccount_1"></i>
                                            </td>
                                            <td>
                                                <select id="PayerAccount" style="width:300px"></select>
                                            </td>
                                        </tr>
                                        <tr class="is-dfund" style="background-color: #FBFBFB">
                                            <td class="form-label">
                                                Dfund Approval Ref
                                                <i class="fa fa-times" style="color:white" id="DfundApprovalRef_1"></i>
                                            </td>
                                            <td>
                                                <div class="name-input-container">
                                                    <input type="text" name="DfundApprovalId" id="DfundApprovalId" class="form-control" placeholder="Select Approval Reference"
                                                           style="width:300px" />
                                                </div>
                                            </td>
                                        </tr>
                                        <tr class="is-dfund" style="background-color: #FBFBFB">
                                            <td class="form-label">
                                                Dfund Balance
                                            </td>
                                            <td>
                                                <div class="input-group">
                                                    <span class="input-group-addon">
                                                        <strong class="dfund-currency">TZS</strong>
                                                    </span>
                                                    <input type="text" disabled id="DfundBalance" style="width:250px" />
                                                </div>
                                            </td>
                                        </tr>
                                        <tr class="is-dfund" style="background-color: #FBFBFB">
                                            <td class="form-label">
                                                Dfund Amount
                                            </td>
                                            <td>
                                                <div class="input-group">
                                                    <span class="input-group-addon">
                                                        <strong class="dfund-currency">TZS</strong>
                                                    </span>
                                                    <input type="text" disabled id="DFundAmount" style="width:250px" />
                                                </div>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td class="form-label">
                                                Amount
                                                <i class="fa fa-times" style="color:white" id="_total_voucher_amount_1"></i>
                                            </td>
                                            <td>
                                                <div class="input-group">
                                                    <span class="input-group-addon" style="padding: 0">
                                                        <select style="width:70px; height:34px; font-size: 10px;font-weight: bold"
                                                                id="currencyDropDown">
                                                            <option class="payee-currency" value="TransactionAmount">TZS</option>
                                                            <option class="currency" value="OperationalAmount">TZS</option>
                                                        </select>
                                                    </span>
                                                    <amount-input id="trxOrOpAmount" onkeyup="clearVochaDetailsTable()" style="width:230px; height:35px" />
                                                </div>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td class="form-label">
                                                Transaction Amount
                                                <i class="fa fa-times" style="color:white" id="total_voucher_amount_1"></i>
                                            </td>
                                            <td>
                                                <div class="input-group">
                                                    <span class="input-group-addon">
                                                        <strong class="payee-currency">TZS</strong>
                                                    </span>
                                                    <input id="total_voucher_amount" type="text" min="0"
                                                           onkeyup="clearVochaDetailsTable()" style="width:255px" disabled>
                                                </div>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td class="form-label">
                                                Operational Amount
                                                <i class="fa fa-times" style="color:white" id="transactionAmount_1"></i>
                                            </td>
                                            <td>
                                                <div class="input-group">
                                                    <span class="input-group-addon">
                                                        <strong class="currency">TZS</strong>
                                                    </span>
                                                    <input type="text" id="operationalAmount" style="width:255px" disabled />
                                                </div>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td class="form-label">
                                                Imprest Type
                                                <i class="fa fa-times" style="color:white" id="ImpresType_1"></i>
                                            </td>
                                            <td>
                                                <div class="input-group">
                                                    <select id="ImprestType" style="width:300px">
                                                        @foreach (var ImprestType in ViewBag.ImprestTypeList)
                                                        {
                                                            <option value='@ImprestType.ImprestTypeId'>@ImprestType.ImprestTypeDesc</option>
                                                        }
                                                    </select>
                                                </div>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td class="form-label">
                                                Description
                                                <i class="fa fa-times" style="color:white" id="Description_1" maxlength="60"></i><br />
                                                (Remained characters: <i id="maxchars_c">60</i>)
                                            </td>
                                            <td>
                                                <textarea rows="2" id="Description" style="width:300px;"></textarea>
                                            </td>
                                        </tr>
                                    </table>
                                </div>

                                <div class="col-lg-6 col-sm-12 ">
                                    <table>
                                        <tr style="background-color: #FBFBFB" class="ao-fields">
                                            <td class="form-label">
                                                AO Approval Desc
                                            </td>
                                            <td>
                                                <div class="input-group">
                                                    <textarea id="AODesc" readonly="readonly"
                                                              class="form-control" style="width:300px" name="AODesc" rows="3"></textarea>
                                                </div>
                                                <i style="font-size: 9px">(AO - Accounting Officer)</i>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td class="form-label">
                                                Is Force Account?
                                            </td>
                                            <td>
                                                <input type="checkbox" style="width:30px" id="IsForceAccount">
                                                <input id="_IsForceAccount" style="width:265px;font-weight:bold" type="text" disabled value="NO">
                                            </td>
                                        </tr>
                                        <tr class="IsForceAccount">
                                            <td class="form-label">F.A Project Number </td>
                                            <td>
                                                <div class="name-input-container" style="margin-left:35px">
                                                    <input type="text" readonly id="ProjectNumber" placeholder="Search Force Account Project" style="width:228px" />
                                                    <a class="search-btn" onclick="SearchProject()"
                                                       href="#" style="float:right">
                                                        <i class="fa fa-search search-icon"></i>
                                                    </a>
                                                </div>
                                            </td>
                                        </tr>
                                        <tr class="IsForceAccount">
                                            <td class="form-label">
                                                F.A Available Amount
                                            </td>
                                            <td>
                                                <input id="AvailableAmount" style="width: 265px; font-weight: bold;margin-left:35px" type="text" disabled>
                                            </td>
                                        </tr>
                                        <tr class="is-dfund" style="background-color: #FBFBFB">
                                            <td class="form-label">
                                                Dfund Approval Desc
                                            </td>
                                            <td>
                                                <div class="input-group" style="padding-bottom: 10px">
                                                    <textarea id="dfundDesc" readonly="readonly" class="form-control" style="width:300px;" name="dfundDesc" rows="2"> </textarea>
                                                </div>
                                            </td>
                                        </tr>

                                        <tr>
                                            <td class="form-label">
                                                Operational Exchange Rate
                                            </td>
                                            <td>
                                                <div class="input-group">
                                                    <input type="text" disabled id="oprExchangeRate" style="width:300px" />
                                                </div>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td class="form-label">
                                                Transaction Exchange Rate
                                            </td>
                                            <td>
                                                <div class="input-group">
                                                    <input type="text" disabled id="trxExchangeRate" style="width:300px" />
                                                </div>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td class="form-label">
                                                Apply Date
                                                <i class="fa fa-times" style="color:white" id="ApplyDate_1"></i>
                                            </td>
                                            <td>
                                                <input type="date" style="width:300px;" id="ApplyDate">
                                            </td>
                                        </tr>
                                        <tr>
                                            <td class="form-label">
                                                Retirement Date
                                                <i class="fa fa-times" style="color:white" id="ApplyDate_1"></i>
                                            </td>
                                            <td>
                                                <input type="date" style="width:300px;" id="RetirementDate">
                                            </td>
                                        </tr>
                                        <tr>
                                            <td class="form-label">GL Items</td>
                                            <td>
                                                <a class="search-btn" onclick="SearchGl()" href="#" style="display:block;width:300px">
                                                    <i class="fa fa-search search-icon"></i>
                                                    Search...
                                                </a>
                                            </td>
                                        </tr>
                                    </table>
                                </div>
                            </div>
                            <div style="padding-top:5px">
                                <table id="dt_voucher_detail" class="table table-striped table-bordered
                                       table-hover table-condensed" width="100%"></table>
                                <div style="padding-bottom:10px" id="infoPanel">
                                    <div class="info-box">No GL Items Selected</div>
                                </div>
                            </div>
                            <!-- end widget content -->
                            <div style="float:right;padding-bottom:10px">
                                <strong>TOTAL AMOUNT (<strong class="currency">TZS</strong>): </strong>
                                <strong id="difference">0.00</strong>
                            </div>
                            <div class="row">
                                <div class="col-md-2"></div>
                                <div class="col-md-6">

                                    <a class="btn btn-info" href='@Url.Action("PendingImprest", "Imprest")' style="margin-right:5px">
                                        <i class="glyphicon glyphicon-arrow-left"></i>Back
                                    </a>
                                    <button type="button" class="btn btn-info" id="form_submision">
                                        <i class="fa fa-save"></i>Save
                                        <img src="~/Content/img/loading.gif" id="saveLoader" />
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
            </article>
        </div>
    </section>
</div>

<!----------- Search Payee ----------------->
<div class="modal fade" id="payeeModal" style="left:4%">

    <div class="modal-dialog" style="width:80%;">
        <div class="modal-content panel-info">

            <div class="modal-header panel-heading">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h3 class="modal-title"> Search Payee</h3>

            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-6">
                    </div>
                    <div class="col-md-6">
                        <div class="search-container submit-btn" style="float:right">
                            <i class="fa fa-search search-icon"></i>
                            <input type="search" name="search" placeholder="Search..." id="searchbox">
                        </div>
                    </div>
                </div>
                <table class="table" id="dt_search_payee">
                    <thead>
                        <tr>
                            <th>#</th>
                            <th>PaymentId</th>
                            <th>BIC</th>
                            <th>Payee Code</th>
                            <th>Payee Name</th>
                            <th>Account Name</th>
                            <th>Bank Name</th>
                            <th>Bank Account No</th>
                            <th>Payee Type</th>
                            <th>Currency</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
            <div class="modal-footer">
                <button class="btn btn-info" data-dismiss="modal">
                    <i class="fa  fa-times"></i>Close
                </button>
            </div>
        </div>
    </div>
</div>

<!----------- Search GL Items ----------------->
<div class="modal fade" id="glItemsModal" style="left:4%">

    <div class="modal-dialog" style="width:80%;">
        <div class="modal-content panel-info">
            <div class="modal-header panel-heading">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h3 class="modal-title"> Search Gl Item(s)</h3>
            </div>
            <div class="modal-body">
                <div>
                    <div style="display: flex; justify-content: end">
                        <div class="search-container" style="width:100%">
                            <i class="fa fa-search search-icon"></i>
                            <input type="search" name="search" placeholder="Search..." id="searchbox2" style="width:100%">
                        </div>
                    </div>
                    <table id="dt_search_gl_item" class="table table-striped table-bordered table-hover table-condensed" width="100%">
                        <thead>
                            <tr>
                                <th>#</th>
                                <th>Expenditure Line Item</th>
                                <th>Item Description</th>
                                <th id="BalanceTitle">Fund Balance</th>
                                <th id="FundingRef">Funding Reference</th>
                                <th>SubLevelCode</th>
                                <th></th>
                            </tr>
                        </thead>
                    </table>

                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-info" id="btn_save_gl_items">
                        <i class="fa fa-save"></i>Save
                    </button>
                    <button class="btn btn-info" data-dismiss="modal">
                        <i class="fa  fa-times"></i>Cancel
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

<!--- HIDDEN SECTION -->
<section id="widget-grid" style="visibility:hidden">
    <div class="row">
        <div class="jarviswidget jarviswidget-color-darken" id="wid-id-0" data-widget-colorbutton="false" data-widget-editbutton="false">

            <header style="background-color:#2196F3">
                <span class="widget-icon"> <i class="fa fa-table"></i> </span>
                <h2>Payee Details</h2>
            </header>

            <div>
                <div class="widget-body " style="padding-top:10px">
                    <a class="submit-btn" onclick="SearchPayee()" href="#">
                        <i class="fa fa-search search-icon"></i>
                        Search Payee
                    </a>
                    <table id="dt_selected_payee" class="table table-striped table-bordered table-hover table-condensed" width="100%"></table>
                </div>
                <!-- end widget content -->

            </div>
            <!-- end widget div -->

        </div>
    </div>
</section>

<!----------- Search Project ----------------->
<div class="modal fade" id="projectModal" style="left:4%">
    <div class="modal-dialog" style="width:80%;">
        <div class="modal-content panel-info">
            <div class="modal-header panel-heading">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h3 class="modal-title"> Search Project</h3>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-6">
                    </div>
                    <div class="col-md-6">
                        <div class="search-container" style="float:right">
                            <i class="fa fa-search search-icon"></i>
                            <input type="search" name="search" placeholder="Search..." id="searchbox_project">
                        </div>
                    </div>
                </div>
                <table class="table" id="dt_search_project">
                    <thead>
                        <tr>
                            <th>#</th>
                            <th>Project Number</th>
                            <th>Project Description</th>
                            <th>Project Manager</th>
                            <th>Total Amount</th>
                            <th>Commited Amount</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
            <div class="modal-footer">
                <button class="btn btn-info" data-dismiss="modal">
                    <i class="fa  fa-times"></i>Close
                </button>
            </div>
        </div>
    </div>
</div>

@section pagespecific{
    <script>

        function toggleAOFields() {
            $(".ao-fields").toggle($("#AOApprovalType").val() == 1)
        }

        toggleAOFields()

        var AOBalance = Number.MAX_SAFE_INTEGER;
        var DfundBalance = Number.MAX_SAFE_INTEGER;

        $(function () {

            if ('@ViewBag.SHOW_APPROVAL_TYPE' !== "YES") {
                $("#approvalTypeDropDown").css({ "display": 'none' })
            } else {
                AOBalance = 0
            }

            if ($("#DfundApprovalId")[0]) {
                DfundBalance = 0
            }

            $("#DfundApprovalId").select2({
                minimumInputLength: 2,
                width: 'resolve',
                ajax: {
                    url: '@Url.Action("GetApprovalByApprovalCategory", "DfundApprovals")',
                    type: "GET",
                    dataType: 'json',
                    data: function (term) {
                        return { term: term, approvalCategory: "DFund" };
                    },
                    results: function (data, page) {
                        return { results: data.approvals };
                    }
                }
            });

            $("#AOApprovalId").select2({
                minimumInputLength: 2,
                width: 'resolve',
                ajax: {
                    url: '@Url.Action("GetApprovalByApprovalCategory", "DfundApprovals")',
                    type: "GET",
                    dataType: 'json',
                    data: function (term) {
                        return { term, approvalCategory: "AO" };
                    },
                    results: function (data, page) {
                        return { results: data.approvals };
                    }
                }
            });

            $(".IsStPayment").toggle(false)
            if ('@ViewBag.isSubTreasuary' === 'True') {
                $(".IsStPayment").toggle(true)
                GetParentInstitutions();
            } else {
                $(".IsStPayment").toggle(false)
            }

        });

        $(".DfundBalance1").toggle(false);
        $("#DfundApprovalId").change(function () {
            $.ajax({
                type: "GET",
                url: '@Url.Action("GetApprovalByApprovalId", "DfundApprovals")',
                data: { id: $("#DfundApprovalId").val()},
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {
                    $("#DfundBalance").val(0)
                    DfundBalance = 0
                    if (response.balanceAmount) {
                        DfundBalance = response.balanceAmount;
                        $("#DfundBalance").val(toLabel(DfundBalance));
                        $("#dfundDesc").val(toLabel(response.description));
                        $(".dfund-currency").text(response.currency);
                    }
                },
                failure: function (error) {
                    swal(error);
                }
            });
        });

        $("#AOApprovalId").change(function () {
            $.ajax({
                type: "GET",
                url: '@Url.Action("GetApprovalByApprovalId", "DfundApprovals")',
                data: { id: $("#AOApprovalId").val()},
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {
                    $("#AOBalance").val(0)
                    AOBalance = 0
                    if (response.balanceAmount) {
                        AOBalance = response.balanceAmount;
                        $("#AOBalance").val(toLabel(AOBalance));
                        $("#AODesc").val(toLabel(response.description));
                        $(".ao-currency").text(response.currency);
                       // GetTransactionExchangeRate(response.currency);
                    }
                },
                failure: function (error) {
                    swal(error);
                }
            });
        });


        $("#trxOrOpAmount").on("keyup", function () {
            updateTransactionOperationalAmount();
        });

        $("#currencyDropDown").on("change", function () {
            updateTransactionOperationalAmount();
        });

        function updateTransactionOperationalAmount() {
            var amount = $("#trxOrOpAmount").val();
            if ($("#currencyDropDown").val() === "TransactionAmount") {
                $("#total_voucher_amount").val(toLabel(amount))
                $("#total_voucher_amount").trigger('keyup');
            } else {
                $("#operationalAmount").val(toLabel(amount));
                $("#operationalAmount").trigger('keyup')
            }
        }

        $("#total_voucher_amount").on("keyup", function () {
            if ($("#AOBalance")[0]) {
                GetAOEquivalentAmount()
            }

            if ($("#DfundBalance")[0]) {
                GetDFundEquivalentAmount();
            }

            GetOperationalAmount()
        });

        $("#operationalAmount").on("keyup", function () {
            if ($("#AOBalance")[0]) {
                GetAOEquivalentAmount()
            }

            if ($("#DfundBalance")[0]) {
                GetDFundEquivalentAmount();
            }

            GetTransactionAmount()
        });

        function GetOperationalAmount() {
            var transactionAmount = parseFloat($("#total_voucher_amount").val().replace(/,/g, ""));
            var operationExchangeRate = parseFloat($("#oprExchangeRate").val().replace(/,/g, ""));
            var transactionExchangeRate = parseFloat($("#trxExchangeRate").val().replace(/,/g, ""));

            var operationalAmount = transactionAmount * (transactionExchangeRate / operationExchangeRate);
            if (payingSameCurrency()) {
                operationalAmount = transactionAmount;
            }
            $("#operationalAmount").val(truncateToTwoDecimals(operationalAmount))
        }

        function GetTransactionAmount() {
            FixPayerAmount = true;
            var operationalAmount = toNumber($("#operationalAmount").val());
            var operationExchangeRate = $("#oprExchangeRate").val().replace(/,/g, "");
            var transactionExchangeRate = $("#trxExchangeRate").val().replace(/,/g, "");         
            var transactionAmount = operationalAmount * (operationExchangeRate / transactionExchangeRate);
            if (payingSameCurrency()) {
                transactionAmount = operationalAmount;
            }
            $("#total_voucher_amount").val(truncateToTwoDecimals(transactionAmount))
        }


        function truncateToTwoDecimals(num) {
            const parts = num.toString().split(".");
            if (parts.length === 1) return toLabel(num); // no decimals
            return toLabel(parseFloat(parts[0] + "." + (parts[1].slice(0, 2).padEnd(2, "0"))));
        }

        function payingSameCurrency() {
            const dropdown = document.getElementById("currencyDropDown");
            if (!dropdown) return false;

            const options = Array.from(dropdown.options).map(option => option.value);
            return options.every(value => value === options[0]);
        }

        function GetAOEquivalentAmount() {
            var amount = toNumber($("#total_voucher_amount").val());
            var toCurrency = $(".ao-currency").first().text();
            var fromCurrency = $(".payee-currency").first().text();
            $.ajax({
                type: "GET",
                url: "@Url.Action("GetEquivalentAmount", "PaymentVoucher")",
                data: { fromCurrency, toCurrency, amount },
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {
                    var { EquivalentAmount, IsValid, OverallStatus } = response.data;
                    if (IsValid) {
                        var bal = AOBalance - (EquivalentAmount || 0);
                        $("#AOBalance").val(toLabel(bal))
                    }
                },
                failure: function (error) {
                    swal(error);
                }
            });
        }


    $(document).ready(function () {
        $("#dt_search_gl_item_wrapper .dt-toolbar").remove();
        $("#dt_search_payee_wrapper .dt-toolbar").remove();
        $("#dt_voucher_detail_wrapper .dt-toolbar").remove();
        $("#dt_voucher_detail_wrapper .dt-toolbar-footer").remove();
        $("#dt_search_project_wrapper .dt-toolbar").remove();
        $("#errorVerification").css({'display':'none'});
    });

    $(function () {
        $('#ApplyDate').val(new Date().toDateInputValue());
        $('#RetirementDate').val(new Date().toDateInputValue());
    });

    var dt_selected_payee = $('#dt_selected_payee').dataTable({
        "data": [],
        "columnDefs": [{
            "targets": [0, 1],
            "visible": false
        }],
        "columns": [
            { title: "Payee DetailId" },
            { title: "Payee BIC" },
            { title: "Payee Code" },
            { title: "Payee Name" },
            { title: "Account Name" },
            { title: "Bank Name" },
            { title: "Bank Account No" },
            { title: "Payee Type" },
            { title: "Currency" }
        ]
    });

    Date.prototype.toDateInputValue = (function () {
        var local = new Date(this);
        local.setMinutes(this.getMinutes() - this.getTimezoneOffset());
        return local.toJSON().slice(0, 10);
    });

    $(function () {
        $('#ApplyDate').val(new Date().toDateInputValue());
        $('#RetirementDate').val(new Date().toDateInputValue());
    });

    var dt_search_payee = $('#dt_search_payee').dataTable({
        "aoColumnDefs": [{ "bVisible": false, "aTargets": [1, 2] }],
    });

    $("#searchbox").on("keyup search input paste cut", function () {
        if (!this.value) {
            dt_search_payee.fnClearTable();
        } else {
            searchPayeeTableUpdate(this.value);
        }
    });
    function searchPayeeTableUpdate(search) {
        var url = '@Url.Action("GetPayee", "PaymentVoucher")';
        $.ajax({
            type: "get",
            url: url + "/?search=" + search + "",
            contenttype: "application/json; charset=utf-8",
            datatype: "json",
            success: function (response) {
                data = response.data;
                dt_search_payee.fnClearTable();
                for (var i = 0; i < data.length; i++) {
                    dt_search_payee.fnAddData([i+1,
                       data[i]["PayeeDetailId"],
                        data[i]["BIC"],
                        data[i]["PayeeCode"],
                        data[i]["PayeeName"],
                        data[i]["AccountName"],
                       data[i]["BankName"],
                       data[i]["Accountnumber"],
                       data[i]["PayeeType"],
                       data[i]["Currency"],
                       '<a href="#" onclick="payeeClicked(' + i + ')"><i class="glyphicon glyphicon-plus-sign"></i></a>'
                    ]);
                }
            },
            failure: function (error) {
                swal(error);
            }
        });
    }
    var isValidPayee = false;
        function payeeClicked(rowId) {
        var data = dt_search_payee.DataTable().rows().data();
            var row = data[rowId];

        dt_selected_payee.fnClearTable();
        $("#PayeeName").val("Verifying...");
        dt_selected_payee.fnAddData([row[1], row[2], row[3], row[4], row[5], row[6], row[7], row[8], row[9]]);
        $("#PayeeAccountNumber").val(`${row[9]} - ${row[7]}`);
            $("#payeeModal").modal("hide");
            $(".payee-currency").text(row[9]);
            $("#ImprestType").prop("disabled", false)

            var CheckAccountType = function () {
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("CheckAccountType", "Imprest")',
                    data: { AccountNumber: row[7] },
                    contenttype: "application/json; charset=utf-8",
                    datatype: "json",
                    success: function (response) {
                        if (response.data === "Valid") {
                            $("#ImprestType").val(2)
                            $("#ImprestType").prop("disabled", true)
                        }
                    },
                    failure: function (error) {
                        swal(error);
                    }
                });
            }
            CheckAccountType()

        var checkPayee = function (payeeCode) {
            $.ajax({
                type: "POST",
                url: '@Url.Action("CheckPayeeRetirementStatus", "Imprest")',
                data: { "payeeCode": payeeCode },
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {
                    switch (response) {
                        case "Valid":
                            isValidPayee = true;
                            $("#errorVerification").css({ 'display': 'none' });
                            $("#verificationIcons")
                                .replaceWith('<i class="glyphicon glyphicon-ok" style="color:green" id="verificationIcons"></i>');
                            break;
                        case "Invalid":
                            isValidPayee = false;
                            $("#errorVerification").css({ 'display': 'block' });
                            $("#verificationIcons")
                            .replaceWith('<i class="glyphicon glyphicon-remove" style="color:red" id="verificationIcons"></i>');
                            break;
                        default:
                            isValidPayee = false;
                            swal(response)
                    }
                    $("#PayeeName").val(row[4]);
                    /*$("#PayeeName").val(row[3]);*/

                },
                failure: function (error) {
                    swal(error);
                }
            });
        }
        checkPayee(row[3]);
    }

        var dt_voucher_detail = $('#dt_voucher_detail').dataTable({
            "data": [],
            "paging": false,
            "columns": [
                { title: "Expenditure Line Item" },
                { title: "Item Description" },
                { title: "Funding Reference" },
                { title: "Fund Balance" },
                { title: "SubLevelCode" },
                { title: "Expense Amount" },
                { title: "" }
            ]
        });

    function SearchPayee() {
        $('#payeeModal').modal('show');
    }

        var dt_search_gl_item = $('#dt_search_gl_item').dataTable({
            "language": {
                "emptyTable": '<strong id="loader" style="color:green">No matching records found</strong>',
                "zeroRecords": "No matching records found"
            },
        });

        let prevSearch = ""
        $("#searchbox2").on("keyup search input paste cut", function () {
            setTimeout(() => {
                if (prevSearch != this.value) {
                    updateSearchGITable()
                    prevSearch = this.value
                }
            }, 2000);
        });

    var SubBudgetClassOld = $("#SubBudgetClass").val();

    $("#SubBudgetClass").change(function () {

        var _data = dt_voucher_detail.DataTable().rows().data();
        if (_data.length > 0) {
            confirmSubBudgetClassChange(SubBudgetClassOld, $(this).val());
        } else {
           // updateSearchGITable($(this).val());
        }

        SubBudgetClassOld = $(this).val();
        var subBudgetClassList = SubBudgetClassOld.split(";");
        var subBudgetClass = subBudgetClassList[0].trim();
        $(".currency").text(subBudgetClassList[1].trim());
        $("#_total_voucher_amount").val(0)
        $("#total_voucher_amount").val(0)
        GetExchangeRates(subBudgetClassList[1].trim());
        fetchPayerAccounts(subBudgetClass)
        GetFundBalanceSum()
    });

        var isExchangeRateValid = false;
        function GetExchangeRates() {
            $("#_operationalAmount").val(0)
            $("#_total_voucher_amount").val(0)
            $.ajax({
                type: "GET",
                url: "@Url.Action("GetExchangeRate", "PaymentVoucher")",
                data: {
                    transactionCurrency: $(".payee-currency").first().text(),
                    operationCurrency: $(".currency").first().text(),
                    //applyDate: $("#InvoiceDate").val()
                },
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {
                    var {
                        TransactionExchangeRate,
                        ExchangeRateType,
                        OperationExchangeRate,
                        OverallStatus,
                        IsValid
                    } = response.data
                    if (IsValid) {
                        isExchangeRateValid = true;
                        $(".trxExchangeRateType").val(ExchangeRateType);
                        $("#trxExchangeRate").val(thSeparetor(TransactionExchangeRate?.toFixed(4)));
                        $("#oprExchangeRate").val(thSeparetor(OperationExchangeRate?.toFixed(4)));
                    } else {
                        isExchangeRateValid = false;
                        swal(OverallStatus)
                    }
                },
                failure: function (error) {
                    swal(error);
                }
            });
        }

        const thSeparetor = (num) => {
            if(!num) return 0
            const [integerPart, decimalPart] = num.toString().split('.'); // Split by the decimal point
            const formattedInteger = integerPart.replace(/\B(?=(\d{3})+(?!\d))/g, ','); // Add commas
            return decimalPart ? `${formattedInteger}.${decimalPart}` : formattedInteger;
        };

  let data = []
  function updateSearchGITable() {

      dt_search_gl_item.fnClearTable();
      $("#loader").text("Loading Please Wait...")

      var subBudgetClassList = $("#SubBudgetClass").val()
      subBudgetClassList = subBudgetClassList.split(";");
      var subBudgetClass = subBudgetClassList[0].trim();
      var url = '@Url.Action("GetFundBalanceServerSide", "PaymentVoucher")';
      var SearchKeyword = $("#searchbox2").val()
      var fundBalanceParams = {
          subBudgetClass,
          instCode: '@ViewBag.isSubTreasuary' === 'True' ? $("#ParentInstitution").val().split("-")[0].trim() : "UNKNOWN",
          subWarrantCode:  '@ViewBag.isSubTreasuary' === 'True' ? $("#SubWarrant").val().split("-")[0].trim() : "UNKNOWN",
          applyDate: $("#ApplyDate").val(),
          JournalTypeCode: '@ViewBag.isEmbassy' === "True"? "PVE" : "UNKNOWN",
          IsAccrualVoucher: $("#IsAccrualVoucher").is(":checked"),
          SearchKeyword: SearchKeyword.trim().split("-").join("|")
      };

      $.ajax({
          type: "GET",
          url: url,
          data: fundBalanceParams,
          contenttype: "application/json; charset=utf-8",
          datatype: "json",
          success: function (response) {
              data = response.data;
              updateGLSearchTable(data)
          },
          failure: function (error) {
              swal(error);
          }
      });
  }

  function glCheckBox(id) {
      if (selectedGlItems[id]) {
          return `<input type="checkbox" checked onclick="glClicked(this,'${id}')"/>`;
      }
      return `<input type="checkbox" onclick="glClicked(this,'${id}')"/>`;
  }

  function updateGLSearchTable() {
      dt_search_gl_item.fnClearTable();
      for (var i = 0; i < data.length; i++) {
          let id = `${data[i].GlAccount}_${data[i].FundingRefNo}`;
          data[i].id = id;
          if ($("#IsAccrualVoucher").is(":checked")) {
              dt_search_gl_item
                  .fnAddData([i + 1,
                      data[i]["GlAccount"].split("|").join("-"),
                      data[i]["GlAccountDesc"],
                      toLabel(data[i]["BudgetBalance"] || 0),
                      'NA',
                      data[i]["SublevelCode"],
                      glCheckBox(id)
              ]);
          } else {
              dt_search_gl_item
                  .fnAddData([i + 1,
                      data[i]["GlAccount"].split("|").join("-"),
                      data[i]["GlAccountDesc"],
                      toLabel(data[i]["FundBalance"]),
                      data[i]["FundingRefNo"],
                      data[i]["SublevelCode"],
                      glCheckBox(id)
              ]);
          }
      }

      if (data.length == 0) {
          $("#loader").text("No Matching Record Found")
      } else {
          $("#loader").text("")
      }
  }

  let selectedGlItems = {}
  function glClicked(cb, id) {
      if (cb.checked) {
          let row = data.filter(a => a.id == id)[0];
          selectedGlItems[id] = row
      } else {
          delete selectedGlItems[id]
      }
      toggleTableInfo()
      computeTotalAmount();
  }

  var TotalAmountOld = toNumber($("#total_voucher_amount").val());
  function clearVochaDetailsTable() {
      var _data = dt_voucher_detail.DataTable().rows().data();

      if (_data.length > 0) {
          confirmTotalAmountChange(TotalAmountOld, toNumber($("#total_voucher_amount").val()));
      }
      TotalAmountOld = $("#total_voucher_amount").val();
  }


  function resetVochaDetailsTable() {
      $("#total_amount").text("0.00");
      dt_voucher_detail.fnClearTable();
  }

  let prevSBC = null;
  function SearchGl() {
      if (voucherSummaryFormValidation()) {
          if (prevSBC !== $("#SubBudgetClass").val()) {
              selectedGlItems = {}
          }

          if (toNumber($("#FundBalance").val()) <= 0) {
              swal("Sorry, You have insufficient balance you cannot proceed with payment.")
              return;
          }

          prevSBC = $("#SubBudgetClass").val()
          $('#total_voucher_amount2').val(toLabel($('#operationalAmount').val()));
          computeTotalAmount();
          updateSearchGITable();
          $('#glItemsModal').modal('show');
      }
  }

  function remove(array, val) {
      var found = array.indexOf(val);
      while (found !== -1) {
          array.splice(found, 1);
          found = array.indexOf(val);
      }
  }

  var form_data_status = [];
  var all_amounts = {};
  function amountChanged(input, Id) {
      var child = $(input).children().first();
      if (child.val() || child.val() == 0) {
          let Amount = toNumber(child.val() || "0");

          let row = selectedGlItems[Id]
          selectedGlItems[Id] = { ...row, Amount };
          var fundBalance = row.FundBalance
          if ($("#IsAccrualVoucher").is(":checked")) {
              fundBalance = row.BudgetBalance
          }

          if (toNumber(fundBalance) >= Amount) {
              $(input).css({ 'color': 'black' });
              remove(form_data_status, Id);
          } else {
              form_data_status.push(Id);
              $(input).css({ 'color': 'red' });
          }
      }
      computeTotalAmount();
  }

  function computeTotalAmount() {
      var total_amount = 0;
      var difference = 0;
      $('#difference').text($('#operationalAmount').val());
      console.log($('#operationalAmount').val())
      Object.keys(selectedGlItems).forEach(Id => {
          total_amount += (selectedGlItems[Id].Amount || 0)
      })

      try {
          difference = toNumber($('#operationalAmount').val()).toFixed(2) - toNumber(total_amount).toFixed(2);
          $('#difference').text(toLabel(difference));
          if (difference < 0) {
              $("#difference").css({ 'color': 'red' });
          } else {
              $("#difference").css({ 'color': 'black' });
          }
      } catch (e) { }
  }

  $("#btn_save_gl_items").click(function () {
      toggleTableInfo()
      $('#glItemsModal').modal('hide');
  });

  function removeGlItem(Id) {
      delete selectedGlItems[Id]
      toggleTableInfo();
      computeTotalAmount();
  }

  toggleTableInfo();
  function toggleTableInfo() {
      dt_voucher_detail.fnClearTable()
      Object.keys(selectedGlItems).forEach(key => {
          let item = selectedGlItems[key]
          let Id = `${item.GlAccount}_${item.FundingRefNo}`;
          let amount = toLabel(selectedGlItems[Id]?.Amount || 0);
          if (item.GlAccount) {
              dt_voucher_detail.fnAddData([
                  item.GlAccount.split("|").join("-"),
                  item.GlAccountDesc,
                  item.FundingRefNo,
                  toLabel($("#IsAccrualVoucher").is(":checked")?item.BudgetBalance : item.FundBalance),
                  item.SublevelCode,
                  `<amount-input placeholder="Amount" onkeyup="amountChanged(this,'${Id}')" value="${amount}"/>`,
                  `<button onclick="removeGlItem('${Id}')" style="background-color: white;border:none;color: blue"><i class="glyphicon glyphicon-trash"></i></button>`
              ]);
          }
      });

      if (Object.keys(selectedGlItems).length) {
          $("#dt_voucher_detail").toggle(true);
          $("#infoPanel").toggle(false);
      } else {
          $("#dt_voucher_detail").toggle(false);
          $("#infoPanel").toggle(true);
      }
  }

    $("#saveLoader").toggle(false);
    $("#form_submision").click(function () {
        if (toNumber($("#difference").val()) != 0) {
            swal("Difference Must be Zero.");
        }
        else {
            if (voucherSummaryFormValidation() && isValidPayee) {
                try {
                    var data = dt_selected_payee.DataTable().rows().data();
                    var row = data.rows(0).data()[0];
                    var subBudgetClassList = $("#SubBudgetClass").val().split(";");
                    var subBudgetClass = subBudgetClassList[0].trim();
                    var exchangeRate = subBudgetClassList[2].trim();
                    var baseCurrencyCode = subBudgetClassList[3].trim();
                    var operationalCurrencyCode = subBudgetClassList[1].trim();

                    var baseAmount = parseFloat($("#total_voucher_amount").val().split(",").join("")) * exchangeRate;

                    var voucherDetails = []

                    Object.keys(selectedGlItems).forEach(key => {
                        let row = selectedGlItems[key]
                        if (toNumber(row.Amount) > 0) {
                            voucherDetails.push({
                                "CrGlAccount": row.GlAccount.split("-").join("|"),
                                "CrGlAccountDesc": row.GlAccountDesc,
                                "FundingRef": row.FundingRefNo,
                                "IssuedAmount": row.Amount
                            })
                        }
                    })

                    var form_data = {
                        "PayeeId": row[0],
                        "PayeeName": row[3],
                        "PayeeCode": row[2],
                        "PayeeBIC": row[1],
                        "PayeeBankName": row[5],
                        "PayeeAccountName": row[4],
                        "PayeeType": "EMPLOYEE",
                        "PayeeBankAccount": row[6],
                        "PayeeAddress": row[8],
                        "Description": $("#Description").val(),
                        "SubBudgetClass": subBudgetClass,
                        "OperationalAmount": toNumber($("#operationalAmount").val()),
                        "BaseAmount": baseAmount,
                        "ExchangeRate": exchangeRate,
                        OperationalCurrency: operationalCurrencyCode,
                        "BaseCurrencyCode": baseCurrencyCode,
                        "ApplyDate": $("#ApplyDate").val(),
                        "RetirementDate": $("#RetirementDate").val(),
                        "ImprestTypeDesc": $("#ImprestType :selected").text(),
                        "ImprestTypeId": $("#ImprestType").val(),
                        "ImprestDetails": voucherDetails,
                        IsStPayment:  '@ViewBag.isSubTreasuary' === 'True',
                        ParentInstitutionCode: $("#ParentInstitution").val() ? $("#ParentInstitution").val().split("-")[0].trim() : '',
                        ParentInstitutionName: $("#ParentInstitution").val() ? $("#ParentInstitution").val().split("-")[1].trim() : '',
                        SubWarrantCode: $("#SubWarrant").val() ? $("#SubWarrant").val().split("-")[0].trim() : '',
                        SubWarrantDescription: $("#SubWarrant").val() ? $("#SubWarrant").val().split("-")[1].trim() : '',
                        ForceAccountProjectId: selectedProjectId,
                        IsForceAccount: $("#IsForceAccount").is(":checked"),

                        DfundApprovalId: $("#DfundApprovalId").val() || 0,
                        DfundApprovalRef: $("#DfundApprovalId").select2('data')?.text.split("-")[0].trim(),
                        DfundTitle: $("#DfundApprovalId").select2('data')?.text.split("-")[1].trim(),

                        AOApprovalId: $("#AOApprovalId").val() || 0,
                        AOApprovalRef: $("#AOApprovalId").select2('data')?.text.split("-")[0].trim(),
                        AOApprovalTitle: $("#AOApprovalId").select2('data')?.text.split("-")[1].trim(),

                        TransactionAmount: toNumber($("#total_voucher_amount").val()),
                        TransactionExchangeRate: $("#trxExchangeRate").val(),
                        TransactionCurrency: $(".payee-currency").first().text(),
                        OperationalExchangeRate: $("#oprExchangeRate").val(),
                        TransactionExchangeRateDate: $("#trxExchangeRateDate").val(),

                        DfundAmount: $("#DFundAmount").val()
                    }

                    if (!isExchangeRateValid) {
                        swal("Exchange rate is missing, Please contact system suppport!")
                        return;
                    }


                    if (voucherDetails.length == 0) {
                        swal("No GL Items Selected")
                    } else {
                        var url = '@Url.Action("CreateImprest", "Imprest")';
                        var urlList = '@Url.Action("PendingImprest", "Imprest")';
                        $("#form_submision").prop('disabled', true);
                        $("#saveLoader").toggle(true);
                        $.ajax({
                            type: "POST",
                            url: url,
                            data: form_data,
                            contenttype: "application/json; charset=utf-8",
                            datatype: "json",
                            success: function (response) {
                                $("#form_submision").prop('disabled', false);
                                $("#saveLoader").toggle(false);
                                if (response == "Success") {
                                    swal("Saved Successfully!", { icon: "success" })
                                        .then((value) => {
                                            window.location.href = urlList;
                                        });
                                }
                                else {
                                    swal(response);
                                }
                            },
                            failure: function (error) {
                                $("#form_submision").prop('disabled', false);
                                $("#saveLoader").toggle(false);
                                swal(error);
                            }
                        });
                    }
                } catch (e) {
                    swal("Error Saving. Please consult system administrator!");
                }
            }
        }
    });

    var controlNumberIsProvided = false;

    function voucherSummaryFormValidation() {
        $("#SubBudgetClass_1").attr("style", "color: white;");

        var isNotValid = validateInputsParameters([
            "#PayeeName",
            "#Description",
            "#total_voucher_amount",
            "#ApplyDate",
            "#RetirementDate",
        ]);

        if (isNotValid) {
            $(isNotValid + "_1").attr("style", "color: red;");
            swal("Please provide the missing details.!");
            return false
        }

        if ($("#SubBudgetClass").val().trim() == "Please choose sub budget class") {
            $("#SubBudgetClass_1").attr("style", "color: red;");
            return false
        }

        if ($("#IsForceAccount").is(":checked")) {
            if (!selectedProjectId) {
                swal("No force account project selected!")
                return false
            }

            if (toNumber($("#total_voucher_amount").val()) > toNumber($("#AvailableAmount").val())) {
                swal("Total voucher amount cannot exceed Force Account available Amount.")
                return false
            }

        }

        if (toNumber($("#operationalAmount").val()) > AOBalance) {
            $("#AOApprovalRef_1").attr("style", "color: red;");
            swal("Total voucher amount exceeds AO balance. or Approval reference is missing!")
            return false
        }

        if ($("#DfundApprovalId")[0]) {
            if (toNumber($("#DFundAmount").val()) > DfundBalance) {
               // swal("Total voucher amount exceeds DFund balance!")
               // return false
            }
        }

        return true
    }

    function validateInputsParameters(parameterList) {
        var resetStyle = function (parameterList) {
            for (var i = 0; i < parameterList.length; i++) {
                $(parameterList[i] + "_1").attr("style", "color: white;");
            }
        }

        resetStyle(parameterList);
        for (var i = 0; i < parameterList.length; i++) {
            if (!$(parameterList[i]).val().trim()) {
                return parameterList[i];
            }
        }
        return null;
    }

    function confirmTotalAmountChange(oldVal, newVal) {
        swal({
            title: 'Change Total Amount?',
            text: "All the GL Items will be Cleared",
            buttons: [
              'Cancel',
              'Proceed'
            ],
        }).then(function (isConfirmed) {
            if (isConfirmed) {
                $("#total_voucher_amount").val(newVal);
                dt_voucher_detail.fnClearTable();
                $("#total_amount").load(location.href + " #total_amount");
                $("#total_line_amount").val(0);

                all_amounts = {};
                updateSearchGITable($("#SubBudgetClass").val());
                computeTotalAmount();

                swal({
                    title: 'Success',
                    icon: 'success'
                });
            } else {
                $("#total_voucher_amount").val(oldVal);
                TotalAmountOld = oldVal;
                swal("Cancelled", "No change was made");
            }
        });

    }

    function confirmSubBudgetClassChange(oldVal, newVal) {
        swal({
            title: 'Change Sub Budget Class?',
            text: "All the GL Items will be Cleared",
            buttons: [
              'Cancel',
              'Proceed'
            ],
        }).then(function (isConfirmed) {
            if (isConfirmed) {
                dt_voucher_detail.fnClearTable();
                $("#total_amount").load(location.href + " #total_amount");
                $("#total_line_amount").val(0);
                all_amounts = {};
                updateSearchGITable(newVal);
                computeTotalAmount();
                swal({
                    title: 'Success',
                    icon: 'success'
                });
            } else {
                $("#SubBudgetClass").val(oldVal).prop('selected', true);
                SubBudgetClassOld = $("#SubBudgetClass").val();
                swal("Cancelled", "No change was made");
            }
        });

    }

    $("#total_voucher_amount").on("keyup input paste", function () {
        $("#total_voucher_amount").val(inputThousandSeparator(this.value))
    })

    var OldVal = 0
    function inputThousandSeparator(NewVal) {
        if (NewVal) {
            try {
                NewVal = parseFloat(NewVal.split(",").join(""))
                if (typeof NewVal == 'number' && !Number.isNaN(NewVal)) {
                    OldVal = NewVal;
                    return NewVal.toLocaleString()
                } else {
                    return OldVal
                }
            } catch (e) {
                console.log(e)
            }
        }
    }

    $("#Description").on("keyup", function (e) {
        $("#maxchars_c").text(60 - this.value.length)

        if (this.value.length>60) {
            swal("Maximum Characters reached!");
        }
    });

    $(".IsStPayment").toggle(false)

    function GetParentInstitutions() {
        $.ajax({
            type: "GET",
            url: "@Url.Action("GetParentInstitutions", "PaymentVoucher")",
            contenttype: "application/json; charset=utf-8",
        datatype: "json",
        success: function (response) {
            if (response.data) {
                let dropDown = document.getElementById("ParentInstitution")
                dropDown.innerHTML = ''
                response.data.forEach(v=> {
                    let option = document.createElement('option')
                    option.value = `${v.ParentInstitutionCode}-${v.ParentInstitutionName}`
                    option.innerHTML = `${v.ParentInstitutionCode}-${v.ParentInstitutionName}`
                    dropDown.appendChild(option)
                })
                $("#ParentInstitution").trigger("change")
            }
        },
        failure: function (error) {
            swal(error);
        }
    });
    }

    $("#ParentInstitution").change(function () {
        GetSubWarrants(this.value.split("-")[0].trim())
    });

    function GetSubWarrants(institutionCode) {
        $.ajax({
            type: "GET",
            url: "@Url.Action("GetSubWarrants", "PaymentVoucher")",
            data: { institutionCode },
        contenttype: "application/json; charset=utf-8",
        datatype: "json",
        success: function (response) {
            if (response.data) {
                let dropDown = document.getElementById("SubWarrant")
                dropDown.innerHTML = ''
                response.data.forEach(v=> {
                    let option = document.createElement('option')
                    option.value = `${v.SubWarrantCode}-${v.SubWarrantDescription}`
                    option.innerHTML = `${v.SubWarrantCode}-${v.SubWarrantDescription}`
                    dropDown.appendChild(option)
                })
            }
        },
        failure: function (error) {
            swal(error);
        }
    });
    }

       //===================================== PROJECT SEARCH

        function SearchProject() {
            $('#projectModal').modal('show');
        }

        var dt_search_project = $('#dt_search_project').dataTable();

        $("#searchbox_project").on("keyup search input paste cut", function () {
            if (!this.value) {
                dt_search_project.fnClearTable();
            } else {
                searchProjectTableUpdate(this.value);
            }
        });

            var projects = []
        function searchProjectTableUpdate(search) {
            $.ajax({
                type: "GET",
                url:'@Url.Action("SearchProject", "ForceAccountPayment")/?query='+search,
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {
                    projects = response.data;
                    dt_search_project.fnClearTable();
                    for (var i = 0; i < projects.length; i++) {
                        dt_search_project.fnAddData([i + 1,
                            projects[i]["ProjectNumber"],
                            projects[i]["ProjectDescription"],
                            projects[i]["ProjectManager"],
                            toLabel(projects[i]["EstimatedProjectAmount"]),
                            toLabel(projects[i]["AmountCommitted"]),
                            '<a href="#" onclick="projectClicked(' + projects[i]["ForceAccountPaymentRegistrationId"] + ')"><i class="glyphicon glyphicon-plus-sign"></i></a>'
                      ]);
                    }
                },
                failure: function (error) {
                    swal(error);
                }
            });
        }

        var selectedProjectId = 0
        function projectClicked(projectId) {
            selectedProjectId = projectId
            var project = projects.filter(p => p.ForceAccountPaymentRegistrationId == projectId)[0]
            $("#ProjectNumber").val(project.ProjectNumber);
            $("#AvailableAmount").val(toLabel(project.EstimatedProjectAmount - project.AmountCommitted));
            $("#projectModal").modal("hide");
        }

        $(".IsForceAccount").toggle(false)
        $("#IsForceAccount").change((e) => {
            $("#_IsForceAccount").val(e.target.checked ? "YES" : "NO")
            if (e.target.checked) {
                $(".IsForceAccount").toggle(true)
            } else {
                $(".IsForceAccount").toggle(false)
            }
        });

        function fetchPayerAccounts(sbc) {
           $.ajax({
               type: "GET",
               url: "@Url.Action("GetAccountsBySBC", "PaymentVoucher")",
               data: { sbc },
               contenttype: "application/json; charset=utf-8",
               datatype: "json",
               success: function (response) {
                   createBankAccounts(response.data)
               },
               failure: function (error) {
                   swal(error);
               }
           });
       }

        function createBankAccounts(items) {
            var select = document.getElementById("PayerAccount")
            select.innerHTML = ''
            let opt = document.createElement('option')
            opt.text = "Select Payer Account"
            select.appendChild(opt);
            items.forEach(item => {
                let option = document.createElement('option')
                option.value = item.AccountNumber
                option.text = `${item.OperationalCurrencyCode} - ${item.AccountNumber}`
                select.appendChild(option);
            });
        }


        $("#PayerAccount").change(function () {
            isDfundInstitution(this.value);
        });

        $(".is-dfund").toggle(false);
        function isDfundInstitution(account) {
            $.ajax({
                type: "GET",
                url: "@Url.Action("IsDfundInstitution", "PaymentVoucher")",
                data: { account },
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {
                    DfundBalance = AOBalance;
                    if (response.isDfund) {
                        DfundBalance = 0
                    }
                    $(".is-dfund").toggle(response.isDfund === 1)
                },
                failure: function (error) {
                    swal(error);
                }
            });
        }

        function GetDfundExchangeRate(currencyCode, baseCurrency) {
            $.ajax({
                type: "GET",
                url: "@Url.Action("GetExchangeRate", "PaymentVoucher")",
                data: { currencyCode, baseCurrency },
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {
                    var { ExchangeRate } = response.data
                    $("#dfundExchangeRate").val(toLabel(ExchangeRate));
                    $("#DfundEquivalentAmount").val(toLabel(ExchangeRate * toNumber($("#DfundBalance").val())));
                },
                failure: function (error) {
                    swal(error);
                }
            });
        }

        function GetEquivalentAmount() {
            var amount = toNumber($("#total_voucher_amount").val());
            var subBudgetClassList = SubBudgetClassOld.split(";");
            var toCurrency = subBudgetClassList[1].trim();
            var fromCurrency = $(".payee-currency").first().text();
            $.ajax({
                type: "GET",
                url: "@Url.Action("GetEquivalentAmount", "PaymentVoucher")",
                data: { fromCurrency, toCurrency, operationCurrency: toCurrency, amount },
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {
                    var { EquivalentAmount, IsValid, OverallStatus } = response.data;
                    if (IsValid) {
                        $("#operationalAmount").val(toLabel(EquivalentAmount || 0))
                    } else {
                        $("#operationalAmount").val(OverallStatus)
                    }
                },
                failure: function (error) {
                    swal(error);
                }
            });
        }

        function GetDFundEquivalentAmount() {
            var amount = toNumber($("#total_voucher_amount").val());
            var toCurrency = $(".dfund-currency").first().text();
            var fromCurrency = $(".payee-currency").first().text();
            var subBudgetClassList = SubBudgetClassOld.split(";");
            var operationCurrency = subBudgetClassList[1].trim();
            $.ajax({
                type: "GET",
                url: "@Url.Action("GetEquivalentAmount", "PaymentVoucher")",
                data: { fromCurrency, toCurrency, operationCurrency, amount },
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {
                    var { EquivalentAmount, IsValid, OverallStatus } = response.data;
                    if (IsValid) {
                        $("#DFundAmount").val(toLabel(EquivalentAmount || 0))
                    } else {
                        $("#DFundAmount").val(OverallStatus)
                    }
                },
                failure: function (error) {
                    swal(error);
                }
            });
        }


        function GetFundBalanceSum() {

     var subBudgetClassList = $("#SubBudgetClass").val()
     subBudgetClassList = subBudgetClassList.split(";");
     var subBudgetClass = subBudgetClassList[0].trim();
     var url = '@Url.Action("GetFundBalanceServerSide", "PaymentVoucher")';

     var fundBalanceParams = {
         subBudgetClass,
         instCode: '@ViewBag.isSubTreasuary' === 'True' ? $("#ParentInstitution").val().split("-")[0].trim() : "UNKNOWN",
         subWarrantCode:  '@ViewBag.isSubTreasuary' === 'True' ? $("#SubWarrant").val().split("-")[0].trim() : "UNKNOWN",
         applyDate: $("#ApplyDate").val(),
         JournalTypeCode: '@ViewBag.isEmbassy' === "True"? "PVE" : "UNKNOWN",
         IsAccrualVoucher: $("#IsAccrualVoucher").is(":checked"),
     };

     $.ajax({
         type: "GET",
         url: "@Url.Action("GetFundBalanceSum", "PaymentVoucher")",
         data: fundBalanceParams,
         contenttype: "application/json; charset=utf-8",
         datatype: "json",
         success: function (response) {
             $("#FundBalance").val(toLabel(response.data || 0))
         },
         failure: function (error) {
             swal(error);
         }
     });
 }
    </script>
}


