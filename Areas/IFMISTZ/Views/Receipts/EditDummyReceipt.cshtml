@model IFMIS.Areas.IFMISTZ.Models.EditDummyReceiptVM

<!-- MAIN CONTENT -->
<div id="content" style="margin: 5px; padding-top: 30px">

    <div class="row">
        @*<div class="col-xs-12 col-sm-9 col-md-9 col-lg-9">
                <h1 class="page-title txt-color-blueDark">

                    <!-- PAGE HEADER -->
                    <!--
                    <i class="fa-fw fa fa-pencil-square-o"></i>
                    Payments
                    <span>
                        >
                        Bills
                    </span>
                        -->
                </h1>
            </div>*@

        <div class="col-xs-12 col-sm-3 col-md-3 col-lg-3">
            <!-- Button trigger modal -->
            <!--<a data-toggle="modal" href="#myModal" class="btn btn-success btn-lg pull-right header-btn hidden-mobile"><i class="fa fa-circle-arrow-up fa-lg"></i> Launch form modal</a>-->
        </div>
    </div>

    <!--
    <div class="alert alert-block alert-success">
        <a class="close" data-dismiss="alert" href="#">×</a>
        <h4 class="alert-heading"><i class="fa fa-check-square-o"></i> Check validation!</h4>
        <p>
            You may also check the form validation by clicking on the form action button. Please try and see the results below!
        </p>
    </div>
        -->
    <!-- widget grid -->
    <section id="widget-grid" class="">


        <!-- START ROW -->

        <div class="row">

            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">

                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">
                    <!-- widget options:
                        usage: <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false">

                        data-widget-colorbutton="false"
                        data-widget-editbutton="false"
                        data-widget-togglebutton="false"
                        data-widget-deletebutton="false"
                        data-widget-fullscreenbutton="false"
                        data-widget-custombutton="false"
                        data-widget-collapsed="true"
                        data-widget-sortable="false"

                    -->
                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2> Edit Receipt </h2>

                    </header>

                    <!-- widget div-->
                    <div>

                        <!-- widget edit box -->
                        <div class="jarviswidget-editbox">
                            <!-- This area used as dropdown edit box -->

                        </div>
                        <!-- end widget edit box -->
                        <!-- widget content -->
                        <div class="widget-body">
                            <form action="@Url.Action("CreateReceipt")" method="post" class="form-horizontal">
                                @Html.AntiForgeryToken()
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                @Html.HiddenFor(model => model.ReceiptId)                                

                                <div class="form-group">
                                    @Html.LabelFor(model => model.ReferenceNo, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4">
                                        @Html.EditorFor(model => model.ReferenceNo, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.ReferenceNo, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.OperationalAmount, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4">
                                        @Html.EditorFor(model => model.OperationalAmount, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.OperationalAmount, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.InstitutionAccountId, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4">
                                        @Html.EditorFor(model => model.InstitutionAccountId, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.InstitutionAccountId, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.ReceiptDate, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4">
                                        @Html.TextBoxFor(model => model.ReceiptDate, new { @class = "form-control", @autocomplete = "off" })
                                        @Html.ValidationMessageFor(model => model.ReceiptDate, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.CustomerName, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4">
                                        @Html.EditorFor(model => model.CustomerName, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.CustomerName, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.CustomerAddress, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4">
                                        @Html.TextAreaFor(model => model.CustomerAddress, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.CustomerAddress, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4">
                                        @Html.TextAreaFor(model => model.Remarks, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.DFundSourceId, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4">
                                        @Html.EditorFor(model => model.DFundSourceId, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.DFundSourceId, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-actions">
                                    <div class="row">
                                        <div class="col-md-8 col-md-offset-2">
                                            <button class="btn btn-info" type="submit" style="float: left" ng-click="CreateBill()">
                                                <i class="fa fa-save"></i>
                                                Save
                                            </button>
                                            <a href="@Url.Action("PendingReceipts","Receipts")" class="btn btn-info" style="float: left; margin-left: 5px">
                                                <i class="fa fa-arrow-left"></i>
                                                Back
                                            </a>
                                        </div>
                                    </div>
                                </div>
                            </form>
                        </div>
                        <!-- end widget content -->
                    </div>
                    <!-- end widget div -->

                </div>
                <!-- end widget -->

            </article>
            <!-- END COL -->

        </div>

        <!-- END ROW -->

    </section>
    <!-- end widget grid -->

</div>
<!-- END MAIN CONTENT -->

<!-- END MAIN CONTENT -->
@section pagespecific {
    <script type="text/javascript">
    // DO NOT REMOVE : GLOBAL FUNCTIONS!
    $('#ReceiptDate').datepicker({
        dateFormat: "yy-mm-dd",
        changeMonth: true,
        changeYear: true,
        showOn: "button",
        prevText: '<i class="fa fa-chevron-left"></i>',
        nextText: '<i class="fa fa-chevron-right"></i>'
    }).css("display", "inline-block")
                .next("button").button({
                    icons: { primary: "ui-icon-calender" },
                    label: "Select Date",
                    text: false
                });

    $("#InstitutionAccountId").select2({
        minimumInputLength: 2,  // minimumInputLength for sending ajax request to server
        width: 'resolve',   // to adjust proper width of select2 wrapped elements
        ajax: {
            url: '@Url.Action("GetInstitutionAccounts", "Receipts")', // Controller - Select2Demo and Action -AccessRemoteData
            type: "POST",
            dataType: 'json',
            data: function (term) {
                return {
                    term: term
                };
            },
            results: function (data, page) {
                return { results: data.coas }; // data.CountryList returning json data from Controlle
            }
        }
    });

    $('#InstitutionAccountId').on("change", function () {
        var institutionAccountId = $("#InstitutionAccountId").val();
        $.ajax({
            type: "POST",
            url: "GetInstitutionAccount",
            data: { id: institutionAccountId },
            success: function (data, status, jqXHR) {
                if (data.success) {
                    $("#DrGlAccount").val(data.DrGlAccount);
                    $("#DrGlAccountDesc").val(data.DrGlAccountDesc);
                    $("#ReceivingBankName").val(data.ReceivingBankName);
                    $("#ReceivingBankBIC").val(data.ReceivingBankBIC);
                    $("#ReceivingBankAccountName").val(data.ReceivingBankAccountName);
                    $("#ReceivingBankAccountNo").val(data.ReceivingBankAccountNo);
                } else {
                    alert('Error on accessing cash account details');
                }
            },
            error: function () {
                alert("Error on accessing cash account details");
            }
        })
    });

    $("#DFundSourceId").select2({
        minimumInputLength: 2,  // minimumInputLength for sending ajax request to server
        width: 'resolve',   // to adjust proper width of select2 wrapped elements
        ajax: {
            url: '@Url.Action("GetDFundSources", "Receipts")', // Controller - Select2Demo and Action -AccessRemoteData
            type: "POST",
            dataType: 'json',
            data: function (term) {
                return {
                    term: term
                };
            },
            results: function (data, page) {
                return { results: data.coas }; // data.CountryList returning json data from Controlle
            }
        }
    });

    $('#DFundSourceId').on("change", function () {
        var dFundSourceId = $("#DFundSourceId").val();
        $.ajax({
            type: "POST",
            url: "GetDFundSource",
            data: { id: dFundSourceId },
            success: function (data, status, jqXHR) {
                if (data.success) {
                    $("#CrGlAccount").val(data.CrGlAccount);
                    $("#CrGlAccountDesc").val(data.CrGlAccountDesc);
                    $("#DFundSourceCode").val(data.DFundSourceCode);
                    $("#DFundSourceDesc").val(data.DFundSourceDesc);
                } else {
                    alert('Error on accessing cash account details');
                }
            },
            error: function () {
                alert("Error on accessing cash account details");
            }
        })
    });

    </script>
}