@model IEnumerable<IFMIS.Areas.IFMISTZ.Models.FundDistributionSummary>
@{ 
    IFMIS.DAL.IFMISTZDbContext db = new IFMIS.DAL.IFMISTZDbContext();
}
<table id="dt_basic" class="table table-striped table-bordered table-hover table-condensed" width="100%">
    <thead>
        <tr style="background-color: #f5f5f5; color:black">
            <th>#</th>
            <th>
                @Html.DisplayNameFor(model => model.FundingRefNo)
            </th>
            <th>
                Legal Number
            </th>
            <th>
                Distribution Date
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FundingSource)
            </th>
            <th style="text-align:right">
                Distributed Amount
            </th>
            <th style="text-align:right">
                Available Balance
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OverallStatus)
            </th>
            <th></th>
        </tr>
    </thead>
    @{int i = 0;}
    @foreach (var item in Model)
            {
                i++;
                                <tr>
                                    <td>@i</td>
                                    <td>
                                      @Html.DisplayFor(modelItem => item.FundingRefNo)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.FundDistributionSummaryNum)
                                    </td>
                                    <td>
                                       @string.Format("{0:d/M/yyyy}", item.ApplyDate)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.FundingSource)
                                    </td>
                                    <td style="text-align: right">
                                        @string.Format("{0:#,0.00}", db.FundDistributions.Where(a => a.FundDistributionSummaryId == item.FundDistributionSummaryId).Select(a => a.OriginalAmount).FirstOrDefault())
                                    </td>
                                    <td style="text-align: right">
                                        @string.Format("{0:#,0.00}", item.TotalAmount)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.OverallStatus)
                                    </td>
                                    <td style="text-align: center">
                                        <!-- Split button -->
                                        <div class="btn-group">
                                            <button type="button" class="btn btn-info btn-xs"><i class="fa fa-tasks"></i></button>
                                            <button type="button" class="btn btn-info btn-xs dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                <span class="caret"></span>
                                                <span class="sr-only">Toggle Dropdown</span>
                                            </button>
                                            <ul class="dropdown-menu">
                                                <li><a href="#" onclick="distributionDetails(@item.FundDistributionSummaryId)">Details</a></li>
                                            </ul>
                                        </div>
                                    </td>
                                </tr>
                                }

</table>

<!-- END MAIN CONTENT -->
<!--Start of details modal section-->
<!----------- VIEW DIALOG ----------------->
<div class="modal fade" id="detailsModal" style="left:4%">

    <div class="modal-dialog" style="width:80%;">
        <div class="modal-content panel-info">
            <div class="modal-header panel-heading">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h3 class="modal-title">Distribution Details</h3>
            </div>
            <div class="modal-body">
                <div>
                    <div class="widget-body" id="distributionDetail_body">

                    </div>
                </div>
                <div class="modal-footer">
                    @*<button class="btn btn-info btn-150" data-dismiss="modal" style="width:100px;" onclick="accept('x')">
                            <i class="fa fa-check"></i>Accept
                        </button>
                        <button class="btn btn-info btn-150" data-dismiss="modal" style="width:100px;" onclick="reject('x')">
                            <i class="fa  fa-times-circle"></i> Reject
                        </button>*@
                    <button class="btn btn-info btn-150" id="btncancel" data-dismiss="modal" style="width:100px;">
                        <i class="fa fa-times"></i> Close
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

    <script>
        // DO NOT REMOVE : GLOBAL FUNCTIONS!

        $(document).ready(function () {

            /* // DOM Position key index //

            l - Length changing (dropdown)
            f - Filtering input (search)
            t - The Table! (datatable)
            i - Information (records)
            p - Pagination (paging)
            r - pRocessing
            < and > - div elements
            <"#id" and > - div with an id
            <"class" and > - div with a class
            <"#id.class" and > - div with an id and class

            Also see: http://legacy.datatables.net/usage/features
            */

            /* BASIC ;*/
            var responsiveHelper_dt_basic = undefined;
            var responsiveHelper_datatable_fixed_column = undefined;
            var responsiveHelper_datatable_col_reorder = undefined;
            var responsiveHelper_datatable_tabletools = undefined;

            var breakpointDefinition = {
                tablet: 1024,
                phone: 480
            };

            $('#dt_basic').dataTable({
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-12 hidden-xs'l>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_dt_basic) {
                        responsiveHelper_dt_basic = new ResponsiveDatatablesHelper($('#dt_basic'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_dt_basic.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_dt_basic.respond();
                }
            });

            /* END BASIC */

            /* COLUMN FILTER  */
            var otable = $('#datatable_fixed_column').DataTable({
                //"bFilter": false,
                //"bInfo": false,
                //"bLengthChange": false
                //"bAutoWidth": false,
                //"bPaginate": false,
                //"bStateSave": true // saves sort state using localStorage
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6 hidden-xs'f><'col-sm-6 col-xs-12 hidden-xs'<'toolbar'>>r>" +
                        "t" +
                        "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_fixed_column) {
                        responsiveHelper_datatable_fixed_column = new ResponsiveDatatablesHelper($('#datatable_fixed_column'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_datatable_fixed_column.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_datatable_fixed_column.respond();
                }

            });

            // custom toolbar
            $("div.toolbar").html('<div class="text-right"><img src="/Content/img/logo.png" alt="SmartAdmin" style="width: 111px; margin-top: 3px; margin-right: 10px;"></div>');

            // Apply the filter
            $("#datatable_fixed_column thead th input[type=text]").on('keyup change', function () {

                otable
                    .column($(this).parent().index() + ':visible')
                    .search(this.value)
                    .draw();

            });
            /* END COLUMN FILTER */

            /* COLUMN SHOW - HIDE */
            $('#datatable_col_reorder').dataTable({
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'C>r>" +
                        "t" +
                        "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_col_reorder) {
                        responsiveHelper_datatable_col_reorder = new ResponsiveDatatablesHelper($('#datatable_col_reorder'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_datatable_col_reorder.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_datatable_col_reorder.respond();
                }
            });

            /* END COLUMN SHOW - HIDE */

            /* TABLETOOLS */
            $('#datatable_tabletools').dataTable({

                // Tabletools options:
                //   https://datatables.net/extensions/tabletools/button_options
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'T>r>" +
                        "t" +
                        "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
                "oTableTools": {
                    "aButtons": [
                    "copy",
                    "csv",
                    "xls",
                       {
                           "sExtends": "pdf",
                           "sTitle": "SmartAdmin_PDF",
                           "sPdfMessage": "SmartAdmin PDF Export",
                           "sPdfSize": "letter"
                       },
                       {
                           "sExtends": "print",
                           "sMessage": "Generated by SmartAdmin <i>(press Esc to close)</i>"
                       }
                    ],
                    "sSwfPath": "/Scripts/plugin/datatables/swf/copy_csv_xls_pdf.swf"
                },
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_tabletools) {
                        responsiveHelper_datatable_tabletools = new ResponsiveDatatablesHelper($('#datatable_tabletools'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_datatable_tabletools.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_datatable_tabletools.respond();
                }
            });

            /* END TABLETOOLS */

        });

       


        //----Display Allocation Details---//
        var distributionDetails = function (id) {
            debugger
            var url = '@Url.Action("DistributionDetails", "FundingTracker")';
            $("#distributionDetail_body").load(url, { id: id }, function (response, status, xhr) {
                if (status == "error") {
                    $("#distributionDetail_body").html(status + " Error on accessing this details, contact system support.");
                }
                $("#detailsModal").modal("show");
            });
        };
        //function to reset bootstrap modal popups
        $("#detailsModal").on("hidden.bs.modal", function () {
            $(".modal-header").removeClass("alert-danger").addClass("alert-info");
            $("#detailsModal").html("");
        });
        //--End Display Transfer Details---//
       

    </script>
