@model IFMIS.Areas.IFMISTZ.Models.FundDistributionSummary

@{
    ViewBag.Title = "FundCompDistribution";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .search-btn {
        border: 1px dashed #ccc;
        border-radius: 4px;
        padding: 5px;
        padding-right: 10px;
    }

    .submit-btn {
        background-color: white;
        color: black;
        border: 1px solid #538AC5;
        border-radius: 12px;
        padding: 3px;
        padding-right: 10px;
    }

    .searchContainer {
        display: inline-flex;
        flex: 1 1 300px;
        position: relative;
        border: 1px solid #ccc;
        border-radius: 5px;
        overflow: hidden;
    }

    .searchIcon {
        padding: 0.5rem;
    }

    .searchBox {
        border: 0;
        /*padding: 0.5rem 0.5rem 0.5rem 0;*/
        padding: 8px;
        flex: 1;
    }

    .searchButton {
        background: #538AC5;
        border: 0;
        color: white;
        /*padding: 0.5rem;*/
        padding: 8px;
        border-radius: 0;
    }

    input[type=number] {
        padding: 8px;
        border: 1px solid #ccc;
        border-radius: 4px;
        resize: vertical;
    }

    input[type=search] {
        padding: 4px;
        border: hidden;
        border-radius: 4px;
    }

    .action-btn {
        width: 100px;
        border-radius: 10px;
    }

    .info-box {
        padding: 10px;
        background-color: #ECF3F8;
        text-align: center;
        border: 1px solid #ccc;
        border-radius: 5px;
    }


    .modal-header {
        padding: 9px 15px;
        border-bottom: 1px solid #eee;
        background-color: #0480be;
        -webkit-border-top-left-radius: 5px;
        -webkit-border-top-right-radius: 5px;
        -moz-border-radius-topleft: 5px;
        -moz-border-radius-topright: 5px;
        border-top-left-radius: 5px;
        border-top-right-radius: 5px;
    }

    .alert-secondary {
        background-color: lightgrey;
        color: black;
    }
</style>
<!-- MAIN CONTENT -->
<div id="content">

    <div class="row">
        <!-- widget grid -->
        <!-- NEW WIDGET START -->
        <article class="col-xs-12 col-sm-12 col-md-12 col-lg-12" style="margin-left:-13px">
            <section id="widget-grid" class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                <div class="row">
                    <div class="jarviswidget" id="wid-id-0" data-widget-colorbutton="false" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">

                        <header>
                            <span class="widget-icon"> <i class="fa fa-table"></i> </span>
                            <h2>  Fund Allocation WithDraw </h2>
                        </header>

                        <div>
                            <div class="widget-body " style="padding-top:10px">

                                <form action="" method="post" id="create-bill-form" class="form-horizontal">
                                    @Html.AntiForgeryToken()
                                    <fieldset>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.ApplyDate, "Apply Date", htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-3">
                                                @Html.TextBoxFor(model => model.ApplyDate, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.ApplyDate, "", new { @class = "text-danger" })
                                            </div>
                                            @Html.LabelFor(model => model.FundingRefNo, "Allocation Reference", htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-3">
                                                @Html.TextBoxFor(model => model.FundingRefNo, new { @class = "form-control select2" })
                                                @Html.ValidationMessageFor(model => model.FundingRefNo, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        @*<label class="col-md-2 control-label">
                                                Apply Date
                                            </label>
                                            <div class="col-md-3">
                                                <div class="flatpickr date-group">
                                                    <input type="text" placeholder="Select Date.." class="form-control"
                                                           data-input
                                                           style="width:290px;padding-left:10px;border:1px solid #ECF3F8"
                                                           autocomplete="off" id="ApplyDate" />
                                                </div>
                                            </div>

                                            <label class="col-md-2 control-label">
                                                Allocation Reference
                                                <i class="fa fa-asterisk" style="color:white" id="errorReference"></i>
                                            </label>
                                            <div class="col-md-3">
                                                @Html.TextBoxFor(model => model.FundingRefNo, new { @class = "form-control", @placeholder = "Search Allocation Reference No." })
                                            </div>*@


                                    </fieldset>

                                </form>
                                <br />
                                <br />
                                <br />

                                <div id="withdrawData" style="display:none">

                                    <table id="dt_details" class="table table-striped table-bordered table-hover table-condensed" width="100%">
                                        <thead>
                                            @*<tr><td colspan="5"><b>Available Balance : @ViewBag.availableBalance </b>  </td></tr>*@
                                            <tr>
                                                <th>#</th>
                                                <th style="text-wrap:none"> Reference </th>
                                                <th> Debit Account  </th>
                                                <th> Description </th>
                                                <th style="text-align:right;white-space:nowrap"> Fund Balance </th>
                                                <th style="text-align:right;white-space:nowrap"> Allocated Amount </th>
                                                <th></th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                        </tbody>
                                    </table>





                                </div>
                                <br />

                                <div id="divLoader" style="margin:70px 0px 0px -150px;display:none"

                                </div>


                                <br />
                                <br />
                            </div>
                            <!-- end widget content -->

                        </div>
                        <!-- end widget div -->

                    </div>
                </div>
            </section>

        </article>
        <!-- WIDGET END -->


    </div>

</div>
<!-----------eDIT  Distribution Modal----------------->
<div class="modal fade" id="detailsModal">
    x
    <div class="modal-dialog">
        <div class="modal-content panel-info">

            <div class="modal-header panel-heading">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h4 class="modal-title">  Enter WithDrawn Amount </h4>

            </div>
            <div class="modal-body">
                <div id="registration-form">
                    @using (Html.BeginForm("SaveAllocationWithDraw2", "FundWithDraws", FormMethod.Post))
                    {
                        <table class="table table-striped">
                            <tbody>

                                <tr>
                                    <td colspan="1">
                                        <form class="well form-horizontal">
                                            <fieldset>
                                                <div class="form-group">
                                                    <label class="col-md-4 control-label"></label>
                                                    <div class="col-md-8" style="margin:0px 0px 15px -60px;">
                                                        <input type="hidden" name="allocationId" id="allocationId" class="form-control" />
                                                        <input type="hidden" name="SelectedApplyDate" id="SelectedApplyDate" class="form-control" />
                                                        
                                                        @*<input type="hidden" class="form-control" name="summaryId" id="summaryId" />*@
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label class="col-md-4 control-label">  Fund Balance</label>
                                                    <div class="col-md-8" style="margin:0px 0px 15px -60px;">
                                                        <input type="text" readonly="" name="FundBalance" id="FundBalance" class="form-control" />
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    <label class="col-md-4 control-label"> Allocated Amount </label>
                                                    <div class="col-md-8" style="margin:0px 0px 15px -60px;">
                                                        <input type="text" readonly="" name="allocatedAmount" id="allocatedAmount" class="form-control" />
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    <label class="col-md-4 control-label"> WithDrawn Amount </label>
                                                    <div class="col-md-8" style="margin:0px 0px 15px -60px;">
                                                        <input class="form-control" onkeyup="ValidateEntry()" name="Amount" id="Amount" type="text" value="">
                                                        <a href="#" id="exceedMsg" style="display:none;color:red">With Drawn Amount Exceed Fund Balance/Allocated Amount </a>
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    <label class="col-md-4 control-label"></label>
                                                    <div class="col-md-8" style="margin:0px 0px 15px -60px;">
                                                        <button type="button" style="margin-left:0px" id="savebtn" class="btn btn-info"><i class="glyphicon glyphicon-floppy-disk"></i>Save</button>

                                                        @*<a href="../FundDistribution" style="margin-left:30px" type="submit" class="btn btn-default"><i class="glyphicon glyphicon-backward"></i> Back  </a>*@
                                                    </div>
                                                </div>

                                            </fieldset>
                                        </form>
                                    </td>

                                </tr>
                            </tbody>
                        </table>
                    }
                </div>
            </div>

        </div>
    </div>
</div>



@section pagespecific{
    <script>

      /*  $(document).ready(function () {*/

            $(document).ready(function () {
                //$("#dt_search_gl_item_wrapper .dt-toolbar").remove();
                //$("#dt_voucher_detail_wrapper .dt-toolbar").remove();
                //$("#dt_voucher_detail_wrapper .dt-toolbar-footer").remove();
                //$("#Amount").autoNumeric('init');

                $("#FundBalance").autoNumeric('init');
                $("#FundBalance").autoNumeric({ aNeg: "-" }).trigger("change");

                 $("#ApplyDate")
                 .wrap('<div class="input-group">')
                 .datepicker({
                     dateFormat: "yy-mm-dd",
                     changeMonth: true,
                     changeYear: true,
                     showOn: "both",
                     buttonImage: '@Url.Content("~/Content/img/calendar.gif")',
                     maxDate: "+0D"
                 })
                 .next("button").button({
                     icons: { primary: "ui-icon-calendar" },
                     label: "Select Date",
                     text: false
                 })
                 .addClass("btn btn-default")
                 .wrap('<span class="input-group-btn">')
                 .find('.ui-button-text')
                 .css({
                     'visibility': 'hidden',
                     'display': 'inline'
                 });

            });

           
            debugger
            var url = '@Url.Action("GetAllocationReference","FundWithDraws")';
            $("#FundingRefNo").select2({
                minimumInputLength: 3,  // minimumInputLength for sending ajax request to server
                width: 'resolve',   // to adjust proper width of select2 wrapped elements
                placeholder: "Search Allocation Reference No.",
                    
                ajax: {
                    url: url, // Controller - Select2Demo and Action -AccessRemoteData
                    type: "POST",
                    dataType: 'json',
                    data: function (referenceNo) {
                        return {
                            referenceNo: referenceNo,
                            applyDate: $("#ApplyDate").val()
                        };
                    },
                    results: function (data, page) {
                        debugger
                        if (data.referenceNo == "applDateRer") {
                            return swal("Apply date is required!", { icon: "info" })
                                .then((value) => {
                                    window.location.reload();
                                });
                        } else {

                            return { results: data.references }; // data.CountryList returning json data from Controlle
                        }
                    }
                }
            });
    
           var dt_details = $('#dt_details').dataTable();
            //$("#dt_details_wrapper .dt-toolbar").remove();
            //$("#dt_details_wrapper .dt-toolbar-footer").remove();

          $("#FundingRefNo").change(function () {

                debugger;
                var applydate = $("#ApplyDate").val();
                debugger

                if (applydate == "") {
                    swal('Apply date is required');
                    return true;
                }

              var distributionReferenceNo = $(this).val();
              debugger
              if (distributionReferenceNo == "") {
                  swal('Distribution Reference is required');
                  return true;
              }

              $("#divLoader").show();

              debugger
              var url = '@Url.Action("GetAllocatedItems", "FundWithDraws")';
              var params = { distributionRef: distributionReferenceNo,applydate:applydate };

                $.ajax({
                  type: "get",
                  url: url,
                  data: params,
                  contenttype: "application/json; charset=utf-8",
                  datatype: "json",
                  success: function (response) {
                      $("#withdrawData").show();
                      $("#divLoader").hide();
                      data = response.data;
                      console.log(data);
                      datalength = data.length;
                      console.log(data.length)
                      dt_details.fnClearTable();
                      for (var i = 0; i < data.length; i++) {
                          dt_details.fnAddData([i+1,
                              data[i]["FundAllocationSummaryNum"],
                              data[i]["DrGlAccount"],
                              data[i]["GlAccountDesc"],
                              data[i]["TotalAmount"],
                              data[i]["BaseAmount"],
                             '<div class="btn-group">\
                              <button type="button" class="btn btn-info btn-xs dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\
                                                          <span class="caret"></span>\
                                                          <span class="sr-only">Toggle Dropdown</span>\
                                                      </button>\
                              <ul class="dropdown-menu">\
                                  <li><a href="#" onclick= "withdrawsAllocationModal(' + data[i]["FundAllocationId"] + ',' + data[i]["TotalAmount"] + ',' + data[i]["BaseAmount"] + ',' + data[i]["ApplyDate"] + ')">WithDraw</a></li>\
                              </ul>\
                          </div>'
                          ]);
                      }
                  },
                  failure: function (error) {
                      swal(error);
                  }


                });
          });




            /* BASIC ;*/
            var responsiveHelper_dt_basic = undefined;
            var responsiveHelper_datatable_fixed_column = undefined;
            var responsiveHelper_datatable_col_reorder = undefined;
            var responsiveHelper_datatable_tabletools = undefined;

            var breakpointDefinition = {
                tablet: 1024,
                phone: 480
            };

            $('#dt_basic').dataTable({
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-12 hidden-xs'l>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_dt_basic) {
                        responsiveHelper_dt_basic = new ResponsiveDatatablesHelper($('#dt_basic'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_dt_basic.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_dt_basic.respond();
                }
            });

            /* END BASIC */

            // custom toolbar
            $("div.toolbar").html('<div class="text-right"><img src="/Content/img/logo.png" alt="SmartAdmin" style="width: 111px; margin-top: 3px; margin-right: 10px;"></div>');

            // Apply the filter
            $("#datatable_fixed_column thead th input[type=text]").on('keyup change', function () {

                otable
                    .column($(this).parent().index() + ':visible')
                    .search(this.value)
                    .draw();

            });
            /* END COLUMN FILTER */

            /* COLUMN SHOW - HIDE */
            $('#datatable_col_reorder').dataTable({
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'C>r>" +
                        "t" +
                        "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_col_reorder) {
                        responsiveHelper_datatable_col_reorder = new ResponsiveDatatablesHelper($('#datatable_col_reorder'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_datatable_col_reorder.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_datatable_col_reorder.respond();
                }
            });

            /* END COLUMN SHOW - HIDE */

            /* TABLETOOLS */
            $('#datatable_tabletools').dataTable({

                // Tabletools options:
                //   https://datatables.net/extensions/tabletools/button_options
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'T>r>" +
                        "t" +
                        "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
                "oTableTools": {
                    "aButtons": [
                    "copy",
                    "csv",
                    "xls",
                       {
                           "sExtends": "pdf",
                           "sTitle": "SmartAdmin_PDF",
                           "sPdfMessage": "SmartAdmin PDF Export",
                           "sPdfSize": "letter"
                       },
                       {
                           "sExtends": "print",
                           "sMessage": "List of Recurrent Componet Details <i>(press Esc to close)</i>"
                       }
                    ],
                    "sSwfPath": "/Scripts/plugin/datatables/swf/copy_csv_xls_pdf.swf"
                },
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_tabletools) {
                        responsiveHelper_datatable_tabletools = new ResponsiveDatatablesHelper($('#datatable_tabletools'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_datatable_tabletools.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_datatable_tabletools.respond();
                }
            });

            /* END TABLETOOLS */

    /*    });*/

        var withdrawsAllocation = function (did) {
            debugger;
            var allocationId = did;

            var url = '@Url.Action("WithDrawAmountAllocation", "FundWithDraws")';

            $.ajax({
                type: "POST",
                url: url,
                data: { id: allocationId },
                success: function (response) {
                    if (response[0] == "Success") {
                        $(".modal-body #summaryId").val(response[3]);
                        $(".modal-body #allocationId").val(allocationId);
                        $(".modal-body #allocatedamount").val(numeral(response[1]));
                        $(".modal-body #FundBalance").val(numeral(response[4]));
                        $("#detailsModal").modal("show");  // show modal
                    }
                    else if (response[0] == "DbException") {
                        alert("An error has occured, contact system support" + response[0]);
                        $("#divLoader").hide();
                    }

                    $("#BaseAmount").autoNumeric({ aNeg: "-" }).trigger("change");
                    $("#FundBalance").autoNumeric({ aNeg: "-" }).trigger("change");
                },
                error: function (xhr) {
                    console.log(xhr.responseText);
                    alert("An error has occured, contact system support");
                    $("#divLoader").hide();
                },

            })
        }

        function ValidateEntry() {
            debugger;
            var smallAmount = 0
            var amount = parseFloat($("#Amount").val().split(",").join(""));
            var allocatedamount = parseFloat($("#allocatedAmount").val().split(",").join(""));
            var fundbalance = parseFloat($("#FundBalance").val().split(",").join(""));
            if (allocatedamount < fundbalance) {
                smallAmount = allocatedamount;
            }
            else {
                smallAmount = fundbalance;
            }

            if (smallAmount < amount) {
                $("#Amount").css({ 'color': 'red' });
                $("#savebtn").attr("disabled", true);
                $("#exceedMsg").show();
            }
            else {
                $("#Amount").css({ 'color': 'black' });
                $("#savebtn").attr("disabled", false);
                $("#exceedMsg").hide();
            }
        };

        var withdrawsAllocationModal = function (id, fundBalance, allocatedAmount,selectedapplyDate) {
            //$(".modal-body #summaryId").val(response[3]);
            $(".modal-body #allocationId").val(id);
            $(".modal-body #allocatedAmount").val(allocatedAmount);
            $(".modal-body #FundBalance").val(fundBalance);
            $(".modal-body #SelectedApplyDate").val(selectedapplyDate);
            $("#detailsModal").modal("show");
        }


        $("#savebtn").click(function () {
            $("#divLoader").show();
            $("#savebtn").attr("disabled", true);
            var data = {
                "AllocationId": $("#allocationId").val(),
                "Amount": $("#Amount").val(),
                "ApplyDate": ToJavaScriptDate($("#SelectedApplyDate").val())
            }
            console.log(data);
            var url = '@Url.Action("SaveAllocationWithDraw2", "FundWithDraws")';
            var urlList = '@Url.Action("withdrawallocationconfirmation", "FundWithDraws")';
            $("#savebtn").prop('disabled', true);
            $("#detailsModal").modal("hide");
                $.ajax({
                    type: "post",
                    url: url,
                    data: data,
                    contenttype: "application/json; charset=utf-8",
                    datatype: "json",
                    success: function (response) {
                        $("#savebtn").prop('disabled', false);
                        $("#divLoader").hide();
                        if (response == "Success") {
                            swal("WithDraw Saved Successfully!", { icon: "success" })
                                                .then((value) => {
                                                    window.location.href = urlList;
                                                });
                        }
                        else {
                            $("#divLoader").hide();
                            swal(response, { icon: "warning" });
                        }
                    },
                    failure: function (error) {
                        $("#savebtn").prop('disabled', false);
                        $("#saveLoader").toggle(false);
                        $("#divLoader").hide();
                        swal(error);
                    }
                });
        });

        function ToJavaScriptDate(value) {
            if (value != null && value != '') {
                var pattern = /Date\(([^)]+)\)/;
                var results = pattern.exec(value);
                var dt = new Date(parseFloat(results[1]));
                return dt.getDate() + "-" + (dt.getMonth() + 1) + "-" + dt.getFullYear();
            }
        }


    </script>
}
