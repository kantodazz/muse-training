
@model IFMIS.Areas.IFMISTZ.Models.UploadBankStatementVM
@{
    ViewBag.Title = "Reverse Approved Reconciliation";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div style="padding:1em;padding-top:4em">
    <section id="widget-grid">
        <div class="row">
            <article class="col-sm-12 col-md-12 col-lg-12">
                <div class="jarviswidget " id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">
                    <header>
                        <span class="widget-icon"> <i class="fa fa-table"></i> </span>
                        <h2> @ViewBag.Title </h2>
                    </header>

                    <div class="widget-body " style="padding-top:10px">
                        @using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data", id = "statementForm" }))
                        {
                            @Html.AntiForgeryToken()
                            <div class="form-horizontal">
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class="row" style="padding:12px">
                                </div>

                                <div class="row" style="padding:12px">
                                    @Html.LabelFor(model => model.BankAccountNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4">
                                        @Html.DropDownListFor(model => model.BankAccountNumber, Model.AccountNumberNameList, "Select Account Number", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.BankAccountNumber, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="row" style="padding:12px">
                                    <label class="col-md-2 control-label">Statement Date</label>
                                    <div class="col-md-4">
                                        @Html.EditorFor(model => model.StatementDate, new { htmlAttributes = new { @class = "form-control", autocomplete = "off", @placeholder = "Select Statement Date", @required = "required" } })
                                        @Html.ValidationMessageFor(model => model.StatementDate, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <br />
                                <br />
                                <div class="form-actions">
                                    <div class="row">

                                        <div class="col-md-3">
                                            <a class="btn btn-info" href='@Url.Action("BankstatementList", "BankStatements")' style="margin-right:5px">
                                                <i class="glyphicon glyphicon-arrow-left"></i>Back
                                            </a>
                                            <button type="button" class="btn btn-info" onclick="Request()" style="width:100px;  color:black">
                                                <span class="glyphicon glyphicon-upload" aria-hidden="true"></span>
                                                Reverse 
                                                @*<img src="~/Content/img/loading.gif" id="saveLoader" />*@
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>

                        }
                    </div>
                    <!-- Start of div loader-->

                </div>
                <!-- End of div loader-->
            </article>
        </div>
    </section>
</div>

@section pagespecific{
    <script>

        $("#saveLoader").toggle(false);

        function Request() {
            let accountNumber = $("#BankAccountNumber").val()
            let statementDate = $("#StatementDate").val();

            swal({
                title: "Reverse Approved Reconciliation",
                text: "Are you sure you want to Reverse Approved Reconciliation of Statement Date  " + statementDate + " for Account Number   " + accountNumber + " ?",
                buttons: [
                    'Yes',
                    'No'
                ],
                closeOnClickOutside: false,
            }).then(function (isConfirm) {
                if (isConfirm) {
                    swal("Cancelled", "No change was made");
                } else {

                    validation();
                }
            });
            $('#confirmModal').modal('hide');
        }


        function validation() {
            debugger
            let accountNumber = $("#BankAccountNumber").val()
            let statementDate = $("#StatementDate").val();
            if (accountNumber == "") {
                swal({
                    icon: "warning",
                    title: "Please Select Account Number !",
                });
                return false;
            }
            if (statementDate == "") {
                swal({
                    icon: "warning",
                    title: "Please Statement Date is Required !",
                });
                return false;
            }
            ReverseApprovedReconciliation();
            };


        function ReverseApprovedReconciliation() {
           debugger
           let account= $("#BankAccountNumber").val();
           let statementDate = $("#StatementDate").val();

                var url = '@Url.Action("ReverseApprovedReconciliation", "Reconcilliation")';
                $("#saveLoader").toggle(true);
                $.ajax({
                    type: "POST",
                    url: url,
                    data: { account: account,  statementDate: statementDate },
                    success: function (response) {
                        if (response == "Success") {
                            swal("Reversed Successfully!", { icon: "success" }).then((e) => {
                                $("#saveLoader").toggle(false);
                                window.location.reload();
                               
                            });


                        } else {
                            swal(response, { icon: "warning" }).then((e) => {
                                $("#saveLoader").toggle(false);
                                window.location.reload();
                              
                            });
                        };
                    },
                    error: function (err) {
                        swal(err.statusText)
                        $("#saveLoader").toggle(false);
                    }
                });
            };



    </script>
}


