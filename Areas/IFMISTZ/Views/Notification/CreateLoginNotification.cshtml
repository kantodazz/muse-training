@model IFMIS.Areas.IFMISTZ.Models.LoginNotification
<style>
    .search-btn {
        border: 1px solid #ccc;
        border-radius: 4px;
        padding: 5px;
        padding-right: 10px;
    }

    .search-container {
        display: inline-flex;
        flex: 1 1 300px;
        position: relative;
        border: 1px solid #ccc;
        border-radius: 5px;
        overflow: hidden;
        padding-left: 10px;
    }

    .name-input-container {
        display: inline-flex;
        flex: 1 1 300px;
        position: relative;
        overflow: hidden;
    }

    .search-icon {
        padding: 0.5rem;
    }

    .search-button {
        background: #538AC5;
        border: 0;
        color: white;
        padding: 8px;
        border-radius: 0;
    }

    input[type=number] {
        padding: 8px;
        border: 1px solid #ccc;
        width: 205px;
    }

    input[type=text] {
        padding: 5px;
        border: 1px solid #ccc;
    }

    input[type=search] {
        padding: 4px;
        border: hidden;
        border-radius: 4px;
    }

    textarea {
        border: 1px solid #ccc;
    }

    select {
        padding: 8px;
        border: 1px solid #ccc;
        resize: vertical;
        width: 230px;
    }

    .action-btn {
        width: 100px;
        color: white;
    }

    .form-label {
        text-align: right;
    }

    td {
        padding: 5px;
    }

    .info-box {
        padding: 10px;
        background-color: #ECF3F8;
        text-align: center;
        border: 1px solid #ccc;
        border-radius: 5px;
    }

    .searchContainer {
        background-color: white;
        color: black;
        border: 1px solid #ccc;
        border-radius: 4px;
        padding: 3px;
        padding-right: 10px;
    }

    input[type=search] {
        padding: 4px;
        border: hidden;
        border-radius: 4px;
    }

    .info-box {
        padding: 8px;
        background-color: #ECF3F8;
        /*padding-top:10px;*/
        /*text-align: center;*/
        border: 1px solid #ccc;
        border-radius: 5px;
    }

    .payee-entry {
        border: 1px solid #ccc;
        border-radius: 10px;
        padding-bottom: 10px;
    }

    .entry-label {
        position: relative;
        top: -12px;
        background-color: white;
        width: 180px;
        left: 15px;
        padding-left: 5px;
        padding-right: 5px;
        text-align: center;
        font-weight: bold;
        color: #2196F3;
    }
</style>

<br />
<!-- MAIN CONTENT -->
<div id="content" style="margin: 5px; padding-top: 30px">

    <div class="row">
        <div class="col-xs-12 col-sm-3 col-md-3 col-lg-3">
            <!-- Button trigger modal -->
            <!--<a data-toggle="modal" href="#myModal" class="btn btn-success btn-lg pull-right header-btn hidden-mobile"><i class="fa fa-circle-arrow-up fa-lg"></i> Launch form modal</a>-->
        </div>
    </div>
    <!-- widget grid -->
    <section id="widget-grid" class="">
        <!-- START ROW -->

        <div class="row">

            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">

                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">
                    <!-- widget options:
                        usage: <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false">

                        data-widget-colorbutton="false"
                        data-widget-editbutton="false"
                        data-widget-togglebutton="false"
                        data-widget-deletebutton="false"
                        data-widget-fullscreenbutton="false"
                        data-widget-custombutton="false"
                        data-widget-collapsed="true"
                        data-widget-sortable="false"

                    -->
                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2> Create Login Notification</h2>
                    </header>

                    <!-- widget div-->
                    <div>

                        <!-- widget edit box -->
                        <div class="jarviswidget-editbox">
                            <!-- This area used as dropdown edit box -->

                        </div>
                        <!-- end widget edit box -->
                        <!-- widget content -->
                        <div class="widget-body">


                            <div class="row" style="padding:1% 5% 0 5%;">
                                <div class="col-md-6 col-lg-6 col-sm-12">

                                    <table >
                                        <tr>
                                            <td class="form-label">
                                                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2", @style = "padding-right: 5px" })
                                            </td>
                                            <td>
                                                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                                            </td>
                                        </tr>
                                        <tr>
                                            <td  >
                                                @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2", @style = "width:100px" })
                                            </td>
                                            <td>
                                                @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" , AutoComplete="off"} })
                                            </td>
                                        </tr>
                                        <tr>
                                            <td>
                                                Upload Image  <br/> <i style="color:gray"> (2538 x 3000) </i>
                                            </td>
                                            <td>
                                                @Html.TextBoxFor(model => model.FileName, new { type = "file", @class = "form-control", accept = "image/*" })
                                            </td>
                                        </tr>
                                    </table>
                                </div>
                                <div class="col-md-6 col-lg-6 col-sm-12">
                                    <table>
                                        <tr>
                                            <td class="form-label">
                                                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2", @style = "padding-right: 5px" })
                                            </td>
                                            <td>
                                                <textarea rows="1" class="form-control" onkeyup="resizeTextArea(this)" id="Description" name="Description" style="width:250px"></textarea>
                                                (Remained characters: <i id="maxchars">100</i>)
                                                @*@Html.EditorFor(model => model.BatchDesc, new { htmlAttributes = new { @class = "form-control", @width = "200", @height = "400" } })*@
                                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                            </td>
                                        </tr>
                                        <tr>
                                            <td>
                                                @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2", @style = "width:100px" })
                                            </td>
                                            <td>
                                                @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control", style = "width:250px", AutoComplete="off" } })
                                                @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                                            </td>
                                        </tr>

                                    </table>
                                </div>
                            </div>
                            <div class="form-actions">
                                <div class="row">
                                    <div class="col-md-12">
                                        <button class="btn btn-info" onclick="upload()" style="float: left" id="btnSave">
                                            <i class="fa fa-save"></i>
                                            Save
                                            <img src="~/Content/img/loading.gif" id="saveLoader" />
                                        </button>

                                        <a onclick="window.history.back()" class="btn btn-info" style="float: left; margin-left: 5px">
                                            <i class="fa fa-arrow-left"></i>
                                            Back
                                        </a>
                                    </div>
                                </div>
                            </div>


                        </div>
                        <!-- end widget content -->
                    </div>
                    <!-- end widget div -->

                </div>
                <!-- end widget -->

            </article>
            <!-- END COL -->

        </div>

        <!-- END ROW -->

    </section>
    <!-- end widget grid -->

</div>
<!-- END MAIN CONTENT -->
@section pagespecific {
    <script type="text/javascript">

        $("#saveLoader").toggle(false);
         function resizeTextArea(txt) {
             txt.style.height = "3px";
             txt.style.height = (3 + txt.scrollHeight) + "px";
        }


        var OldDescVal = ""
        $("#BatchDesc").on("keyup", function (e) {
            var allowedchars = parseFloat(100 - this.value.length)
            if (allowedchars < 0) {
                $("#maxchars").text("Characters Limit Exceeded");
                $("#maxchars").attr("style", "color: red;");
                $("#btnSave").prop('disabled', true);
            }
            else {
                $("#btnSave").prop('disabled', false);
                $("#maxchars").attr("style", "color: black;");
                $("#maxchars").text(100 - this.value.length)
                if (this.value) {
                    var reg = new RegExp(/[0-9a-zA-Z ]/);
                    if (!reg.test(this.value.substr(-1))) {
                        $("#BatchDesc").val(OldDescVal)
                    } else {
                        OldDescVal = this.value
                    }
                }
            }
        });


        function upload() {
            debugger;


            swal({
                title: "Confirmation",
                text: "Are you sure to Upload Image for Login Notification",
                buttons: [
                    'Yes',
                    'No'
                ],
                icon:"info",
                closeOnClickOutside: false,
            }).then(function (isConfirm) {
                if (isConfirm) {
                    swal("Cancelled", "No change was made");
                } else {

                    UploadImageFile();
                }
            });


        }


        function UploadImageFile() {
            debugger;

            var file = $("#FileName").get(0).files;
            if (file.length < 1) {

                swal("Please Choose Image to Upload", { icon: "warning" });
                return
            }

                $("#saveLoader").toggle(true);
                var formData = new FormData();

                formData.append('Title', $("#Title").val());
                formData.append('Description', $("#Description").val());
                formData.append('StartDate', $("#StartDate").val());
                formData.append('EndDate', $("#EndDate").val());
                formData.append('file', $('input[type=file]')[0].files[0]);

                var url = '@Url.Action("UploadLoginNotification", "Notification")';
                var urlList = '@Url.Action("LoginNotificationList", "Notification")';
                $.ajax({
                    type: "POST",
                    url: url,
                    data: formData,
                    contentType: false,
                    processData: false,
                    success: function (response) {
                        $("#saveLoader").hide();
                        if (response == "Success") {
                            swal("Image Uploaded Successfully", { icon: "success" }).then((value) => {
                                window.location.href = urlList;
                            });
                        }
                        else {
                            swal(response, { icon: "warning" });
                        }
                    },
                    failure: function (response) {
                        alert(response.d);
                        $("#saveLoader").hide();
                    }
                });
        }



        var OldDescVal = ""
        $("#Description").on("keyup", function (e) {
            var allowedchars = parseFloat(100 - this.value.length)
            if (allowedchars < 0) {
                $("#maxchars").text("Characters Limit Exceeded");
                $("#maxchars").attr("style", "color: red;");
                $("#btnSave").prop('disabled', true);
            }
            else {
                $("#btnSave").prop('disabled', false);
                $("#maxchars").attr("style", "color: black;");
                $("#maxchars").text(100 - this.value.length)
                if (this.value) {
                    var reg = new RegExp(/[0-9a-zA-Z ]/);
                    if (!reg.test(this.value.substr(-1))) {
                        $("#BatchDesc").val(OldDescVal)
                    } else {
                        OldDescVal = this.value
                    }
                }
            }
        });

    </script>
}
