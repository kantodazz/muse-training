@model IEnumerable<IFMIS.Areas.IFMISTZ.Models.BulkUnappliedSummaryVM>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div id="content" style="margin: 5px; padding-top: 30px">

    <div class="row">

        @*<div class="col-xs-12 col-sm-3 col-md-3 col-lg-3">
                <!-- Button trigger modal -->
                <!--<a data-toggle="modal" href="#myModal" class="btn btn-success btn-lg pull-right header-btn hidden-mobile"><i class="fa fa-circle-arrow-up fa-lg"></i> Launch form modal</a>-->
            </div>*@
    </div>
    <section id="widget-grid" class="">


        <!-- START ROW -->

        <div class="row">

            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">

                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">
                    <!-- widget options:
                        usage: <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false">

                        data-widget-colorbutton="false"
                        data-widget-editbutton="false"
                        data-widget-togglebutton="false"
                        data-widget-deletebutton="false"
                        data-widget-fullscreenbutton="false"
                        data-widget-custombutton="false"
                        data-widget-collapsed="true"
                        data-widget-sortable="false"

                    -->
                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2>Approve Unapplieds</h2>

                    </header>

                    <!-- widget div-->
                    <div>

                        <!-- widget edit box -->
                        <div class="jarviswidget-editbox">
                            <!-- This area used as dropdown edit box -->

                        </div>
                        <!-- end widget edit box -->
                        <!-- widget content -->

                        <div class="widget-body">
                            <hr class="simple" />
                            <table id="dt_basic" class="table table-striped table-bordered table-hover table-condensed" width="100%">
                                <thead>
                                    <tr style="background-color: #f5f5f5; color:black">
                                        <th>#</th>
                                        <th style="text-align:center"> Number of Entry </th>
                                        <th>Total Amount</th>
                                        <th>Payment Type</th>
                                        <th>OverallStatus</th>
                                        <th style="text-align:center">Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @{
                                        int i = 0;
                                        decimal? totalAmount = 0;
                                        decimal? totalNetAmount = 0;

                                    }
                                    @foreach (var item in Model)
                                    {
                                        i++;

                                        <tr>
                                            <td>@i</td>
                                            <td style="text-align:center">
                                                @Html.DisplayFor(modelItem => item.Entry)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.ToatlAmount)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.EntryType)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.OverallStatus)
                                            </td>
                                            <td style="text-align: center">
                                                <!-- Split button -->
                                                <div class="btn-group">
                                                    @*<button type="button" class="btn btn-info btn-xs">Action</button>*@
                                                    <button type="button" class="btn btn-info btn-xs dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                        <span class="caret"></span>
                                                        <span class="sr-only">Toggle Dropdown</span>
                                                    </button>
                                                    <ul class="dropdown-menu" style="text-align:left">
                                                        <li>
                                                            <a href="@Url.Action("PreviewUnapplied", "AtSourcePaymentUnapplied",new {id=item.BulkUnappliedSummaryId})" class="btn-xs edit">
                                                                <i class="fa fa-arrow-circle-o-right"></i>  Preview
                                                            </a>
                                                        </li>
                                                        <li>
                                                            <a href="#" onclick="paymentType(@item.BulkUnappliedSummaryId)">
                                                                <i class="fa fa-edit"></i>Set Payment Type
                                                            </a>
                                                        </li>
                                                        <li>
                                                            <a href="#" onclick="approveEntry(@item.BulkUnappliedSummaryId)">
                                                                <i class="fa fa-edit"></i>Approve
                                                            </a>
                                                        </li>
                                                        <li>
                                                            <a href="#" onclick="approveEntry(@item.BulkUnappliedSummaryId)">
                                                                <i class="fa fa-edit"></i>Reject
                                                            </a>
                                                        </li>
                                                        @*<li>
            <a href="#" onclick="rejectEntry(@item.SalaryUnappliedId)">
                <i class="fa fa-edit"></i>Reject
            </a>
        </li>*@
                                                    </ul>
                                                </div>
                                            </td>

                                        </tr>
                                    }

                                </tbody>

                            </table>
                        </div>
                        <!-- end widget content -->
                    </div>
                    <!-- end widget div -->

                </div>
                <!-- end widget -->

            </article>
            <!-- END COL -->

        </div>

        <!-- END ROW -->

    </section>
    <!-- end widget grid -->

</div>
<!-- END MAIN CONTENT -->
<div class="modal fade" id="rejectPayment">
    <div class="modal-dialog">
        <div class="modal-content">

            <div class="modal-header">
                <a href="#" class="close" data-dismiss="modal">&times;</a>

            </div>
            @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "SubmitForm" }))
            {
                <div class="modal-body form-horizontal">

                    <br />

                    <input type="hidden" name="Id" id="Id" value="">
                    <div class="form-group">
                        <div class="col-md-12">
                            <textarea name="Reason" id="Reason" required rows="4" class="form-control" placeholder="Entere reason why do you reject"></textarea>
                        </div>
                    </div>

                </div>
                <div class="modal-footer">
                    <a href="#" class="btn btn-default" data-dismiss="modal">Cancel</a>
                    <input class="btn btn-info" type="submit" id="btnSubmit" value="Save" />
                    @*<input type="submit" value="Submit" class="btn btn-success" id="btnSubmit" />*@

                </div>

            }
        </div>
    </div>
</div>
<div class="modal fade" id="payment_type" style="left:4%">

    <div class="modal-dialog" style="width:35%;">
        <div class="modal-content panel-info">

            <div class="modal-header panel-heading">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h3 class="modal-title" style="text-align:center"> Payment Type</h3>
            </div>
            @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "SetPaymentType" }))
            {
                <div class="modal-body form-horizontal">

                    <br />

                    <input type="hidden" name="Id" id="Id" value="">
                    <div class="form-group">

                        <div class="col-md-12">
                            @Html.DropDownList("PaymentType", new List<SelectListItem>{
                               new SelectListItem{ Text="--Select Type--", Value = "" },
                               new SelectListItem{ Text="Elimu Bure", Value = "Elimu Bure" },
                               new SelectListItem{ Text="Afya", Value = "Afya" },
                               new SelectListItem{ Text="Councilors", Value = "Councilors" },
                       }, new { @class = "form-control" })
                        </div>
                    </div>

                </div>
                <div class="modal-footer">
                    <a href="#" class="btn btn-default" data-dismiss="modal">Cancel</a>
                    <input class="btn btn-info" type="submit" id="btnSubmit" value="Save" />
                    @*<input type="submit" value="Submit" class="btn btn-success" id="btnSubmit" />*@

                </div>

            }
        </div>
    </div>
</div>
@section Scripts{
    <script>
        // DO NOT REMOVE : GLOBAL FUNCTIONS!

        $(document).ready(function () {

            /* // DOM Position key index //

            l - Length changing (dropdown)
            f - Filtering input (search)
            t - The Table! (datatable)
            i - Information (records)
            p - Pagination (paging)
            r - pRocessing
            < and > - div elements
            <"#id" and > - div with an id
            <"class" and > - div with a class
            <"#id.class" and > - div with an id and class

            Also see: http://legacy.datatables.net/usage/features
            */

            /* BASIC ;*/
            var responsiveHelper_dt_basic = undefined;
            var responsiveHelper_datatable_fixed_column = undefined;
            var responsiveHelper_datatable_col_reorder = undefined;
            var responsiveHelper_datatable_tabletools = undefined;

            var breakpointDefinition = {
                tablet: 1024,
                phone: 480
            };

            $('#dt_basic').dataTable({
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-12 hidden-xs'l>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_dt_basic) {
                        responsiveHelper_dt_basic = new ResponsiveDatatablesHelper($('#dt_basic'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_dt_basic.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_dt_basic.respond();
                }
            });

            /* END BASIC */

            /* COLUMN FILTER  */
            var otable = $('#datatable_fixed_column').DataTable({
                //"bFilter": false,
                //"bInfo": false,
                //"bLengthChange": false
                //"bAutoWidth": false,
                //"bPaginate": false,
                //"bStateSave": true // saves sort state using localStorage
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6 hidden-xs'f><'col-sm-6 col-xs-12 hidden-xs'<'toolbar'>>r>" +
                        "t" +
                        "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_fixed_column) {
                        responsiveHelper_datatable_fixed_column = new ResponsiveDatatablesHelper($('#datatable_fixed_column'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_datatable_fixed_column.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_datatable_fixed_column.respond();
                }

            });

            // custom toolbar
            $("div.toolbar").html('<div class="text-right"><img src="/Content/img/logo.png" alt="SmartAdmin" style="width: 111px; margin-top: 3px; margin-right: 10px;"></div>');

            // Apply the filter
            $("#datatable_fixed_column thead th input[type=text]").on('keyup change', function () {

                otable
                    .column($(this).parent().index() + ':visible')
                    .search(this.value)
                    .draw();

            });
            /* END COLUMN FILTER */

            /* COLUMN SHOW - HIDE */
            $('#datatable_col_reorder').dataTable({
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'C>r>" +
                        "t" +
                        "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_col_reorder) {
                        responsiveHelper_datatable_col_reorder = new ResponsiveDatatablesHelper($('#datatable_col_reorder'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_datatable_col_reorder.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_datatable_col_reorder.respond();
                }
            });

            /* END COLUMN SHOW - HIDE */

            /* TABLETOOLS */
            $('#datatable_tabletools').dataTable({

                // Tabletools options:
                //   https://datatables.net/extensions/tabletools/button_options
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'T>r>" +
                        "t" +
                        "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
                "oTableTools": {
                    "aButtons": [
                    "copy",
                    "csv",
                    "xls",
                       {
                           "sExtends": "pdf",
                           "sTitle": "SmartAdmin_PDF",
                           "sPdfMessage": "SmartAdmin PDF Export",
                           "sPdfSize": "letter"
                       },
                       {
                           "sExtends": "print",
                           "sMessage": "Generated by SmartAdmin <i>(press Esc to close)</i>"
                       }
                    ],
                    "sSwfPath": "/Scripts/plugin/datatables/swf/copy_csv_xls_pdf.swf"
                },
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_tabletools) {
                        responsiveHelper_datatable_tabletools = new ResponsiveDatatablesHelper($('#datatable_tabletools'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_datatable_tabletools.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_datatable_tabletools.respond();
                }
            });

        /* END TABLETOOLS */
            $("#SubmitForm").on('submit', function (e) {
                                e.preventDefault();
                                swal({
                                    title: 'Confirmation',
                                    text: "Do you reject this payment ?",
                                    buttons: [
                                      'No',
                                      'Yes'
                                    ],
                                }).then(function (isConfirm) {
                                    if (isConfirm) {
                                var url = '@Url.Action("RejectEntry", "AtSourcePaymentUnapplied")';
                                        var id = $("#Id").val();
                                        var reason = $("#Reason").val();
                                        var formData = {
                                            "Id": id,
                                            "Reason": reason
                                        }
                                   $('#rejectPayment').modal('hide');
                                $.ajax(
                            {
                                type: "POST",
                                url: url,
                                data: formData,
                                success: function (response) {
                                    if (response == "Success") {

                                        swal("Unapplied payment rejected  successfully!", { icon: "success" })
                                                  .then((value) => {
                                                      location.reload();
                                                  });


                                    }
                                    else {

                                        swal("Failed to reject ,DbException");
                                    }
                                },
                                error: function (xhr) {
                                    swal(error);

                                },

                            });
                                } else {
                            swal("Cancelled", "No change was made");
                                        }
                                });
                            });

        });  $("#SetPaymentType").on('submit', function (e) {
                    e.preventDefault();
            var type = $("#payment_type #PaymentType").val();
            if (!type) {
                swal("Please select Payment Type");
                return false;
               }
                    swal({
                        title: 'Confirmation',
                        text: "Do you submit this type ?",
                        buttons: [
                          'No',
                          'Yes'
                        ],
                    }).then(function (isConfirm) {
                        if (isConfirm) {
                            var url = '@Url.Action("SubmitPaymentType", "AtSourcePaymentUnapplied")';
                            var id = $("#payment_type #Id").val();
                            var token = $("[name='__RequestVerificationToken']").val();
                            var formData = {
                                "__RequestVerificationToken": token,
                                "Id": id,
                                "PaymentType": type
                            }
                            $('#payment_type').modal('hide');
                            $.ajax(
                        {
                            type: "POST",
                            url: url,
                            data: formData,
                            success: function (result) {
                                if (result == "Success") {

                                    swal("Payment type saved successfully!", { icon: "success" })
                                        .then((value) => {
                                            location.reload();
                                        });


                                }
                                else {

                                    swal(result);
                                }
                            },
                            error: function (xhr) {
                                swal(error);

                            },

                        });
                        } else {
                            swal("Cancelled", "No change was made");
                        }
                    });
                });


        var approveEntry = function (id) {
                    swal({
                        title: 'Confirmation',
                        text: "Do you approve this unapplied  ?",
                        buttons: [
                          'No',
                          'Yes'
                        ],
                    }).then(function (isConfirm) {
                        if (isConfirm) {
                          var url = '@Url.Action("ApproveEntry", "AtSourcePaymentUnapplied")';
                            $.ajax(
                {
                    type: "POST",
                    url: url,
                    data: {id:id },
                    success: function (response) {
                        if (response == "Success") {

                            swal("Confirmed successfully", { icon: "success" })
                                      .then((value) => {
                                          location.reload();
                                      });


                        }
                        else {

                            swal(response);
                        }
                    },
                    error: function (xhr) {
                        swal(error);
                        $("#divLoader").hide();
                    },

                });
                        } else {
                            swal("Cancelled", "No change was made");
                        }
                    });
        };
        var rejectEntry = function (id) {
            $(".modal-body #Id").val(id);
            $('#rejectPayment').modal('show');
        }
        var paymentType = function (id) {
            $("#payment_type #Id").val(id);
            $('#payment_type').modal('show');
        }
    </script>
}


