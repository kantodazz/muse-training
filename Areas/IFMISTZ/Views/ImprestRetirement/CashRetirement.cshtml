
@model IFMIS.Areas.IFMISTZ.Models.CashRetirementVM
<!-- MAIN CONTENT -->
<div id="content" style="margin: 5px; padding-top: 30px">
    <div class="row">
        <div class="col-xs-12 col-sm-3 col-md-3 col-lg-3">
        </div>
    </div>
    <section id="widget-grid" class="">
        <div class="row">
            <article class="col-sm-12 col-md-12 col-lg-12">
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">
                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2> Cash Retirement </h2>
                    </header>

                    <div>
                        <div class="jarviswidget-editbox">
                        </div>
                        <div class="widget-body">
                            <form method="post" class="form-horizontal" enctype="multipart/form-data">
                                @Html.AntiForgeryToken()

                                <div class="form-horizontal">

                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    @Html.HiddenFor(model => model.ImprestId)

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.ReceiptRef, "Cash Receipt", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-3">
                                            @Html.EditorFor(model => model.ReceiptRef, new { htmlAttributes = new { @class = "form-control"} })
                                            @Html.ValidationMessageFor(model => model.ReceiptRef, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.IssuedAmount, "Issued Amount", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-3">
                                            @Html.EditorFor(model => model.IssuedAmount, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                            @Html.ValidationMessageFor(model => model.IssuedAmount, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.AmountDeposit, "Amount Deposited", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-3">
                                            @Html.EditorFor(model => model.AmountDeposit, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                            @Html.ValidationMessageFor(model => model.AmountDeposit, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.CashBankAccount, "Cash Bank Account", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-3">
                                            @Html.EditorFor(model => model.CashBankAccount, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                            @Html.ValidationMessageFor(model => model.CashBankAccount, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.RetirementDate, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-3">
                                            @Html.EditorFor(model => model.RetirementDate, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.RetirementDate, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="form-actions">
                                    <div class="row">
                                        <div class="col-md-12">
                                            <button class="btn btn-info" type="submit" style="float: left" id="btnSave" @*disabled="false"*@>
                                                <i class="fa fa-save"></i>
                                                Save
                                            </button>
                                            <a href="@Url.Action("PendingImprestRetirement", "ImprestRetirement")" class="btn btn-info" style="float: left; margin-left: 5px">
                                                <i class="fa fa-arrow-left"></i>
                                                Back
                                            </a>
                                        </div>
                                    </div>
                                </div>
                            </form>
                        </div>
                        <!-- end widget content -->
                    </div>
                    <!-- end widget div -->

                </div>
                <!-- end widget -->

            </article>
            <!-- END COL -->

        </div>

        <!-- END ROW -->

    </section>
    <!-- end widget grid -->

</div>

@section pagespecific {
        <script type="text/javascript">
            $(function () {
                $('#ExpensedAmount').autoNumeric('init');
            });

            function ConvertJsonDate(inputDate) {
                var dx = new Date(parseInt(inputDate.substr(6)));
                //alert(dx.toDateString());
                var dd = ("0" + dx.getDate()).slice(-2);
                var mm = ("0" + (dx.getMonth() + 1)).slice(-2);
                var yy = dx.getFullYear();
                var HH = ("0" + dx.getHours()).slice(-2);
                var m = ("0" + dx.getMinutes()).slice(-2);
                var ss = ("0" + dx.getSeconds()).slice(-2);
                return yy + "-" + mm + "-" + dd;
                //return dx.toDateString() + "  " + HH + ":" + m + ":" + ss;
            }

            $('#RetirementDate').datepicker({
                dateFormat: 'yy-mm-dd',
                prevText: '<i class="fa fa-chevron-left"></i>',
                nextText: '<i class="fa fa-chevron-right"></i>',
                onSelect: function (selectedDate) {
                    $('#RetirementDate').datepicker('option', 'minDate', selectedDate);
                }
            });

            $(function () {
                $('#RetirementDate').val(new Date().toDateInputValue());
            });


            $("#ReceiptRef").select2({
                minimumInputLength: 2,  // minimumInputLength for sending ajax request to server
                width: 'resolve',   // to adjust proper width of select2 wrapped elements
                placeholder: "Select Reference No",
                allowClear: false,
                initSelection: function (element, callback) {
                    var id = $(element).val();
                    if (id !== "") {
                        $.ajax('@Url.Action("GetReferenceNo", "ImprestRetirement")', {
                            data: { id: id },
                            dataType: "json"
                        }).done(function (data) {
                            callback(data);
                        });
                    }
                },
                ajax: {
                    url: '@Url.Action("GetReferenceNos", "ImprestRetirement")', // Controller - Select2Demo and Action -AccessRemoteData
                    type: "GET",
                    dataType: 'json',
                    data: function (term) {
                        return {
                            term: term
                        };
                    },
                    results: function (data, page) {
                        return { results: data.refs }; // data.CountryList returning json data from Controlle
                    }
                },
            });

            $('#ReceiptRef').on("change", function () {
                var referenceNo = $("#ReceiptRef").val();
                $.ajax({
                    type: "GET",
                    url: '@Url.Action("GetBankStatementDetail")',
                    data: { id: referenceNo },
                    success: function (data, status, jqXHR) {
                        if (data.duplicate) {
                            swal({
                                text: "Reference number already exist",
                                icon: "error",
                                button: "OK",
                            }).then(function () {
                                location.reload();
                            });
                        }
                        if (data.success) {
                            $("#AmountDeposit").val(data.AmountDeposit);
                            //$("#OperationalCurrency").val(data.OperationalCurrency);
                            //$("#ReceivingBankName").val(data.ReceivingBankName);
                            //$("#ReceivingBankBIC").val(data.ReceivingBankBic);
                            $("#CashBankAccount").val(data.ReceivingBankAccountNo);
                            //$("#ReceivingBankAccountName").val(data.ReceivingBankAccountName);
                            //$("#ApplyDate").val(applyDate);
                        }
                        
                        //else {
                        //    alert('Error on accessing bank statement details');
                        //}
                        $("#AmountDeposit").autoNumeric({ aNeg: "-" }).trigger("change");
                        $("#IssuedAmount").autoNumeric({ aNeg: "-" }).trigger("change");
                    },
                    //error: function () {
                    //    alert("Error on accessing bank statements details");
                    //}
                })
            });

    </script>
    }
