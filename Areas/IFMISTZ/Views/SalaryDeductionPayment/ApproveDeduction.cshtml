@model IEnumerable<IFMIS.Areas.IFMISTZ.Models.DeductionByInstitution>

@{
    // Layout = null;
    Layout = "~/Views/Shared/_Layout.cshtml";
    var i = 0;
}
<style>
    .search-container {
        background-color: white;
        color: black;
        border: 1px solid #ccc;
        border-radius: 4px;
        padding: 3px;
        padding-right: 10px;
        padding-left: 10px;
    }

    input[type=number] {
        padding: 8px;
        border: 1px solid #ccc;
    }

    input[type=text] {
        padding: 5px;
        border: 1px solid #ccc;
    }

    input[type=search] {
        padding: 4px;
        border: hidden;
        border-radius: 4px;
    }
</style>
<div id="divLoader"></div>
<div id="content" style="margin: 5px; padding-top: 30px">

    <div class="row">


    </div>


    <!-- widget grid -->
    <section id="widget-grid" class="">


        <!-- START ROW -->

        <div class="row">

            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">

                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">
                    <br/>
                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2>Approve Salary Deduction Payments </h2>

                    </header>


                    <div>
                        <div class="widget-body " style="padding-top:10px;width:100%">


                            <div class="row">
                                <div class="col-md-12">
                                    <div class="search-container" style="float:right">
                                        <i class="fa fa-search"></i>
                                        <input type="search" name="search" placeholder="Search..." id="search-box" autocomplete="off">
                                    </div>
                                </div>
                            </div>
                            <table class="table table-bordered table-hover table-condensed" id="dt_deductions">
                                <thead>
                                    <tr>
                                        <th>
                                            #
                                        </th>
                                        <th>
                                            @Html.DisplayNameFor(model => model.DeductionType)
                                        </th>

                                        <th>
                                            @Html.DisplayNameFor(model => model.PayeeAccountName)
                                        </th>
                                        <th>
                                            @Html.DisplayNameFor(model => model.PayeeBankAccountNo)
                                        </th>
                                        <th>
                                            @Html.DisplayNameFor(model => model.PayeeBankName)
                                        </th>
                                        <th>
                                            @Html.DisplayNameFor(model => model.CheckDate)
                                        </th>
                                        <th style="text-align:right">
                                            @Html.DisplayNameFor(model => model.TotalDeductionAmount)
                                        </th>
                                        <th>
                                            @Html.DisplayNameFor(model => model.OverallStatus)
                                        </th>

                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model)
                                    {
                                        i++;

                                        <tr>
                                            <td>
                                                @i
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.DeductionType)
                                            </td>

                                            <td>
                                                @Html.DisplayFor(modelItem => item.PayeeAccountName)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.PayeeBankAccountNo)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.PayeeBankName)
                                            </td>
                                            <td>
                                                @Convert.ToDateTime(item.CheckDate).ToString("dd-MM-yyyy")
                                            </td>
                                            <td align="right">
                                                @Html.DisplayFor(modelItem => item.TotalDeductionAmount)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.OverallStatus)
                                            </td>

                                            <td style="text-align:center">

                                                <div class="btn-group">
                                                    <button type="button" class="btn btn-info btn-xs dropdown-toggle" data-toggle="dropdown" style="width:40px;border-radius:1px;" aria-haspopup="true" aria-expanded="false">
                                                        <span class="caret"></span>
                                                        <span class="sr-only">Toggle Dropdown</span>
                                                    </button>
                                                    <ul class="dropdown-menu" style="text-align:left">
                                                        <li style="text-align:left">
                                                            <a href="@Url.Action("PreviewDeductions", "SalaryDeductionPayment",new {id=item.DeductionByInstitutionId })" class="btn-xs edit">
                                                                <i class="fa fa-search-minus"></i>  Preview
                                                            </a>
                                                        </li>
                                                        <li><a href="#" onclick="approveEntry(@item.DeductionByInstitutionId)" class="btn-xs edit"><i class="fa fa-edit"></i> Approve</a></li>
                                                        <li><a href="#" onclick="rejectEntry(@item.DeductionByInstitutionId)" class="btn-xs edit"><i class="fa fa-edit"></i> Reject</a></li>
                                                    </ul>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                                <tfoot>
                                    <tr>
                                        <th colspan="6" style="text-align:right">TOTAL</th>
                                        <th style="text-align:right" id="TotalAmount">
                                            @if (Model.Select(a => a.TotalDeductionAmount).Sum() > 0)
                                            {

                                                <strong> @Convert.ToDecimal(Model.Select(a => a.TotalDeductionAmount).Sum()).ToString("#,##0.00") </strong>

                                            }
                                        </th>
                                        <th colspan="2"></th>
                                    </tr>
                                </tfoot>
                            </table>

                        </div>





                    </div>


                </div>
            </article>

        </div>
    </section>

</div>
<div class="modal fade" id="dedution_model" style="left:4%">

    <div class="modal-dialog" style="width:35%;">
        <div class="modal-content panel-info">

            <div class="modal-header panel-heading">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h3 class="modal-title" style="text-align:center"> Reject</h3>
            </div>
            @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "RejectEntry" }))
            {
                <div class="modal-body form-horizontal">

                    <br />

                    <input type="hidden" name="Id" id="Id" value="">
                    <div class="form-group">

                        <div class="col-md-12">
                            <textarea name="Reason" id="Reason" placeholder="Rejection reason" required rows="4" class="form-control"></textarea>
                        </div>
                    </div>

                </div>
                <div class="modal-footer">
                    <a href="#" class="btn btn-default" data-dismiss="modal">Cancel</a>
                    <input class="btn btn-info" type="submit" id="btnSubmit" value="Save" />
                    @*<input type="submit" value="Submit" class="btn btn-success" id="btnSubmit" />*@

                </div>

            }
        </div>
    </div>
</div>
<div class="modal fade" id="divModal" tabindex="-1" role="dialog" aria-labelledby="lblmodal">
    <div class="modal-dialog modal-lg" style="width:80%;">
        <div width="90%" class="modal-content">
            <div class="modal-header alert alert-info" style="font:bold 16px Trebuchet MS, Lucida Sans Unicode, Lucida Grande, Lucida Sans, Arial, sans-serif">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title" id="lblmodal">
                    Preview
                </h4>
            </div>
            <div class="modal-body" id="divModalBody">

            </div>

            <div id="divPaymentStatusLoader" style="text-align:center; display:none">
                <img src="~/assets/img/avatars/ajax_loader.gif" />
            </div>
        </div>
    </div>

</div>
@section pagespecific {
    <!-- PAGE RELATED PLUGIN(S) -->

    <script type="text/javascript">

        var dt_deductions = $('#dt_deductions').dataTable();
        $("#dt_deductions_wrapper .dt-toolbar").remove();
        $("#search-box").on("keyup search input paste cut", function () {
            $("#dt_deductions").DataTable().search(this.value).draw();
        });

                $("#RejectEntry").on('submit', function (e) {
                    e.preventDefault();

                    swal({
                        title: 'Confirmation',
                        text: "Do you reject this Deduction Type ?",
                        buttons: [
                          'No',
                          'Yes'
                        ],
                    }).then(function (isConfirm) {
                        if (isConfirm) {
                            var url = '@Url.Action("RejectEntry", "SalaryDeductionPayment")';
                            var id = $("#Id").val();
                            var reason = $("#Reason").val();
                            var formData = {
                                "Id": id,
                                "Reason": reason
                            }
                            $('#dedution_model').modal('hide');
                            $.ajax(
                        {
                            type: "POST",
                            url: url,
                            data: formData,
                            success: function (result) {
                                if (result == "Success") {

                                    swal("Rejected  successfully!", { icon: "success" })
                                              .then((value) => {
                                           location.reload();
                                              });


                                }
                                else {

                                    swal("Failed to reject ,DbException");
                                }
                            },
                            error: function (xhr) {
                                swal(error);

                            },

                        });
                        } else {
                            swal("Cancelled", "No change was made");
                        }
                    });
                });


               
        //SHOW LOADER ICON
        $(document).ajaxStart(function () {
            $("#divLoader").show();
        });
        //HIDE LOADER ICON
        $(document).ajaxStop(function () {
            $("#divLoader").hide();
        });

     var approveEntry = function (id) {

                    swal({
                        title: 'Confirmation',
                        text: "Do you approve this salary deductions payment ?",
                        buttons: [
                          'No',
                          'Yes'
                        ],
                    }).then(function (isConfirm) {
                        if (isConfirm) {
                          var url = '@Url.Action("ApproveEntry", "SalaryDeductionPayment")';
                            $.ajax(
                {
                    type: "POST",
                    url: url,
                    data: {id:id },
                    success: function (response) {
                        if (response == "Success") {

                            swal("Approved successfully", { icon: "success" })
                                      .then((value) => {
                                          location.reload();
                                      });


                        } else if (response == "No Salary Deductions Exist") {
                            swal(response);
                            location.reload();
                        }
                        else {

                            swal(response);
                        }
                    },
                    error: function (xhr) {
                        swal(error);
                        $("#divLoader").hide();
                    },

                });
                        } else {
                            swal("Cancelled", "No change was made");
                        }
                    });
        };
       var rejectEntry = function (id) {
                 $(".modal-body #Id").val(id);
                 $('#dedution_model').modal('show');
        }
       $("#CheckDate").change(function () {
            var checkDate = $(this).val();
            if (checkDate) {
                GetDeductions(checkDate);
            }
           
         });

            function GetDeductions(checkDate) {
            $.ajax({
                type: "GET",
                url: "@Url.Action("GetConfirmedDeductions", "SalaryDeductionPayment")",
                data: { checkDate },
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {
                if (response.data) {
                  data = response.data;
                                dt_deductions.fnClearTable();
                                for (var i = 0; i < data.length; i++) {

                                    dt_deductions.fnAddData([i + 1,
                                    data[i]["DeductionType"],                                 
                                    data[i]["PayeeAccountName"],
                                    data[i]["PayeeBankAccountNo"],
                                    data[i]["PayeeBankName"],
                                    ToJavaScriptDate(data[i]["CheckDate"]),
                                   '<div align="right">' + toLabel(data[i]["TotalDeductionAmount"]) + '</div>',
                                    data[i]["OverallStatus"],
                                    '<div align="center"><div class="btn-group">\
                                    <button type="button" class="btn btn-info btn-xs dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\
                                         <span class="caret"></span\
                                             <span class="sr-only"></span>\
                                    </button>\
                                  <ul class="dropdown-menu">\
                                        <li><a href="#" onclick= "showMoreDetails(' + data[i]["DeductionByInstitutionId"] + ')">View</a></li>\
                                          <li><a href="#" onclick= "approveEntry(' + data[i]["DeductionByInstitutionId"] + ')">View</a></li>\
                                          <li><a href="#" onclick= "rejectEntry(' + data[i]["DeductionByInstitutionId"] + ')">View</a></li>\
                                  </ul>\
                                </div> </div>'
                                    ]);
                                }
                }
            },
            failure: function (error) {
                swal(error);
            }
        });
        }
    
            var showMoreDetails = function (id) {
            var url = '@Url.Action("PreviewDeductions", "SalaryDeductionPayment")';
            $("#divModalBody").load(url, { id: id }, function (response, status, xhr) {
                if (status == "error") {
                    $("#divModalBody").html("Error on accessing this details, contact system support.");
                }
                dt_preview_deduction = $('#divModalBody #dt_preview_deductions').dataTable();
                    $("#dt_preview_deductions_wrapper .dt-toolbar").remove();
                $("#divModal").modal("show");
            });
        };
           function ToJavaScriptDate(value) {
            if (value != null && value != '') {
                var pattern = /Date\(([^)]+)\)/;
                var results = pattern.exec(value);
                var dt = new Date(parseFloat(results[1]));
                return dt.getDate() + "/" + (dt.getMonth() + 1) + "/" + dt.getFullYear();
            }
          }
    </script>
}