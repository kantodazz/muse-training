@model IFMIS.Areas.IFMISTZ.Models.FundDistributionSummary

@{
    ViewBag.Title = "FundCompDistribution";
    Layout = "~/Views/Shared/_Layout.cshtml";
    decimal? totalAmount = 0;
    int totalLineItems = 0;
}
<style>
    .search-btn {
        border: 1px dashed #ccc;
        border-radius: 4px;
        padding: 5px;
        padding-right: 10px;
    }

    .submit-btn {
        background-color: white;
        color: black;
        border: 1px solid #538AC5;
        border-radius: 12px;
        padding: 3px;
        padding-right: 10px;
    }

    .searchContainer {
        display: inline-flex;
        flex: 1 1 300px;
        position: relative;
        border: 1px solid #ccc;
        border-radius: 5px;
        overflow: hidden;
    }

    .searchIcon {
        padding: 0.5rem;
    }

    .searchBox {
        border: 0;
        /*padding: 0.5rem 0.5rem 0.5rem 0;*/
        padding: 8px;
        flex: 1;
    }

    .searchButton {
        background: #538AC5;
        border: 0;
        color: white;
        /*padding: 0.5rem;*/
        padding: 8px;
        border-radius: 0;
    }

    input[type=number] {
        padding: 8px;
        border: 1px solid #ccc;
        border-radius: 4px;
        resize: vertical;
    }

    input[type=search] {
        padding: 4px;
        border: hidden;
        border-radius: 4px;
    }

    .action-btn {
        width: 100px;
        border-radius: 10px;
    }

    .info-box {
        padding: 10px;
        background-color: #ECF3F8;
        text-align: center;
        border: 1px solid #ccc;
        border-radius: 5px;
    }


    .modal-header {
        padding: 9px 15px;
        border-bottom: 1px solid #eee;
        background-color: #0480be;
        -webkit-border-top-left-radius: 5px;
        -webkit-border-top-right-radius: 5px;
        -moz-border-radius-topleft: 5px;
        -moz-border-radius-topright: 5px;
        border-top-left-radius: 5px;
        border-top-right-radius: 5px;
    }

    .alert-secondary {
        background-color: lightgrey;
        color: black;
    }
</style>
<!-- MAIN CONTENT -->
<div id="content">

    <div class="row">
        <!-- widget grid -->
        <!-- NEW WIDGET START -->
        <article class="col-xs-12 col-sm-12 col-md-12 col-lg-12" style="margin-left:-13px">




            <section id="widget-grid" class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                <div class="row">
                    <div class="jarviswidget" id="wid-id-0" data-widget-colorbutton="false" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">

                        <header>
                            <span class="widget-icon"> <i class="fa fa-table"></i> </span>
                            <h2>Edit Fund Allocation </h2>
                        </header>

                        <div>
                            <div class="widget-body " style="padding-top:10px">


                                <form action="@Url.Action(" DepartmentAllocation", "FundAllocations" )" method="post" id="create-bill-form" class="form-horizontal">
                                    @Html.AntiForgeryToken()
                                    <fieldset>
                                        <div class="form-group">

                                            <label class="col-md-2 control-label">
                                                Distribution Reference
                                                <i class="fa fa-asterisk" style="color:white" id="errorReference"></i>
                                            </label>
                                            <div class="col-md-3">
                                                @Html.TextBoxFor(model => model.FundDistributionSummaryNum, new { @class = "form-control", @placeholder = "Search Distribution Reference No." ,@readonly="readonly"})

                                            </div>

                                            <label class="col-md-2 control-label">
                                                Fund Reference
                                                <i class="fa fa-asterisk" style="color:white" id="errorFundReference"></i>
                                            </label>
                                            <div class="col-md-5">
                                                @Html.TextBoxFor(model => model.FundingRefNo, new { @class = "form-control", @readonly="readonly",@id="fundRef"})
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <label class="col-md-2 control-label">
                                                Fund Type
                                                <i class="fa fa-asterisk" style="color:white" id="errorFundType"></i>
                                            </label>
                                            <div class="col-md-3">
                                                @Html.TextBoxFor(model => model.FundType, new { @class = "form-control", @readonly="readonly",@id="fundType"})
                                            </div>
                                            <label class="col-md-2 control-label">
                                                Budget Class
                                                <i class="fa fa-asterisk" style="color:white" id="errorBudget"></i>
                                            </label>
                                            <div class="col-md-5">
                                                @Html.TextBoxFor(model => model.BudgetClass, new { @class = "form-control", @readonly="readonly",@id="budgetClass"})
                                                <input type="hidden" id="subBudgetClass" value="@ViewBag.SubBudgetClass" class="form-control" name="subBudgetClass" />
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <label class="col-md-2 control-label">
                                                Distributed Amount
                                                <i class="fa fa-asterisk" style="color:white" id="errorIssuedAmount"></i>
                                            </label>
                                            <div class="col-md-3">
                                                @Html.TextBoxFor(model => model.TotalAmount, new { @class = "form-control", @readonly="readonly",@id="distributedAmount"})
                                            </div>
                                            <label class="col-md-2 control-label">
                                                Department
                                                <i class="fa fa-asterisk" style="color:white" id="errorDepartment"></i>
                                            </label>
                                            <div class="col-md-5">
                                                @Html.TextBoxFor(model => model.SubVoteCodeDesc, new { @class = "form-control", @readonly="readonly",@id="department"})
                                            </div>
                                        </div>


                                        <div class="form-group">

                                            <label class="col-md-2 control-label">
                                                Distribution Description
                                                <i class="fa fa-asterisk" style="color:white" id="errorDescription"></i>
                                            </label>
                                            <div class="col-md-3">
                                                @Html.TextAreaFor(model => model.Description, new { @class = "form-control", @readonly="readonly",@id="department"})
                                            </div>

                                            <label class="col-md-2 control-label">
                                                Componet
                                                <i class="fa fa-asterisk" style="color:white" id="errorComponet"></i>
                                            </label>
                                            <div class="col-md-5">
                                                <textarea class="form-control" id="Component" readonly="readonly" name="Component">@ViewBag.Componet</textarea>
                                            </div>
                                        </div>


                                        @*<div class="form-group">

                                            <label class="col-md-2 control-label"> GL Items</label>
                                            <div class="col-md-3">
                                                <a class="search-btn" onclick="SearchGl()" href="#" style="display:block;width:290px">
                                                    <i class="fa fa-search searchIcon"></i>
                                                    Search...
                                                </a>
                                            </div>

                                            <label class="col-md-2 control-label">  </label>
                                            <div class="col-md-5">

                                            </div>
                                        </div>*@


                                        <table id="dt_voucher_detail" class="table table-striped table-bordered table-hover table-condensed" width="100%"></table>


                                        @foreach (var group in ((IEnumerable<IFMIS.Areas.IFMISTZ.Models.FundAllocationVM>
                                            )ViewBag.allocationDetails).GroupBy(a => a.InstitutionCode))
                                            {
                                            <table id="dt_voucher_detai" class="table table-striped table-bordered table-hover table-condensed" width="100%">
                                                <thead>
                                                    <tr>
                                                        <th>Expenditure Line Item</th>
                                                        @*<th>Item Description</th>
                                                        <th> Budget Balance </th>*@
                                                        <th>Allocated Amount </th>
                                                        <th ></th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @foreach (var item in group)
                                                    {
                                                    totalLineItems++;
                                                   
                                                    totalAmount = totalAmount + item.BaseAmount;
                                                    <tr>
                                                        <td>@item.DrGlAccount</td>
                                                        @*<td>@item.GlAccountDesc</td>
                                                        <td>@item.BudgetBalance</td>*@
                                                        <td>@string.Format("{0:#,0.00}",@item.BaseAmount)</td>
                                                        @*<td><a href="#" onclick="edit(@item.FundAllocationId,@item.BudgetBalance)"> Edit </a></td>*@
                                                        <td><a href="#" onclick="remove(@item.FundAllocationId)"> Remove </a></td>
                                                      
                                                    </tr>
                                                    }
                                                    <tr style="font-weight:bold">
                                                        <td style="text-align:right" >Total Amount</td>
                                                        <td>@string.Format("{0:#,0.00}",@totalAmount)</td>
                                                        <td> <input type="hidden" value='@totalLineItems' id="totalineItems"/></td>
                                                    </tr>
                                                </tbody>


                                            </table>

                                            }


                                            @*<div style="padding-top:5px">
                                                <table id="dt_voucher_detail" class="table table-striped table-bordered
                                                       table-hover table-condensed" width="100%"></table>
                                                <div style="padding-bottom:10px" id="infoPanel">
                                                    <div class="info-box">No GL Items Selected</div>
                                                </div>
                                            </div>
                                            <!-- end widget content -->
                                            <div style="float:right;padding-bottom:10px">
                                                <strong>TOTAL AMOUNT (<strong id="currency2">TZS</strong>): </strong>
                                                <strong id="total_amount">0.00</strong>
                                            </div>
                                            *@

                                    </fieldset>
                                    <div class="form-actions">
                                        <div class="row">
                                            <div class="col-md-12">
                                                <div class="col-md-2">
                                                </div>
                                                <div class="col-md-10">
                                                    <a href="@Request.UrlReferrer" style="margin-right:5px" type="submit" class="btn btn-info pull-left"><i class="glyphicon glyphicon-arrow-left"></i> Back  </a>
                                                    &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
                                                    <button class="btn btn-info" id="formSave" type="button" style="float: left">
                                                        <i class="fa fa-save"></i>
                                                        Save
                                                    </button>
                                                </div>
                                            </div>


                                        </div>
                                    </div>
                                </form>




                            </div>
                            <!-- end widget content -->

                        </div>
                        <!-- end widget div -->

                    </div>
                </div>
            </section>

        </article>
        <!-- WIDGET END -->


    </div>

</div>

<!----------- Search GL Items ----------------->
<div class="modal fade" id="glItemsModal" style="left:4%">

    <div class="modal-dialog" style="width:80%;">
        <div class="modal-content panel-info">
            <div class="modal-header panel-heading">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h3 class="modal-title"> Search Gl Item</h3>
            </div>
            <div class="modal-body">
                <table>
                    <tr>
                        <td style="white-space:nowrap">Fund Reference</td>
                        <td style="padding:5px">Fund Balance</td>
                        <td style="padding:5px">Total Line Amount</td>
                        <td style="padding:5px">Difference</td>
                    </tr>
                    <tr>
                        <td style="white-space:nowrap;">
                            <input type="text" disabled id="reference">
                        </td>

                        <td style="padding:5px">
                            <input type="text" disabled id="total_voucher_amount">
                        </td>


                        <td style="padding:5px">
                            <input value="0" type="text" disabled id="total_line_amount">
                        </td>


                        <td style="padding:5px">
                            <input value="0" type="text" disabled id="difference" style="width:250px">
                        </td>
                    </tr>
                </table>
                <div>
                    <div class="row" style="padding-top:1%;padding-bottom:1%">
                        <div class="col-md-6">
                        </div>
                        <div class="col-md-6">
                            <div class="search-container submit-btn" style="float:right">
                                <i class="fa fa-search search-icon"></i>
                                <input type="search" name="search" placeholder="Search..." id="searchbox2">
                            </div>
                        </div>
                    </div>
                    <table id="dt_search_gl_item" class="table table-striped table-bordered table-hover table-condensed" width="100%">
                        <thead>
                            <tr>
                                <th>
                                    #
                                </th>
                                <th>Expenditure Line Item</th>
                                <th>
                                    Description.
                                </th>

                                <th>
                                    Budget Balance
                                </th>

                                <th>

                                </th>
                            </tr>
                        </thead>
                    </table>

                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-info" id="btn_save_gl_items">
                        <i class="fa fa-save"></i>Save
                    </button>
                    <button class="btn btn-info" data-dismiss="modal">
                        <i class="fa  fa-times"></i>Cancel
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="responseModal" tabindex="-1" role="dialog" aria-labelledby="lblmodal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header alert alert-info" style="font:bold 16px Trebuchet MS, Lucida Sans Unicode, Lucida Grande, Lucida Sans, Arial, sans-serif">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>

                <h4 class="modal-title" id="lblmodal">Message</h4>
            </div>
            <div class="modal-body">
                <p class="success-message">Successfully Allocated </p>
            </div>
            <div class="modal-footer">
                @*<button class="btn btn-info delete-confirm">Ok</button>*@
                <button class="btn btn-info delete-cancel" data-dismiss="modal">Ok</button>
            </div>
        </div>
    </div>
</div>


<!-----------eDIT  Distribution Modal----------------->
<div class="modal fade" id="detailsModal">
    x
    <div class="modal-dialog">
        <div class="modal-content panel-info">

            <div class="modal-header panel-heading">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h4 class="modal-title">  EDIT ALLOCATION</h4>

            </div>
            <div class="modal-body">
                <div id="registration-form">
                    @using (Html.BeginForm("EditAllocation", "FundAllocations", FormMethod.Post))
                    {
                    <table class="table table-striped">
                        <tbody>

                            <tr>
                                <td colspan="1">
                                    <form class="well form-horizontal">
                                        <fieldset>
                                            <div class="form-group">
                                                <label class="col-md-4 control-label"></label>
                                                <div class="col-md-8" style="margin:0px 0px 15px -60px;">
                                                    <input type="hidden" name="allocationId" id="allocationId" class="form-control" />
                                                </div>
                                                <label class="col-md-4 control-label">Budget Balance</label>
                                                <div class="col-md-8" style="margin:0px 0px 15px -60px;">
                                                    <input type="text" disabled="disabled" name="fundBaseAmount" id="fundBaseAmount" class="form-control" />
                                                </div>
                                                <label class="col-md-4 control-label">Available Balance</label>
                                                <div class="col-md-8" style="margin:0px 0px 15px -60px;">
                                                    <input type="text" disabled="disabled" name="distributionBalance" id="distributionBalance" class="form-control" />
                                                </div>
                                                <label class="col-md-4 control-label">Amount</label>
                                                <div class="col-md-8" style="margin:0px 0px 15px -60px;">
                                                    <input class="form-control" onkeyup="ValidateEntry()" name="Amount" id="Amount" placeholder="Distributed Amount" type="text" value="">
                                                    <a href="#" id="exceedMsg" style="display:none;color:red">Amount Exceed Balances </a>
                                                </div>
                                            </div>


                                            <div class="form-group">
                                                <label class="col-md-4 control-label"></label>
                                                <div class="col-md-8" style="margin:0px 0px 15px -60px;">
                                                </div>
                                            </div>



                                            <div class="form-group">
                                                <label class="col-md-4 control-label"></label>
                                                <div class="col-md-8" style="margin:0px 0px 15px -60px;">
                                                    <button type="submit" style="margin-left:0px" id="savebtn" class="btn btn-info"><i class="glyphicon glyphicon-floppy-disk"></i>Save</button>

                                                    @*<a href="../FundDistribution" style="margin-left:30px" type="submit" class="btn btn-default"><i class="glyphicon glyphicon-backward"></i> Back  </a>*@
                                                </div>
                                            </div>
                                        </fieldset>
                                    </form>
                                </td>

                            </tr>
                        </tbody>
                    </table>

                    @*<a href="..//FundAllocations/FundDistribution" style="margin-left:30px" type="submit" class="btn btn-default"><i class="glyphicon glyphicon-backward"></i> Back  </a>*@
                    }
                </div>
            </div>

        </div>
    </div>
</div>

@section pagespecific{
<script>

        $(document).ready(function () {

            $(document).ready(function () {
                $("#dt_search_gl_item_wrapper .dt-toolbar").remove();

                $("#dt_voucher_detail_wrapper .dt-toolbar").remove();
                $("#dt_voucher_detail_wrapper .dt-toolbar-footer").remove();
            });
            var url = "GetDistributionReference";

            //$("#FundingRefNo").select2({
            //    minimumInputLength: 2,  // minimumInputLength for sending ajax request to server
            //    width: 'resolve',   // to adjust proper width of select2 wrapped elements
            //    ajax: {
            //        url: url, // Controller - Select2Demo and Action -AccessRemoteData
            //        type: "POST",
            //        dataType: 'json',
            //        data: function (referenceNo) {
            //            return {
            //                referenceNo: referenceNo
            //            };
            //        },
            //        results: function (data, page) {
            //            return { results: data.references }; // data.CountryList returning json data from Controlle
            //        }
            //    }
            //});
        });


        $("#FundingRefNo").change(function () {
            debugger;
            var distributionReferenceNo = $(this).val();
            // var budgetclass = $(this).val();
            var url = "GetDistribution/?distributionRef=" + distributionReferenceNo;

            $.ajax({
                type: "POST",
                url: url,
                contentType: "html",
                success: function (response) {
                    if (response[0] == "Success") {
                        $("#fundRef").val(response[1]);
                        $("#fundType").val(response[2]);
                        $("#budgetClass").val(response[3]);
                        $("#Component").val(response[9]);
                        $("#distributedAmount").val(response[6]);
                        $("#Description").val(response[4]);
                        $("#department").val(response[5]);
                        $("#fundSource").val(response[7]);
                        $("#subBudgetClass").val(response[8]);
                    }
                    else if (response[0] == "DbException") {
                        alert("An error has occured, contact system support" + response[1]);
                        $("#divLoader").hide();
                    }
                },
            });

            ///updateSearchGITable($("subBudgetClass").val());
        });


        // =========== START VOUCHER DETAILS ===============
        var dt_voucher_detail = $('#dt_voucher_detail').dataTable({
            "data": [],
            "columns": [
                { title: "Expenditure Line Item" },
                { title: "Item Description" },
                { title: "Budget Balance" },
                { title: "Expense Amount" }
            ]
        });

        // =========== END VOUCHER DETAILS ====================


        ///========== SEARCH GL =====
        var responsiveHelper_dt_search_gl_item = undefined;
        var dt_search_gl_item = $('#dt_search_gl_item').dataTable();

        $("#searchbox2").on("keyup search input paste cut", function () {
            dt_search_gl_item.DataTable().search(this.value).draw();
        });
        var SubBudgetClassOld = $("#SubBudgetClass").val();



        function updateSearchGITable(subBudgetClass) {
            debugger;
            //var subBudgetClass = $("#subBudgetClass").val();
            var url = '@Url.Action("GetFundBalance", "FundAllocations")';
            var fundBalanceParams = { "subBudgetClass": subBudgetClass };

            //$("#currency").text(subBudgetClassList[1].trim());
            //$("#currency2").text(subBudgetClassList[1].trim());
            $.ajax({
                type: "get",
                url: url,
                data: fundBalanceParams,
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {

                    data = response.data;
                    dt_search_gl_item.fnClearTable();
                    for (var i = 0; i < data.length; i++) {
                        dt_search_gl_item.fnAddData([i,
                           data[i]["GlAccount"].split("|").join("-"),
                           data[i]["GlAccountDesc"],
                           data[i]["BudgetBalance"],
                           '<input type="number" placeholder="Amount" id="Id-' + i + '" onkeyup="amountChanged(' + i + ')"/>'
                        ]);
                    }


                },
                failure: function (error) {
                    swal(error);
                }
            });
        }

        var TotalAmountOld = $("#total_voucher_amount").val();
        function clearVochaDetailsTable() {
            var _data = dt_voucher_detail.DataTable().rows().data();

            if (_data.length > 0) {
                confirmTotalAmountChange(TotalAmountOld, $("#total_voucher_amount").val());
            }
            TotalAmountOld = $("#total_voucher_amount").val();
        }


        function resetVochaDetailsTable() {
            $("#total_amount").text("0.00");
            dt_voucher_detail.fnClearTable();
        }

        function SearchGl() {
            debugger;
            var subBudgetClass = $("#subBudgetClass").val();
            updateSearchGITable(subBudgetClass);
            $('#glItemsModal').modal('show');
            $('#total_voucher_amount').val($('#distributedAmount').val());
            $('#reference').val($('#fundRef').val());
            computeTotalAmount();

        }
        /////// ==== END OF SEARCH GL ==============

        //==== START OF ADD GL Items to Voucher Details ======
        function remove(array, val) {
            var found = array.indexOf(val);
            while (found !== -1) {
                array.splice(found, 1);
                found = array.indexOf(val);
            }
        }


        var form_data_status = [];
        var all_amounts = {};
        function amountChanged(i) {
            var data = dt_search_gl_item.DataTable().rows().data();
            var row = data.rows(i).data()[0]
            var original_amount = parseFloat(row[3]);
            var entered_amount = parseFloat($("#Id-" + i).val());
            all_amounts["Id-" + i] = $("#Id-" + i).val();
            var balance = original_amount - entered_amount;

            if (balance < 0) {
                form_data_status.push(i);
                $("#Id-" + i).css({ 'color': 'red' });
                $("#btn_save_gl_items").attr("disabled", true);
            } else {
                $("#Id-" + i).css({ 'color': 'black' });
                $("#btn_save_gl_items").attr("disabled", false);
                remove(form_data_status, i);
                computeTotalAmount();
            }

        }



        function computeTotalAmount() {
            var total_amount = 0;
            var difference = 0;
            var amount = "";
            var data = dt_search_gl_item.DataTable().rows().data();
            var obj = [];

            for (var i = 0; i < data.length; i++) {
                var amount = all_amounts["Id-" + i];

                if (amount == undefined) {
                    amount = "";
                }
                if (amount.trim()) {
                    total_amount = parseFloat(total_amount) + parseFloat(amount);
                }
            }
            try {
                difference = parseFloat($('#total_voucher_amount').val()) - parseFloat(total_amount);
                $('#difference').val(difference);
                if (difference < 0) {
                    $("#difference").css({ 'color': 'red' });

                } else {
                    $("#difference").css({ 'color': 'black' });
                }
            } catch (e) { }
            $("#total_line_amount").val(total_amount);
        }

        $("#btn_save_gl_items").click(function () {
            var total_amount = 0;
            var difference = 0;
            var data = dt_search_gl_item.DataTable().rows().data();
            if (form_data_status.length == 0) {
                var obj = [];
                dt_voucher_detail.fnClearTable();
                $("#total_amount").text("0.00");
                for (var i = 0; i < data.length; i++) {

                    var amount = all_amounts["Id-" + i];
                    if (amount == undefined) {
                        amount = "";
                    }
                    if (amount.trim()) {
                        var row = data.rows(i).data()[0];
                        console.log(row);
                        if (parseFloat(amount) > 0) {
                            dt_voucher_detail.fnAddData([row[1], row[2], row[3], amount]);
                        }
                        total_amount = parseFloat(total_amount) + parseFloat(amount);
                        $("#total_amount").text(total_amount);
                    }
                }

                difference = parseFloat($('#total_voucher_amount').val()) - parseFloat(total_amount);
                if (difference < 0) {
                    swal("Allocation Amount Exceed Budget Balance");
                    dt_voucher_detail.fnClearTable();
                } else {
                    $('#glItemsModal').modal('hide');

                }
            } else {
                swal("Please Fix Form Errors....");
            }
            toggleTableInfo();
        });

        toggleTableInfo();
        function toggleTableInfo() {
            var data = dt_voucher_detail.DataTable().rows().data();
            if (data.length > 0) {
                $("#dt_voucher_detail").toggle(true);
                $("#infoPanel").toggle(false);
            } else {
                $("#dt_voucher_detail").toggle(false);
                $("#infoPanel").toggle(true);
            }
        }
        //==== END OF ADD GL Items to Voucher Details ======



        $("#form_submision").click(function () {
            debugger

            if (formValidation()) {
                var AllocationDetails = []
                var allocationDetailsData = dt_voucher_detail.DataTable().rows().data();

                for (var i = 0; i < allocationDetailsData.length; i++) {

                    var _row = allocationDetailsData.rows(i).data()[0];
                    //var baseAmountDetail = parseFloat(_row[3]) * exchangeRate;
                    AllocationDetails.push({
                        "DrCoa": _row[0],
                        "DrCoaDesc": _row[1],
                        "DrGfsCode": _row[2],
                        "BaseAmount": _row[3],
                        //"baseAmountDetail": baseAmountDetail,

                    })

                }

                console.log(AllocationDetails);

                var data = {

                    "BudgetClass": $("#budgetClass").val(),
                    "FundingRefNo": $("#fundRef").val(),
                    "FundType": $("#fundType").val(),
                    "SubVoteDesc": $("#department").val(),
                    "Description": $("#Description").val(),
                    "AllocationDetails": AllocationDetails
                }
                console.log(allocationDetailsData);

                if (AllocationDetails.length == 0) {
                    swal("No Item(s) Details Provided")
                }
                else {
                    console.log(JSON.stringify(data));
                    var urlList = '@Url.Action("AllocatedFunds", "FundAllocations")';
                    var url = '@Url.Action("CreateAllocation", "FundAllocations")';
                    //debugger
                    $.ajax({
                        url: url,
                        type: "POST",
                        data: JSON.stringify(data),
                        dataType: "JSON",
                        contentType: "application/json",
                        success: function (response) {
                            //check if successfully save to database
                            if (response == "Success") {
                                swal("Allocation Saved Successfully!", { icon: "success" })
                                             .then((value) => {
                                                 window.location.href = urlList;
                                             });
                            }
                            else {

                                swal("Failed to Save !");
                            }
                        },
                        error: function () {
                            alert('Error. Please try again.');
                            $('#btnSave').val('Save');
                        }
                    });
                }
            }
            else {
                swal("Incomplete Allocation Details");
            }
        });


        $("#formSave").click(function () {
            debugger

            swal({
                title: "Are you sure to Save",
                text: "",
                buttons: [
                  'Yes',
                  'No'
                ],
                closeOnClickOutside: false,
            }).then(function (isConfirm) {
                if (isConfirm) {
                    swal("Cancelled", "No change was made");
                } else {
                    var urlList = '@Url.Action("AllocatedFunds", "FundAllocations")';
                    window.location.href = urlList;
                }
            });

        });

        function formValidation() {
            debugger;

            $("#errorReference").attr("style", "color: white;");
            $("#errorFundReference").attr("style", "color: white;");
            $("#errorFundType").attr("style", "color: white;");
            $("#errorBudget").attr("style", "color: white;");
            $("#errorIssuedAmount").attr("style", "color: white;");
            $("#errorDepartment").attr("style", "color: white;");
            $("#errorDescription").attr("style", "color: white;");
            $("#errorComponet").attr("style", "color: white;");


            if ($("#FundingRefNo").val().trim() == "") {
                $("#errorReference").attr("style", "color: red;");
                return false
            }

            if ($("#fundRef").val().trim() == "") {
                $("#errorFundReference").attr("style", "color: red;");
                return false
            }

            if ($("#fundType").val().trim() == "") {
                $("#errorFundType").attr("style", "color: red;");
                return false
            }

            if ($("#budgetClass").val().trim() == "") {
                $("#errorBudget").attr("style", "color: red;");
                return false
            }


            if ($("#Component").val().trim() == "") {
                $("#errorComponet").attr("style", "color: red;");
                return false
            }

            if ($("#distributedAmount").val().trim() == "") {
                $("#errorIssuedAmount").attr("style", "color: red;");
                return false
            }


            if ($("#department").val().trim() == "") {
                $("#errorDepartment").attr("style", "color: red;");
                return false
            }

            if ($("#Description").val().trim() == "") {
                $("#errorDescription").attr("style", "color: red;");
                return false
            }

            return true

        };

        function remove(i) {
            debugger;
            var totalItemLines = $("#totalineItems").val()
            var lines = totalItemLines;
            if (totalItemLines == 1) {

                swal({
                    title: "Cancel Entire Allocation ?",
                    text: "Removing this Item will remove the Entire Allocation,",
                    icon:"warning",
                    buttons: [
                      'Yes',
                      'No'
                    ],
                    closeOnClickOutside: false,
                }).then(function (isConfirm) {
                    if (isConfirm) {
                        swal("Cancelled", "No change was made");
                    } else {

                        Delete(i);
                    }
                });
            }
            else{
            //if (i == 'x') i = id;
            swal({
                title: "Are you sure?",
                text: "Once Removed, you will not be able to recover this Item",
                buttons: [
                  'Yes',
                  'No'
                ],
                closeOnClickOutside: false,
            }).then(function (isConfirm) {
                if (isConfirm) {
                    swal("Cancelled", "No change was made");
                } else {

                    removeItem(i);
                }
            });
        }
        }

        var removeItem = function (did) {
            debugger;

            if (did != "") {
                var url = '@Url.Action("RemoveAllocatedItem", "FundAllocations")';
                $.ajax({
                    url: url,
                    data: { id: did },
                    type: "POST",
                    success: function (response) {
                        if (response) {
                            if (response == "Success") {
                                swal("Item Removed Successfully!", { icon: "success" })
                       .then((value) => {
                           window.location.reload();
                       });
                            }
                        }
                    }, error: function (err) {
                        swal(response, { icon: "success" })
                       .then((value) => {
                           window.location.reload();
                       });
                    }

                });
            }
        }





        //var edit = function (did) {
        //swal("You can only Edit Amount")
        //}

        var edit = function (did,budgetBalance) {
            debugger;
            var allocationId = did;
            var url = '@Url.Action("EditAllocationAmount", "FundAllocations")';
            $.ajax({
                type: "POST",
                url: url,
                data: { id: allocationId },
                success: function (response) {
                    if (response[0] == "Success") {
                        $(".modal-body #Amount").val(response[1]);
                        $(".modal-body #fundBaseAmount").val(budgetBalance);
                        $(".modal-body #allocationId").val(did);
                        $(".modal-body #distributionBalance").val(response[3]);
                        $("#detailsModal").modal("show");  // show modal
                    }
                    else if (response[0] == "DbException") {
                        swal("An error has occured, contact system support" + response[0]);
                        $("#divLoader").hide();
                    }
                },
                error: function (xhr) {
                    console.log(xhr.responseText);
                    alert("An error has occured, contact system support");
                    $("#divLoader").hide();
                },

            })
        }



        function ValidateEntry() {
            debugger;
            var smallAmount = 0;
            var amount = parseFloat($("#Amount").val());
            var issued = parseFloat($("#fundBaseAmount").val());
            var available = parseFloat($("#distributionBalance").val());
            if (issued < available) {
                smallAmount = issued;
            }
            else {
                smallAmount = available;
            }
            if (amount > smallAmount) {
                $("#Amount").css({ 'color': 'red' });
                $("#savebtn").attr("disabled", true);
                $("#exceedMsg").show();
            }
            else {
                $("#Amount").css({ 'color': 'black' });
                $("#savebtn").attr("disabled", false);
                $("#exceedMsg").hide();
            }
        };


        //========== INPUT THOUSAND SEPARATOR ==================

        $("#Amount").on("keyup input paste cut", function () {
            $("#Amount1").val(inputThousandSeparator(this.value))
        })

        var OldVal = 0
        function inputThousandSeparator(NewVal) {
            if (NewVal) {
                try {
                    NewVal = parseFloat(NewVal.split(",").join(""))
                    if (typeof NewVal == 'number' && !Number.isNaN(NewVal)) {
                        OldVal = NewVal;
                        return NewVal.toLocaleString();
                    } else {
                        return OldVal;
                    }
                } catch (e) {
                    console.log(e);
                }
            }
        }



        function Delete(i, id) {
            debugger;
            if (i === 'x') i = id;
            swal({
                title: "Are you sure?",
                text: "Once Cancelled, you will not be able to recover this Allocation ",
                buttons: [
                  'Yes',
                  'No'
                ],
                closeOnClickOutside: false,
            }).then(function (isConfirm) {
                if (isConfirm) {
                    swal("Cancelled", "No change was made");
                } else {

                    //swal("Can not Delete");
                    deleteallocation(i);
                }
            });

        }


        var deleteallocation = function (did) {
            debugger;

            if (did != "") {
                var url = '@Url.Action("RemoveEntireAllocation", "FundAllocations")';
                var urlList = '@Url.Action("AllocatedFunds", "FundAllocations")';
                $.ajax({
                    url: url,
                    data: { id: did },
                    type: "POST",
                    success: function (response) {
                        if (response) {
                            if (response == "Success") {
                                swal("Entire Allocation Removed Successfully!", { icon: "success" })
                                                 .then((value) => {
                                                     window.location.href = urlList;
                                                 });
                            }
                        }
                    }, error: function (err) {
                        swal(response, { icon: "success" })
                       .then((value) => {
                           window.location.reload();
                       });
                    }

                });
            }
        }

</script>
}
