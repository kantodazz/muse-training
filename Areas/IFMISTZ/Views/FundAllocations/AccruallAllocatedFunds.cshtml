@model IEnumerable<IFMIS.Areas.IFMISTZ.Models.FundAllocationSummary>
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";

}

<style>
    #amountdata {
        text-align: right;
    }
</style>

<div id="content" style="margin: 5px; padding-top: 30px">

    <div class="row">
        @*<div class="col-xs-12 col-sm-9 col-md-9 col-lg-9">
                <h1 class="page-title txt-color-blueDark">

                    <!-- PAGE HEADER -->
                    <!--
                    <i class="fa-fw fa fa-pencil-square-o"></i>
                    Payments
                    <span>
                        >
                        Bills
                    </span>
                        -->
                </h1>
            </div>*@

        <div class="col-xs-12 col-sm-3 col-md-3 col-lg-3">
            <!-- Button trigger modal -->
            <!--<a data-toggle="modal" href="#myModal" class="btn btn-success btn-lg pull-right header-btn hidden-mobile"><i class="fa fa-circle-arrow-up fa-lg"></i> Launch form modal</a>-->
        </div>
    </div>

    <!--
    <div class="alert alert-block alert-success">
        <a class="close" data-dismiss="alert" href="#">×</a>
        <h4 class="alert-heading"><i class="fa fa-check-square-o"></i> Check validation!</h4>
        <p>
            You may also check the form validation by clicking on the form action button. Please try and see the results below!
        </p>
    </div>
        -->
    <!-- widget grid -->
    <section id="widget-grid" class="">
        <!----->

        <!-- START ROW -->

        <div class="row">

            <!-- NEW COL START -->
            <div class="col-sm-12 col-md-12 col-lg-12">
                <br />
                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">
                    <!-- widget options:
                        usage: <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false">

                        data-widget-colorbutton="false"
                        data-widget-editbutton="false"
                        data-widget-togglebutton="false"
                        data-widget-deletebutton="false"
                        data-widget-fullscreenbutton="false"
                        data-widget-custombutton="false"
                        data-widget-collapsed="true"
                        data-widget-sortable="false"

                    -->
                    <header>
                        <span class="widget-icon"> <i class="fa fa-table"></i> </span>
                        <h2> Accrual Fund Allocation </h2>

                    </header>

                    <!-- widget div-->
                    <div>

                        <!-- widget edit box -->
                        <div class="jarviswidget-editbox">
                            <!-- This area used as dropdown edit box -->

                        </div>
                        <!-- end widget edit box -->
                        <!-- widget content -->
                        <div class="widget-body">

                            <a href="@Url.Action("AccruallAllocation","FundAllocations")" class="btn btn-info">
                                <span class="glyphicon glyphicon-plus"></span>
                                Add New
                            </a>
                            <hr class="simple" />
                 
                            <table id="dt_basic" class="table table-bordered table-hover table-condensed" width="100%">
                                <thead>
                                    <tr style="text-align:right;white-space:nowrap">
                                        <th data-hide="phone">ID</th>
                                        <th style="text-align:left">Department </th>
                                        <th data-class="expand" style="text-align:left"> Legal Number </th>
                                        <th data-class="expand" style="text-align:left">Funding RefNo</th>
                                        <th data-class="expand" style="text-align:left">Voucher Number</th>
                                        <th data-class="expand" style="text-align:left">Allocation Date</th>
                                        <th data-hide="phone,tablet" style="text-align:right"> Allocated Amount</th>
                                        <th data-class="expand" style="text-align:center">Overall Status</th>

                                        <th data-hide="phone,tablet"> Action</th>
                                    </tr>
                                </thead>

                                @foreach (var group in ((IEnumerable<IFMIS.Areas.IFMISTZ.Models.FundAllocationSummary>)ViewBag.allocationDetails).GroupBy(a => a.InstitutionCode))
                                {
                                    int i = 0;
                                    string dep = "";
                                    <tbody>
                                        @foreach (var group1 in group)
                                        {

                                            i++;
                                            <tr>
                                                <td style="text-align:right">@i</td>
                                                <td style="text-align:left;white-space:nowrap">
                                                    @if(@group1.STAllocation == 1){
                                                        dep =  @group1.STInstitutionName;
                                                    }
                                                    else{
                                                        dep = @group1.SubVoteDesc;
                                                    }
                                                    @dep
                                                   
                                                </td>
                                                <td style="text-align:left">@group1.FundAllocationSummaryNum</td>
                                                <td style="text-align:left">@group1.FundingRefNo</td>
                                                <td style="text-align:left">@group1.SourceModuleRefNo</td>

                                                <td style="text-align:left">@string.Format("{0:d/M/yyyy}", group1.ApplyDate)</td>
                                                <td style="text-align:right">@string.Format("{0:#,0.00}", group1.TotalAmount)</td>
                                                <td style="text-align:center">@string.Format("{0:#,0.00}", group1.OverallStatus)</td>
                                                <td style="white-space:nowrap">
                                                    <div class="btn-group">
                                                        <button type="button" class="btn btn-info btn-xs dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                            <span class="caret"></span>
                                                            <span class="sr-only">Toggle Dropdown</span>
                                                        </button>
                                                        <ul class="dropdown-menu" style="white-space:nowrap">
                                                            <li><a href="#" onclick="confirm(@group1.FundAllocationSummaryId)"><i class="fa fa-search-plus"></i> Confirm </a></li>
                                                            <li><a href="#" onclick="allocationDetails(@group1.FundAllocationSummaryId)"><i class="fa fa-list"></i>   Details </a></li>
                                                            @if (group1.OverallStatus == "Rejected")
                                                            {
                                                                <li><a href="#" onclick="viewReason(@group1.FundAllocationSummaryId)"><i class="fa fa-search-plus"></i> Vew Reason </a></li>
                                                            }

                                                            @*//else
                                                            //{*@
                                                                <li><a href="#" onclick="Delete(@group1.FundAllocationSummaryId)"><i class="fa fa-trash-o"></i> Cancel </a></li>
                                                            @*}*@
                                                            <li><a href="../FundAllocations/EditAllocation/@group1.FundAllocationSummaryId"><i class="fa fa-search-plus"></i> Edit </a></li>
                                                        </ul>
                                                    </div>
                                            </td>
                                         </tr>
                                        }
                                    </tbody>
                                }
                                </table>
                               
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </div>

   



    <!-----------eDIT  Distribution Modal----------------->

    <div class="modal fade" id="responseModal" tabindex="-1" role="dialog" aria-labelledby="lblmodal">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header alert alert-danger" style="font:bold 16px Trebuchet MS, Lucida Sans Unicode, Lucida Grande, Lucida Sans, Arial, sans-serif">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>

                    <h4 class="modal-title" id="lblmodal">Delete</h4>
                </div>
                <div class="modal-body">
                    <p class="success-message">Are you sure you want to Delete? </p>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-info delete-confirm">Ok</button>
                    <button class="btn btn-info delete-cancel" data-dismiss="modal">Cancel</button>
                </div>
            </div>
        </div>
    </div>

<div class="modal fade" id="ViewReasonModal">
    x
    <div class="modal-dialog">
        <div class="modal-content panel-info">

            <div class="modal-header panel-heading">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h4 class="modal-title">  Rejection Reason </h4>
            </div>
            <div class="modal-body">
                <div id="registration-form">
                    @Html.TextArea("RejectionReason", null, new { @class = "form-control", @readonly = "readonly" })
                </div>
            </div>

        </div>
    </div>
</div>



<!----------- VIEW DIALOG ----------------->
<div class="modal fade" id="detailsModal" style="left:4%">

    <div class="modal-dialog" style="width:80%;">
        <div class="modal-content panel-info">
            <div class="modal-header panel-heading">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h3 class="modal-title">Allocation Details</h3>
            </div>
            <div class="modal-body">
                <div>
                    <div class="widget-body" id="allocationDetail_body">

                    </div>
                </div>
                <div class="modal-footer">
                    @*<button class="btn btn-info btn-150" data-dismiss="modal" style="width:100px;" onclick="accept('x')">
                            <i class="fa fa-check"></i>Accept
                        </button>
                        <button class="btn btn-info btn-150" data-dismiss="modal" style="width:100px;" onclick="reject('x')">
                            <i class="fa  fa-times-circle"></i> Reject
                        </button>*@
                    <button class="btn btn-info btn-150" id="btncancel" data-dismiss="modal" style="width:100px;">
                        <i class="fa fa-times"></i> Close
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>


<!-----------Edit  Allocation Modal----------------->
<div class="modal fade" id="detailsModal">
    x
    <div class="modal-dialog">
        <div class="modal-content panel-info">

            <div class="modal-header panel-heading">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h4 class="modal-title">  EDIT ALLOCATION </h4>

            </div>
            <div class="modal-body">
                <div id="registration-form">
                    @using (Html.BeginForm("EditDepartmentAllocation", "FundAllocations", FormMethod.Post))
                    {
                        <table class="table table-striped">
                            <tbody>

                                <tr>
                                    <td colspan="1">
                                        <form class="well form-horizontal">
                                            <fieldset>
                                                <div class="form-group">
                                                    <label class="col-md-4 control-label">Department</label>
                                                    <div class="col-md-8" style="margin:0px 0px 15px -60px;">
                                                        @Html.DropDownList("Department", ViewBag.departments as SelectList, "Select Department", new { @class = "form-control" })
                                                    </div>
                                                    <label class="col-md-4 control-label">Balance Amount</label>
                                                    <div class="col-md-8" style="margin:0px 0px 15px -60px;">
                                                        <input type="text" disabled="disabled" name="receivefundBaseAmount" id="receivefundBaseAmount" class="form-control" />
                                                    </div>
                                                </div>


                                                <div class="form-group">
                                                    <label class="col-md-4 control-label">Amount</label>
                                                    <div class="col-md-8" style="margin:0px 0px 15px -60px;">
                                                        <input class="form-control" onkeyup="ValidateEntry()" name="Amount" id="Amount" placeholder="Distributed Amount" type="text" value="">
                                                        <a href="#" id="exceedMsg" style="display:none;color:red">Amount Exceed Available Balance </a>
                                                    </div>
                                                </div>


                                                <div class="form-group">
                                                    <label class="col-md-4 control-label">Description</label>
                                                    <div class="col-md-8" style="margin:0px 0px 15px -60px;">

                                                        @*<textarea name="Description" rows="4"></textarea>*@ @Html.TextArea("Description", null, new { @class = "form-control" })
                                                        <input type="hidden" name="fundReceivingId" id="fundReceivingId" />
                                                        <input type="hidden" name="FundingRefNo" id="FundingRefNo" />
                                                        <input type="hidden" name="receivefundBaseAmount" id="receivefundBaseAmount" />
                                                        <input type="hidden" name="distributionId" id="distributionId" />
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    <label class="col-md-4 control-label"></label>
                                                    <div class="col-md-8" style="margin:0px 0px 15px -60px;">
                                                        <button type="submit" style="margin-left:0px" id="savebtn" class="btn btn-info"><i class="glyphicon glyphicon-floppy-disk"></i>Save</button>

                                                        @*<a href="../FundDistribution" style="margin-left:30px" type="submit" class="btn btn-default"><i class="glyphicon glyphicon-backward"></i> Back  </a>*@
                                                    </div>
                                                </div>
                                            </fieldset>
                                        </form>
                                    </td>

                                </tr>
                            </tbody>
                        </table>

                        @*<a href="..//FundAllocations/FundDistribution" style="margin-left:30px" type="submit" class="btn btn-default"><i class="glyphicon glyphicon-backward"></i> Back  </a>*@
                    }
                </div>
            </div>

        </div>
    </div>
</div>




    @section pagespecific {
        <script type="text/javascript">
            var details = function (did) {

                debugger;
                var distributionId = did;

                var url = '@Url.Action("detailsDistribution", "FundAllocations")';

                $.ajax({
                    type: "POST",
                    url: url,
                    data: { id: distributionId },
                    success: function (response) {
                        if (response[0] == "Success") {
                        }
                    },
                    error: function (xhr) {
                        console.log(xhr.responseText);
                        alert("An error has occured, contact system support");
                        $("#divLoader").hide();
                    },
                })
            }


            var deletedistribution = function (did) {
                $("#responseModal").modal('show');

                $(".delete-confirm").click(function () {
                    if (id != "") {
                        var url = '@Url.Action("DeleteDistribution", "FundAllocations")';
                        $.ajax({
                            url: url,
                            data: { id: id },
                            type: "POST",
                            success: function (response) {
                                if (response) {
                                    if (response == "Success") {
                                        //now re-using the boostrap modal popup to show success message.
                                        //dynamically we will change background colour
                                        if ($('.modal-header').hasClass('alert-info')) {
                                            //$('.modal-header').removeClass('alert-danger').addClass('alert-success');
                                            //hide ok button as it is not necessary
                                            $('.delete-confirm').css('display', 'none');
                                            $('.delete-cancel').html('Close').click(function () {
                                                location.reload();
                                            });
                                        }
                                        $('.success-message').html('Approved successfully');
                                        location.hide();
                                    }
                                }
                            }, error: function (err) {
                                if (!$('.modal-header').hasClass('alert-info')) {
                                    $('.modal-header').removeClass('alert-success').addClass('alert-info');
                                    $('.delete-confirm').css('display', 'none');
                                }
                                $('.success-message').html(err.statusText);
                            }
                        });
                    }
                });
            }



            var edit = function (did) {
                debugger;
                var distributionId = did;

                var url = '@Url.Action("editDistribution", "FundAllocations")';

                $.ajax({
                    type: "POST",
                    url: url,
                    data: { id: distributionId },
                    success: function (response) {
                        if (response[0] == "Success") {

                            $(".modal-body #distributionId").val(distributionId);
                            var arg = response[1];
                            $('#Department > option').each(function () {
                                if ($(this).text() == arg) $(this).parent('select').val($(this).val())
                            })
                            $(".modal-body #Amount").val(response[2]);
                            $(".modal-body #Description").val(response[3]);
                            $(".modal-body #FundingRefNo").val(response[4]);
                            $(".modal-body #receivefundBaseAmount").val(response[5]);
                            //  $(".modal-body #fundReceivingId").val(frid);
                            $("#detailsModal").modal("show");  // show modal
                        }
                        else if (response[0] == "DbException") {
                            alert("An error has occured, contact system support" + response[1]);
                            $("#divLoader").hide();
                        }
                    },
                    error: function (xhr) {
                        console.log(xhr.responseText);
                        alert("An error has occured, contact system support");
                        $("#divLoader").hide();
                    },

                })






            }






            $("#fundSource").change(function () {

                debugger
                var fundsourceId = $(this).val();

                var url = "GetFundSourceType/?FundSourceId=" + fundsourceId;

                $.ajax({
                    type: "POST",
                    url: url,
                    contentType: "html",
                    success: function (response) {
                        $("#fundingType").empty();
                        $("#fundingType").append(response);
                    }
                })
            });




            // DO NOT REMOVE : GLOBAL FUNCTIONS!

            $(document).ready(function () {


                /*
                  * ACCORDION
                  */
                //jquery accordion

                var accordionIcons = {
                    header: "fa fa-plus",    // custom icon class
                    activeHeader: "fa fa-minus" // custom icon class
                };

                $("#accordion").accordion({
                    autoHeight: false,
                    heightStyle: "content",
                    collapsible: true,
                    animate: 300,
                    icons: accordionIcons,
                    header: "h4",
                })



                $('#tabs').tabs();

                // PAGE RELATED SCRIPTS

                // switch style change
                $('input[name="checkbox-style"]').change(function () {
                    //alert($(this).val())
                    var $this = $(this);

                    if ($this.attr('value') === "switch-1") {
                        $("#switch-1").show();
                        $("#switch-2").hide();
                    } else if ($this.attr('value') === "switch-2") {
                        $("#switch-1").hide();
                        $("#switch-2").show();
                    }

                });

                // tab - pills toggle
                $('#show-tabs').click(function () {
                    var $this = $(this);
                    if ($this.prop('checked')) {
                        $("#widget-tab-1").removeClass("nav-pills").addClass("nav-tabs");
                    } else {
                        $("#widget-tab-1").removeClass("nav-tabs").addClass("nav-pills");
                    }

                });

            });


            function getUrlVars() {
                var vars = {};
                var parts = window.location.href.replace(/[?&]+([^=&]+)=([^&]*)/gi, function (m, key, value) {
                    vars[key] = value;
                });
                return vars;
            }

            $(document).ready(function () {
                debugger;
                var urlvalue = getUrlVars()["FundReceivingId"];
                if (urlvalue != null) {
                    var fid = urlvalue;
                    var url = '@Url.Action("distributeComponent", "FundAllocations")';

                    $.ajax({
                        type: "POST",
                        url: url,
                        data: { fid: fid },
                        success: function (response) {
                            if (response[0] == "Success") {

                                $("#distributionModal #FundReceivingId").val(fid);
                                $("#distributionModal #FundingRefNo").val(response[1]);
                                $("#distributionModal #budgetClass").val(response[2]);
                                $("#distributionModal #fundType").val(response[3]);
                                $("#distributionModal #operationalAmount").val(response[4]);

                                $("#distributionModal").modal({
                                    backdrop: "static",
                                    keyboard: false
                                });
                                ///$("#distributionModal").modal("show");  // show modal
                            }
                            else if (response[0] == "DbException") {
                                alert("An error has occured, contact system support" + response[1]);
                                $("#divLoader").hide();
                            }
                        },
                        error: function (xhr) {
                            console.log(xhr.responseText);
                            alert("An error has occured, contact system support");
                            $("#divLoader").hide();
                        },

                    });

                    //$("#distributionModal").modal({
                    //    backdrop: "static",
                    //    keyboard: false
                    //});
                }
            });


            $(document).ready(function () {

                /* // DOM Position key index //

                l - Length changing (dropdown)
                f - Filtering input (search)
                t - The Table! (datatable)
                i - Information (records)
                p - Pagination (paging)
                r - pRocessing
                < and > - div elements
                <"#id" and > - div with an id
                <"class" and > - div with a class
                <"#id.class" and > - div with an id and class

                Also see: http://legacy.datatables.net/usage/features
                */

                /* BASIC ;*/
                var responsiveHelper_dt_basic = undefined;
                var responsiveHelper_datatable_fixed_column = undefined;
                var responsiveHelper_datatable_col_reorder = undefined;
                var responsiveHelper_datatable_tabletools = undefined;

                var breakpointDefinition = {
                    tablet: 1024,
                    phone: 480
                };

                $('#dt_basic').dataTable({
                    "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-12 hidden-xs'l>r>" +
                        "t" +
                        "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                    "autoWidth": true,
                    "preDrawCallback": function () {
                        // Initialize the responsive datatables helper once.
                        if (!responsiveHelper_dt_basic) {
                            responsiveHelper_dt_basic = new ResponsiveDatatablesHelper($('#dt_basic'), breakpointDefinition);
                        }
                    },
                    "rowCallback": function (nRow) {
                        responsiveHelper_dt_basic.createExpandIcon(nRow);
                    },
                    "drawCallback": function (oSettings) {
                        responsiveHelper_dt_basic.respond();
                    }
                });

                /* END BASIC */

                /* COLUMN FILTER  */
                var otable = $('#datatable_fixed_column').DataTable({
                    //"bFilter": false,
                    //"bInfo": false,
                    //"bLengthChange": false
                    //"bAutoWidth": false,
                    //"bPaginate": false,
                    //"bStateSave": true // saves sort state using localStorage
                    "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6 hidden-xs'f><'col-sm-6 col-xs-12 hidden-xs'<'toolbar'>>r>" +
                            "t" +
                            "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                    "autoWidth": true,
                    "preDrawCallback": function () {
                        // Initialize the responsive datatables helper once.
                        if (!responsiveHelper_datatable_fixed_column) {
                            responsiveHelper_datatable_fixed_column = new ResponsiveDatatablesHelper($('#datatable_fixed_column'), breakpointDefinition);
                        }
                    },
                    "rowCallback": function (nRow) {
                        responsiveHelper_datatable_fixed_column.createExpandIcon(nRow);
                    },
                    "drawCallback": function (oSettings) {
                        responsiveHelper_datatable_fixed_column.respond();
                    }

                });

                // custom toolbar
                $("div.toolbar").html('<div class="text-right"><img src="/Content/img/logo.png" alt="SmartAdmin" style="width: 111px; margin-top: 3px; margin-right: 10px;"></div>');

                // Apply the filter
                $("#datatable_fixed_column thead th input[type=text]").on('keyup change', function () {

                    otable
                        .column($(this).parent().index() + ':visible')
                        .search(this.value)
                        .draw();

                });
                /* END COLUMN FILTER */

                /* COLUMN SHOW - HIDE */
                $('#datatable_col_reorder').dataTable({
                    "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'C>r>" +
                            "t" +
                            "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
                    "autoWidth": true,
                    "preDrawCallback": function () {
                        // Initialize the responsive datatables helper once.
                        if (!responsiveHelper_datatable_col_reorder) {
                            responsiveHelper_datatable_col_reorder = new ResponsiveDatatablesHelper($('#datatable_col_reorder'), breakpointDefinition);
                        }
                    },
                    "rowCallback": function (nRow) {
                        responsiveHelper_datatable_col_reorder.createExpandIcon(nRow);
                    },
                    "drawCallback": function (oSettings) {
                        responsiveHelper_datatable_col_reorder.respond();
                    }
                });

                /* END COLUMN SHOW - HIDE */

                /* TABLETOOLS */
                $('#datatable_tabletools').dataTable({

                    // Tabletools options:
                    //   https://datatables.net/extensions/tabletools/button_options
                    "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'T>r>" +
                            "t" +
                            "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
                    "oTableTools": {
                        "aButtons": [
                        "copy",
                        "csv",
                        "xls",
                           {
                               "sExtends": "pdf",
                               "sTitle": "SmartAdmin_PDF",
                               "sPdfMessage": "SmartAdmin PDF Export",
                               "sPdfSize": "letter"
                           },
                           {
                               "sExtends": "print",
                               "sMessage": "List of Recurrent Componet Details <i>(press Esc to close)</i>"
                           }
                        ],
                        "sSwfPath": "/Scripts/plugin/datatables/swf/copy_csv_xls_pdf.swf"
                    },
                    "autoWidth": true,
                    "preDrawCallback": function () {
                        // Initialize the responsive datatables helper once.
                        if (!responsiveHelper_datatable_tabletools) {
                            responsiveHelper_datatable_tabletools = new ResponsiveDatatablesHelper($('#datatable_tabletools'), breakpointDefinition);
                        }
                    },
                    "rowCallback": function (nRow) {
                        responsiveHelper_datatable_tabletools.createExpandIcon(nRow);
                    },
                    "drawCallback": function (oSettings) {
                        responsiveHelper_datatable_tabletools.respond();
                    }
                });

                /* END TABLETOOLS */

            })


            //----Display Allocation Details---//
            var allocationDetails = function (id) {
                debugger
                var url = '@Url.Action("AllocationDetails", "FundAllocations")';
                $("#allocationDetail_body").load(url, { id: id }, function (response, status, xhr) {
                    if (status == "error") {
                        $("#allocationDetail_body").html(status + " Error on accessing this details, contact system support.");
                    }
                    $("#detailsModal").modal("show");
                });
            };
            //function to reset bootstrap modal popups
            $("#detailsModal").on("hidden.bs.modal", function () {
                $(".modal-header").removeClass("alert-danger").addClass("alert-info");
                $("#detailsModal").html("");
            });
            //--End Display Transfer Details---//

            $("#btncancel").click(function (e) {
                window.location.reload();
            });




            var viewReason = function (did) {
                debugger;
                var allocationId = did;
                var url = '@Url.Action("ViewAllocationRejection", "FundAllocations")';
                $.ajax({
                    type: "POST",
                    url: url,
                    data: { id: allocationId },
                    success: function (response) {
                        if (response[0] == "Success") {
                            $(".modal-body #RejectionReason").val(response[1]);
                            $("#ViewReasonModal").modal("show");  // show modal
                        }
                        else if (response[0] == "DbException") {
                            swal("An error has occured, contact system support" + response[1]);
                            $("#divLoader").hide();
                        }
                    },
                    error: function (xhr) {
                        console.log(xhr.responseText);
                        alert("An error has occured, contact system support");
                        $("#divLoader").hide();
                    },
                })
            }


            function confirm(i, id) {
                debugger;
                if (i == 'x') i = id;
                swal({
                    title: "Are you sure?",
                    text: "This process cannot be undone",
                    buttons: [
                      'Yes',
                      'No'
                    ],
                }).then(function (isConfirm) {
                    if (isConfirm) {
                        swal("Cancelled", "No change was made");
                    } else {

                        ConfirmAllocation(i)
                    }
                });
              
            };


            var ConfirmAllocation = function (id) {

                $("#divLoader").show();

                $.ajax({
                    type: "POST",
                    url: "ConfirmAllocation",
                    data: { ids: id },
                    success: function (response) {
                        if (response == "Success") {
                            swal("Confirmed Successfully!", { icon: "success" }).then((e) => {
                                window.location.reload();
                            });
                            $("#divLoader").hide();

                        } else if (response == "DbException") {
                            alert("An error has occured, contact system support");
                            $("#divLoader").hide();
                        }
                    },
                    error: function (xhr) {
                        //console.log(xhr.responseText);
                        alert("An error has occured, contact system support");
                        $("#divLoader").hide();
                    },
                });

            };

            function Delete(i, id) {
                debugger;
                if (i == 'x') i = id;
                swal({
                    title: "Are you sure?",
                    text: "Once Cancelled, you will not be able to recover this Allocation ",
                    buttons: [
                      'Yes',
                      'No'
                    ],
                    closeOnClickOutside: false,
                }).then(function (isConfirm) {
                    if (isConfirm) {
                        swal("Cancelled", "No change was made");
                    } else {

                        //swal("Can not Delete");
                        deleteallocation(i)
                    }
                });
                
            }


            var deleteallocation = function (did) {
                debugger;

                if (did != "") {
                    // var url = '@Url.Action("DeleteAllocation", "FundAllocations")';
                    var url = "DeleteAllocation/?id=" + did;
                    $.ajax({
                        url: url,
                        type: "POST",
                        success: function (response) {
                            if (response) {
                                if (response == "Success") {
                                    swal("Allocation Cancelled Successfully!", { icon: "success" })
                           .then((value) => {
                               window.location.reload();
                           });
                                }
                            }
                        }, error: function (err) {
                            swal(response, { icon: "success" })
                           .then((value) => {
                               window.location.reload();
                           });
                        }

                    });
                }
            }



        </script>
    }
