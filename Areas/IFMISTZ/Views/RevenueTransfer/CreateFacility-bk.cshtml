@model IFMIS.Areas.IFMISTZ.Models.MuseSubServiceProviderVM

@{
    ViewBag.Title = "Create New Facility";
}

<div id="divLoader">
</div>

<div id="content" style="margin: 5px; padding-top: 30px">
    <!-- widget grid -->
    <section id="widget-grid" class="">

        <!-- START ROW -->
        <div class="row">

            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">

                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">
                    <br/>
                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2> @ViewBag.Title </h2>
                    </header>

                    <div class="widget-body " style="padding-top:10px;width:100%">
                        @using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = "return SubmitFacility(this)" }))
                        {
                            @Html.AntiForgeryToken()
                        <div class="form-horizontal">
                            <div class="form-group">
                                @Html.LabelFor(model => model.MainVoteCode, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-4">
                                    @Html.DropDownListFor(model => model.MainVoteCode, Model.MainVotesList, "Select ---", new { @class = "form-control select2", @required = "required" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.VoteCode, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-4">
                                    <select name="VoteCode" id="VoteCode" class="form-control select2" required="required"></select>
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.MuseServiceProviderId, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-4">
                                    <select name="MuseServiceProviderId" id="MuseServiceProviderId" class="form-control select2" required="required"></select>
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.SubSpCode, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.SubSpCode, new { htmlAttributes = new { @class = "form-control", @required = "required", @autocomplete = "off" } })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.SubSpName, htmlAttributes: new { @class = "control-label col-md-3" })

                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.SubSpName, new { htmlAttributes = new { @class = "form-control", @min = "0", @autocomplete = "off" } })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.BankId, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-4">
                                    @Html.DropDownListFor(model => model.BankId, Model.BankList, "Select ---", new { @class = "form-control select2", @required = "required" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.AccountNumber, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.AccountNumber, new { htmlAttributes = new { @class = "form-control", @required = "required", @autocomplete = "off" } })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.AccountName, htmlAttributes: new { @class = "control-label col-md-3" })

                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.AccountName, new { htmlAttributes = new { @class = "form-control", @min = "0", @autocomplete = "off" } })
                                </div>
                            </div>


                            <div class="form-actions">
                                <div class="row">
                                    <div class="col-md-8 col-md-offset-2">
                                        <a href="@Url.Action("FacilitiesList","FacilityPayments")" style="margin-right:5px" class="btn btn-info pull-left"><i class="glyphicon glyphicon-arrow-left"></i> Back  </a>
                                        <button type="submit" class="btn btn-info pull-left" style="margin-right:2px">
                                            <i class="glyphicon glyphicon-floppy-disk"></i> Save
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        }
                    </div>
                </div>
            </article>
        </div>
    </section>

</div>

@section pagespecific {
    <!-- PAGE RELATED PLUGIN(S) -->

    <script type="text/javascript">

        $("#MainVoteCode").change(function () {
            var mainVote = $(this).val();
            var url = '@Url.Action("GetVotesList", "FacilityPayments")';

            $.ajax({
                type: "GET",
                url: url,
                data: { mainVote: mainVote },
                success: function (response) {
                    $("#VoteCode").empty();
                    $("#MuseServiceProviderId").empty();
                    $("#VoteCode").append(response);
                }
            })
        });

        $("#VoteCode").change(function () {
            var subVote = $(this).val();
            var url = '@Url.Action("GetSPList", "FacilityPayments")';

            $.ajax({
                type: "GET",
                url: url,
                data: { subVote: subVote },
                success: function (response) {
                    $("#MuseServiceProviderId").empty();
                    $("#MuseServiceProviderId").append(response);
                }
            })
        });


       // =========== Start Save Item Card====================
        function SubmitFacility(formData) {

            var url = '@Url.Action("SubmitFacility", "FacilityPayments")';
            var ajaxConfig = {
                type: "post",
                url: url,
                data: new FormData(formData),
                success: function (response) {
                    if (response == "Success") {
                        swal({
                            text: "New facility created successfully - ",
                                icon: "success",
                                button: "OK",
                            }).then(function () {
                                window.location = '@Url.Action("FacilitiesList", "FacilityPayments")';
                            });
                    }
                },
                error: function () {
                    swal(response);
                }
            }

            if ($(formData).attr('enctype') == "multipart/form-data") {
                ajaxConfig["contentType"] = false;
                ajaxConfig["processData"] = false;
            }
            $.ajax(ajaxConfig);
            return false;
        }
         // =========== End Save Item card ====================

        //SHOW LOADER ICON
        $(document).ajaxStart(function () {
            $("#divLoader").show();
        });
        //HIDE LOADER ICON
        $(document).ajaxStop(function () {
            $("#divLoader").hide();
        });

    </script>
}



