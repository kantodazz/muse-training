@model IEnumerable<IFMIS.Areas.IFMISTZ.Models.UnpaidSummaryByVote>
@{
    ViewBag.Title = "Unpaid Summary By Vote";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>

    .search-btn {
        border: 1px solid #ccc;
        border-radius: 4px;
        padding: 5px;
        padding-right: 10px;
    }

    .search-container {
        display: inline-flex;
        flex: 1 1 300px;
        position: relative;
        border: 1px solid #ccc;
        border-radius: 5px;
        overflow: hidden;
        padding-left: 10px;
    }

    .name-input-container {
        display: inline-flex;
        flex: 1 1 300px;
        position: relative;
        overflow: hidden;
    }

    .search-icon {
        padding: 0.5rem;
    }

    .search-button {
        background: #538AC5;
        border: 0;
        color: white;
        padding: 8px;
        border-radius: 0;
    }

    input[type=number] {
        padding: 8px;
        border: 1px solid #ccc;
        width: 205px;
    }

    input[type=text] {
        padding: 8px;
        border: 1px solid #ccc;
    }

    /*input[type=search] {
        padding: 4px;
        border: hidden;
        border-radius: 4px;
    }*/

    textarea {
        border: 1px solid #ccc;
    }

    select {
        padding: 8px;
        border: 1px solid #ccc;
        resize: vertical;
        width: 230px;
    }

    .action-btn {
        width: 100px;
        color: white;
    }

    .form-label {
        text-align: right;
    }

    td {
        padding: 5px;
    }

    .info-box {
        padding: 10px;
        background-color: #ECF3F8;
        text-align: center;
        border: 1px solid #ccc;
        border-radius: 5px;
    }

    .widget-body {
        position: relative;
    }

    .loadingImg {
        margin-left: auto;
        margin-right: auto;
        position: absolute;
        top: 50%;
    }

    .backgroundColor {
        background: #ff0000;
    }

    input[type=number] {
        padding: 8px;
        border: 1px solid #ccc;
    }

    select {
        padding: 8px;
        border: 1px solid #ccc;
        resize: vertical;
        width: 230px;
    }

    input[type=text] {
        padding: 8px;
        border: 1px solid #ccc;
    }

    td {
        padding: 5px;
    }

    .table-amount td:nth-child(6) {
        text-align: right;
    }

    .payee-entry {
        border: 1px solid #ccc;
        border-radius: 10px;
        padding-bottom: 10px;
    }

    .entry-label {
        position: relative;
        top: -12px;
        background-color: white;
        width: 110px;
        left: 15px;
        padding-left: 5px;
        padding-right: 5px;
        text-align: center;
        font-weight: bold;
        color: #2196F3;
    }

    .total-amount {
        float: right;
    }

    .loadingImg {
        display: none;
    }
</style>
<div id="content" style="margin: 5px; padding-top: 30px">
    <div class="row"></div>
    <section id="widget-grid">
        <div class="row">
            <article class="col-sm-12 col-md-12 col-lg-12">

                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">

                    <header>
                        <span class="widget-icon"> <i class="fa fa-table"></i> </span>
                        <h2>@ViewBag.Title</h2>
                    </header>

                    <div>
                        <div class="row">
                            <div style="padding-left:10px;padding-right:10px">
                                <div class="form-group">
                                    <div class="col-md-2">
                                        @*<button class="btn btn-info PrintBtn" id="Print" onclick="printSlip()">
                                            <span class="glyphicon glyphicon-print"></span>
                                            Preview Report
                                        </button>*@

                                      <a href="#" class="btn btn-info PrintBtn" id="Print" onclick="printSlip()" target="_blank">Preview Report</a>

                                    </div>
                                    <div class="col-md-2">
                                        <button class="btn btn-info AssignBtn" id="Assign" onclick="AssignLoanOfficer()">
                                            Confirm
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div>
            
                        </div>
                        <hr/>
                        <div class="widget-body">
                            @Html.AntiForgeryToken()
                            <div align="center">
                                <img src="~/Media/Images/ajax_loader.gif" class="loadingImg" id="ImageLoader" />
                            </div>
                            <table id="dt_loanReceived_list" class="table table-bordered table-condensed table-amount">
                                @{
                                    
                                    Decimal SubNET = 0, SubATS = 0, SubATE = 0, SubTOTAL = 0;
                                }
                                <thead>
                                    <tr>
                                        <th>#</th>
                                        <th>  <input type="checkbox" class="cbCheckAllReq" />  </th>
                                        <th>Vote Code</th>
                                        <th>Vote Name</th>
                                        @*<th>Reference</th>*@
                                        <th>NoTrx</th>
                                        <th style="text-align:right">Total Net Amount</th>
                                        <th style="text-align:right">At Source Amount</th>
                                        <th style="text-align:right">At Employer</th>
                                        <th style="text-align:right">Total Amount</th>
                                        <th>Cover letter</th>
                                        <th>OverallStatus</th>
                                        <th>Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @{int i = 0;}
                                    @foreach (var item in Model)
                                    {
                                        i++;

                                        SubNET += Decimal.Parse(item.TotalNetAmount.ToString());
                                        SubATS += Decimal.Parse(item.TotalAtSource.ToString());
                                        SubATE += Decimal.Parse(item.TotalAtEmployer.ToString());
                                        SubTOTAL += Decimal.Parse(item.TotalAmount.ToString());

                                        <tr>
                                            <td>@i</td>
                                            <td><input type="checkbox" value="@item.UnpaidSummaryByVoteId" id="row-@item.UnpaidSummaryByVoteId" onchange="rowChecked(@item.UnpaidSummaryByVoteId)" class="checkBox1"></td>

                                            <td>
                                                @Html.DisplayFor(modelItem => item.VoteCode)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.VoteName)
                                            </td>
      
                                            <td>
                                                @Html.DisplayFor(modelItem => item.TotalClaims)
                                            </td>
                                            <td style="text-align: right">
                                                @*<a href="#" onclick="autoMatched('@item.VoteCode')" title="Click to View List" data-toggle="tooltip">@Html.DisplayFor(modelItem => item.TotalNetAmount, "_DecimalThousands") </a>*@
                                                @Html.DisplayFor(modelItem => item.TotalNetAmount, "_DecimalThousands")
                                            </td>
                                            <td style="text-align: right">
                                                @*<a href="#" onclick="autoMatched('@item.VoteCode')" title="Click to View List" data-toggle="tooltip">@Html.DisplayFor(modelItem => item.TotalAtSource, "_DecimalThousands") </a>*@
                                                @Html.DisplayFor(modelItem => item.TotalAtSource, "_DecimalThousands")
                                            </td>

                                            <td style="text-align: right">
                                                @*<a href="#" onclick="autoMatched('@item.VoteCode')" title="Click to View List" data-toggle="tooltip">@Html.DisplayFor(modelItem => item.TotalAtEmployer, "_DecimalThousands") </a>*@
                                                @Html.DisplayFor(modelItem => item.TotalAtEmployer, "_DecimalThousands")
                                            </td>

                                            <td style="text-align: right">
                                                @*<a href="#" onclick="autoMatched('@item.VoteCode')" title="Click to View List" data-toggle="tooltip">@Html.DisplayFor(modelItem => item.TotalAtEmployer, "_DecimalThousands") </a>*@
                                                @Html.DisplayFor(modelItem => item.TotalAmount, "_DecimalThousands")
                                            </td>

                                            <td>
                                                <a href="@Url.Action("PreviewAttachment", "UnpaidPaymentSummary",new { Id = item.UnpaidSummaryByVoteId,attachmentType="CoverLetter"})" target="_blank"><i class="fa fa-file-pdf-o"></i></a>
                                            </td>

                                            <td>
                                                @Html.DisplayFor(modelItem => item.OverallStatus)
                                            </td>
                                            <td style="text-align: center">
                                                <!-- Split button -->
                                                <div class="btn-group">
                                                    <button type="button" class="btn btn-info btn-xs">Action</button>
                                                    <button type="button" class="btn btn-info btn-xs dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                        <span class="caret"></span>
                                                        <span class="sr-only">Toggle Dropdown</span>
                                                    </button>
                                                    <ul class="dropdown-menu">
                                                        <li><a href="#" onclick="details(@item.UnpaidSummaryByVoteId)">Details</a></li>
                                                    </ul>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                                <tfoot>
                                    <tr>
                                        <th colspan="4" style="text-align:right">TOTAL</th>
                                        <th style="text-align:right"></th>
                                        <th style="text-align:right">@String.Format("{0:#,0.00}", SubNET)</th>
                                        <th style="text-align:right">@String.Format("{0:#,0.00}", SubATS)</th>
                                        <th style="text-align:right">@String.Format("{0:#,0.00}", SubATE)</th>
                                        <th style="text-align:right">@String.Format("{0:#,0.00}", SubTOTAL)</th>
                                        <th colspan="3"></th>
                                    </tr>
                                </tfoot>

                            </table>
                        </div>
                    </div>
                </div>
            </article>
        </div>
    </section>
</div>

@section pagespecific{

    <script type="text/javascript">
        //$(".cbCheckAllReq").click(function () {
        //    $(".checkBox1").prop('checked',
        //        $(this).prop('checked'));
        //});
        $(".cbCheckAllReq").click(function () {
            // $(".checkBox1").prop('checked',$(this).prop('checked'));
            $(".checkBox1").trigger('click');
        });

        var details = function (id) {
            $("#divLoader").show();
            window.location = '@Url.Action("UnpaidEmployeeDetail", "UnpaidPaymentSummary")/' + id;
        };

        //SHOW LOADER ICON
        $(document).ajaxStart(function () {
            $(".loadingImg").show();
            document.getElementById("ImageLoader").style.marginLeft = "auto";
            document.getElementById("ImageLoader").style.marginRight = "auto";
            document.getElementById("ImageLoader").style.position = "absolute";
            document.getElementById("ImageLoader").style.top = "50%";
        });
        //HIDE LOADER ICON
        $(document).ajaxStop(function () {
            $(".loadingImg").hide();
        });


        $(".AssignBtn").attr('disabled', true);

        /* BASIC ;*/
        var responsiveHelper_dt_loan = undefined;
        var responsiveHelper_datatable_fixed_column = undefined;
        var responsiveHelper_datatable_col_reorder = undefined;
        var responsiveHelper_datatable_tabletools = undefined;

        var breakpointDefinition = {
            tablet: 1024,
            phone: 480
        };
        /*BEGINNING DATA TABLE*/
        /*END DATA TABLE*/
        var dt_loanReceived_list = $('#dt_loanReceived_list').dataTable({
            "fnDrawCallback": function (oSettings) {
                $(".loading-gif").toggle(false)
            },
            //"Dom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-12 hidden-xs'l>r>" +
            //    "t" +
            //    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
            "autoWidth": true,
        });

        dt_loanReceived_list.on('draw.dt', function () {
            checkedRows.forEach(v => {
                $(`#row-${v.rowId}`).prop("checked", true)
            })
        })

        var checkedRows = [];
        function rowChecked(rowId) {
            debugger
            if ($("#row-" + rowId).is(":checked")) {
                checkedRows.push(rowId);
            } else {
                remove(checkedRows, rowId);
            }

            toggleAssignButton();
        }



        function toggleAssignButton() {
            debugger;
            if (checkedRows.length > 0) {
                var data = dt_loanReceived_list.DataTable().rows().data();
                checkedRows.forEach(rowId=> {
                    var row = data.rows(rowId).data()[0];
                });

                $("#Assign").attr('disabled', false);
            } else {
                $("#Assign").attr('disabled', true);
            }
        }

        function remove(array, val) {
            var found = array.indexOf(val);
            while (found !== -1) {
                array.splice(found, 1);
                found = array.indexOf(val);
            }
        }

        //var userId = null;
        var LoanAppIds = [];
        function AssignLoanOfficer() {
            debugger;
            //userId = document.getElementById("UserId").value;
            //if (userId == "NULL") {
            //    swal("Please Select Loan Officer First", { icon: "warning" });
            //    return false;
            //}

            swal({
                text: "Are sure you  want to confirm selected items?",
                buttons: ["NO", "YES"],
            }).then((assign) => {
                if (assign) {
                    postAssignLoanOfficer();
                } else {
                    swal("Cancelled");
                }
            });
        }

        function postAssignLoanOfficer() {
            debugger

            checkedRows.forEach(rowId => {
                LoanAppIds.push(rowId);
            });

            console.log(LoanAppIds);

            var url = '@Url.Action("UnpaidSalaryConfirmation", "UnpaidPaymentSummary")';
            $.ajax({
                type: "post",
                url: url,
                data: { "LoanAppIds": LoanAppIds},
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {
                    if (response == 'Success') {
                        swal("Confirmed Successfully!", { icon: "success" })
                            .then((e) => {
                            window.location.reload()
                        });
                    } else {
                        swal(response);
                    }
                },
                failure: function (error) {
                    swal(error);
                }
            });
        }

        function ToJavaScriptDate(value) {
            if (value != null && value != '') {
                var pattern = /Date\(([^)]+)\)/;
                var results = pattern.exec(value);
                var dt = new Date(parseFloat(results[1]));
                return dt.getDate() + "/" + (dt.getMonth() + 1) + "/" + dt.getFullYear();
            }
        }


       var csvIds = [];
        function printSlip() {
            debugger;
            $("input:checkbox.checkBox1").each(function () {
                if ($(this).prop("checked")) {
                    csvIds.push($(this).val().replace('/', ''));
                }
            });

            if (csvIds.length == 0) {
                swal("No Item Selected", { icon: "info" })
                return;
            }
            else {
            var ids = csvIds.join(",");
             PriviewSlip(ids);
            }

        };

        var PriviewSlip = function (ids) {
            debugger;
            $("#divLoader").show();
          
            window.location = '@Url.Action("PreviewReport", "UnpaidPaymentSummary")/?ids=' + ids
        };
      /*  /?Id='*/


        //function PriviewSlip(ids) {
        //    debugger;
        //    $("#divLoader").show();
        //    var ids2 = csvIds;

        //    $.ajax({
        //        type: "POST",
        //        url: "CertificateAssignment",
        //        data: { OutRightSalesIds: ids, UserId: userId, remark: remarks },
        //        success: function (response) {
        //            $("#divLoader").hide();
        //            if (response == "Success") {
        //                swal("Certificate Successfully Assigned to " + username, { icon: "success" }).then((e) => {
        //                    window.location.reload();
        //                });
        //                $("#divLoader").hide();

        //            } else {
        //                swal(response, { icon: "warning" }).then((e) => {
        //                    window.location.reload();
        //                });
        //                $("#divLoader").hide();
        //            }
        //        },
        //        error: function (xhr) {
        //            //console.log(xhr.responseText);
        //            alert("An error has occured, contact system support");
        //            $("#divLoader").hide();
        //        },
        //    });
        //}


        /* END BASIC */

        $(".saveLoader").toggle(false);

    </script>
}
