
@model IEnumerable<IFMIS.Areas.IFMISTZ.Models.UnPaidInstruction>
@{
    ViewBag.Title = "Unpaid Salary Confirmation List";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>

    .search-btn {
        border: 1px solid #ccc;
        border-radius: 4px;
        padding: 5px;
        padding-right: 10px;
    }

    .search-container {
        display: inline-flex;
        flex: 1 1 300px;
        position: relative;
        border: 1px solid #ccc;
        border-radius: 5px;
        overflow: hidden;
        padding-left: 10px;
    }

    .name-input-container {
        display: inline-flex;
        flex: 1 1 300px;
        position: relative;
        overflow: hidden;
    }

    .search-icon {
        padding: 0.5rem;
    }

    .search-button {
        background: #538AC5;
        border: 0;
        color: white;
        padding: 8px;
        border-radius: 0;
    }

    input[type=number] {
        padding: 8px;
        border: 1px solid #ccc;
        width: 205px;
    }

    input[type=text] {
        padding: 8px;
        border: 1px solid #ccc;
    }

    /*input[type=search] {
        padding: 4px;
        border: hidden;
        border-radius: 4px;
    }*/

    textarea {
        border: 1px solid #ccc;
    }

    select {
        padding: 8px;
        border: 1px solid #ccc;
        resize: vertical;
        width: 230px;
    }

    .action-btn {
        width: 100px;
        color: white;
    }

    .form-label {
        text-align: right;
    }

    td {
        padding: 5px;
    }

    .info-box {
        padding: 10px;
        background-color: #ECF3F8;
        text-align: center;
        border: 1px solid #ccc;
        border-radius: 5px;
    }

    .widget-body {
        position: relative;
    }

    .loadingImg {
        margin-left: auto;
        margin-right: auto;
        position: absolute;
        top: 50%;
    }

    .backgroundColor {
        background: #ff0000;
    }

    input[type=number] {
        padding: 8px;
        border: 1px solid #ccc;
    }

    select {
        padding: 8px;
        border: 1px solid #ccc;
        resize: vertical;
        width: 230px;
    }

    input[type=text] {
        padding: 8px;
        border: 1px solid #ccc;
    }

    td {
        padding: 5px;
    }

    .table-amount td:nth-child(6) {
        text-align: right;
    }

    .payee-entry {
        border: 1px solid #ccc;
        border-radius: 10px;
        padding-bottom: 10px;
    }

    .entry-label {
        position: relative;
        top: -12px;
        background-color: white;
        width: 110px;
        left: 15px;
        padding-left: 5px;
        padding-right: 5px;
        text-align: center;
        font-weight: bold;
        color: #2196F3;
    }

    .total-amount {
        float: right;
    }

    .loadingImg {
        display: none;
    }
</style>
<div id="content" style="margin: 5px; padding-top: 30px">
    <div class="row"></div>
    <section id="widget-grid">
        <div class="row">
            <article class="col-sm-12 col-md-12 col-lg-12">

                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">

                    <header>
                        <span class="widget-icon"> <i class="fa fa-table"></i> </span>
                        <h2>@ViewBag.Title</h2>
                    </header>

                    <div>

                        <hr />
                        <div class="widget-body">
                            @Html.AntiForgeryToken()
                            <div align="center">
                                <img src="~/Media/Images/ajax_loader.gif" class="loadingImg" id="ImageLoader" />
                            </div>
                            <table id="dt_loanReceived_list" class="table table-bordered table-condensed table-amount">
                                <thead>
                                    <tr>
                                        <th>#</th>
                                        @*<th>  <input type="checkbox" class="cbCheckAllReq" />  </th>*@
                                        <th>Reference</th>
                                        <th style="text-align:right"> Total Net Amount</th>
                                        <th style="text-align:right">Total At Source Amount</th>
                                        <th style="text-align:right">Total At Employer</th>
                                        <th style="text-align:right">Total Amount</th>
                                        <th>OverallStatus</th>
                                        <th>Action</th>
                                    </tr>
                                </thead>
                                @{int i = 0;}
                                @foreach (var item in Model)
                                {
                                    i++;
                                    <tr>
                                        <td>@i</td>
                                        @*<td><input type="checkbox" value="@item.UnpaidEmployeeDetailId" id="row-@item.UnpaidEmployeeDetailId" onchange="rowChecked(@item.UnpaidEmployeeDetailId)" class="checkBox1"></td>*@

                                        <td>
                                            @Html.DisplayFor(modelItem => item.ReferenceId)
                                        </td>

                                        <td style="text-align: right">
                                            @*<a href="#" onclick="certfDetails('@item.UnpaidInstructionId')"> @Html.DisplayFor(modelItem => item.TotalNetAmount, "_DecimalThousands") </a>*@
                                            <a href="#" onclick="openViewDialog('@item.UnpaidInstructionId')"> @Html.DisplayFor(modelItem => item.TotalNetAmount, "_DecimalThousands") </a>
                                        </td>
                                        <td style="text-align: right">
                                            <a href="#" onclick="details(@item.UnpaidInstructionId)">@Html.DisplayFor(modelItem => item.TotalAtSourceAmount, "_DecimalThousands")</a>
                                        </td>

                                        <td style="text-align: right">
                                            <a href="#" onclick="detailsAtEmployer(@item.UnpaidInstructionId)">@Html.DisplayFor(modelItem => item.TotalAtEmployerAmount, "_DecimalThousands")</a>

                                        </td>

                                        <td style="text-align: right">
                                            @Html.DisplayFor(modelItem => item.TotalOverallAmount, "_DecimalThousands")
                                        </td>


                                        <td>
                                            @Html.DisplayFor(modelItem => item.OverallStatus)
                                        </td>
                                        <td style="text-align: center">
                                            <!-- Split button -->
                                            <div class="btn-group">
                                                <button type="button" class="btn btn-info btn-xs">Action</button>
                                                <button type="button" class="btn btn-info btn-xs dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                    <span class="caret"></span>
                                                    <span class="sr-only">Toggle Dropdown</span>
                                                </button>
                                                <ul class="dropdown-menu">
                                                    <li><a href="#" data-toggle="modal" data-target="#fileAttachModal" data-id=@item.UnpaidInstructionId class="fileAttachModal">Upload</a></li>
                                                    @if (item.IsAttachmentUploded == "Yes")
                                                    {
                                                        <li><a href="@Url.Action("PreviewUnpaidtransactionAttachment","UnpaidPaymentSummary",new { id=item.UnpaidInstructionId })" target="_blank">Priview Slip</a></li>
                                                        <li><a href="#" onclick="sentToBoT(@item.UnpaidInstructionId)">Submit To Acgen</a></li>

                                                    }
                                                    <li><a href="#" onclick="cancel(@item.UnpaidInstructionId)">Reject</a></li>
                                                </ul>
                                            </div>
                                        </td>
                                    </tr>
                                }

                            </table>
                        </div>
                    </div>
                </div>
            </article>
        </div>
    </section>
</div>
<div class="modal fade" id="modal" tabindex="-1" role="dialog" aria-labelledby="lblmodal">
    <div class="modal-dialog" style="width: 40%">
        <div class="modal-content">
            <div class="modal-header alert alert-info" style="font:bold 16px Trebuchet MS, Lucida Sans Unicode, Lucida Grande, Lucida Sans, Arial, sans-serif">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title" id="lblmodal">Rejection</h4>
            </div>
            <div class="modal-body" id="modal-body">
            </div>
            <div class="modal-footer">
                <button class="btn btn-default" id="btnSaveComment">
                    <span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"></span>
                    Save
                </button>
                <button class="btn btn-default role-dismiss" data-dismiss="modal">
                    <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>
                    Close
                </button>
            </div>
        </div>
    </div>
</div>
<!--End of delete confirmation modal section-->
<div class="modal fade" id="fileAttachModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header" style="background-color:#b3e5fc;">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h3 class="modal-title">Attachment </h3>
            </div>
            @using (Html.BeginForm("UploadAttachment", "UnpaidPaymentSummary", FormMethod.Post, new { encType = "multipart/form-data" }))
            {<div class="modal-body">
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <br />
                    <div class="form-horizontal">
                        <div class="form-group">
                            <div class="col-md-3"> Attachment  </div>
                            <div class="col-md-8">
                                <input type="file" class="form-control" name="FileName" id="FileName" accept=".pdf" />
                            </div>
                        </div>
                        <input type="hidden" name="unpaidInstructionId" id="unpaidInstructionId" value="" />
                    </div>
                </div>
                <div class="modal-footer">
                    <a href="#" class="btn btn-default" data-dismiss="modal">Cancel</a>
                    <input type="submit" value="Submit" class="btn btn-default" id="btnSubmit" />
                </div>
            }

        </div>
    </div>
</div>


<div class="modal fade" id="detailsModal" style="left:4%">
    <div class="modal-dialog" style="width:80%;">
        <div class="modal-content panel-info">
            <div class="modal-header panel-heading">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h3 class="modal-title">Net Salary Detail</h3>
            </div>
            <div class="modal-body">
                <div>
                    <div class="widget-body" id="certDetail_body">
                    </div>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-info btn-150" id="btncancel" data-dismiss="modal" style="width:100px;">
                        <i class="fa fa-times"></i> Close
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="BillsModal">
    <div class="modal-dialog" style="width:70%;">
        <div class="modal-content ">

            <div class="modal-header" style="background-color:#b3e5fc;">
                @*<a href="#" class="close" data-dismiss="modal">&times;</a>*@<a href="#" class="close" data-dismiss="modal"></a><a href="#" class="close" data-dismiss="modal"></a><a href="#" class="close" data-dismiss="modal"></a>
                <h3 class="modal-title">  Bill Details </h3>

            </div>

            <div class="modal-body">
                <table class="table table-bordered table-striped" id="tblBills">
                    <thead>
                        <tr style="font-weight:bold">
                            <td> # </td>
                            <td>Bill Type  </td>
                            <td style="text-align:right">Bill Amount  </td>
                            <td>Remark </td>
                            <td>Bill Valid Days </td>
                            <td>Rereference No </td>
                            <td>Status </td>
                            <td>Contdol Number </td>
                        </tr>
                    </thead>
                    <tbody>
                    </tbody>
                </table>

            </div>
            <div class="modal-footer">
                <a href="#" class="btn btn-default btn-flat" data-dismiss="modal">
                    <span class="fa fa-times" aria-hidden="true"></span>
                    Close
                </a>
            </div>

        </div>

    </div>

</div>

<!----------- VIEW DIALOG ----------------->
<div class="modal fade" id="viewModal" style="left:4%">

    <div class="modal-dialog" style="width:80%;">
        <div class="modal-content panel-info">

            <div class="modal-header panel-heading">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h3 class="modal-title">Summary of Net Pay by Vote</h3>
            </div>
            <div class="modal-body">
                <div>
                    <div class="widget-body ">
                        <div class="row">
                            <div class="col-md-6">
                                <input type="hidden" name="unpaidId2" id="unpaidId2" value="" />
                                <button class="btn btn-info PrintBtn" id="Print" onclick="printSlip()">
                                    <span class="glyphicon glyphicon-print"></span>
                                    Preview Report
                                </button>

                            </div>
                            <div class="col-md-6">
                                <div class="search-container" style="float:right">
                                    <i class="fa fa-search searchIcon"></i>
                                    <input type="search" name="search" placeholder="Search..." id="searchboxView">
                                </div>
                            </div>
                        </div>
                      
                        <br />
                        <table id="dt_view" class="table table-bordered table-condensed"></table>
                    </div>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-info" data-dismiss="modal" style="width:100px;">
                        <i class="fa fa-times"></i>Close
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>
<!------------------------- END VIEW DIALOG ---------------------->

@section pagespecific {
    <script type="text/javascript">

        $(document).on("click", ".fileAttachModal", function () {
            var transfer_id = $(this).data('id');
            $(".modal-body #unpaidInstructionId").val(transfer_id);
        });

        var success = '@(ViewBag.Message)';
            if (success == "Success") {
                swal("Uploaded Successfully!", { icon: "success" }).then((e) => {
                    $("#divLoader").hide();
                    window.location.href = '@Url.Action("UnpaidSalaryConfirmationList", "UnpaidPaymentSummary")';
                });
            }
            else if (success == "Failed") {
                swal("Failed to Upload,Please try again", { icon: "success" }).then((e) => {
                    $("#divLoader").hide();
                    window.location.href = '@Url.Action("UnpaidSalaryConfirmationList", "UnpaidPaymentSummary")';
                });
            }
            else if (success == "Format") {
                swal("Failed to upload due to invalid file format uploaded", { icon: "success" }).then((e) => {
                    $("#divLoader").hide();
                    window.location.href = '@Url.Action("UnpaidSalaryConfirmationList", "UnpaidPaymentSummary")';
                });
            }
            else if (success == "Size") {
                swal("Failed to upload due to invalid file size", { icon: "success" }).then((e) => {
                    $("#divLoader").hide();
                    window.location.href = '@Url.Action("UnpaidSalaryConfirmationList", "UnpaidPaymentSummary")';
                });
            }

        $(".cbCheckAllReq").click(function () {
            $(".checkBox1").prop('checked',
                $(this).prop('checked'));
        });


         // =============== Rejection Start ==============

        var cancel = function (id) {
             debugger
            $(".modal-title").text("Rejection Comments");
            $("#btnSaveComment").show();
            $("#divLoader").show();
            var url = '@Url.Action("RejectEmployeeDetail", "UnpaidPaymentSummary")' +"/?SourceModule=UnpaidTransaction&&ModuleId="+id;

            $("#modal-body").load(url, function () {
                $("#modal").modal({
                    backdrop: "static",
                    keyboard: false
                });

                $("#divLoader").hide();
            });
        };

        // =============== End Rejection ===============

        var details = function (id) {
            $("#divLoader").show();
            window.location = '@Url.Action("UnpaidAtSourceDetail", "UnpaidPaymentSummary")/' + id;
        };

       var detailsAtEmployer = function (id) {
            $("#divLoader").show();
            window.location = '@Url.Action("UnpaidAtEmployerDetail", "UnpaidPaymentSummary")/' + id;
        };


        //SHOW LOADER ICON
        $(document).ajaxStart(function () {
            $(".loadingImg").show();
            document.getElementById("ImageLoader").style.marginLeft = "auto";
            document.getElementById("ImageLoader").style.marginRight = "auto";
            document.getElementById("ImageLoader").style.position = "absolute";
            document.getElementById("ImageLoader").style.top = "50%";
        });
        //HIDE LOADER ICON
        $(document).ajaxStop(function () {
            $(".loadingImg").hide();
        });


        $(".AssignBtn").attr('disabled', true);

        /* BASIC ;*/
        var responsiveHelper_dt_loan = undefined;
        var responsiveHelper_datatable_fixed_column = undefined;
        var responsiveHelper_datatable_col_reorder = undefined;
        var responsiveHelper_datatable_tabletools = undefined;

        var breakpointDefinition = {
            tablet: 1024,
            phone: 480
        };
        /*BEGINNING DATA TABLE*/
        /*END DATA TABLE*/
        var dt_loanReceived_list = $('#dt_loanReceived_list').dataTable({
            "fnDrawCallback": function (oSettings) {
                $(".loading-gif").toggle(false)
            },
            //"Dom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-12 hidden-xs'l>r>" +
            //    "t" +
            //    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
            "autoWidth": true,
        });

        dt_loanReceived_list.on('draw.dt', function () {
            checkedRows.forEach(v => {
                $(`#row-${v.rowId}`).prop("checked", true)
            })
        })

        var checkedRows = [];
        function rowChecked(rowId) {
            debugger
            if ($("#row-" + rowId).is(":checked")) {
                checkedRows.push(rowId);
            } else {
                remove(checkedRows, rowId);
            }

            toggleAssignButton();
        }



        function toggleAssignButton() {
            debugger;
            if (checkedRows.length > 0) {
                var data = dt_loanReceived_list.DataTable().rows().data();
                checkedRows.forEach(rowId=> {
                    var row = data.rows(rowId).data()[0];
                });

                $("#Assign").attr('disabled', false);
            } else {
                $("#Assign").attr('disabled', true);
            }
        }

        function remove(array, val) {
            var found = array.indexOf(val);
            while (found !== -1) {
                array.splice(found, 1);
                found = array.indexOf(val);
            }
        }

        var userId = null;
        var LoanAppIds = [];
        function AssignLoanOfficer() {
            debugger;
            userId = document.getElementById("UserId").value;
            if (userId == "NULL") {
                swal("Please Select Loan Officer First", { icon: "warning" });
                return false;
            }

            swal({
                text: "Assign Selected Application(s)?",
                buttons: ["NO", "YES"],
            }).then((assign) => {
                if (assign) {
                    postAssignLoanOfficer();
                } else {
                    swal("Cancelled");
                }
            });
        }

        function postAssignLoanOfficer() {
            debugger

            checkedRows.forEach(rowId => {
                LoanAppIds.push(rowId);
            });

            console.log(LoanAppIds);

            var url = '@Url.Action("AssignLoanToOfficer", "ALSLoanAssignment")';
            $.ajax({
                type: "post",
                url: url,
                data: { "LoanAppIds": LoanAppIds, "UserId": userId },
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {
                    if (response == 'Success') {
                        swal("Loan(s) Assigned successfully!", { icon: "success" })
                            .then((e) => {
                            window.location.reload()
                        });
                    } else {
                        swal(response);
                    }
                },
                failure: function (error) {
                    swal(error);
                }
            });
        }

        function ToJavaScriptDate(value) {
            if (value != null && value != '') {
                var pattern = /Date\(([^)]+)\)/;
                var results = pattern.exec(value);
                var dt = new Date(parseFloat(results[1]));
                return dt.getDate() + "/" + (dt.getMonth() + 1) + "/" + dt.getFullYear();
            }
        }


        function sentToBoT(i, id) {
            if (i == 'x') i = id;
            swal({
                title: "Send",
                text: "Are you sure you want to submit this File to Acgen? ",
                buttons: [
                    'Yes',
                    'No'
                ],
                closeOnClickOutside: false,
            }).then(function (isConfirm) {
                if (isConfirm) {
                    swal("Cancelled", "No change was made");
                } else {
                    SendtoBoT(i);
                }
            });
            $('#confirmModal').modal('hide');
        }

          function SendtoBoT(id) {
            var url = '@Url.Action("SubmitToAcgen", "UnpaidPaymentSummary")';
            $.ajax({
                type: "post",
                url: url,
                data: { id: id },
                success: function (response) {
                    if (response == "Success") {
                        swal("Submitted to Acgen Successfully!", { icon: "success" }).then((e) => {
                            window.location.reload();
                        });
                    } else {
                        swal(response, { icon:"warning"}).then((value) => {
                            window.location.reload();
                        });
                    }
                },
                failure: function (error) {
                    swal(error);
                }
            });
        }



             //----Display Details---//
        var certfDetails = function (id) {
            debugger
            $("#divLoader").show();
            var url = '@Url.Action("NetAmountDetails", "UnpaidPaymentSummary")';
            $("#certDetail_body").load(url, { id: id }, function (response, status, xhr) {
                $("#divLoader").hide();
                if (status == "error") {
                    $("#certDetail_body").html(status + " Error on accessing this details, contact system support.");
                }
                $("#detailsModal").modal("show");
            });
        };

        /* END BASIC */

        $(".saveLoader").toggle(false);

        /*-------------*/

             var dt_view = $('#dt_view').dataTable({
            "data": [],
            "columnDefs": [{
                "targets": [1],
                "visible": false
            }

            ],
            "columns": [
                {
                    "className": 'details-control',
                    "orderable": false,
                    "data": null,
                    "defaultContent": ''
                },
                { title: "UnpaidInstructionId" },
                { title: "Vote Code" },
                { title: "Vote Desc" },
                { title: "Num Trx" },
                { title: "Total Amount" }
            ]
        });

        $("#dt_view_wrapper .dt-toolbar").remove();

        $("#searchboxView").on("keyup search input paste cut", function () {
            dt_view.DataTable().search(this.value).draw();
        });

        function openViewDialog(id) {
            viewData(id);
            $("#viewModal").modal("show");
        }

        var unpaidInstrId;
        function viewData(id) {
            $.ajax({
                type: "get",
                url: '@Url.Action("GetNetAmountSummaryByVote", "UnpaidPaymentSummary")' + "/?id=" + id,
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {
                    d = response.data;
                    dt_view.fnClearTable();
                    for (var i = 0; i < d.length; i++) {

                        unpaidInstrId = d[i]["UnpaidInstructionId"];

                        dt_view.fnAddData([i + 1,
                           d[i]["UnpaidInstructionId"],
                           d[i]["VoteCode"],
                           d[i]["VoteDesc"],
                           d[i]["NoofEmployees"],
                           toLabel(d[i]["TotalAmount"])

                        ]);
                    }
                },
                failure: function (error) {
                    swal(error);
                }
            });
        }


        function initTableEmployeeDetail(i) {
            window["dt_view_employee_detail" + i]
                = $('#dt_view_employee_detail' + i)
                    .dataTable({
                        //"sDom": 't',
                        "columns": [
                            { title: "#" },
                            { title: "Check Number" },
                            { title: "Full Name" },
                            { title: "Bank Name" },
                            { title: "Account Number" },
                            { title: "Check Date" },
                            { title: "Amount" },
                            { title: "OverallStatus" },
                        ]
                    });
            $("#dt_view_employee_detail" + i + "_wrapper .dt-toolbar").remove();
        }

        $('#dt_view tbody').on('click', 'td.details-control', function () {
            var tr = $(this).closest('tr');
            var row = dt_view.DataTable().row(tr);
            var format = function (i) {
                return '<table id="dt_view_employee_detail' + i + '" class="table table-bordered table-condensed"></table>';
            }

            if (row.child.isShown()) {
                row.child.hide();
                tr.removeClass('shown');
            }
            else {
                row.child(format(row.data()[0])).show();
                initTableEmployeeDetail(row.data()[0]);
                tr.addClass('shown');
                debugger;
                getEmployeeDetails(row.data()[0], row.data()[1], row.data()[2], row.data()[4]);

                console.log(row.data()[0], row.data()[1], row.data()[2], row.data()[3], row.data()[4]);
            }
        });

        function ToJavaScriptDate(value) {

            if (value != null && value != '') {
                var pattern = /Date\(([^)]+)\)/;
                var results = pattern.exec(value);
                var dt = new Date(parseFloat(results[1]));
                return dt.getDate() + "/" + (dt.getMonth() + 1) + "/" + dt.getFullYear();
            }
        }

        debugger;
        function getEmployeeDetails(rowId, id, votecode) {
            $.ajax({
                type: "get",

                url: '@Url.Action("GetNetAmountDetails", "UnpaidPaymentSummary")' + "/?id=" + id + "&&votecode=" + votecode + "",
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {
                    d = response.data;
                    window["dt_view_employee_detail" + rowId]
                        .fnClearTable();
                    for (var i = 0; i < d.length; i++) {

                        if (d[i]["Checkdate"] != "" && d[i]["Checkdate"] != null) {
                            checkDate = ToJavaScriptDate(d[i]["Checkdate"]);
                        }
                        else {

                            checkDate = "NULL";
                        }

                        window["dt_view_employee_detail" + rowId]
                            .fnAddData([i + 1,
                                d[i]["CheckNo"],
                                d[i]["FullName"],
                                d[i]["BankName"],
                                d[i]["AccountNumber"],
                                checkDate,
                                toLabel(d[i]["NetAmount"]),
                                d[i]["OverallStatus"]
                            ]);
                    }
                },
                failure: function (error) {
                    swal(error);
                }
            });
        }


        function printSlip() {

            PriviewSlip(unpaidInstrId);
        };

        var PriviewSlip = function (ids) {
            debugger;
            $("#divLoader").show();
            window.location = '@Url.Action("PreviewReportEmployeeDetails", "UnpaidPaymentSummary")/?ids=' + ids
        };


    </script>
}


