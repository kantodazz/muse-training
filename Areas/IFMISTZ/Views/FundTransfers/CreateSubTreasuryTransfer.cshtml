@model IFMIS.Areas.IFMISTZ.Models.CreateSubTreasuryTransferVM

<div id="divLoader"></div>
<!-- MAIN CONTENT -->
<div id="content">

    <div class="row">
        @*<div class="col-xs-12 col-sm-9 col-md-9 col-lg-9">
                <h1 class="page-title txt-color-blueDark">

                    <!-- PAGE HEADER -->
                    <!--
                    <i class="fa-fw fa fa-pencil-square-o"></i>
                    Payments
                    <span>
                        >
                        Bills
                    </span>
                        -->
                </h1>
            </div>*@

        <div class="col-xs-12 col-sm-3 col-md-3 col-lg-3">
            <!-- Button trigger modal -->
            <!--<a data-toggle="modal" href="#myModal" class="btn btn-success btn-lg pull-right header-btn hidden-mobile"><i class="fa fa-circle-arrow-up fa-lg"></i> Launch form modal</a>-->
        </div>
    </div>

    <!--
    <div class="alert alert-block alert-success">
        <a class="close" data-dismiss="alert" href="#">×</a>
        <h4 class="alert-heading"><i class="fa fa-check-square-o"></i> Check validation!</h4>
        <p>
            You may also check the form validation by clicking on the form action button. Please try and see the results below!
        </p>
    </div>
        -->
    <!-- widget grid -->
    <section id="widget-grid" class="">


        <!-- START ROW -->

        <div class="row">

            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">

                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">
                    <!-- widget options:
                        usage: <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false">

                        data-widget-colorbutton="false"
                        data-widget-editbutton="false"
                        data-widget-togglebutton="false"
                        data-widget-deletebutton="false"
                        data-widget-fullscreenbutton="false"
                        data-widget-custombutton="false"
                        data-widget-collapsed="true"
                        data-widget-sortable="false"

                    -->
                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2> Create Sub Treasury Transfer </h2>

                    </header>

                    <!-- widget div-->
                    <div>

                        <!-- widget edit box -->
                        <div class="jarviswidget-editbox">
                            <!-- This area used as dropdown edit box -->

                        </div>
                        <!-- end widget edit box -->
                        <!-- widget content -->
                        <div class="widget-body">
                            <form class="form-horizontal" name="dummyPaymentForm" id="dummyPaymentForm">
                                @Html.AntiForgeryToken()
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                @Html.HiddenFor(model => model.SubWarrantDesc)
                                @Html.HiddenFor(model => model.SubWarrantDescTo)
                                @Html.HiddenFor(model => model.AccountFrom)
                                @Html.HiddenFor(model => model.AccountNameFrom)
                                @Html.HiddenFor(model => model.CurrencyFrom)
                                @Html.HiddenFor(model => model.CashAccountFrom)
                                @Html.HiddenFor(model => model.AccountBicFrom)
                                @Html.HiddenFor(model => model.AccountTo)
                                @Html.HiddenFor(model => model.AccountNameTo)
                                @Html.HiddenFor(model => model.CurrencyTo)
                                @Html.HiddenFor(model => model.CashAccountTo)
                                @Html.HiddenFor(model => model.AccountBicTo)

                                <div class="form-group">
                                    @Html.LabelFor(model => model.TransferCategory, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4">
                                        @Html.EditorFor(model => model.TransferCategory, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                        @Html.ValidationMessageFor(model => model.TransferCategory, "", new { @class = "text-danger" })
                                    </div>

                                    @Html.LabelFor(model => model.InstitutionCodeFrom, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4">
                                        @Html.DropDownListFor(model => model.InstitutionCodeFrom, Model.InstitutionCodeFroms, "Select Institution From", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.InstitutionCodeFrom, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.SubWarrantCode, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4">
                                        @Html.DropDownListFor(model => model.SubWarrantCode, Model.SubWarrantCodes, "Select Sub Warrant", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.SubWarrantCode, "", new { @class = "text-danger" })
                                    </div>

                                    @Html.LabelFor(model => model.InstitutionCodeTo, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4">
                                        @Html.DropDownListFor(model => model.InstitutionCodeTo, Model.InstitutionCodeTos, "Select Institution To", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.InstitutionCodeTo, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-4">
                                        @Html.CheckBoxFor(model => model.IsSubWarrantTransfer)
                                        @Html.DisplayNameFor(model => model.IsSubWarrantTransfer)
                                    </div>
                                    <div id="divSubWarrantCodeTo" style="display: none">
                                        @Html.LabelFor(model => model.SubWarrantCodeTo, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-4">
                                            @Html.DropDownListFor(model => model.SubWarrantCodeTo, new SelectList(""), "Select Sub Warrant To ", new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.SubWarrantCodeTo, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.SbcFrom, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4">
                                        @Html.DropDownListFor(model => model.SbcFrom, Model.SbcFroms, "Select SBC From", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.SbcFrom, "", new { @class = "text-danger" })
                                    </div>
                                    @Html.LabelFor(model => model.ApplyDate, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4">
                                        @Html.TextBoxFor(model => model.ApplyDate, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.ApplyDate, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.AvailableAmount, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4">
                                        @Html.EditorFor(model => model.AvailableAmount, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                        @Html.ValidationMessageFor(model => model.AvailableAmount, "", new { @class = "text-danger" })
                                    </div>
                                    @Html.LabelFor(model => model.SbcTo, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4">
                                        @Html.DropDownListFor(model => model.SbcTo, Model.SbcTos, "Select SBC To", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.SbcTo, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.TransferedAmount, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4">
                                        @Html.EditorFor(model => model.TransferedAmount, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.TransferedAmount, "", new { @class = "text-danger" })
                                    </div>
                                    @Html.LabelFor(model => model.DocumentNo, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4">
                                        @Html.EditorFor(model => model.DocumentNo, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.DocumentNo, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.TextAreaFor(model => model.Remarks, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-actions">
                                    <div class="row">
                                        <div class="col-md-offset-2 col-md-8">
                                            <button class="btn btn-info" type="button" style="float: left" id="btnSave">
                                                <i class="fa fa-save"></i>
                                                Save
                                            </button>
                                            <a href="@Url.Action("PendingStTransfers","FundTransfers")" class="btn btn-info" style="float: left; margin-left: 5px">
                                                <i class="fa fa-arrow-left"></i>
                                                Back
                                            </a>
                                        </div>
                                    </div>
                                    <div class="form-group" style="margin-top: 0px; margin-bottom: 0px">
                                        <div class="col-md-offset-2 col-md-7" id="divSaveErrorMsg" style="display: none; color: darkred">
                                            <span style="float: left">In order to save, operational amount must be equal to total expensed amount!</span>
                                        </div>
                                    </div>
                                </div>
                            </form>
                        </div>
                        <!-- end widget content -->
                    </div>
                    <!-- end widget div -->

                </div>
                <!-- end widget -->

            </article>
            <!-- END COL -->

        </div>

        <!-- END ROW -->

    </section>
    <!-- end widget grid -->

</div>
<!-- END MAIN CONTENT -->

@section pagespecific{
    <script>
    $(document).ready(function () {

        $("#InstitutionCodeFrom").select2();
        $("#InstitutionCodeTo").select2();
        $("#ApplyDate")
        .wrap('<div class="input-group">')
        .datepicker({
            dateFormat: "yy-mm-dd",
            changeMonth: true,
            changeYear: true,
            showOn: "both",
            buttonImage: '@Url.Content("~/Content/img/calendar.gif")',
            maxDate: "+0D"
        })
        .next("button").button({
        icons: { primary: "ui-icon-calendar" },
        label: "Select Date",
        text: false
        })
        .addClass("btn btn-default")
        .wrap('<span class="input-group-btn">')
        .find('.ui-button-text')
        .css({
            'visibility': 'hidden',
            'display': 'inline'
        });
        $('#TransferedAmount').autoNumeric('init');
    });

    $("#InstitutionCodeFrom").change(function () {

        var institutionCode = $(this).val();
        $("#divLoader").show();
        var url = '@Url.Action("GetSubWarrantsBySt", "Institutions")';
        $.ajax({
            type: "GET",
            url: url,
            data: { institutionCode: institutionCode},
            success: function (data, status, jqXHR) {
                $("#SubWarrantCode option").remove();
                $("#SubWarrantCode").append('<option value="">Select Sub Warrant</option>');
                $.each(data.subWarrants, function (i, subwarrant) {
                    $("#SubWarrantCode").append('<option value="'
                        + subwarrant.SubWarrantCode + '">'
                        + subwarrant.SubWarrantCode + ' - ' + subwarrant.SubWarrantDescription + '</option>');
                });

                $("#SubWarrantCode").select2();

                $("#SbcFrom option").remove();
                $("#SbcFrom").append('<option value="">Select SBC From</option>');
                $.each(data.sbcs, function (i, sbc) {
                    $("#SbcFrom").append('<option value="'
                        + sbc.SubBudgetClass + '">'
                        + sbc.SubBudgetClass + ' - ' + sbc.GlAccountDesc + '</option>');
                });
            },
            error: function () {
                swal({
                        text: "An error occurred while processing your request, contact system support",
                        icon: "error",
                        button: "OK",
                    }).then(function () {
                        //location.reload();
                    });
            },
            complete: function () {
                $("#divLoader").hide();
            }
        });
    });

    $("#SubWarrantCode").change(function () {

        var subWarrantCode = $(this).val();

        $("#divLoader").show();
        var url = '@Url.Action("GetSubWarrant", "Institutions")';
        $.ajax({
            type: "GET",
            url: url,
            data: { subWarrantCode: subWarrantCode },
            success: function (data, status, jqXHR) {
                if (data.success) {
                    $("#SubWarrantDesc").val(data.SubWarrantDescription);

                    $("#InstitutionCodeTo option").remove();
                    $("#InstitutionCodeTo").append('<option value="">Select Institution To</option>');
                    $.each(data.parentInstitutions, function (i, parentInstitution) {
                        $("#InstitutionCodeTo").append('<option value="'
                            + parentInstitution.InstitutionCode + '">'
                            + parentInstitution.InstitutionCode + ' - ' + parentInstitution.InstitutionName + '</option>');
                    });

                    $("#InstitutionCodeTo").select2();
                } else {
                    swal({
                        text: data.response,
                        icon: "warning",
                        button: "OK",
                    }).then(function () {
                        //location.reload();
                    });
                }
            },
            error: function () {
                swal({
                        text: "An error occurred while processing your request, contact system support",
                        icon: "error",
                        button: "OK",
                    }).then(function () {
                        //location.reload();
                    });
            },
            complete: function () {
                $("#divLoader").hide();
            }
        });
    });

    $("#InstitutionCodeTo").change(function () {

        var institutionCode = $(this).val();
        $("#divLoader").show();
            var url = '@Url.Action("GetSubBudgetClassesByInstitutionCode", "SubBudgetClasses")';
            $.ajax({
                type: "GET",
                url: url,
                data: { institutionCode: institutionCode},
                success: function (data, status, jqXHR) {
                    $("#SbcTo option").remove();
                    $("#SbcTo").append('<option value="">Select SBC To</option>');
                    $.each(data.sbcs, function (i, sbc) {
                        $("#SbcTo").append('<option value="'
                            + sbc.SubBudgetClass + '">'
                            + sbc.SubBudgetClassSubBudgetClassDesc + '</option>');
                    });
                },
                error: function () {
                    swal({
                            text: "An error occurred while processing your request, contact system support",
                            icon: "error",
                            button: "OK",
                        }).then(function () {
                            //location.reload();
                        });
                },
                complete: function () {
                    $("#divLoader").hide();
                }
            });
    });

    $("#IsSubWarrantTransfer").on("change", function () {
        let isSubWarrantTransfer = $("#IsSubWarrantTransfer").prop("checked");

        if (isSubWarrantTransfer) {
            $("#divSubWarrantCodeTo").show();

            var institutionCode = $("#InstitutionCodeFrom").val();
            var parentInstitutionCode = $("#InstitutionCodeTo").val();

            $("#divLoader").show();
            var url = '@Url.Action("GetSubWarrantsByStAndParent", "Institutions")';
            $.ajax({
                type: "GET",
                url: url,
                data: {
                    institutionCode: institutionCode,
                    parentInstitutionCode: parentInstitutionCode
                },
                success: function (data, status, jqXHR) {
                    $("#SubWarrantCodeTo option").remove();
                    $("#SubWarrantCodeTo").append('<option value="">Select Sub Warrant To</option>');
                    $.each(data.subWarrants, function (i, subwarrant) {
                        $("#SubWarrantCodeTo").append('<option value="'
                            + subwarrant.SubWarrantCode + '">'
                            + subwarrant.SubWarrantCode + ' - ' + subwarrant.SubWarrantDescription + '</option>');
                    });

                    $("#SubWarrantCodeTo").select2();
                },
                error: function () {
                    swal({
                            text: "An error occurred while processing your request, contact system support",
                            icon: "error",
                            button: "OK",
                        }).then(function () {
                            //location.reload();
                        });
                },
                complete: function () {
                    $("#divLoader").hide();
                }
            });
        } else {
            $("#divSubWarrantCodeTo").hide();
        }
    });

    $("#SubWarrantCodeTo").change(function () {

        var subWarrantCode = $("#SubWarrantCodeTo").val();

        $("#divLoader").show();
            var url = '@Url.Action("GetSubWarrant", "Institutions")';
            $.ajax({
                type: "GET",
                url: url,
                data: {
                    subWarrantCode: subWarrantCode
                },
                success: function (data, status, jqXHR) {
                    if (data.success) {
                        $("#SubWarrantDescTo").val(data.SubWarrantDescription);
                    }
                },
                error: function () {
                    swal({
                            text: "An error occurred while processing your request, contact system support",
                            icon: "error",
                            button: "OK",
                        }).then(function () {
                            //location.reload();
                        });
                },
                complete: function () {
                    $("#divLoader").hide();
                }
            });
    });

    $("#SbcFrom").change(function () {

        var subBudgetClass = $("#SbcFrom").val();
        var institutionCode = $("#InstitutionCodeFrom").val();
        var applyDate = $("#ApplyDate").val();
        var subWarrantHolderCode = $("#SubWarrantCode").val();

        if (!applyDate) {
            return true;
        }

        $("#divLoader").show();
            var url = '@Url.Action("GetCashBalance", "InstitutionAccounts")';
            $.ajax({
                type: "GET",
                url: url,
                data: {
                    institutionCode: institutionCode,
                    subBudgetClass: subBudgetClass,
                    applyDate: applyDate,
                    subWarrantHolderCode: subWarrantHolderCode
                },
                success: function (data, status, jqXHR) {
                    if (data.success) {
                        $("#AvailableAmount").val(data.GlCashBalance);
                        $("#AccountFrom").val(data.BankAccountNumber);
                        $("#AccountNameFrom").val(data.AccountName);
                        $("#CurrencyFrom").val(data.Currency);
                        $("#CashAccountFrom").val(data.GlAccount);
                        $("#AccountBicFrom").val(data.BIC);
                    }
                },
                error: function () {
                    swal({
                            text: "An error occurred while processing your request, contact system support",
                            icon: "error",
                            button: "OK",
                        }).then(function () {
                            //location.reload();
                        });
                },
                complete: function () {
                    $("#divLoader").hide();
                }
            });
    });

    $("#ApplyDate").change(function () {

        var subBudgetClass = $("#SbcFrom").val();
        var institutionCode = $("#InstitutionCodeFrom").val();
        var applyDate = $("#ApplyDate").val();
        var subWarrantHolderCode = $("#SubWarrantCode").val();

        if (!subBudgetClass) {
            return true;
        }

        $("#divLoader").show();
            var url = '@Url.Action("GetCashBalance", "InstitutionAccounts")';
            $.ajax({
                type: "GET",
                url: url,
                data: {
                    institutionCode: institutionCode,
                    subBudgetClass: subBudgetClass,
                    applyDate: applyDate,
                    subWarrantHolderCode: subWarrantHolderCode
                },
                success: function (data, status, jqXHR) {
                    if (data.success) {
                        $("#AvailableAmount").val(data.GlCashBalance);
                        $("#AccountFrom").val(data.BankAccountNumber);
                        $("#AccountNameFrom").val(data.AccountName);
                        $("#CurrencyFrom").val(data.Currency);
                        $("#CashAccountFrom").val(data.GlAccount);
                        $("#AccountBicFrom").val(data.BIC);
                    }
                },
                error: function () {
                    swal({
                            text: "An error occurred while processing your request, contact system support",
                            icon: "error",
                            button: "OK",
                        }).then(function () {
                            //location.reload();
                        });
                },
                complete: function () {
                    $("#divLoader").hide();
                }
            });
    });

    $("#SbcTo").change(function () {

        var sbc = $(this).val();
        var institutionCode = $("#InstitutionCodeTo").val();
        $("#divLoader").show();

            var url = '@Url.Action("GetSubBudgetClassByInstitutionCode", "SubBudgetClasses")';
            $.ajax({
                type: "GET",
                url: url,
                data: {
                    sbc: sbc,
                    institutionCode: institutionCode
                },
                success: function (data, status, jqXHR) {
                    if (data.success) {
                        $("#AccountTo").val(data.AccountNumber);
                        $("#AccountNameTo").val(data.AccountName);
                        $("#CurrencyTo").val(data.Currency);
                        $("#CashAccountTo").val(data.GlAccount);
                        $("#AccountBicTo").val(data.BIC);
                    }
                },
                error: function () {
                    swal({
                            text: "An error occurred while processing your request, contact system support",
                            icon: "error",
                            button: "OK",
                        }).then(function () {
                            //location.reload();
                        });
                },
                complete: function () {
                    $("#divLoader").hide();
                }
            });
    });

    $("#btnSave").click(function () {

        $('#btnSave').prop("disabled", true);
        $("#divLoader").show();

        if (!$("#dummyPaymentForm").valid()) {
            $('#btnSave').prop("disabled", false);
            $("#divLoader").hide();
            return false;
        }

        var token = $("[name='__RequestVerificationToken']").val();
        var data = {
            __RequestVerificationToken: token,
            TransferCategory: $('#TransferCategory').val(),
            InstitutionCodeFrom: $('#InstitutionCodeFrom').val(),
            SubWarrantCode: $('#SubWarrantCode').val(),
            SubWarrantDesc: $('#SubWarrantDesc').val(),
            InstitutionCodeTo: $("#InstitutionCodeTo").val(),
            IsSubWarrantTransfer: $("#IsSubWarrantTransfer").prop("checked"),
            SubWarrantCodeTo: $("#SubWarrantCodeTo").val(),
            SubWarrantDescTo: $("#SubWarrantDescTo").val(),
            SbcFrom: $('#SbcFrom').val(),
            AccountFrom: $('#AccountFrom').val(),
            AccountNameFrom: $("#AccountNameFrom").val(),
            CurrencyFrom: $('#CurrencyFrom').val(),
            CashAccountFrom: $("#CashAccountFrom").val(),
            AccountBicFrom: $("#AccountBicFrom").val(),
            SbcTo: $('#SbcTo').val(),
            AccountTo: $('#AccountTo').val(),
            AccountNameTo: $("#AccountNameTo").val(),
            CurrencyTo: $('#CurrencyTo').val(),
            CashAccountTo: $("#CashAccountTo").val(),
            AccountBicTo: $("#AccountBicTo").val(),
            ApplyDate: $('#ApplyDate').val(),
            DocumentNo: $('#DocumentNo').val(),
            AvailableAmount: $('#AvailableAmount').val(),
            TransferedAmount: $('#TransferedAmount').val(),
            Remarks: $('#Remarks').val(),
        }

        var url = '@Url.Action("CreateSubTreasuryTransfer", "FundTransfers")';
        $.ajax({
            url: url,
            type: "POST",
            //data: JSON.stringify(data),
            data: data,
            dataType: "JSON",
            //contentType: "application/json",
            contentType: 'application/x-www-form-urlencoded; charset=utf-8',
            success: function (response) {
                //check is successfully save to database
                if (response == "Success") {
                    //will send status from server side
                    swal({
                        text: "Transfer successfully saved.",
                        icon: "success",
                        button: "OK",
                    }).then(function () {
                        window.location = '@Url.Action("PendingStTransfers", "FundTransfers")';
                    });
                }
                else {
                    swal({
                        text: response,
                        icon: "warning",
                        button: "OK",
                    })
                }
            },
            error: function () {
                swal({
                    text: "Error. Please try again..",
                    icon: "error",
                    button: "OK",
                })
            },
            complete: function () {
                $('#btnSave').prop("disabled", false);
                $("#divLoader").hide();
            }
        });
    });

    </script>
}