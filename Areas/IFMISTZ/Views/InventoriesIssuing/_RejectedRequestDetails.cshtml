@model IFMIS.Areas.IFMISTZ.Models.InventoryRequestReject
@{ decimal? balance = Model.QuantityRequested - Model.AcceptedQuantity; }
<style>
    .searchContainer {
        background-color: white;
        color: black;
        border: 1px solid #ccc;
        border-radius: 4px;
        padding: 3px;
        padding-right: 10px;
    }

    input[type=search] {
        padding: 4px;
        border: hidden;
        border-radius: 4px;
    }

    .info-box {
        padding: 8px;
        background-color: #ECF3F8;
        /*padding-top:10px;*/
        /*text-align: center;*/
        border: 1px solid #ccc;
        border-radius: 5px;
    }

    .product-details {
        border: 1px solid #ccc;
        border-radius: 10px;
        padding-bottom: 10px;
    }

    .entry-label {
        position: relative;
        top: -12px;
        background-color: white;
        width: 200px;
        left: 15px;
        padding-left: 5px;
        padding-right: 5px;
        padding-bottom: 5px;
        text-align: center;
        font-weight: bold;
        color: #2196F3;
    }

    .title {
        text-align: center;
        width: 100%;
        padding-top: 10px;
        font-weight: bold;
        font-family: Cambria, Cochin, Georgia, Times, Times New Roman, serif;
    }

    .detail-section {
        padding: 10px;
    }

    .section-title {
        font-family: Cambria, Cochin, Georgia, Times, Times New Roman, serif;
        font-size: 18px;
        font-weight: bold;
    }

    .sect-label {
        width: 250px;
        font-size: 15px;
        font-weight: 600;
    }

    table {
        border-collapse: collapse;
        width: 100%;
    }

    td {
        padding: 5px;
        text-align: left;
        border-bottom: 1px dashed #ccc;
    }

    .row-align {
        display: flex;
        flex-wrap: nowrap;
        justify-content: space-evenly;
    }

    .row-align-1 {
        display: flex;
        flex-wrap: wrap;
        align-content: center;
    }
</style>
<div class="product-details">
    <div class="entry-label">Details</div>
    <table>
        <tr>
            <th>@Html.DisplayNameFor(model => model.SourceLegalNumber)</th>
            <td>@Html.DisplayFor(model => model.SourceLegalNumber)</td>
            <th>@Html.DisplayNameFor(model => model.LegalNumber)</th>
            <td>@Html.DisplayFor(model => model.LegalNumber)</td>
        </tr>
        <tr>
            <th>@Html.DisplayNameFor(model => model.ItemName)</th>
            <td>@Html.DisplayFor(model => model.ItemName)</td>
            <th>@Html.DisplayNameFor(model => model.QuantityRequested)</th>
            <td>@Html.DisplayFor(model => model.QuantityRequested) @Html.DisplayFor(model => model.UOM)</td>
        </tr>
        <tr>
            <th>@Html.DisplayNameFor(model => model.AcceptedQuantity)</th>
            <td>@Html.DisplayFor(model => model.AcceptedQuantity) @Html.DisplayFor(model => model.UOM)</td>
            <th>Rejected</th>
            <td>@Convert.ToDecimal(balance).ToString("#,##0.00") @Html.DisplayFor(model => model.UOM)</td>
        </tr>
        <tr>
            <th>@Html.DisplayNameFor(model => model.InventoryValue)</th>
            <td>@Html.DisplayFor(model => model.InventoryValue) @Html.DisplayFor(model => model.Currency)</td>
            <th>@Html.DisplayNameFor(model => model.AcceptedInventoryValue)</th>
            <td>@Html.DisplayFor(model => model.AcceptedInventoryValue) @Html.DisplayFor(model => model.Currency)</td>

        </tr>
        <tr>
            <th>@Html.DisplayNameFor(model => model.RejectType)</th>
            <td>@Html.DisplayFor(model => model.RejectType)</td>
            <th>@Html.DisplayNameFor(model => model.Reason)</th>
            <td>@Html.DisplayFor(model => model.Reason)</td>
        </tr>
    </table>
</div>


<div class="modal-footer">
    <a href="#" class="btn btn-default" data-dismiss="modal">Close</a>
</div>


