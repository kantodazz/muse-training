<style>
    .search-btn {
        border: 1px solid #ccc;
        border-radius: 4px;
        padding: 5px;
        padding-right: 10px;
    }

    .search-container {
        display: inline-flex;
        flex: 1 1 300px;
        position: relative;
        border: 1px solid #ccc;
        border-radius: 5px;
        overflow: hidden;
        padding-left: 10px;
    }

    .name-input-container {
        display: inline-flex;
        flex: 1 1 300px;
        position: relative;
        overflow: hidden;
    }

    .search-icon {
        padding: 0.5rem;
    }

    .search-button {
        background: #538AC5;
        border: 0;
        color: white;
        padding: 8px;
        border-radius: 0;
    }

    input[type=number] {
        padding: 8px;
        border: 1px solid #ccc;
        width: 205px;
    }

    input[type=text] {
        padding: 8px;
        border: 1px solid #ccc;
    }

    input[type=search] {
        padding: 4px;
        border: hidden;
        border-radius: 4px;
    }

    textarea {
        border: 1px solid #ccc;
    }

    select {
        padding: 8px;
        border: 1px solid #ccc;
        resize: vertical;
        width: 230px;
    }

    .action-btn {
        width: 100px;
        color: white;
    }

    .form-label {
        text-align: right;
    }

    td {
        padding: 5px;
    }

    .info-box {
        padding: 10px;
        background-color: #ECF3F8;
        text-align: center;
        border: 1px solid #ccc;
        border-radius: 5px;
    }
</style>

<div style="padding:1em;padding-top:4em">
    <section id="widget-grid">
        <div class="row">
            <article class="col-sm-12 col-md-12 col-lg-12">

                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">

                    <header>
                        <span class="widget-icon"> <i class="fa fa-table"></i> </span>
                        <h2>Budget Reallocation Entry</h2>
                    </header>
                    <div>
                        <div class="widget-body">
                            <div class="row" style="padding:1% 5% 0 5%;">
                                <div class="col-md-6 col-lg-6 col-sm-12 ">
                                    <table>
                                        <tr>
                                            <td class="form-label">
                                                SBC From
                                                <i class="fa fa-times" style="color:white" id="SubBudgetClass_1"></i>
                                            </td>
                                            <td>
                                                <select id="SBCFrom" style="width:300px">
                                                    <option value="" selected="selected">Please choose sub budget class</option>
                                                    @foreach (var subBudgetClass in ViewBag.subBudgetClassList)
                                                    {
                                                        <option value='@subBudgetClass.SegmentCode'>
                                                            @subBudgetClass.SegmentCode -@subBudgetClass.SegmentDesc
                                                        </option>
                                                    }
                                                </select>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td class="form-label">
                                                Apply Date
                                                <i class="fa fa-times" style="color:white" id="ApplyDate_1"></i>
                                            </td>
                                            <td>
                                                <div class="input-group date">
                                                    <input id="ApplyDate" class="form-control datepicker" style="width:265px" />
                                                    <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                                </div>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td class="form-label">
                                                Reallocation Type
                                                <i class="fa fa-times" style="color:white" id="RequestType_1"></i>
                                            </td>
                                            <td>
                                                <div class="input-group">
                                                    <select id="RequestType" style="width:300px" required onchange="getValue()">
                                                        <option value=''>Please Select Reallocation Type</option>
                                                        <option value='WITHIN'>WITHIN</option>
                                                        <option value='ACROSS'>ACROSS</option>
                                                    </select>
                                                </div>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td class="form-label">
                                                Total Amount From
                                                <i class="fa fa-times" style="color:white" id="AmountTo_1"></i>
                                            </td>
                                            <td>
                                                <div class="input-group">
                                                    <span class="input-group-addon">
                                                        <strong id="currency">TZS</strong>
                                                    </span>
                                                    <amount-input id="AmountFrom" type="text" min="0"
                                                                  onkeyup="clearDatatable()" style="width:255px" readonly>
                                                </div>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td class="form-label">
                                                Institution From
                                                <i class="fa fa-times" style="color:white" id="AmountTo_1"></i>
                                            </td>
                                            <td>
                                                <div class="input-group">
                                                    <select name="InstitutionCodeFrom" id="InstitutionCodeFrom" required style="width:300px">
                                                        <option value="">Select Institution From</option>
                                                        @foreach (var item in ViewBag.institutionList)
                                                        {
                                                            <option value='@item.Value'>@item.Text</option>
                                                        }
                                                    </select>

                                                </div>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td class="form-label">
                                                Reallocation Limit
                                                <i class="fa fa-times" style="color:white" id="AmountTo_1"></i>
                                            </td>
                                            <td>
                                                <div class="input-group">
                                                    <input id="ReallocationLimit" style="width:300px;font-weight:bold" disabled>
                                                </div>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td class="form-label">
                                                SubLevelCode From
                                                <i class="fa fa-times" style="color:white" id="AmountTo_1"></i>
                                            </td>
                                            <td>
                                                <div class="input-group">
                                                    <select id="SubLevelCodeFrom" style="width:300px"></select>
                                                </div>
                                            </td>
                                        </tr>
                                    </table>
                                </div>

                                <div class="col-lg-6 col-sm-12 ">
                                    <table>
                                        <tr>
                                            <td class="form-label">
                                                SBC To
                                                <i class="fa fa-times" style="color:white" id="SubBudgetClass_1"></i>
                                            </td>
                                            <td>
                                                <select id="SBCTo" style="width:300px">
                                                    <option value="" selected="selected">Please choose sub budget class</option>
                                                    @foreach (var subBudgetClass in ViewBag.subBudgetClassList)
                                                    {
                                                        <option value='@subBudgetClass.SegmentCode'>
                                                            @subBudgetClass.SegmentCode -@subBudgetClass.SegmentDesc
                                                        </option>}
                                                </select>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td class="form-label">
                                                Description
                                                <i class="fa fa-times" style="color:white" id="RequestDesc_1"></i>
                                            </td>
                                            <td>
                                                <textarea rows="2" id="RequestDesc" style="width:300px;" required></textarea>
                                            </td>
                                        </tr>

                                        <tr>
                                            <td class="form-label">
                                                Total Amount To
                                                <i class="fa fa-times" style="color:white" id="AmountFrom_1"></i>
                                            </td>
                                            <td>
                                                <div class="input-group">
                                                    <span class="input-group-addon">
                                                        <strong id="currency">TZS</strong>
                                                    </span>
                                                    <amount-input id="AmountTo" type="number" min="0"
                                                                  onkeyup="clearDatatable()" style="width:255px" readonly>
                                                </div>
                                            </td>
                                        </tr>
                                        <tr class="InstitutionCodeTo">
                                            <td class="form-label">
                                                Institution To
                                                <i class="fa fa-times" style="color:white" id="AmountTo_1"></i>
                                            </td>
                                            <td>
                                                <div class="input-group">
                                                    <select name="InstitutionCodeTo" id="InstitutionCodeTo" style="width:300px" required>
                                                        <option value="">Select Institution To</option>
                                                        @foreach (var item in ViewBag.institutionList)
                                                        {
                                                            <option value=@item.Value>@item.Text</option>
                                                        }
                                                    </select>

                                                </div>
                                            </td>
                                        </tr>
                                        <tr class="InstitutionCodeTo">
                                            <td class="form-label">
                                                SubLevelCode To
                                                <i class="fa fa-times" style="color:white" id="AmountTo_1"></i>
                                            </td>
                                            <td>
                                                <div class="input-group">
                                                    <select id="SubLevelCodeTo" style="width:300px"></select>
                                                </div>
                                            </td>
                                        </tr>
                                    </table>
                                </div>
                            </div>
                            <div style="padding-top:5px">
                                <div style="display:flex;justify-content:space-between;padding-bottom:5px">
                                    <div>
                                        <a class="btn btn-info" onclick="SearchGlFrom()">
                                            <i class="glyphicon glyphicon-plus"></i> Line Items From
                                        </a>
                                    </div>
                                    <div>
                                        <a class="btn btn-info" onclick="SearchGlTo()">
                                            <i class="glyphicon glyphicon-plus"></i> Line Items To
                                        </a>
                                    </div>
                                </div>
                            </div>
                            <table id="dt_reallocation_detail" class="table table-striped table-bordered table-hover table-condensed" width="100%"></table>
                        </div>
                        <!-- end widget content -->
                        <hr />
                        <div class="row" style="padding-bottom:8px">
                            <div class="col-md-2"></div>
                            <div class="col-md-6">

                                <a class="btn btn-info" href='@Url.Action("Reallocations", "BudgetReallocations")' style="margin-right:5px">
                                    <i class="glyphicon glyphicon-arrow-left"></i>Back
                                </a>
                                <button type="submit" class="btn btn-info" id="form_submision" onclick="createReallocation(true)">
                                    <i class="fa fa-save"></i>Save and Leave
                                    <img src="~/Content/img/loading.gif" id="saveLoader" />
                                </button>
                                <button type="submit" class="btn btn-info" onclick="createReallocation(false)">
                                    <i class="fa fa-save"></i>Save and Continue
                                    <img src="~/Content/img/loading.gif" id="saveLoader2" />
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </article>
        </div>
    </section>
</div>



<!----------- Search GL Items ----------------->
<div class="modal fade" id="glItemsModalFrom" style="left:4%">

    <div class="modal-dialog" style="width:80%;">
        <div class="modal-content panel-info">
            <div class="modal-header panel-heading">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h3 class="modal-title">GL Items to Reallocate From</h3>
            </div>
            <div class="modal-body">
                <div>
                    <div class="row" style="padding-top:1%;padding-bottom:1%">
                        <div class="col-md-6">
                        </div>
                        <div class="col-md-6">
                            <div class="search-container submit-btn" style="float:right">
                                <i class="fa fa-search search-icon"></i>
                                <input type="search" name="search" placeholder="Search..." id="searchboxFrom">
                            </div>
                        </div>
                    </div>
                    <table id="dt_search_gl_item_from" class="table table-striped table-bordered table-hover table-condensed" width="100%">
                        <thead>
                            <tr>
                                <th>#</th>
                                <th>Expenditure Line Item</th>
                                <th>Item Description</th>
                                <th>Budget Balance</th>
                                <th>Amount</th>
                            </tr>
                        </thead>
                    </table>

                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-info" id="btn_save_gl_items_from">
                        <i class="fa fa-save"></i>Save
                    </button>
                    <button class="btn btn-info" data-dismiss="modal">
                        <i class="fa  fa-times"></i>Cancel
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="glItemsModalTo" style="left:4%">

    <div class="modal-dialog" style="width:80%;">
        <div class="modal-content panel-info">
            <div class="modal-header panel-heading">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h3 class="modal-title">GL Items to Reallocate To</h3>
            </div>
            <div class="modal-body">
                <div>
                    <div class="row" style="padding-top:1%;padding-bottom:1%">
                        <div class="col-md-6">
                        </div>
                        <div class="col-md-6">
                            <div class="search-container submit-btn" style="float:right">
                                <i class="fa fa-search search-icon"></i>
                                <input type="search" name="search" placeholder="Search..." id="searchboxTo">
                            </div>
                        </div>
                    </div>
                    <table id="dt_search_gl_item_to" class="table table-striped table-bordered table-hover table-condensed" width="100%">
                        <thead>
                            <tr>
                                <th>#</th>
                                <th>Expenditure Line Item</th>
                                <th>Item Description</th>
                                <th>Budget Balance</th>
                                <th>Amount</th>
                            </tr>
                        </thead>
                    </table>

                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-info" id="btn_save_gl_items_to">
                        <i class="fa fa-save"></i>Save
                    </button>
                    <button class="btn btn-info" data-dismiss="modal">
                        <i class="fa  fa-times"></i>Cancel
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="glItemsModal" style="left:4%">

    <div class="modal-dialog" style="width:80%;">
        <div class="modal-content panel-info">
            <div class="modal-header panel-heading">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h3 class="modal-title">GL Items to Reallocate</h3>
            </div>
            <div class="modal-body">
                <div>
                    <div class="row" style="padding-top:1%;padding-bottom:1%">
                        <div class="col-md-6">
                        </div>
                        <div class="col-md-6">
                            <div class="search-container submit-btn" style="float:right">
                                <i class="fa fa-search search-icon"></i>
                                <input type="search" name="search" placeholder="Search..." id="searchboxItems">
                            </div>
                        </div>
                    </div>
                    <table id="dt_search_gl_items" class="table table-striped table-bordered table-hover table-condensed" width="100%">
                        <thead>
                            <tr>
                                <th>#</th>
                                <th>Expenditure Line Item</th>
                                <th>Description</th>
                                <th>Budget Balance</th>
                                <th>Debit Amount</th>
                                <th>Credit Amount</th>
                            </tr>
                        </thead>
                    </table>

                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-info" id="btn_save_gl_items">
                        <i class="fa fa-save"></i>Save
                    </button>
                    <button class="btn btn-info" data-dismiss="modal">
                        <i class="fa  fa-times"></i>Cancel
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>
@section pagespecific{
    <script>
        $(document).ready(function () {
            $("#dt_search_gl_item_wrapper .dt-toolbar").remove();
            $("#dt_search_gl_item_to_wrapper .dt-toolbar").remove();
            $("#dt_search_gl_item_from_wrapper .dt-toolbar").remove();
            $("#dt_search_gl_items_wrapper .dt-toolbar").remove();
            $("#dt_reallocation_detail_wrapper .dt-toolbar").remove();
            //$("#dt_reallocation_detail_wrapper .dt-toolbar-footer").remove();
            $("#dt_reallocation_detail1_wrapper .dt-toolbar").remove();
            $("#dt_reallocation_detail1_wrapper .dt-toolbar-footer").remove();
            $("#errorVerification").css({ 'display': 'none' });
        });

        let dateTime = '@ViewBag.budgetReallocation.ApplyDate'.split('/');
        let date = dateTime[0]
        let month = dateTime[1]
        let year = dateTime[2].split(' ')[0]
        let ApplyDate = `${year}-${month}-${date}`;

        var dt_reallocation_detail = $('#dt_reallocation_detail').dataTable({
            "data": [],
           // "iDisplayStart ": 10,
            "iDisplayLength": 100,
            "columns": [
                { title: "GL Item" },
                { title: "Description" },
                { title: "To Amount(DR)" },
                { title: "From Amount(CR)" },
                { title: "Action" }
            ]
        });
        //========== SEARCH GL =====
        var dt_search_gl_item = $('#dt_search_gl_item').dataTable();
        var dt_search_gl_items = $('#dt_search_gl_items').dataTable({
            "language": {
                "emptyTable": '<strong id="loader" style="color:green">No matching records found</strong>',
                "zeroRecords": "No matching records found"
            },
        });
        var dt_search_gl_item_to = $('#dt_search_gl_item_to')
            .dataTable({
                "language": {
                    "emptyTable": '<strong id="loader_to" style="color:green">No matching records found</strong>',
                    "zeroRecords": "No matching records found"
                },
            });
        var dt_search_gl_item_from = $('#dt_search_gl_item_from')
            .dataTable({
                "language": {
                    "emptyTable": '<strong id="loader_from" style="color:green">No matching records found</strong>',
                    "zeroRecords": "No matching records found"
                },
            });

        dt_search_gl_item_from.on( 'draw.dt', function () {
            Object.keys(all_amounts_from).forEach(v=>{
                $("#fromId-"+v).val(toLabel(all_amounts_from[v].entered_amount))
                $("#_fromId-"+v).val(toLabel(all_amounts_from[v].entered_amount))
            })
        });

        dt_search_gl_item_to.on( 'draw.dt', function () {
            Object.keys(all_amounts_to).forEach(v=>{
                $("#toId-"+v).val(toLabel(all_amounts_to[v].entered_amount))
                $("#_toId-"+v).val(toLabel(all_amounts_to[v].entered_amount))
            })
        });

        $("#searchboxFrom").on("keyup search input paste cut", function () {
            //dt_search_gl_item_from.DataTable().search(this.value).draw();
            dt_search_gl_item_from.fnClearTable()
            var results = dataFrom
                .filter(row => JSON.stringify(row).toLowerCase().includes(this.value.toLowerCase()))
                .slice(0, 100);

            results.forEach((d, i) => {
                var id = d.FundBalanceViewId.toString()
                dt_search_gl_item_from.fnAddData([i + 1,
                d["GlAccount"].split("|").join("-"),
                d["GlAccountDesc"],
                d["BudgetBalance"].toLocaleString(),
                '<amount-input type="text" placeholder="Amount" id="fromId-' + id + '" onkeyup="amountFromChanged(' + id + ')" autocomplete="off"/>'
                ]);
            })

            if (results.length == 0) {
                $("#loader_from").text("No Matching Record Found")
            } else {
                $("#loader_from").text("")
            }
        });
        $("#searchboxItems").on("keyup search input paste cut", function () {
            dt_search_gl_items.DataTable().search(this.value).draw();
        });
        $("#searchboxTo").on("keyup search input paste cut", function () {
            //dt_search_gl_item_to.DataTable().search(this.value).draw();
            dt_search_gl_item_to.fnClearTable()
            var results = dataTo
                .filter(row => JSON.stringify(row).toLowerCase().includes(this.value.toLowerCase()))
                .slice(0, 100);

            results.forEach((d, i) => {
                var id = d.FundBalanceViewId
                dt_search_gl_item_to.fnAddData([i + 1,
                d["GlAccount"].split("|").join("-"),
                d["GlAccountDesc"],
                d["BudgetBalance"].toLocaleString(),
                '<amount-input type="text" placeholder="Amount" id="toId-' + id + '" onkeyup="amountToChanged(' + id + ')" autocomplete="off"/>',
                ]);
            })

            if (results.length == 0) {
                $("#loader_from").text("No Matching Record Found")
            } else {
                $("#loader_from").text("")
            }
        });


        function SearchGlFrom() {
            if ($('#RequestType').val() == "") {
                swal("Please Select Reallocation Type")
                return
            } else if ($('#SBCFrom').val() == "") {
                swal("Please Select Subbudget Class")
                return
            } else {
                updateSearchGLTableFrom();
                $('#glItemsModalFrom').modal('show');
            }
        }

        var dataFrom = []
        function updateSearchGLTableFrom() {
            dt_search_gl_item_from.fnClearTable()
            $("#loader_from").text("Loading Please Wait...")
            var subbudgetclass = $("#SBCFrom").val();
            var url = '@Url.Action("GetInstitutionBudgetBalanceFrom", "BudgetReallocations")';


            var fundBalanceParams = {
                "subBudgetClass": subbudgetclass,
                "institutionCode": $("#InstitutionCodeFrom").val(),
                "SubLevelCodeFrom": $("#SubLevelCodeFrom").val(),
                applyDate: ApplyDate
            };

            $.ajax({
                type: "post",
                url: url,
                data: fundBalanceParams,
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {
                    dataFrom = response.data || [];
                    var results = dataFrom.slice(0, 100);
                    results.forEach((d, i) => {
                        var id = d.FundBalanceViewId.toString()
                        dt_search_gl_item_from.fnAddData([i + 1,
                        d["GlAccount"].split("|").join("-"),
                        d["GlAccountDesc"],
                        d["BudgetBalance"].toLocaleString(),
                        '<amount-input type="text" placeholder="Amount" id="fromId-' + id + '" onkeyup="amountFromChanged(' + id + ')" autocomplete="off"/>'
                        ]);
                    })
                    if (dataFrom.length == 0) {
                        $("#loader_from").text("No matching records found!")
                    } else {
                        $("#loader_from").text("")
                    }
                },
                failure: function (error) {
                    swal(error);
                }
            });
        }

        $("#btn_save_gl_items_from").click(function () {
            if(invalid_amounts.length>0){
                swal("Invalid Amount Entered")
            }else{
                saveGlItems()
            }
        });

        $("#btn_save_gl_items_to").click(function () {
            saveGlItems()
        });

        function saveGlItems(){
            dt_reallocation_detail.fnClearTable()
            var total_from = 0
            Object.keys(all_amounts_from).forEach(v=>{
                dt_reallocation_detail.fnAddData([
                    all_amounts_from[v].GlAccount,
                    all_amounts_from[v].GlAccountDesc,
                     0,
                    toLabel(all_amounts_from[v].entered_amount),
                    '<div class="btn-group">\
                                  <button type="button" class="btn btn-info btn-xs dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\
                                     <span class="caret"></span\
                                         <span class="sr-only"></span>\
                                 </button>\
                                <ul class="dropdown-menu">\
                                    <li><a href="#" onclick="deleteFrom(' + v + ')">Delete</a></li>\
                                </ul>\
                            </div>'
                ]);
                total_from +=all_amounts_from[v].entered_amount;
            })

            var total_to = 0
            Object.keys(all_amounts_to).forEach(v=>{
                dt_reallocation_detail.fnAddData([
                    all_amounts_to[v].GlAccount,
                    all_amounts_to[v].GlAccountDesc,
                    toLabel(all_amounts_to[v].entered_amount),
                    0,
                    '<div class="btn-group">\
                                  <button type="button" class="btn btn-info btn-xs dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\
                                     <span class="caret"></span\
                                         <span class="sr-only"></span>\
                                 </button>\
                                <ul class="dropdown-menu">\
                                    <li><a href="#" onclick="deleteTo(' + v + ')">Delete</a></li>\
                                </ul>\
                            </div>'
                ]);
                total_to +=all_amounts_to[v].entered_amount;
            })

            var total_vifungu_from = vifungu.map(k=>k.AmountFrom).reduce((a, b) => a + b, 0)
            var total_vifungu_to = vifungu.map(k=>k.AmountTo).reduce((a, b) => a + b, 0)

            $("#_AmountFrom").val(toLabel(total_from+total_vifungu_from));
            $("#_AmountTo").val(toLabel(total_to+total_vifungu_to));

           // toggleTableInfo()
            displayVifungu(vifungu)
            $('#glItemsModalFrom').modal('hide');
            $('#glItemsModalTo').modal('hide');
        }

        function deleteFrom(v){
            delete all_amounts_from[v]
            saveGlItems()
        }

        function deleteTo(v){
            delete all_amounts_to[v]
            saveGlItems()
        }

        var all_amounts_from = {}
        function amountFromChanged(id) {
            var d = dataFrom.filter(a=>a.FundBalanceViewId == id)[0]
            if(toNumber($("#_fromId-" + id).val())>d.BudgetBalance){
                invalid_amounts.push(id)
                document.getElementById("_fromId-" + id).style.color = "red"
            }else{
                document.getElementById("_fromId-" + id).style.color = "black"
                invalid_amounts = invalid_amounts.filter(v=>v!==id)
                all_amounts_from[id] = {
                    entered_amount: toNumber($("#_fromId-" + id).val()),
                    ...d
            };
            }
        }

        function SearchGlTo() {
            if ($('#RequestType').val() == "") {
                swal("Please Select Reallocation Type")
                return
            } else if ($('#SBCTo').val() == "") {
                swal("Please Select Subbudget Class")
                return
            } else {
                if ($('#RequestType').val() == "ACROSS") {
                    updateSearchGLTableTo();
                    $('#glItemsModalTo').modal('show');
                }else{
                    if(!$("#InstitutionCodeFrom").val()){
                        swal("Please select Institution from first.")
                    }else{
                        updateSearchGLTableTo();
                        $('#glItemsModalTo').modal('show');

                    }
                }
            }
        }

        var dataTo = []
        function updateSearchGLTableTo() {
            dt_search_gl_item_to.fnClearTable()
            $("#loader_to").text("Loading Please Wait...")

            var url = '@Url.Action("GetInstitutionBudgetBalanceTo", "BudgetReallocations")';

            if ($('#RequestType').val() == "ACROSS") {

                fundBalanceParams = {
                    "subBudgetClass":  $("#SBCTo").val(),
                    "institutionCode": $("#InstitutionCodeTo").val(),
                    "SubLevelCodeTo": $("#SubLevelCodeTo").val(),
                    applyDate: ApplyDate
                };

            }else{
                var fundBalanceParams = {
                    "subBudgetClass": $("#SBCTo").val(),
                    "institutionCode": $("#InstitutionCodeFrom").val(),
                    "SubLevelCodeTo": $("#SubLevelCodeTo").val(),
                    applyDate: ApplyDate
                };
            }

            $.ajax({
                type: "post",
                url: url,
                data: fundBalanceParams,
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {
                    dataTo = response.data || [];
                    var results = dataTo.slice(0, 100);

                    results.forEach((d, i) => {
                        var id = d.FundBalanceViewId
                        dt_search_gl_item_to.fnAddData([i + 1,
                        d["GlAccount"].split("|").join("-"),
                        d["GlAccountDesc"],
                        d["BudgetBalance"].toLocaleString(),
                        '<amount-input type="text" placeholder="Amount" id="toId-' + id + '" onkeyup="amountToChanged(' + id + ')" autocomplete="off"/>',
                        ]);
                    })

                    if (results.length == 0) {
                        $("#loader_to").text("No Matching Record Found")
                    } else {
                        $("#loader_to").text("")
                    }
                },
                failure: function (error) {
                    swal(error);
                }
            });
        }

        var all_amounts_to = {}
        var invalid_amounts = []
        function amountToChanged(id) {
            let d = dataTo.filter(a=>a.FundBalanceViewId == id)[0];
            all_amounts_to[id] =  { entered_amount: toNumber($("#_toId-" + id).val()),...d};
        }

        var all_amountsDr = [];
        var all_amountsCr = [];
        $('#ApplyDate').datepicker({
            dateFormat: 'yy-mm-dd',
            prevText: '<i class="fa fa-chevron-left"></i>',
            nextText: '<i class="fa fa-chevron-right"></i>',
            onSelect: function (selectedDate) {
                $('#ApplyDate').datepicker('option', 'minDate', selectedDate);
            }
        });

        $('#ApplyDate').change(() => {
            ApplyDate = $('#ApplyDate').val();
        });

        function getValue() {
            clearDatatable();
            if ($("#RequestType").val() == "ACROSS") {
                $(".InstitutionCodeTo").show();
            } else {
                $(".InstitutionCodeTo").hide();
            }
            GetReallocationLimit()
        }

        function clearDatatable(){
            dt_reallocation_detail.fnClearTable()
            dt_search_gl_item_from.fnClearTable()
            dt_search_gl_item_to.fnClearTable()
            all_amounts_from = []
            all_amounts_to = []
            saveGlItems()
        }

        Date.prototype.toDateInputValue = (function () {
            var local = new Date(this);
            local.setMinutes(this.getMinutes() - this.getTimezoneOffset());
            return local.toJSON().slice(0, 10);
        });

        var SubBudgetClassOld = $("#SubBudgetClass").val();

        var form_data_statusDr = [];
        //var all_amountsDr = {};
        function amountDrChanged(i) {
            var data = dt_search_gl_items.DataTable().rows().data();
            var row = data.rows(i).data()[0]
            var original_amount = toNumber(row[3]);
            var entered_amount = toNumber($("#_Dr-" + i).val());
            all_amountsDr["Dr-" + i] = toNumber($("#_Dr-" + i).val());
            console.log(original_amount);


        }
        var form_data_statusCr = [];
        //var all_amountsCr = {};
        function amountCrChanged(i) {
            var data = dt_search_gl_items.DataTable().rows().data();
            var row = data.rows(i).data()[0]
            var original_amount = toNumber(row[3]);
            var entered_amount = toNumber($("#_Cr-" + i).val());
            all_amountsDr["Cr-" + i] = toNumber($("#_Cr-" + i).val());
            //console.log(original_amount);
            //console.log(all_amountsDr["Cr-" + i]);
            var balance = original_amount - entered_amount;

            if (balance < 0) {
                form_data_statusCr.push(i);
                $("#_Cr-" + i).css({ 'color': 'red' });
                swal("Entered Amount Has Exceeded The Budget Balance");
                return
            } else {
                $("#_Cr-" + i).css({ 'color': 'black' });
                remove(form_data_statusCr, i);
                computeTotalItemsAmt();
            }
        }


        $('#dt_reallocation_detail').on('click', '.delete', function () {
            var pageParamTable = $('#dt_reallocation_detail').DataTable();
            var tableRow = pageParamTable.row($(this).parents('tr'));
            pageParamTable.row(tableRow).remove().draw();
        });


        //==== END OF ADD GL Items to Voucher Details ======


        // =========== FORM SUBMISSION ==================
        $("#saveLoader").toggle(false);
        $("#saveLoader2").toggle(false);
        $("#form_submision").click(function () {

        });

        function createReallocation(leave){
            if ($("#RequestDesc").val() == ""
              || $("#RequestType").val().length == 0) {
                swal("Fill all the Fields");
            } else if ($("#RequestType").val() == "WITHIN") {
                try {

                    var baseAmount = toNumber($("#_AmountFrom").val()) * 1;
                    var reallocationDetails = []
                    var reallocationDetailsData = dt_reallocation_detail.DataTable().rows().data();

                    for (var i = 0; i < reallocationDetailsData.length; i++) {

                        var _row = reallocationDetailsData.rows(i).data()[0];
                        var baseAmountDetail = toNumber(_row[3]) * 1;
                        reallocationDetails.push({
                            "GLAccount": _row[0].split("-").join("|"),
                            "AmountTo": toNumber(_row[2]),
                            "AmountFrom": toNumber(_row[3]),
                            "ChildReallocationDtlID":0
                        })
                    }

                    var form_data = {
                        "ApplyDate": ApplyDate,
                        "Book": "BUDGET",
                        "JournalTypeCode": "BR",
                        "ExchangeRate": 1,
                        "SubBudgetClass": $("#SBCFrom").val(),
                        "SBCTo": $("#SBCTo").val(),
                        "RequestType": $("#RequestType").val(),
                        "RequestDesc": $("#RequestDesc").val(),
                        "AmountFrom": toNumber($("#_AmountFrom").val()),
                        "AmountTo":  toNumber($("#_AmountTo").val()),
                        "ChildReallocationDtlID": 0,
                        "BudgetReallocationDtls": reallocationDetails,
                        "InstitutionCodeFrom": $("#InstitutionCodeFrom").val(),
                        "InstitutionCodeTo": $("#InstitutionCodeTo").val(),
                        "ReallocationID":  '@ViewBag.budgetReallocation.ReallocationID'
                    }

                    if (reallocationDetails.length == 0) {
                        swal("No GL Items Selected")
                    } else {
                        var url = '@Url.Action("SaveEditReallocation", "Budgetreallocations")';
                        var urlList = '@Url.Action("Reallocations", "Budgetreallocations")';
                        if(toNumber($("#_AmountFrom").val())>
                            (toNumber($("#ReallocationLimit").val())+toNumber($("#_AmountFrom").val()))){
                            swal("Reallocation Limit Exceeded.!")
                            return
                        }

                        $("#form_submision").prop('disabled', true);
                        if(leave){
                            $("#saveLoader").toggle(true);
                        }else{
                            $("#saveLoader2").toggle(true);
                        }
                        $.ajax({
                            type: "post",
                            url: url,
                            data: form_data,
                            contenttype: "application/json; charset=utf-8",
                            datatype: "json",
                            success: function (response) {
                                $("#form_submision").prop('disabled', false);
                                if(leave){
                                    $("#saveLoader").toggle(true);
                                }else{
                                    $("#saveLoader2").toggle(true);
                                }
                                if (response == "Success") {
                                    swal("Saved Successfully!", { icon: "success" })
                                        .then((value) => {
                                            if(leave){
                                                window.location.href = urlList;
                                            }else{
                                                window.location.reload()
                                            }
                                        });
                                }else {
                                    swal(response);
                                    if(leave){
                                        $("#saveLoader").toggle(true);
                                    }else{
                                        $("#saveLoader2").toggle(true);
                                    }
                                }
                            },
                            failure: function (error) {
                                $("#form_submision").prop('disabled', false);
                                if(leave){
                                    $("#saveLoader").toggle(true);
                                }else{
                                    $("#saveLoader2").toggle(true);
                                }
                                swal(error);
                            }
                        });
                    }
                } catch (e) {
                    swal("Error Saving. Please consult system administrator! " + e.toString());
                }
            } else if ($("#RequestType").val() == "ACROSS") {
                try {

                    var baseAmount = toNumber($("#_AmountFrom").val()) * 1;
                    var reallocationDetails = []
                    var reallocationDetailsData = dt_reallocation_detail.DataTable().rows().data();

                    for (var i = 0; i < reallocationDetailsData.length; i++) {

                        var _row = reallocationDetailsData.rows(i).data()[0];
                        var baseAmountDetail = toNumber(_row[3]) * 1;
                        reallocationDetails.push({
                            "GLAccount": _row[0].split("-").join("|"),
                            "AmountTo": toNumber(_row[2]),
                            "AmountFrom": toNumber(_row[3]),

                        })
                    }

                    var form_data = {
                        "ApplyDate": ApplyDate,
                        "Book": "BUDGET",
                        "JournalTypeCode": "BR",
                        "ExchangeRate": 1,
                        "SubBudgetClass": $("#SBCFrom").val(),
                        "SBCTo": $("#SBCTo").val(),
                        "RequestType": $("#RequestType").val(),
                        "RequestDesc": $("#RequestDesc").val(),
                        "AmountFrom": toNumber($("#_AmountFrom").val()),
                        "AmountTo": toNumber($("#_AmountTo").val()),
                        "BudgetReallocationDtls": reallocationDetails,
                        "InstitutionCodeFrom": $("#InstitutionCodeFrom").val(),
                        "InstitutionCodeTo": $("#InstitutionCodeTo").val(),
                        "ReallocationID":  '@ViewBag.budgetReallocation.ReallocationID'
                    }

                    //if (voucherDetails.length == 0) {
                    if (reallocationDetails.length == 0) {
                        swal("No GL Items Selected")
                    } else {
                        var url = '@Url.Action("SaveEditReallocation", "Budgetreallocations")';
                        var urlList = '@Url.Action("Reallocations", "Budgetreallocations")';
                        if(toNumber($("#_AmountFrom").val())>
                            (toNumber($("#ReallocationLimit").val())+toNumber($("#_AmountFrom").val()))){
                            swal("Reallocation Limit Exceeded.!")
                            return
                        }
                        $("#form_submision").prop('disabled', true);
                        if(leave){
                            $("#saveLoader").toggle(true);
                        }else{
                            $("#saveLoader2").toggle(true);
                        }
                        $.ajax({
                            type: "post",
                            url: url,
                            data: form_data,
                            contenttype: "application/json; charset=utf-8",
                            datatype: "json",
                            success: function (response) {
                                $("#form_submision").prop('disabled', false);
                                if(leave){
                                    $("#saveLoader").toggle(true);
                                }else{
                                    $("#saveLoader2").toggle(true);
                                }
                                if (response == "Success") {
                                    swal("Saved Successfully!", { icon: "success" })
                                        .then((value) => {
                                            if(leave){
                                                window.location.href = urlList;
                                            }else{
                                                window.location.reload()
                                            }
                                        });
                                }
                                else {
                                    swal(response);
                                }
                            },
                            failure: function (error) {
                                $("#form_submision").prop('disabled', false);
                                if(leave){
                                    $("#saveLoader").toggle(true);
                                }else{
                                    $("#saveLoader2").toggle(true);
                                }
                                swal(error);
                            }
                        });
                    }
                } catch (e) {
                    swal("Error Saving. Please consult system administrator! " + e.toString());
                }
            }
        }

        var controlNumberIsProvided = false;

        function validateInputsParameters(parameterList) {
            var resetStyle = function (parameterList) {
                for (var i = 0; i < parameterList.length; i++) {
                    $(parameterList[i] + "_1").attr("style", "color: white;");
                }
            }

            resetStyle(parameterList);
            for (var i = 0; i < parameterList.length; i++) {
                if (!$(parameterList[i]).val().trim()) {
                    return parameterList[i];
                }
            }
            return null;
        }

        function validateformfields() {
            if ($("#ApplyDate").length == 0
                || $("#RequestType").length == 0
                || $("#RequestDesc").length == 0) {

                swal("Error", "Fill all the field");
            }
        }
        function confirmTotalAmountChange(oldVal, newVal) {
            swal({
                title: 'Change Total Amount?',
                text: "All the GL Items will be Cleared",
                buttons: [
                  'Cancel',
                  'Proceed'
                ],
            }).then(function (isConfirmed) {
                if (isConfirmed) {
                    $("#total_voucher_amount").val(newVal);
                    dt_reallocation_detail.fnClearTable();
                    $("#total_amount").load(location.href + " #total_amount");
                    $("#total_line_amount").val(0);

                    all_amounts = {};
                    updateSearchGITable($("#SubBudgetClass").val());
                    //computeTotalAmount();

                    swal({
                        title: 'Success',
                        icon: 'success'
                    });
                } else {
                    $("#total_voucher_amount").val(oldVal);
                    TotalAmountOld = oldVal;
                    swal("Cancelled", "No change was made");
                }
            });

        }

        $(function(){
            console.log('@ViewBag.budgetReallocation.AmountFrom')
            $("#SBCFrom").val('@ViewBag.budgetReallocation.SubBudgetClass')
            $("#SBCTo").val('@ViewBag.budgetReallocation.SBCTo')
            $("#RequestDesc").val('@ViewBag.budgetReallocation.RequestDesc')
            $("#RequestType").val('@ViewBag.budgetReallocation.RequestType')
            $("#RequestType").trigger("change")
            $("#AmountFrom").val('@ViewBag.budgetReallocation.AmountFrom')
            $("#AmountTo").val('@ViewBag.budgetReallocation.AmountTo')
            $("#_AmountFrom").val('@ViewBag.budgetReallocation.AmountFrom')
            $("#_AmountTo").val('@ViewBag.budgetReallocation.AmountTo')
            $("#InstitutionCodeFrom").val('@ViewBag.budgetReallocation.InstitutionCodeFrom')
            $("#InstitutionCodeTo").val('@ViewBag.budgetReallocation.InstitutionCodeTo')
            $("#ApplyDate").val('@ViewBag.budgetReallocation.ApplyDate')
            $("#InstitutionCodeFrom").trigger("change")
            $("#InstitutionCodeTo").trigger("change")
            GetBudgetDetails()
        })

        var vifungu = []
        function GetBudgetDetails(){
            var url = '@Url.Action("GetBudgReallocDetails", "BudgetReallocations")';
            $.ajax({
                type: "GET",
                url: url,
                data: {reallocationid: '@ViewBag.budgetReallocation.ReallocationID'},
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {
                    vifungu = response.data || []
                    displayVifungu(vifungu)
                },
                failure: function (error) {
                    swal(error);
                }
            });
        }

        function displayVifungu(vifungu){
            vifungu.forEach(kifungu=>{
                dt_reallocation_detail.fnAddData([
                 kifungu.GLAccount,
                 kifungu.GLAccountDesc,
                 toLabel(kifungu.AmountTo),
                 toLabel(kifungu.AmountFrom),
                '<div class="btn-group">\
                                  <button type="button" class="btn btn-info btn-xs dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\
                                     <span class="caret"></span\
                                         <span class="sr-only"></span>\
                                 </button>\
                                <ul class="dropdown-menu">\
                                    <li><a href="#" onclick="deletePrev('+kifungu.ReallocationDtlID+')">Delete</a></li>\
                                </ul>\
                            </div>'
                ]);
            })
        }


        function deletePrev(id){
            vifungu = vifungu.filter(k=>k.ReallocationDtlID != id)
            saveGlItems()
        }


        $("#InstitutionCodeTo").change(function(){
            var url = '@Url.Action("GetInstitutionSubLevel", "Budgetreallocations")';
            $.ajax({
                type: "GET",
                url: url,
                data: {institutionCode: this.value},
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {
                    var sublevels = response.data || []
                    var SubLevelCode = document.getElementById("SubLevelCodeTo")
                    SubLevelCode.innerHTML = ""
                    SubLevelCode.appendChild(createOption('ALL','ALL'))
                    sublevels.forEach(s=>{
                        SubLevelCode.appendChild(createOption(s.SubLevelDesc,s.SubLevelCode))
                    })
                },
                failure: function (error) {
                    swal(error);
                }
            });
        })


        $("#InstitutionCodeFrom").change(function(){
            GetReallocationLimit()
            var url = '@Url.Action("GetInstitutionSubLevel", "Budgetreallocations")';
            $.ajax({
                type: "GET",
                url: url,
                data: {institutionCode: this.value},
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {
                    var sublevels = response.data || []
                    var SubLevelCode = document.getElementById("SubLevelCodeFrom")
                    SubLevelCode.innerHTML = ""
                    SubLevelCode.appendChild(createOption('ALL','ALL'))
                    sublevels.forEach(s=>{
                        SubLevelCode.appendChild(createOption(s.SubLevelDesc,s.SubLevelCode))
                    })
                },
                failure: function (error) {
                    swal(error);
                }
            });
        })
        function GetReallocationLimit(){
            var url = '@Url.Action("GetReallocationLimit", "Budgetreallocations")';
            if($("#RequestType").val() && $("#InstitutionCodeFrom").val()){
                $.ajax({
                    type: "GET",
                    url: url,
                    data: {
                        reallocationCategory: $("#RequestType").val(),
                        institutionCode: $("#RequestType").val() == "ACROSS" ? "00170000" : $("#InstitutionCodeFrom").val(),
                        applyDate: ApplyDate
                    },
                    contenttype: "application/json; charset=utf-8",
                    datatype: "json",
                    success: function (response) {
                        $("#ReallocationLimit").val(toLabel(response.data))
                    },
                    failure: function (error) {
                        swal(error);
                    }
                });
            }
        }
        function createOption(t,v){
            var option = document.createElement("option")
            option.text = `${v}-${t}`
            if(t == 'ALL'){
                option.text = t
            }
            option.value = v
            return option
        }


    </script>
}


