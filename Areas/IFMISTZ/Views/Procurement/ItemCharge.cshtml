@model IFMIS.Areas.IFMISTZ.Models.PurchaseOrderVM
@{
    ViewBag.Title = "Purchase Order Details";
}


@*<div id="content" >*@

    @*<section id="widget-grid">
        <div class="row">*@
            <div class="jarviswidget jarviswidget-color-darken" id="wid-id-0" data-widget-colorbutton="false" data-widget-editbutton="false" style="width:100%;top:50px;padding-left:5px;padding-right:5px" >

                <header style="background-color:#2196F3">
                    <span class="widget-icon"> <i class="fa fa-table"></i> </span>
                    <h2>Purchase Order Details</h2>
                </header>

                <div>
                   
                    <div class="widget-body " style="padding-top:10px;width:100%">
                        <table class="table  table-hover table-condensed">
                          <tbody>
                              <tr>
                                  <td style="width:20%">LPO Number</td>
                                  <td><strong>@Html.DisplayFor(model => model.PurchaseOrderNo)</strong></td>
                              </tr>
                              <tr>
                                  <td>Description</td>
                                  <td> @Html.DisplayFor(model => model.PurchaseOrderDesc)</td>
                                  
                              </tr>
                              <tr>
                                  <td>Purchase Order Amount</td>
                                  <td>@Html.DisplayFor(model => model.Currency) @Html.DisplayFor(model => model.PurchaseOrderAmount)</td>
                              </tr>
                              <tr>
                                  <td>Total Items value</td>
                                  <td>@Html.DisplayFor(model => model.Currency) @Html.DisplayFor(model => model.GrandTotal)</td>
                              </tr>
                              <tr>
                                  <td>Items Charge</td>
                                  <td>@Html.DisplayFor(model => model.Currency) @Html.DisplayFor(model => model.TotalItemsCharge)</td>
                              </tr>
                              <tr>
                                  <td>Items Charge Balance</td>
                                  <td>@Html.DisplayFor(model => model.Currency) @Html.DisplayFor(model => model.Balance)</td>
                              </tr>
                              <tr>
                                  <td>Currency</td>
                                  <td>@Html.DisplayFor(model => model.Currency)</td>
                              </tr>
                              <tr>
                                  <td style="width:20%">
                                      Sub Budget Class
                                  </td>
                                  <td>
                                      @Html.DisplayFor(model => model.SubBudgetClass)-@Html.DisplayFor(model => model.SegmentDesc)
                                  </td>
                              </tr>
                          </tbody>
                       </table>
                              
                           <br/>
                            <div class="row">
                                <div class="col-lg-3 col-sm-3 col-xs-3">
                                    <a href="#" data-toggle="modal" data-target="#glItemsModal" data-sub_budget_class=@Model.SubBudgetClass class="btn btn-info" id="itemCharge" style="width:120px;border-radius:1px;background-color:#2196F3;color:white">
                                        <i class="fa fa-plus"></i>GL Account
                                    </a>

                                </div>
                                <div class="col-sm-6">
                                </div>

                                <div class="col-lg-3 col-sm-3 col-xs-3">
                                    <div class="input-group"><input class="form-control" id="checkNo" name="checknumber" placeholder="Search item" type="text" @*style="width:100px"*@ pull-right /><span class="input-group-btn"><button class="btn shiny  " id="search" type="submit">Search</button></span></div>
                                </div>
                            </div>

                            <br />

                            <table class="table table-striped table-bordered table-hover table-condensed" id="items">
                                <thead>
                                    <tr>
                                        <th style="text-align:center">#</th>
                                        <th style="text-align:left"></th>
                                        <th style="text-align:left">Item</th>
                                        <th style="text-align:center">Quantity</th>
                                        <th style="text-align:right">Unit Price (@Html.DisplayFor(model => model.Currency))</th>
                                        <th style="text-align:right">Total (@Html.DisplayFor(model => model.Currency))</th>
                                    </tr>
                                </thead>

                                <tbody>
                                    @{var i = 0;
                                    decimal grandTotal=0;
                                    var item_total=0;}
                                                                         @foreach (var item in Model.PurchaseOrderDetails) {
                                    grandTotal=grandTotal+Convert.ToDecimal(item.TotalAmount);
                                    item_total=item_total +(int)item.Quantity;
i++;
                                        <tr>
                                            <td style="text-align:center">
                                                @i
                                            </td>
                                            <td style="text-align:center">
                                                <input type="checkbox" value=@item.TotalAmount class="checkItem" id=@item.PurchaseOrderDetailId>
                                            </td>
                                            <td style="text-align:left">
                                                @Html.DisplayFor(modelItem => item.ItemDesc)
                                            </td>
          
                                            <td style="text-align:center">
                                                @Html.DisplayFor(modelItem => item.Quantity)
                                            </td>
                                            <td style="text-align:right">

                                                @Html.DisplayFor(modelItem => item.UnitPrice)

                                            </td>
                                            <td style="text-align:right">

                                                @Html.DisplayFor(modelItem => item.TotalAmount)
                                            </td>
                                                               
                                        </tr>

                                }
                                    <tr>
                                        <td colspan="3" style="text-align:right">Total</td>
                                        <td style="text-align:center">@item_total</td>
                                        <td style="text-align:center"></td>
                                        <td style="text-align:right">@grandTotal.ToString("#,##0")</td>                          
                                    </tr>
                                </tbody>
                            </table>
                       
</div>
                    <div class="panel-footer">
                        <a href="@Url.Action("PurchaseOrders", "Procurement")" class="btn btn-default btn-flat">
                            <span class="glyphicon glyphicon-arrow-left" aria-hidden="true"></span>
                            Continue
                        </a>
                    </div>
                    </div>
                    <!-- end widget content -->

                </div>
                <!-- end widget div -->


    
<!----------- Search GL Items----------------->
<div class="modal fade" id="glItemsModal" style="left:4%">

    <div class="modal-dialog" style="width:80%;">
        <div class="modal-content panel-info">


            <div class="modal-header panel-heading">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h3 class="modal-title"> Item Charge By Gl Account</h3>

            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label class="col-lg-2 col-sm-2 col-xs-2 control-label" style="top:10px">Total Item(s) Value</label>
                    <div class="col-lg-2 col-sm-2 col-xs-2">
                        <input type="text" value="0" readonly  id="total_items_value">
                    </div>


                    <label class="col-lg-2 col-sm-2 col-xs-2 control-label" style="top:10px">Total Line Amount</label>
                    <div class="col-lg-2 col-sm-2 col-xs-2">
                        <input value="0" type="text" readonly id="total_line_amount">
                    </div>
                    <label class="col-lg-1 col-sm-1 col-xs-1 control-label" style="top:10px">Balance</label>
                    <div class="col-lg-2 col-sm-2 col-xs-2">
                        <input value="0" type="text" readonly id="difference">
                    </div>
                  
                    @*<table id="dt_search_gl_item" class="table table-striped table-bordered table-hover table-condensed" width="100%">
                        <tr>
                            <th>
                                #
                            </th>
                            <th>
                                Expenditure Line Item
                            </th>
                            <th>
                                Item Description
                            </th>
                            <th>
                                Fund Balance
                            </th>
                            <th>
                                Funding Reference
                            </th>
                            <th>Expense Amount</th>

                        </tr>
                        <tbody>
                        
                        </tbody>
                    </table>*@
                    @*<table id="dt_basic" class="table table-striped table-bordered table-hover" width="100%">
                        <thead>
                            <tr>
                                <th data-hide="phone">ID</th>
                                <th data-class="expand"><i class="fa fa-fw fa-user text-muted hidden-md hidden-sm hidden-xs"></i> Expenditure Line Item</th>
                                <th data-hide="phone"><i class="fa fa-fw fa-phone text-muted hidden-md hidden-sm hidden-xs"></i> Item Description</th>
                              
                                <th data-hide="phone,tablet"><i class="fa fa-fw fa-map-marker txt-color-blue hidden-md hidden-sm hidden-xs"></i> GFS Code</th>
                                <th data-hide="phone,tablet">Amount</th>
                                <th data-hide="phone,tablet"><i class="fa fa-fw fa-calendar txt-color-blue hidden-md hidden-sm hidden-xs"></i> Expense Amount</th>
                            </tr>
                        </thead>
                        <tbody>
                            @{ var j = 0;}
@foreach (var item in Model.ItemsCharges)
{
    j++;
    <tr>
        <td>@j</td>
        <td>@item.GlAccount</td>
        <td>@item.GlAccountDesc</td>

        <td>@item.GfsCode</td>
        <td>@item.BaseAmount</td>
        <td><input type="Text" /></td>
    </tr>
}
                         
                         
                        
                        </tbody>
                    </table>*@

                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn action-btn"
                            style="background-color:#2196F3;color:white"
                            id="btn_save_gl_items">
                        Save
                    </button>
                    <button class="btn btn-warning action-btn" data-dismiss="modal">
                        Cancel
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>
        
        @*</div>
    </section>*@

@*</div>*@



@section pagespecific {

<script type="text/javascript">

    // DO NOT REMOVE : GLOBAL FUNCTIONS!

    $(document).ready(function () {

        /* // DOM Position key index //

        l - Length changing (dropdown)
        f - Filtering input (search)
        t - The Table! (datatable)
        i - Information (records)
        p - Pagination (paging)
        r - pRocessing
        < and > - div elements
        <"#id" and > - div with an id
        <"class" and > - div with a class
        <"#id.class" and > - div with an id and class

        Also see: http://legacy.datatables.net/usage/features
        */

        /* BASIC ;*/
        var responsiveHelper_dt_basic = undefined;
        var responsiveHelper_datatable_fixed_column = undefined;
        var responsiveHelper_datatable_col_reorder = undefined;
        var responsiveHelper_datatable_tabletools = undefined;

        var breakpointDefinition = {
            tablet: 1024,
            phone: 480
        };

        $('#dt_basic').dataTable({
            "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-12 hidden-xs'l>r>" +
                "t" +
                "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
            "autoWidth": true,
            "preDrawCallback": function () {
                // Initialize the responsive datatables helper once.
                if (!responsiveHelper_dt_basic) {
                    responsiveHelper_dt_basic = new ResponsiveDatatablesHelper($('#dt_basic'), breakpointDefinition);
                }
            },
            "rowCallback": function (nRow) {
                responsiveHelper_dt_basic.createExpandIcon(nRow);
            },
            "drawCallback": function (oSettings) {
                responsiveHelper_dt_basic.respond();
            }
        });

        /* END BASIC */

     
       
        // custom toolbar
        $("div.toolbar").html('<div class="text-right"><img src="/Content/img/logo.png" alt="SmartAdmin" style="width: 111px; margin-top: 3px; margin-right: 10px;"></div>');
      

    })

</script>



















    <!-- PAGE RELATED PLUGIN(S) -->
  @*<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
<script>

    $("#itemCharge").on('click', function () {
        var itemIds = [];
        var sum = 0;
        var subBudgetClass = $(this).data('sub_budget_class');
       
        $("input:checkbox.checkItem").each(function () {
            if ($(this).prop("checked")) {
                itemIds.push($(this).val());
                sum =sum + parseFloat($(this).val());
                //alert($(this).attr('id'));
                $(this).hide();
            }
        });
        $("#total_items_value").val(sum);
        $("#difference").val(sum);
        if (itemIds.length == 0) {
            $('#glItemsModal').modal('hide');
            alert("No Item Selected!");
            return;
        }
        var url = '@Url.Action("getfundbalance", "Procurement")';
        var fundBalanceParams = { "subBudgetClass": subBudgetClass };

        $.ajax({
            type: "post",
            url: url,
            data: fundBalanceParams,
            contenttype: "application/json; charset=utf-8",
            datatype: "json",
            success: function (response) {
                //=== UPDATE SEARCH GI TABLE ====
                var data = response.data;
              
                alert("My Lord is great" + data.length);
                dt_search_gl_item.fnClearTable();
                alert("My Lord is great" + data.length);
                for (var i = 0; i < data.length; i++) {
                    dt_search_gl_item.fnAddData([i,
                       data[i]["GlAccount"].split("|").join("-"),
                       data[i]["GlAccountDesc"],
                       data[i]["BaseAmount"],
                       data[i]["GfsCode"],
                       '<input type="number" placeholder="Amount" id="Id-' + i + '" onkeyup="amountChanged(' + i + ')"/>'
                    ]);
                    
                }
            },
            failure: function (errmsg) {
                alert(errmsg);
            }
        });
    });
                var breakpointDefinition = {
                    tablet: 1024,
                    phone: 480
                };

            // ============= SHOW PAYEE===============
                var dt_basic = $('#dt_basic').dataTable({
                    "autoWidth": true,
                    "searching": false,
                    "bPaginate": false,
                    "info": false,
                    "data": [],
                    "columnDefs": [{
                            "targets": [0,1],
                            "visible": false
                        }],
                    "columns": [
                        { title: "Payee DetailId" },
                        { title: "Payee BIC" },
                        { title: "Payee Name" },
                        { title: "Payee Code" },
                        { title: "Bank Name" },
                        { title: "Payee Type" },
                        { title: "Bank Account No" },
                        { title: "Address" }
                    ]
                });


            // ============= SEARCH PAYEEE ===========

              Date.prototype.toDateInputValue = (function () {
                    var local = new Date(this);
                    local.setMinutes(this.getMinutes() - this.getTimezoneOffset());
                    return local.toJSON().slice(0, 10);
              });

             $(function () {
                 BindDataTable();
                 $('#ApplyDate').val(new Date().toDateInputValue());
                 $('#InvoiceDate').val(new Date().toDateInputValue());
             });

            var dt_search_payee = undefined;
            var BindDataTable = function (response) {
                var url = '@Url.Action("GetPayee", "PaymentVoucher")';
                 dt_search_payee= $("#dt_search_payee").DataTable({
                    "bServerSide": true,
                    "sAjaxSource": url,
                    "fnServerData": function (sSource, aoData, fnCallback) {
                        $.ajax({
                            type: "GET",
                            url: sSource,
                            data: aoData,
                            success: fnCallback
                        });
                    },
                    "aoColumnDefs": [{ "bVisible": false, "aTargets": [1,2] }],
                    "aoColumns": [
                        {
                            render: function (data, type, row, meta) {
                                return meta.row + meta.settings._iDisplayStart + 1;
                            }
                        },
                        { "mData": "PayeeDetailId" },
                        { "mData": "BIC" },
                        { "mData": "AccountName" },
                        { "mData": "PayeeCode" },
                        { "mData": "BankName" },
                        { "mData": "Accountnumber" },
                        { "mData": "PayeeType" },
                        { "mData": "Address1" },
                        {
                            "mData": "PayeeDetailId",
                            "bSortable": false,
                            "render": function (Id, type, full, meta) {
                                return '<a href="#" onclick="payeeClicked(' + meta.row + ')"><i class="glyphicon glyphicon-plus-sign"></i></a>'
                            }
                        },
                    ]
                });
            };


            function payeeClicked(rowId) {
                    var data = dt_search_payee.rows().data();
                    var row = data.rows(rowId).data()[0];
                    dt_basic.fnClearTable();
                    dt_basic.fnAddData([row["PayeeDetailId"], row["BIC"], row["AccountName"], row["PayeeCode"], row["BankName"], row["PayeeType"], row["Accountnumber"], row["Address1"]]);
                    $("#payeeModal").modal("hide");
            }

                // =========== END SEARCH PAYEE ====================


                // =========== START VOUCHER DETAILS ===============
                var dt_voucher_detail = $('#dt_voucher_detail').dataTable({
                    "autoWidth": true,
                    "searching": false,
                    "bPaginate": false,
                    "info": false,
                    "data": [],
                    "columns": [
                        { title: "Expenditure Line Item" },
                        { title: "Item Description" },
                        { title: "Funding Reference" },
                        { title: "Expense Amount" }
                    ]
                });

                // =========== END VOUCHER DETAILS ====================

            function SearchPayee() {
                $('#payeeModal').modal('show');
            }


            ///========== SEARCH GL =====
            var responsiveHelper_dt_search_gl_item = undefined;
            var dt_search_gl_item = $('#dt_search_gl_item').dataTable({
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-12 hidden-xs'l>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                "autoWidth": true,
                "searching": true,
                "bPaginate": true,
                "info": true,
                "preDrawCallback": function () {
                    if (!responsiveHelper_dt_search_gl_item) {
                        responsiveHelper_dt_search_gl_item = new ResponsiveDatatablesHelper($('#dt_search_gl_item'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_dt_search_gl_item.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_dt_search_gl_item.respond();
                }
            });

            var SubBudgetClassOld = $("#SubBudgetClass").val();

            $("#SubBudgetClass").change(function () {

                var _data = dt_voucher_detail.DataTable().rows().data();
                if (_data.length>0) {
                    confirmSubBudgetClassChange(SubBudgetClassOld, $(this).val());
                } else {
                    updateSearchGITable($(this).val());
                }
                SubBudgetClassOld = $(this).val();
            });

            function updateSearchGITable(subBudgetClassList) {
                subBudgetClassList = subBudgetClassList.split(";");
                var subBudgetClass = subBudgetClassList[0].trim();
                var institutionCode = "00560000";
                var url = '@Url.Action("getfundbalance", "PaymentVoucher")';
                var fundBalanceParams = { "institutionCode": institutionCode, "subBudgetClass": subBudgetClass };

                $("#currency").text(subBudgetClassList[1].trim());
                $("#currency2").text(subBudgetClassList[1].trim());
                $.ajax({
                    type: "post",
                    url: url,
                    data: fundBalanceParams,
                    contenttype: "application/json; charset=utf-8",
                    datatype: "json",
                    success: function (response) {
                        //=== UPDATE SEARCH GI TABLE ====
                        data = response.data;
                        dt_search_gl_item.fnClearTable();
                        for (var i = 0; i < data.length; i++) {
                            dt_search_gl_item.fnAddData([i,
                               data[i]["GlAccount"].split("|").join("-"),
                               data[i]["GlAccountDesc"],
                               data[i]["FundBalance"],
                               data[i]["FundingRefNo"],
                               '<input type="number" placeholder="Amount" id="Id-' + i + '" onkeyup="amountChanged(' + i + ')"/>'
                            ]);
                        }
                    },
                    failure: function (errmsg) {
                        alert(errmsg);
                    }
                });
            }

            var TotalAmountOld = $("#total_voucher_amount").val();
            function clearVochaDetailsTable() {
                var _data = dt_voucher_detail.DataTable().rows().data();

                if (_data.length > 0) {
                    confirmTotalAmountChange(TotalAmountOld, $("#total_voucher_amount").val());
                }
                TotalAmountOld = $("#total_voucher_amount").val();
            }

            function resetVochaDetailsTable() {
                $("#total_amount").text("0.00");
                dt_voucher_detail.fnClearTable();
            }

            function SearchGl() {
                if (voucherSummaryFormValidation()) {
                    $('#glItemsModal').modal('show');
                    $('#total_voucher_amount2').val($('#total_voucher_amount').val());
                    computeTotalAmount();
                } else {
                    alert("Please Fill all the Voucher Summary Details");
                }
            }
            /////// ==== END OF SEARCH GL ==============

            //==== START OF ADD GL Items to Voucher Details ======
            function remove(array, val) {
                var found = array.indexOf(val);
                while (found !== -1) {
                    array.splice(found, 1);
                    found = array.indexOf(val);
                }
            }

            var form_data_status = [];
            var all_amounts = {};
            function amountChanged(i) {
                var data = dt_search_gl_item.DataTable().rows().data();
                var row = data.rows(i).data()[0]
                var original_amount = parseFloat(row[3]);
                var entered_amount = parseFloat($("#Id-" + i).val());
                all_amounts["Id-" + i] = $("#Id-" + i).val();
                var balance = original_amount - entered_amount;

                if (balance < 0) {
                    form_data_status.push(i);
                    $("#Id-" + i).css({ 'color': 'red' });
                } else {
                    $("#Id-" + i).css({ 'color': 'black' });
                    remove(form_data_status, i);
                    computeTotalAmount();
                }

            }


            function computeTotalAmount() {
                var total_amount = 0;
                var difference = 0;
                var amount = "";
                var data = dt_search_gl_item.DataTable().rows().data();
                var obj = [];
                for (var i = 0; i < data.length; i++) {
                    var amount = all_amounts["Id-" + i];
                    console.log("============== AMOUNT ==================");
                    console.log(amount);
                    if (amount == undefined) {
                        amount = "";
                    }
                    if (amount.trim()) {
                        total_amount = parseFloat(total_amount) + parseFloat(amount);
                        $("#total_line_amount").val(total_amount);
                    }
                }
                try{
                    difference = parseFloat($('#total_voucher_amount').val()) - parseFloat(total_amount);
                    $('#difference').val(difference);
                    if (difference < 0) {
                        $("#difference").css({ 'color': 'red' });
                    } else {
                        $("#difference").css({ 'color': 'black' });
                    }
                }catch(e){}
            }

            $("#btn_save_gl_items").click(function () {
                var total_amount = 0;
                var difference = 0;
                if (form_data_status.length == 0) {
                    var data = dt_search_gl_item.DataTable().rows().data();
                    var obj = [];
                    dt_voucher_detail.fnClearTable();
                    $("#total_amount").text("0.00");
                    for (var i = 0; i < data.length; i++) {

                        var amount = all_amounts["Id-" + i];
                        if (amount == undefined) {
                            amount = "";
                        }
                        if (amount.trim()) {
                            var row = data.rows(i).data()[0];
                            dt_voucher_detail.fnAddData([row[1], row[2], row[4], amount]);
                            total_amount = parseFloat(total_amount) + parseFloat(amount);
                            $("#total_amount").text(total_amount);
                        }
                    }

                    difference = parseFloat($('#total_voucher_amount').val()) - parseFloat(total_amount);
                    if(difference<0){
                        alert("Difference Cannot be negative..");
                        dt_voucher_detail.fnClearTable();
                    } else {
                        $('#glItemsModal').modal('hide');
                    }
                } else {
                    alert("Please Fix Form Errors....");
                }


            });
            //==== END OF ADD GL Items to Voucher Details ======


            // =========== FORM SUBMISSION ==================

            $("#form_submision").click(function () {

                if($("#difference").val().trim() != "0"){
                    alert("Difference Must be Zero.");
                } else {
                    if (voucherSummaryFormValidation()) {
                        try {
                            var data = dt_basic.DataTable().rows().data();
                            var row = data.rows(0).data()[0];
                            var subBudgetClassList = $("#SubBudgetClass").val().split(";");
                            var subBudgetClass = subBudgetClassList[0].trim();
                            var exchangeRate = subBudgetClassList[2].trim();
                            var operationalCurrencyCode = subBudgetClassList[1].trim();
                            var baseAmount = parseFloat($("#total_voucher_amount").val()) * exchangeRate;


                            var voucherDetails = []
                            var voucherDetailsData = dt_voucher_detail.DataTable().rows().data();

                            for (var i = 0; i < voucherDetailsData.length; i++) {
                                var _row = voucherDetailsData.rows(i).data()[0];
                                var baseAmountDetail = parseFloat(_row[3]) * exchangeRate;
                                voucherDetails.push({
                                    "ExpenditureLineItem": _row[0].split("-").join("|"),
                                    "ItemDescription": _row[1],
                                    "FundingReference": _row[2],
                                    "ExpenseAmount": _row[3],
                                    "baseAmountDetail": baseAmountDetail,
                                })
                            }


                            var form_data = {
                                "PayeeDetailId": row[0],
                                "PayeeName": row[2],
                                "PayeeCode": row[3],
                                "BankName": row[4],
                                "PayeeType": row[5],
                                "BankAccountNo": row[6],
                                "Address": row[7],
                                "PaymentDescription": $("#PaymentDescription").val(),
                                "InvoiceNo": $("#InvoiceNo").val(),
                                "ControlNumber": $("#ControlNumber").val(),
                                "Comments": $("#Comments").val(),
                                "SubBudgetClass": subBudgetClass,
                                "OperationalAmount": $("#total_voucher_amount").val(),
                                "BaseAmount": baseAmount,
                                "ExchangeRate": exchangeRate,
                                "OperationalCurrencyCode":operationalCurrencyCode,
                                "ApplyDate": $("#ApplyDate").val(),
                                "InvoiceDate": $("#InvoiceDate").val(),
                                "PaymentMethod": $("#PaymentMethod").val(),
                                "VoucherDetails": voucherDetails
                            }


                            if (voucherDetails.length == 0) {
                                alert("No Voucher Details Provided")
                            } else {
                                var url = '@Url.Action("CreateVoucher", "PaymentVoucher")';
                                $.ajax({
                                    type: "post",
                                    url: url,
                                    data: form_data,
                                    contenttype: "application/json; charset=utf-8",
                                    datatype: "json",
                                    success: function (response) {

                                        if (response == "Success") {
                                            alert("Payment Voucher Saved Successfully!");
                                            window.location.reload();
                                        }
                                        else {
                                            alert(response);
                                        }

                                    },
                                    failure: function (errmsg) {
                                        alert(errmsg);
                                    }
                                });

                            }
                        } catch (e) {
                            alert("Error submitting Voucher Entry. Please consult system administrator!");
                        }
                    } else {
                        alert("Please Fill all the Voucher Summary Details");
                    }
                }

            });

            var controlNumberIsProvided = false;
            function voucherSummaryFormValidation() {
                if (controlNumberIsProvided) {
                    if ($("#ControlNumber").val().trim() == "") {
                        return false
                    }
                }
                if ($("#PaymentDescription").val().trim() == "" ||
                     $("#Comments").val().trim() == "" ||
                     $("#total_voucher_amount").val().trim() == 0||
                     $("#ApplyDate").val().trim() == "" ||
                     $("#InvoiceDate").val().trim() == "" ||
                     $("#SubBudgetClass").val().trim() == "Please choose sub budget class"
                    ) {
                    return false
                }
                return true
            }

            $("#contolNumberCheckbox").change(function () {
                $('#ControlNumber').toggle(this.checked);
                controlNumberIsProvided = this.checked;
            });
            $('#ControlNumber').toggle(false);


            function confirmTotalAmountChange(oldVal, newVal) {
                swal({
                    title: 'Change Total Amount?',
                    text: "All the GL Items will be Cleared",
                    icon: "warning",
                    buttons: [
                      'Cancel',
                      'Proceed'
                    ],
                    dangerMode: true,
                }).then(function (isConfirm) {
                    if (isConfirm) {
                        $("#total_voucher_amount").val(newVal);
                        dt_voucher_detail.fnClearTable();
                        $("#total_amount").load(location.href + " #total_amount");
                        $("#total_line_amount").val(0);

                        all_amounts = {};
                        updateSearchGITable($("#SubBudgetClass").val());
                        computeTotalAmount();

                        swal({
                            title: 'Success',
                            icon: 'success'
                        });
                    } else {
                        $("#total_voucher_amount").val(oldVal);
                        TotalAmountOld = oldVal;
                        swal("Cancelled", "No change was made", "error");
                    }
                });

            }
            function confirmSubBudgetClassChange(oldVal, newVal) {
                swal({
                    title: 'Change Sub Budget Class?',
                    text: "All the GL Items will be Cleared",
                    icon: "warning",
                    buttons: [
                      'Cancel',
                      'Proceed'
                    ],
                    dangerMode: true,
                }).then(function (isConfirm) {
                    if (isConfirm) {
                        dt_voucher_detail.fnClearTable();
                        $("#total_amount").load(location.href + " #total_amount");
                        $("#total_line_amount").val(0);
                        all_amounts = {};
                        updateSearchGITable(newVal);
                        computeTotalAmount();
                        swal({
                            title: 'Success',
                            icon: 'success'
                        });
                    } else {
                        $("#SubBudgetClass").val(oldVal).prop('selected', true);
                        SubBudgetClassOld = $("#SubBudgetClass").val();
                        swal("Cancelled", "No change was made", "error");
                    }
                });

            }
</script>*@ 

}


