@model IFMIS.Areas.IFMISTZ.Models.PurchaseSummaryVM
@{
    ViewBag.Title = "Purchase Order Items";
}

<style type="text/css">
    body {
        margin-top: 40px;
    }

    .stepwizard-step p {
        margin-top: 10px;
    }

    .stepwizard-row {
        display: table-row;
    }

    .stepwizard {
        display: table;
        width: 100%;
        position: relative;
    }

    .stepwizard-step button[disabled] {
        opacity: 1 !important;
        filter: alpha(opacity=100) !important;
    }

    .stepwizard-row:before {
        top: 14px;
        bottom: 0;
        position: absolute;
        content: " ";
        width: 100%;
        height: 1px;
        background-color: #ccc;
        z-order: 0;
    }

    .stepwizard-step {
        display: table-cell;
        text-align: center;
        position: relative;
    }

    .loadingImg {
        display: none;
    }

    .search-btn {
        border: 1px solid #ccc;
        border-radius: 4px;
        padding: 5px;
        padding-right: 10px;
    }

    .search-container {
        display: inline-flex;
        flex: 1 1 300px;
        position: relative;
        border: 1px solid #ccc;
        border-radius: 5px;
        overflow: hidden;
        padding-left: 10px;
    }

    .name-input-container {
        display: inline-flex;
        flex: 1 1 300px;
        position: relative;
        overflow: hidden;
    }

    .search-icon {
        padding: 0.5rem;
    }

    .search-button {
        background: #538AC5;
        border: 0;
        color: white;
        padding: 8px;
        border-radius: 0;
    }

    input[type=number] {
        padding: 8px;
        border: 1px solid #ccc;
        width: 205px;
    }

    input[type=text] {
        padding: 5px;
        border: 1px solid #ccc;
    }

    input[type=search] {
        padding: 4px;
        border: hidden;
        border-radius: 4px;
    }

    textarea {
        border: 1px solid #ccc;
    }

    select {
        padding: 8px;
        border: 1px solid #ccc;
        resize: vertical;
        width: 230px;
    }

    .action-btn {
        width: 100px;
        color: white;
    }

    .form-label {
        text-align: right;
    }

    td {
        padding: 5px;
    }

    .info-box {
        padding: 10px;
        background-color: #ECF3F8;
        text-align: center;
        border: 1px solid #ccc;
        border-radius: 5px;
    }
</style>

<div id="divLoader"></div>
<div id="content" style="margin: 5px; padding-top: 30px">

    <div class="row">


    </div>


    <!-- widget grid -->
    <section id="widget-grid" class="">


        <!-- START ROW -->

        <div class="row">

            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">

                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">
                    <br />
                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2>Assigning GL Account(s)</h2>

                    </header>


                    <div>
                        <div class="widget-body " style="padding-top:10px;width:100%">


                            <div class="row">
                                <div class="col-sm-4 col-md-4 col-lg-4"><strong>Purchase Order Number&nbsp;:</strong>&nbsp;@Html.DisplayFor(model => model.PurchaseOrderNo)</div>
                                <div class="col-sm-4 col-md-4 col-lg-4"><strong>Operation Amount&nbsp;:</strong>&nbsp;@Html.DisplayFor(model => model.PurchaseOrderAmount) @Html.DisplayFor(model => model.OperationalCurrency)</div>
                                <div class="col-sm-4 col-md-4 col-lg-4"><strong>SBC&nbsp;:</strong>&nbsp;@Html.DisplayFor(model => model.SubBudgetClass)</div>
                            </div>
                            <div class="row">
                                <div class="col-sm-4 col-md-4 col-lg-4"><strong>Available Fund Balance&nbsp;:</strong>&nbsp;@Html.DisplayFor(model => model.AvailableFundBalance) @Html.DisplayFor(model => model.OperationalCurrency)</div>
                            </div>
                            <hr />
                            @if (Model.IsFundBalanceAvailable)
                            {

                                using (Html.BeginForm(null, null, FormMethod.Post, null))
                                {
                                    @Html.HiddenFor(model => model.PurchaseOrderId)
                                    <div class="form-horizontal">

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.ItemClassificationId, htmlAttributes: new { @class = "control-label   col-md-2" })
                                            <div class="col-md-4">
                                                @Html.DropDownListFor(model => model.ItemClassificationId, Model.ItemClassificationsList, "Select ", new { @class = "form-control select2" })
                                                @Html.ValidationMessageFor(model => model.ItemClassificationId, "", new { @class = "text-danger" })
                                            </div>
                                        </div>


                                    </div>
                                }
                            }
                            else
                            {
                                <div class="row">
                                    <div class="col-lg-12 col-sm-12 col-xs-12">

                                        <div class="alert alert-block alert-info">
                                            <h4 class="alert-heading">Insufficient Fund Balance to SBC @Html.DisplayFor(model => model.SubBudgetClass) InstitutionCode @Html.DisplayFor(model => model.InstitutionCode) </h4>
                                            <p>
                                                Available amount is <strong>@Html.DisplayFor(model => model.AvailableFundBalance) @Html.DisplayFor(model => model.OperationalCurrency)</strong> but required amount is <strong>@Html.DisplayFor(model => model.RequiredAmount) @Html.DisplayFor(model => model.OperationalCurrency)</strong>.
                                            </p>
                                        </div>
                                    </div>
                                </div>
                            }
                            <div id="purchase-items-list"></div>
                            @if (Model.PurchaseOrderCoas.Count() > 0)
                            {
                                var i = 0;
                                <div class="accordion-body">
                                    <table class="table table-hover">
                                        <thead>
                                            <tr>
                                                <th scope="col" style="text-align: center">#</th>
                                                <th scope="col" style="text-align: left">Item Description</th>
                                                <th scope="col">Expenditure Line Item</th>
                                                <th scope="col" style="text-align: left">Funding Reference</th>
                                                <th scope="col" style="text-align: left">Item Class</th>
                                                <th scope="col" style="text-align: right">Amount</th>
                                                <th scope="col" style="text-align: center">Action</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var item in Model.PurchaseOrderCoas)
                                            {
                                                i++;
                                                <tr>
                                                    <td align="center">@i</td>
                                                    <td>@Html.DisplayFor(modelItem => item.GlAccount)</td>
                                                    <td>@Html.DisplayFor(modelItem => item.GlAccountDesc)</td>
                                                    <td>@Html.DisplayFor(modelItem => item.FundingReference)</td>
                                                    <td>@Html.DisplayFor(modelItem => item.ItemClass)</td>
                                                    <td align="right">@Html.DisplayFor(modelItem => item.OperationalAmount)</td>
                                                    <td style="text-align: center"><div class="btn-group"><button type="button" class="btn  btn-info btn-xs dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><span class="caret"></span><span class="sr-only">Toggle Dropdown</span></button> <ul class="dropdown-menu"> <li><a href="#" onclick="deselectGL(@item.PurchaseOrderCoaId)"><i class="fa fa-edit"></i>Deselect</a></li></ul></div></td>
                                                </tr>


                                            }
                                            <tr><td align="right" colspan="5"><strong>Total</strong></td><td align="right"><strong>@Convert.ToDecimal(Model.PurchaseOrderCoas.Select(a => a.OperationalAmount).DefaultIfEmpty(0).Sum()).ToString("#,##0.00/=")</strong></td><td></td></tr>
                                        </tbody>
                                    </table>
                                </div>
                            }
                            <div class="form-actions">
                                <div class="row">
                                    <div class="col-md-offset-1">
                                        <a href="@Url.Action("PurchaseOrders","Procurement")" style="margin-right:5px" class="btn btn-info pull-left"><i class="glyphicon glyphicon-arrow-left"></i> Back  </a>
                                        <a class="btn btn-info" style="float:left;margin-left:5px" onclick="window.history.back()">
                                            <i class="fa fa-save"></i>Finish
                                        </a>

                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>


                </div>
            </article>

        </div>
    </section>

</div>

@section pagespecific {
    <!-- PAGE RELATED PLUGIN(S) -->

    <script type="text/javascript">

            $(document).ready(function () {
                $("#ItemClassificationId").change(function () {
                    var itemClassId = $(this).val();
                    var id = $("#PurchaseOrderId").val();
                    purchaseItemsList(id, itemClassId);
                });


            });


        function purchaseItemsList(id, itemClassId) {
                  var url = '@Url.Action("GetPurchaseItems", "Procurement")';
            $("#purchase-items-list").load(url, { id: id, itemClassId: itemClassId }, function (response, status, xhr) {
                if (status == "error") {
                    $("#purchase-items-list").html("Error on displaying puchase items list, contact system support.");
                }

            });

        };


    //CANCEL GL
        var deselectGL = function (id) {
            swal({
                title: 'Confirmation',
                text: "Do you what to remove this GL Account  ?",
                buttons: [
                  'No',
                  'Yes'
                ],
            }).then(function (isConfirm) {
                if (isConfirm) {
                    var url = '@Url.Action("DeselectGLAccount", "Procurement")';
                    $.ajax(
        {
            type: "POST",
            url: url,
            data: { id: id },
            success: function (response) {
                if (response == "Success") {
                     swal("Deleted  successfully!", { icon: "success" })
                         .then((value) => {
                             location.reload();
                        });
                }
                else {
                swal(response);
                }
            },
            error: function (xhr) {
                swal(error);
            },

        });
                } else {
                    swal("Cancelled", "No change was made");
                }
            });

        }


        //SHOW LOADER ICON
        $(document).ajaxStart(function () {
            $("#divLoader").show();
        });
        //HIDE LOADER ICON
        $(document).ajaxStop(function () {
            $("#divLoader").hide();
        });

    </script>
}












