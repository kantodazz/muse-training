@model IFMIS.Areas.IFMISTZ.Models.AmortizeRevenueVM

<div id="divLoader"></div>
<!-- MAIN CONTENT -->
<div id="content">

    <div class="row">
        @*<div class="col-xs-12 col-sm-9 col-md-9 col-lg-9">
                <h1 class="page-title txt-color-blueDark">

                    <!-- PAGE HEADER -->
                    <!--
                    <i class="fa-fw fa fa-pencil-square-o"></i>
                    Payments
                    <span>
                        >
                        Bills
                    </span>
                        -->
                </h1>
            </div>*@

        <div class="col-xs-12 col-sm-3 col-md-3 col-lg-3">
            <!-- Button trigger modal -->
            <!--<a data-toggle="modal" href="#myModal" class="btn btn-info btn-lg pull-right header-btn hidden-mobile"><i class="fa fa-circle-arrow-up fa-lg"></i> Launch form modal</a>-->
        </div>
    </div>

    <!--
    <div class="alert alert-block alert-info">
        <a class="close" data-dismiss="alert" href="#">×</a>
        <h4 class="alert-heading"><i class="fa fa-check-square-o"></i> Check validation!</h4>
        <p>
            You may also check the form validation by clicking on the form action button. Please try and see the results below!
        </p>
    </div>
        -->
    <!-- widget grid -->
    <section id="widget-grid" class="">


        <!-- START ROW -->

        <div class="row">

            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">

                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">
                    <!-- widget options:
                        usage: <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false">

                        data-widget-colorbutton="false"
                        data-widget-editbutton="false"
                        data-widget-togglebutton="false"
                        data-widget-deletebutton="false"
                        data-widget-fullscreenbutton="false"
                        data-widget-custombutton="false"
                        data-widget-collapsed="true"
                        data-widget-sortable="false"

                    -->
                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2> Amortize Revenue </h2>

                    </header>

                    <!-- widget div-->
                    <div>

                        <!-- widget edit box -->
                        <div class="jarviswidget-editbox">
                            <!-- This area used as dropdown edit box -->

                        </div>
                        <!-- end widget edit box -->
                        <!-- widget content -->
                        <div class="widget-body">
                            <form class="form-horizontal">
                                <div class="form-group">
                                    <div class="col-md-5">
                                        @Html.TextBoxFor(model => model.GFSCode, new { @class = "form-control" })
                                    </div>
                                    <div class="col-md-3">
                                        @Html.DropDownListFor(model => model.Currency, Model.Currencies, "Select Currency", new { @class = "form-control select2" })
                                    </div>
                                    @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-1" })
                                    <div class="col-md-3">
                                        <div class='input-group'>
                                            @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                            <span class="input-group-addon">
                                                <span id="lblOperationalCurrency" aria-hidden="true"></span>
                                            </span>
                                        </div>
                                        @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <hr />

                                <div class="alert alert-info" role="alert">
                                    GL Item(s) <span class="badge" id="txtGlItems">0</span>, Total Amount <span class="badge" id="txtTotalAmount">0</span>
                                </div>

                                <hr />
                                <div id="dummyPaymentDetailItems"></div>

                                <fieldset class="scheduler-border">
                                    <legend class="scheduler-border"><b>Add GL Item</b></legend>
                                    <div class="form-group">
                                        <label class="control-label col-md-2">GL Account</label>
                                        <div class="col-md-9">
                                            <input type="hidden" id="GlAccountDesc" />
                                            <input type="hidden" id="SubVote" />
                                            <input type="hidden" id="SubVoteDesc" />
                                            <input type="hidden" id="TR" />
                                            <input type="hidden" id="CostCentre" />
                                            <input type="hidden" id="CostCentreDesc" />
                                            <input type="hidden" id="Facility" />
                                            <input type="hidden" id="FacilityDesc" />
                                            <input type="hidden" id="GfsCode" />
                                            <input type="hidden" id="GfsCodeCategory" />
                                            <input type="hidden" id="GeographicalLocationDesc" />
                                            <input type="hidden" id="TrDesc" />
                                            <input type="hidden" id="ProjectDesc" />
                                            <input type="hidden" id="ServiceOutputDesc" />
                                            <input type="hidden" id="ActivityDesc" />
                                            <input type="hidden" id="FundTypeDesc" />
                                            <input type="hidden" id="CofogDesc" />
                                            <input type="hidden" id="FundingSourceDesc" />
                                            <input type="hidden" id="VoteDesc" />
                                            <input type="text" id="GlAccount" class="form-control" />
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <label class="control-label col-md-2" id="lblExpensedAmount">Expensed Amount</label>
                                        <div class="col-md-3">
                                            <input type="text" id="ExpensedAmount" class="form-control" />
                                        </div>
                                        <label class="control-label col-md-2" id="lblReturnedAmount">Returned Amount</label>
                                        <div class="col-md-3">
                                            <input type="text" id="ReturnedAmount" class="form-control" />
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="col-md-offset-2" style="padding-left: 13px">
                                            <button class="btn btn-info" type="button" style="float: left" id="btnAddGlItem">
                                                <i class="fa fa-plus"></i>
                                                Add GL Item
                                            </button>
                                        </div>
                                    </div>
                                    <div class="form-group" style="margin-top: 0px; margin-bottom: 0px">
                                        <div class="col-md-offset-2 col-md-7" id="divAddGlErrorMsg" style="display: none; color: darkred">
                                            <span>You can not continue to add GL items, operational amount is less than total expensed amount!</span>
                                        </div>
                                    </div>
                                </fieldset>

                                <div class="form-actions">
                                    <div class="row">
                                        <div class="col-md-offset-2 col-md-8">
                                            <button class="btn btn-info" type="button" style="float: left" id="btnSave">
                                                <i class="fa fa-save"></i>
                                                Save
                                            </button>
                                            <a href="@Url.Action("PendingDummyReceipts","DummyReceipts")" class="btn btn-info" style="float: left; margin-left: 5px">
                                                <i class="fa fa-arrow-left"></i>
                                                Back
                                            </a>
                                        </div>
                                    </div>
                                    <div class="form-group" style="margin-top: 0px; margin-bottom: 0px">
                                        <div class="col-md-offset-2 col-md-7" id="divSaveErrorMsg" style="display: none; color: darkred">
                                            <span style="float: left">In order to save, operational amount must be equal to total expensed amount!</span>
                                        </div>
                                    </div>
                                </div>

                                <div id="searchResults" style="margin-top: 20px; display: none"></div>
                            </form>
                        </div>
                        <!-- end widget content -->
                    </div>
                    <!-- end widget div -->

                </div>
                <!-- end widget -->

            </article>
            <!-- END COL -->

        </div>

        <!-- END ROW -->

    </section>
    <!-- end widget grid -->

</div>
<!-- END MAIN CONTENT -->

@section Scripts{
    <script>
        // DO NOT REMOVE : GLOBAL FUNCTIONS!

        $(document).ready(function () {

            /* // DOM Position key index //

            l - Length changing (dropdown)
            f - Filtering input (search)
            t - The Table! (datatable)
            i - Information (records)
            p - Pagination (paging)
            r - pRocessing
            < and > - div elements
            <"#id" and > - div with an id
            <"class" and > - div with a class
            <"#id.class" and > - div with an id and class

            Also see: http://legacy.datatables.net/usage/features
            */

            /* BASIC ;*/
            var responsiveHelper_dt_basic = undefined;
            var responsiveHelper_datatable_fixed_column = undefined;
            var responsiveHelper_datatable_col_reorder = undefined;
            var responsiveHelper_datatable_tabletools = undefined;

            var breakpointDefinition = {
                tablet: 1024,
                phone: 480
            };

            $('#dt_basic').dataTable({
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-12 hidden-xs'l>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_dt_basic) {
                        responsiveHelper_dt_basic = new ResponsiveDatatablesHelper($('#dt_basic'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_dt_basic.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_dt_basic.respond();
                }
            });

            /* END BASIC */

            /* COLUMN FILTER  */
            var otable = $('#datatable_fixed_column').DataTable({
                //"bFilter": false,
                //"bInfo": false,
                //"bLengthChange": false
                //"bAutoWidth": false,
                //"bPaginate": false,
                //"bStateSave": true // saves sort state using localStorage
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6 hidden-xs'f><'col-sm-6 col-xs-12 hidden-xs'<'toolbar'>>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_fixed_column) {
                        responsiveHelper_datatable_fixed_column = new ResponsiveDatatablesHelper($('#datatable_fixed_column'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_datatable_fixed_column.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_datatable_fixed_column.respond();
                }

            });

            // custom toolbar
            $("div.toolbar").html('<div class="text-right"><img src="/Content/img/logo.png" alt="SmartAdmin" style="width: 111px; margin-top: 3px; margin-right: 10px;"></div>');

            // Apply the filter
            $("#datatable_fixed_column thead th input[type=text]").on('keyup change', function () {

                otable
                    .column($(this).parent().index() + ':visible')
                    .search(this.value)
                    .draw();

            });
            /* END COLUMN FILTER */

            /* COLUMN SHOW - HIDE */
            $('#datatable_col_reorder').dataTable({
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'C>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_col_reorder) {
                        responsiveHelper_datatable_col_reorder = new ResponsiveDatatablesHelper($('#datatable_col_reorder'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_datatable_col_reorder.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_datatable_col_reorder.respond();
                }
            });

            /* END COLUMN SHOW - HIDE */

            /* TABLETOOLS */
            $('#datatable_tabletools').dataTable({

                // Tabletools options:
                //   https://datatables.net/extensions/tabletools/button_options
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'T>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
                "oTableTools": {
                    "aButtons": [
                        "copy",
                        "csv",
                        "xls",
                        {
                            "sExtends": "pdf",
                            "sTitle": "SmartAdmin_PDF",
                            "sPdfMessage": "SmartAdmin PDF Export",
                            "sPdfSize": "letter"
                        },
                        {
                            "sExtends": "print",
                            "sMessage": "Generated by SmartAdmin <i>(press Esc to close)</i>"
                        }
                    ],
                    "sSwfPath": "/Scripts/plugin/datatables/swf/copy_csv_xls_pdf.swf"
                },
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_tabletools) {
                        responsiveHelper_datatable_tabletools = new ResponsiveDatatablesHelper($('#datatable_tabletools'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_datatable_tabletools.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_datatable_tabletools.respond();
                }
            });

            /* END TABLETOOLS */

            $("#GFSCode").select2({
                minimumInputLength: 7,  // minimumInputLength for sending ajax request to server
                width: 'resolve',   // to adjust proper width of select2 wrapped elements
                placeholder: 'Search GFS Code',
                allowClear: false,
                ajax: {
                    url: '@Url.Action("GetGfsCodes", "CoaSegments")', // Controller - Select2Demo and Action -AccessRemoteData
                    type: "GET",
                    dataType: 'json',
                    data: function (term) {
                        return {
                            term: term
                        };
                    },
                    results: function (data, page) {
                        return { results: data.gfsCodes }; // data.CountryList returning json data from Controlle
                    }
                }
            });

            $('#Amount').autoNumeric('init');

            $("#GlAccount").select2({
                            minimumInputLength: 2,  // minimumInputLength for sending ajax request to server
                            width: 'resolve',   // to adjust proper width of select2 wrapped elements
                            placeholder: 'Search GL Account',
                            allowClear: false,
                            ajax: {
                                url: '@Url.Action("GetCoas", "Coas")', // Controller - Select2Demo and Action -AccessRemoteData
                                type: "GET",
                                dataType: 'json',
                                data: function (term) {
                                    return {
                                        subBudgetClass: $("#SubBudgetClass").val(),
                                        term: term
                                    };
                                },
                                results: function (data, page) {
                                    return { results: data.coas }; // data.CountryList returning json data from Controlle
                                }
                            }
                        });

            // This for dynamic table. Don't know why on load but it works
            var dummyPaymentDetails = [];

            $("#btnAddGlItem").click(function () {

                $("#divLoader").show();
                if ($("#GlAccount").val() == "" || $("#ExpensedAmount").val() == "" || $("#ReturnedAmount").val() == "") {
                    $("#divLoader").hide();
                    swal("Invalid data submission, contact system support.");
                    return false;
                }

                dummyPaymentDetails.push({
                    GlAccount: $('#GlAccount').val(),
                    GlAccountDesc: $('#GlAccountDesc').val(),
                    SubVote: $('#SubVote').val(),
                    SubVoteDesc: $('#SubVoteDesc').val(),
                    TR: $('#TR').val(),
                    CostCentre: $('#CostCentre').val(),
                    CostCentreDesc: $('#CostCentreDesc').val(),
                    Facility: $('#Facility').val(),
                    FacilityDesc: $('#FacilityDesc').val(),
                    GfsCode: $('#GfsCode').val(),
                    GfsCodeCategory: $('#GfsCodeCategory').val(),
                    GeographicalLocationDesc: $('#GeographicalLocationDesc').val(),
                    TrDesc: $('#TrDesc').val(),
                    ProjectDesc: $('#ProjectDesc').val(),
                    ServiceOutputDesc: $('#ServiceOutputDesc').val(),
                    ActivityDesc: $('#ActivityDesc').val(),
                    FundTypeDesc: $('#FundTypeDesc').val(),
                    CofogDesc: $('#CofogDesc').val(),
                    FundingSourceDesc: $('#FundingSourceDesc').val(),
                    VoteDesc: $('#VoteDesc').val(),
                    ExpensedAmount: $('#ExpensedAmount').val(),
                    ReturnedAmount: $('#ReturnedAmount').val(),
                });

                //Clear fields
                $("#GlAccount").select2("val", "");
                $('#GlAccountDesc').val("");
                $('#TR').val("");
                $('#CostCentre').val("");
                $('#CostCentreDesc').val("");
                $('#Facility').val("");
                $('#FacilityDesc').val("");
                $('#GfsCode').val("");
                $('#GfsCodeCategory').val("");
                $('#GeographicalLocationDesc').val("");
                $('#TrDesc').val("");
                $('#ProjectDesc').val("");
                $('#ServiceOutputDesc').val("");
                $('#ActivityDesc').val("");
                $('#FundTypeDesc').val("");
                $('#CofogDesc').val("");
                $('#FundingSourceDesc').val("");
                $('#VoteDesc').val("");
                $("#ExpensedAmount").val("");
                $('#ReturnedAmount').val("");

                GeneratePaymentDetailsTable();

                //function for show added items in table
                function GeneratePaymentDetailsTable() {
                    if (dummyPaymentDetails.length > 0) {
                        var $table = $('<table class="table table-condensed table-stripped table-hover table-bordered"/>');
                        $table.append('<thead>' +
                            '<tr><th colspan="5">GL Items</th>' +
                            '<tr><th>#</th><th style="text-align: center">GL Account</th><th style="text-align: center">Expensed Amount</th><th style="text-align: center">Returned Amount</th><th style="text-align: center">Action</th></tr>' +
                            '</thead>');
                        var $tbody = $('<tbody/>');
                        var totalExpensedAmount = 0;
                        var totalReturnedAmount = 0;
                        var j = 0;
                        $.each(dummyPaymentDetails, function (i, val) {
                            ++j;
                            var expensedAmount = val.ExpensedAmount.replace(/,/g, "");
                            var returnedAmount = val.ReturnedAmount.replace(/,/g, "");
                            totalExpensedAmount = parseFloat(totalExpensedAmount) + parseFloat(expensedAmount);
                            totalReturnedAmount = parseFloat(totalReturnedAmount) + parseFloat(returnedAmount);
                            var $row = $('<tr/>');
                            $row.append($('<td/>').html(j));
                            $row.append($('<td/>').html(val.GlAccount));
                            $row.append($('<td style="text-align: right"/>').html(val.ExpensedAmount));
                            $row.append($('<td style="text-align: right"/>').html(val.ReturnedAmount));
                            //$row.append($('<td style="text-align: center"/>').html('<a href="#"><span class="glyphicon glyphicon-trash" aria-hidden="true"></span></a>'));
                            var $remove = $('<a href="#">Remove</a>');
                            $remove.click(function (e) {
                                //debugger
                                e.preventDefault();
                                dummyPaymentDetails.splice(i, 1);
                                GeneratePaymentDetailsTable();
                            });
                            $row.append($('<td/>').html($remove));
                            $tbody.append($row);
                        });
                        var $row1 = $('<tr/>');
                        $row1.append($('<td colspan="2" style="text-align: center"/>').html('<b>Total</b>'));
                        $row1.append($('<td id="totalExpensedAmount" style="text-align: right"/>').html(totalExpensedAmount));
                        $row1.append($('<td id="totalReturnedAmount" style="text-align: right"/>').html(totalReturnedAmount));
                        $row1.append($('<td/>').html(''));
                        $tbody.append($row1);
                        $table.append($tbody);
                        $('#dummyPaymentDetailItems').html($table);
                        $('#totalExpensedAmount').autoNumeric('init');
                        $('#totalReturnedAmount').autoNumeric('init');
                        $('#txtGlItems').html(numeral(dummyPaymentDetails.length).format("0,0"));
                        $('#txtTotalAmount').html(numeral(totalExpensedAmount).format("0,0.00"));
                        var operationalAmount = $("#OperationalAmount").val().replace(/,/g, "") == "" ? 0 : parseFloat($("#OperationalAmount").val().replace(/,/g, ""));
                        if (operationalAmount < totalReturnedAmount.toFixed(2)) {
                            $("#btnAddGlItem").attr("disabled", true);
                            $("#divAddGlErrorMsg").show();
                        } else {
                            $("#btnAddGlItem").attr("disabled", false);
                            $("#divAddGlErrorMsg").hide();
                        }
                        if (operationalAmount != totalReturnedAmount.toFixed(2)) {
                            $("#btnSave").attr("disabled", true);
                            $("#divSaveErrorMsg").show();
                        } else {
                            $("#btnSave").attr("disabled", false);
                            $("#divSaveErrorMsg").hide();
                        }
                    } else {
                        $('#dummyPaymentDetailItems').html('');
                        $("#btnSave").attr("disabled", false);
                        $("#btnAddGlItem").attr("disabled", false);
                        $("#divAddGlErrorMsg").hide();
                        $("#divSaveErrorMsg").hide();
                    }
                }

                $("#divLoader").hide();
            });

            $("#btnSave").click(function () {

                $('#btnSave').prop("disabled", true);
                $("#divLoader").show();

                if (!$("#dummyPaymentForm").valid()) {
                    $('#btnSave').prop("disabled", false);
                    $("#divLoader").hide();
                    return false;
                }

                if (dummyPaymentDetails.length == 0) {
                    swal({
                        text: "Please add atleast one GL item in order to save",
                        icon: "warning",
                        button: "OK",
                    });

                    $('#btnSave').prop("disabled", false);
                    $("#divLoader").hide();
                    return false;
                }

                var token = $("[name='__RequestVerificationToken']").val();
                var data = {
                    __RequestVerificationToken: token,
                    BankStatementDetailId: $('#BankStatementDetailId').val().trim(),
                    ReferenceNo: $('#ReferenceNo').val().trim(),
                    OperationalAmount: $('#OperationalAmount').val().trim(),
                    OperationalCurrency: $("#OperationalCurrency").val().trim(),
                    ReceivingBankName: $('#ReceivingBankName').val().trim(),
                    ReceivingBankBic: $('#ReceivingBankBic').val().trim(),
                    ReceivingBankAccountNo: $('#ReceivingBankAccountNo').val().trim(),
                    ReceivingBankAccountName: $('#ReceivingBankAccountName').val().trim(),
                    ReceiptDate: $('#ReceiptDate').val(),
                    DocumentNo: $('#DocumentNo').val(),
                    CustomerName: $('#CustomerName').val(),
                    ReceiptType: $('#ReceiptType').val(),
                    FundType: $('#FundType').val(),
                    SubBudgetClass: $('#SubBudgetClass').val(),
                    SubBudgetClassDesc: $('#SubBudgetClassDesc').val(),
                    PvId: $('#PvId').val(),
                    PvNo: $('#PvNo').val(),
                    Remarks: $('#Remarks').val().trim(),
                    DrGlAccount: $('#DrGlAccount').val(),
                    DrGlAccountDesc: $('#DrGlAccountDesc').val(),
                    StPaymentFlag: $('#StPaymentFlag').prop("checked"),
                    ParentInstitutionCode: $('#ParentInstitutionCode').val(),
                    ParentInstitutionName: $('#ParentInstitutionName').val(),
                    SubWarrantCode: $('#SubWarrantCode').val(),
                    SubWarrantDescription: $('#SubWarrantDescription').val(),
                    ApplyDate: $('#ApplyDate').val(),
                    ReceiptDetails: dummyPaymentDetails
                }

                var url = '@Url.Action("CreateDummyReceipt", "DummyReceipts")';
                $.ajax({
                    url: url,
                    type: "POST",
                    //data: JSON.stringify(data),
                    data: data,
                    dataType: "JSON",
                    //contentType: "application/json",
                    contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                    success: function (response) {
                        //check is successfully save to database
                        if (response == "Success") {
                            //will send status from server side
                            swal({
                                text: "Receipt successfully saved.",
                                icon: "success",
                                button: "OK",
                            }).then(function () {
                                window.location = '@Url.Action("PendingDummyReceipts", "DummyReceipts")';
                            });
                        }
                        else {
                            swal({
                                text: response,
                                icon: "warning",
                                button: "OK",
                            })
                        }
                    },
                    error: function () {
                        swal({
                            text: "Error. Please try again..",
                            icon: "error",
                            button: "OK",
                        })
                    },
                    complete: function () {
                        $('#btnSave').prop("disabled", false);
                        $("#divLoader").hide();
                    }
                });
            });

            // End of dynamic table
        });

        $("#Currency").on("change", function () {

            $("#divLoader").show();
            var url = '@Url.Action("GetAmortizationAmount", "GepgPmtNotfInfoes")';
            var gfsCode = $("#GFSCode").val();
            var currency = $("#Currency").val();

            $.ajax({
                type: "get",
                url: url,
                data: { gfsCode: gfsCode, currency: currency },
                success: function (response) {
                    $("#lblOperationalCurrency").text(response.Currency);
                    $("#Amount").val(response.Amount);
                },
                error: function () {
                    swal({
                        text: "An error occurred while processing your request, try again/ contact system support",
                        icon: "error",
                        button: "OK",
                    });
                },
                complete: function () {
                    $("#divLoader").hide();
                }
            });
            });
    </script>
}
