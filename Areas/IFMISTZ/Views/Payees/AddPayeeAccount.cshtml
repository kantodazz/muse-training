
@model IFMIS.Areas.IFMISTZ.Models.AddPayeeAccountVM

<div id="content" style="margin: 5px; padding-top: 30px">
    <div class="row">
        <div class="col-xs-12 col-sm-3 col-md-3 col-lg-3">
        </div>
    </div>
    <section id="widget-grid" style="margin-top: 10px;">
        <div class="row">
            <article class="col-sm-12 col-md-12 col-lg-12">
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">
                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2> Add Bank Information </h2>
                    </header>
                    <div>
                        <div class="jarviswidget-editbox">
                        </div>
                        <div class="widget-body">
                            <form method="post" class="form-horizontal" enctype="multipart/form-data">
                                @Html.AntiForgeryToken()
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                @Html.HiddenFor(model => model.PayeeId)

                                <div style="display: flex; justify-content: space-evenly; p">
                                    <div>
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.PaymentChannel, "Payment Channel", htmlAttributes: new { @class = "control-label col-md-4" })
                                            <div class="col-md-8">
                                                @Html.DropDownListFor(model => model.PaymentChannel, new SelectList(new[] {
                                               new { Value = "BANK ACCOUNT", Text = "Bank Account" },
                                               new { Value = "MOBILE MONEY", Text = "Mobile Money" }}, "Value", "Text"),
                                               new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.PaymentChannel, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.HiddenFor(model => model.Bankid)
                                            <div class="bank">
                                                @Html.LabelFor(model => model.Bankid, "Bank Name", htmlAttributes: new { @class = "control-label col-md-4" })
                                                <div class="col-md-8">
                                                    @Html.DropDownList("Bankid1", new SelectList(ViewBag.Banks, "Bankid", "BankName"), "---select---", new { @class = "form-control" })
                                                    @Html.ValidationMessageFor(model => model.Bankid, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="mobile">
                                                @Html.LabelFor(model => model.Bankid, "Mobile Operator", htmlAttributes: new { @class = "control-label col-md-4" })
                                                <div class="col-md-8">
                                                    @Html.DropDownList("Bankid2", new SelectList(ViewBag.MobileOperator, "Id", "OperatorName"), "---select---", new { @class = "form-control" })
                                                    @Html.ValidationMessageFor(model => model.Bankid, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.AccountNumber, htmlAttributes: new { @class = "control-label col-md-4" })
                                            <div class="col-md-8">
                                                @Html.EditorFor(model => model.AccountNumber, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.AccountNumber, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.AccountName, "Account Name", htmlAttributes: new { @class = "control-label col-md-4" })
                                            <div class="col-md-8">
                                                @Html.EditorFor(model => model.AccountName, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.AccountName, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.CurrencyCode, "Currency", htmlAttributes: new { @class = "control-label col-md-4" })
                                            <div class="col-md-8">
                                                @Html.DropDownList("CurrencyCode", new SelectList(ViewBag.CurrencyList, "CurrencyCode", "CurrencyCodeCurrencyName"), "---select---", new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.CurrencyCode, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.RequireControlNum, "Require Control Number?", htmlAttributes: new { @class = "control-label col-md-4" })
                                            <div class="col-md-8">
                                                <select class="form-control" name="RequireControlNum" id="RequireControlNum">
                                                    <option selected="selected" value="">---Select---</option>
                                                    <option value="true"> Yes</option>
                                                    <option value="false"> No</option>
                                                </select>
                                                @*@Html.EditorFor(model => model.RequireControlNum, new { htmlAttributes = new { @class = "form-control" } })*@
                                                @Html.ValidationMessageFor(model => model.RequireControlNum, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group forex">
                                            @Html.LabelFor(model => model.IBAN, "IBAN (Option)", htmlAttributes: new { @class = "control-label col-md-4" })
                                            <div class="col-md-8">
                                                @Html.EditorFor(model => model.IBAN, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.IBAN, "", new { @class = "text-danger" })
                                            </div>
                                        </div>


                                        <div class="form-group">
                                            @Html.LabelFor(model => model.FileName, "Attachment", htmlAttributes: new { @class = "control-label col-md-4" })
                                            <div class="col-md-8">
                                                @*<div class="col-md-offset-2 col-md-3">*@
                                                @Html.TextBoxFor(model => model.FileName, new { type = "file", @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.FileName, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>

                                    <div>
                                        <div class="form-group forex">
                                            @Html.LabelFor(model => model.SortCode, "SortCode (Optional)", htmlAttributes: new { @class = "control-label col-md-4" })
                                            <div class="col-md-8">
                                                @Html.EditorFor(model => model.SortCode, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.SortCode, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group forex">
                                            @Html.LabelFor(model => model.BranchCode, "BranchCode (Optional)", htmlAttributes: new { @class = "control-label col-md-4" })
                                            <div class="col-md-8">
                                                @Html.EditorFor(model => model.BranchCode, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.BranchCode, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group forex">
                                            @Html.LabelFor(model => model.FedWire, "FedWire (Optional)", htmlAttributes: new { @class = "control-label col-md-4" })
                                            <div class="col-md-8">
                                                @Html.EditorFor(model => model.FedWire, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.FedWire, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group forex">
                                            @Html.LabelFor(model => model.BranchCode, "RoutingNo (Optional)", htmlAttributes: new { @class = "control-label col-md-4" })
                                            <div class="col-md-8">
                                                @Html.EditorFor(model => model.RoutingNo, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.RoutingNo, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group forex">
                                            @Html.LabelFor(model => model.IntermediaryBankBic, "Intermediary BankBIC/SWIFT (Optional)", htmlAttributes: new { @class = "control-label col-md-4" })
                                            <div class="col-md-8">
                                                @Html.EditorFor(model => model.IntermediaryBankBic, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.IntermediaryBankBic, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group forex">
                                            @Html.LabelFor(model => model.IntermediaryBankName, "IntermediaryBankName (Optional)", htmlAttributes: new { @class = "control-label col-md-4" })
                                            <div class="col-md-8">
                                                @Html.EditorFor(model => model.IntermediaryBankName, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.IntermediaryBankName, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="form-actions">
                                    <div class="row">
                                        <div class="col-md-12">
                                            <button class="btn btn-info" type="submit" style="float: left">
                                                <i class="fa fa-save"></i>
                                                Save
                                            </button>
                                            <a href="@Url.Action("PayeeAccountList","Payees")" class="btn btn-info" style="float: left; margin-left: 5px">
                                                <i class="fa fa-arrow-left"></i>
                                                Back
                                            </a>
                                        </div>
                                    </div>
                                </div>
                            </form>

                        </div>
                        <!-- end widget content -->
                    </div>
                    <!-- end widget div -->

                </div>
                <!-- end widget -->
            </article>
            <!-- END COL -->
        </div>

        <!-- END ROW -->
    </section>
    <!-- end widget grid -->
</div>
<!-- END MAIN CONTENT -->
@section Scripts{

    <script>
        $(".forex").toggle(false);

        $("#CurrencyCode").change(function () {
            if (this.value === "TZS" || !this.value) {
                $(".forex").toggle(false);
            } else {
                $(".forex").toggle(true);
            }
        })


        $("#PaymentChannel").change(function () {
            console.log(this.value)
            if (this.value === "BANK ACCOUNT") {
                $("label[for='AccountNumber']").text("Account Number");
                $(".mobile").toggle(false);
                $(".bank").toggle(true);
            } else {
                $("label[for='AccountNumber']").text("Payment Mobile Number");
                $(".mobile").toggle(true);
                $(".bank").toggle(false);
            }
        });

        $("#Bankid1").change(function () {
            $("#Bankid").val(this.value)
        });

        $("#Bankid2").change(function () {
            $("#Bankid").val(this.value)
        });

        $(function () {
             if ('@ViewBag.EnableMobilePayment' == 0) {
     $("#PaymentChannel").val('BANK ACCOUNT');
     $("#PaymentChannel").prop('disabled', true);
 }
            $("#PaymentChannel").trigger('change')
            var bankid = $("#Bankid").val()
            if (bankid) {
                $("#Bankid1").val(bankid)
                $("#Bankid2").val(bankid)
            }
        })

    </script>
}