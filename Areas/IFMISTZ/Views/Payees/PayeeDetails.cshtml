@model IFMIS.Areas.IFMISTZ.Models.Payee

@{
    ViewBag.Title = "Details";
}
<div id="divLoader"></div>
<div id="content" style="margin: 5px; padding-top: 30px">

    <div class="row">

        <div class="col-xs-12 col-sm-3 col-md-3 col-lg-3">
            <!-- Button trigger modal -->
            <!--<a data-toggle="modal" href="#myModal" class="btn btn-success btn-lg pull-right header-btn hidden-mobile"><i class="fa fa-circle-arrow-up fa-lg"></i> Launch form modal</a>-->
        </div>
    </div>

    <section id="widget-grid" class="">


        <!-- START ROW -->

        <div class="row">

            <!-- NEW COL START -->
            <div class="col-sm-12 col-md-12 col-lg-12">

                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">
                    <!-- widget options:
                        usage: <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false">

                        data-widget-colorbutton="false"
                        data-widget-editbutton="false"
                        data-widget-togglebutton="false"
                        data-widget-deletebutton="false"
                        data-widget-fullscreenbutton="false"
                        data-widget-custombutton="false"
                        data-widget-collapsed="true"
                        data-widget-sortable="false"

                    -->
                    <header>
                        <span class="widget-icon"> <i class="fa fa-table"></i> </span>
                        <h2> Payee Details </h2>

                    </header>

                    <!-- widget div-->
                    <div>

                        <!-- widget edit box -->
                        <div class="jarviswidget-editbox">
                            <!-- This area used as dropdown edit box -->

                        </div>
                        <!-- end widget edit box -->
                        <!-- widget content -->
                        <div class="widget-body">


                            <div>
                                <dl class="dl-horizontal table-stripped">
                                    <dt>
                                        @Html.DisplayNameFor(model => model.PayeeCode)
                                    </dt>

                                    <dd>
                                        @Html.DisplayFor(model => model.PayeeCode)
                                    </dd>

                                    <dt>
                                        @Html.DisplayNameFor(model => model.PayeeName)
                                    </dt>

                                    <dd>
                                        @Html.DisplayFor(model => model.PayeeName)
                                    </dd>
                                    <dt>
                                        @Html.DisplayNameFor(model => model.VRN)
                                    </dt>

                                    <dd>
                                        @Html.DisplayFor(model => model.VRN)
                                    </dd>
                                    <dt>
                                        @Html.DisplayNameFor(model => model.PhoneNumber1)
                                    </dt>

                                    <dd>
                                        @Html.DisplayFor(model => model.PhoneNumber1)
                                    </dd>

                                    <dt>
                                        @Html.DisplayNameFor(model => model.Address1)
                                    </dt>

                                    <dd>
                                        @Html.DisplayFor(model => model.Address1)
                                    </dd>
                                    <dt>
                                        @Html.DisplayNameFor(model => model.City)
                                    </dt>

                                    <dd>
                                        @Html.DisplayFor(model => model.City)
                                    </dd>

                                    <dt>
                                        @Html.DisplayNameFor(model => model.Country)
                                    </dt>

                                    <dd>
                                        @Html.DisplayFor(model => model.Country)
                                    </dd>
                                    <dt>
                                        @Html.DisplayNameFor(model => model.InstitutionCode)
                                    </dt>

                                    <dd>
                                        @Html.DisplayFor(model => model.InstitutionCode)
                                    </dd>
                                    <dt>
                                        @Html.DisplayNameFor(model => model.OverallStatus)
                                    </dt>

                                    <dd>
                                        @Html.DisplayFor(model => model.OverallStatus)
                                    </dd>

                                    <dt>
                                        @Html.DisplayNameFor(model => model.IBAN)
                                    </dt>

                                    <dd>
                                        @Html.DisplayFor(model => model.IBAN)
                                    </dd>

                                    <dt>
                                        @Html.DisplayNameFor(model => model.CreatedBy)
                                    </dt>

                                    <dd>
                                        @Html.DisplayFor(model => model.CreatedBy)
                                    </dd>

                                    <dt>
                                        @Html.DisplayNameFor(model => model.CreatedAt)
                                    </dt>

                                    <dd>
                                        @Html.DisplayFor(model => model.CreatedAt)
                                    </dd>
                                    <dt>
                                        @Html.DisplayNameFor(model => model.PhoneNumber1)
                                    </dt>

                                    <dd>
                                        @Html.DisplayFor(model => model.PhoneNumber1)
                                    </dd>
                                    <dt>
                                        @Html.DisplayNameFor(model => model.UpdatedBy)
                                    </dt>

                                    <dd>
                                        @Html.DisplayFor(model => model.UpdatedBy)
                                    </dd>
                                    <dt>
                                        @Html.DisplayNameFor(model => model.UpdatedAt)
                                    </dt>

                                    <dd>
                                        @Html.DisplayFor(model => model.UpdatedAt)
                                    </dd>
                                </dl>
                            </div>
                            <div>
                                <div>
                                    @if (this.User.IsInRole("Payee Entry") && Model.ApprovalStatus == "ACTIVE")
                                    {
                                        <a href="@Url.Action("AddPayeeAccount","Payees", new { id=Model.PayeeId})" class="btn btn-info">
                                            <span class="glyphicon glyphicon-plus"></span>
                                            Add Account
                                        </a>
                                    }

                                </div>
                                <hr />
                                <div>
                                    <div colspan="5"><strong>Payee Bank Information:</strong></div>
                                </div>
                            </div>
                            <div class="widget-body">
                                <hr class="simple" />
                                <table id="dt_basic" class="table table-striped table-bordered table-hover table-condensed" width="100%">
                                    <thead>
                                        <tr style="background-color: #f5f5f5; color:black">
                                            <th>#</th>
                                            <th>Payee Type</th>
                                            <th>Account Number</th>
                                            <th>Currency</th>
                                            <th>Account Name</th>
                                            <th>Bank Name</th>
                                            <th>Created By</th>
                                            <th>Institution</th>
                                            @*<th>Edit Remarks</th>*@
                                            <th>Is Active?</th>
                                            <th>Deactivation Reason</th>
                                            <th>Deactivated By</th>
                                            <th>Status</th>
                                            <th>Attachment</th>
                                            <th></th>
                                        </tr>
                                    </thead>
                                    @{
                                        int i = 0;
                                    }
                                    @foreach (var item in Model.PayeeDetails)
                                    {
                                        i++;
                                        <tr>
                                            <td>@i</td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.PayeeType)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.Accountnumber)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.Currency)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.AccountName)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.BankName)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.Createdby)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.InstitutionName)
                                            </td>
                                            @*<td>
                                                    @Html.DisplayFor(modelItem => item.EditReason)
                                                </td>*@
                                            <td>
                                                @{
                                                    var isActive = "";
                                                    isActive = item.IsActive == true ? "Yes" : "No";
                                                }
                                                @isActive
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.DeactivateReason)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.DeactivatedBy)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.OverallStatus)
                                            </td>
                                            <td>
                                                <a href="@Url.Action("PreviewAttachment", "Payees", new { id = item.PayeeDetailId })" target="_blank">
                                                    @*@Html.DisplayFor(modelItem => item.Attachment)*@
                                                    <span class="glyphicon glyphicon-print"></span>
                                                </a>
                                                @*<a href="~/Media/Attachments/@item.Attachment"><i class="fa fa-file-pdf-o"></i></a>'*@
                                            </td>
                                            <td style="text-align: center">
                                                <!-- Split button -->
                                                <div class="btn-group">
                                                    @*<button type="button" class="btn btn-info btn-xs">Action</button>*@
                                                    <button type="button" class="btn btn-info btn-xs dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                        <span class="caret"></span>
                                                        <span class="sr-only">Toggle Dropdown</span>
                                                    </button>
                                                    <ul class="dropdown-menu">
                                                        <li>
                                                            <a href="@Url.Action("PayeeAccountDetails", "Payees")/?payeeDetailId=@item.PayeeDetailId">Details</a>
                                                        </li>
                                                        @if (item.OverallStatus == "Pending" && item.IsActive == true && item.Attachment != null && this.User.IsInRole("Payee Entry") && item.InstitutionCode == ViewBag.UserInstitutionId)
                                                        {
                                                            <li><a href="#" onclick="confirmAccount(@item.PayeeDetailId)">Confirm</a></li>
                                                        }
                                                        @if (Model.ApprovalStatus == "Approved" && item.OverallStatus == "Confirmed" && item.IsActive == true && item.Attachment != null && this.User.IsInRole("Payee Approval") && item.InstitutionCode == ViewBag.UserInstitutionId)
                                                        {
                                                            <li><a href="#" onclick="approveAccount(@item.PayeeDetailId)">Approve</a></li>
                                                        }

                                                        @if (User.IsInRole("Payee Entry") && item.InstitutionCode == ViewBag.UserInstitutionId && item.OverallStatus != "Approved")
                                                        {
                                                            <li><a href="#" onclick="checkTIN(@item.PayeeDetailId)">Edit Account</a></li>
                                                        }

                                                        @if (item.IsActive == true && this.User.IsInRole("Payee Entry") && item.InstitutionCode == ViewBag.UserInstitutionId)
                                                        {
                                                            <li><a href="#" onclick="deactivateAccount(@item.PayeeDetailId)">Deactivate</a></li>
                                                        }
                                                        @if (item.IsActive == true && this.User.IsInRole("Payee Entry") && item.InstitutionCode == ViewBag.UserInstitutionId)
                                                        {
                                                            <li><a href="@Url.Action("EditPayeeCurrency", "Payees")/@item.PayeeDetailId">Edit Currency</a></li>
                                                        }
                                                        @if (item.IsActive == false && this.User.IsInRole("Payee Entry") && item.InstitutionCode == ViewBag.UserInstitutionId)
                                                        {

                                                            <li><a href="#" onclick="activateAccount(@item.PayeeDetailId)">Activate</a></li>
                                                        }
                                                        @if (this.User.IsInRole("Payee Entry") && item.InstitutionCode == ViewBag.UserInstitutionId)
                                                        {

                                                            <li><a href="#" onclick="cancelAccount(@item.PayeeDetailId)">Cancel</a></li>
                                                        }
                                                        @if (this.User.IsInRole("Payee Verification"))
                                                        {
                                                            <li><a href="#" onclick="verifyAccount(@item.PayeeDetailId)">Verify</a></li>
                                                        }
                                                    </ul>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </table>
                            </div>
                            <!-- end widget content -->
                            <div class="form-actions">
                                <div class="row">
                                    <div class="col-md-12">
                                        @*<div class="col-md-2">
                                            </div>*@
                                        <div class="col-md-10">
                                            <a href="@Request.UrlReferrer" style="margin-right:-10px" type="submit" class="btn btn-info pull-left"><i class="glyphicon glyphicon-arrow-left"></i> Back  </a>
                                            &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>

<div class="modal fade" id="responseModal" tabindex="-1" role="dialog" aria-labelledby="lblmodal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header alert alert-info" style="font:bold 16px Trebuchet MS, Lucida Sans Unicode, Lucida Grande, Lucida Sans, Arial, sans-serif">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title" id="lblmodal">Approve Account</h4>
            </div>
            <div class="modal-body">
                <p class="success-message">Are you sure you want to Approve this Acount ? </p>
            </div>
            <div class="modal-footer">
                <button class="btn btn-info delete-confirm">Ok</button>
                <button class="btn btn-info delete-cancel" data-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="modal" tabindex="-1" role="dialog" aria-labelledby="lblmodal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header alert alert-info" style="font:bold 16px Trebuchet MS, Lucida Sans Unicode, Lucida Grande, Lucida Sans, Arial, sans-serif">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>

                <h4 class="modal-title" id="lblmodal">Deactivate Account Dialog</h4>
            </div>
            <div class="modal-body" id="modal-body">
                <p class="success-message">Are you sure you want to deactivate this account ? </p>
            </div>
            <div class="modal-footer">
                <button class="btn btn-info approve-confirm">Yes</button>
                <button class="btn btn-info delete-cancel" data-dismiss="modal">No</button>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="modal1" tabindex="-1" role="dialog" aria-labelledby="lblmodal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header alert alert-info" style="font:bold 16px Trebuchet MS, Lucida Sans Unicode, Lucida Grande, Lucida Sans, Arial, sans-serif">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>

                <h4 class="modal-title" id="lblmodal">Activate Account Dialog</h4>
            </div>
            <div class="modal-body" id="modal-body">
                <p class="success-message">Are you sure you want to activate this account ? </p>
            </div>
            <div class="modal-footer">
                <button class="btn btn-info approve-confirm">Yes</button>
                <button class="btn btn-info delete-cancel" data-dismiss="modal">No</button>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="deactivatePayeeModal" tabindex="-1" role="dialog" aria-labelledby="lblmodal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header alert alert-info" style="font:bold 16px Trebuchet MS, Lucida Sans Unicode, Lucida Grande, Lucida Sans, Arial, sans-serif">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title" id="lblmodal">Deactivation Reason</h4>
            </div>
            <div class="modal-body">
                <div style="display:flex;justify-content:center;align-content:center">
                    <div>
                        <textarea id="DeactivateReason" rows="3" style="width:300px;border-radius:2px"></textarea>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button class="btn btn-info delete-confirm" onclick="saveRejection()">Ok</button>
                <button class="btn btn-info delete-cancel" data-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>
@section Scripts{
    <script>
        // DO NOT REMOVE : GLOBAL FUNCTIONS!

        $(document).ready(function () {

            /* // DOM Position key index //

            l - Length changing (dropdown)
            f - Filtering input (search)
            t - The Table! (datatable)
            i - Information (records)
            p - Pagination (paging)
            r - pRocessing
            < and > - div elements
            <"#id" and > - div with an id
            <"class" and > - div with a class
            <"#id.class" and > - div with an id and class

            Also see: http://legacy.datatables.net/usage/features
            */

            /* BASIC ;*/
            var responsiveHelper_dt_basic = undefined;
            var responsiveHelper_datatable_fixed_column = undefined;
            var responsiveHelper_datatable_col_reorder = undefined;
            var responsiveHelper_datatable_tabletools = undefined;

            var breakpointDefinition = {
                tablet: 1024,
                phone: 480
            };

            $('#dt_basic').dataTable({
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-12 hidden-xs'l>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_dt_basic) {
                        responsiveHelper_dt_basic = new ResponsiveDatatablesHelper($('#dt_basic'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_dt_basic.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_dt_basic.respond();
                }
            });

            /* END BASIC */

            /* COLUMN FILTER  */
            var otable = $('#datatable_fixed_column').DataTable({
                //"bFilter": false,
                //"bInfo": false,
                //"bLengthChange": false
                //"bAutoWidth": false,
                //"bPaginate": false,
                //"bStateSave": true // saves sort state using localStorage
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6 hidden-xs'f><'col-sm-6 col-xs-12 hidden-xs'<'toolbar'>>r>" +
                        "t" +
                        "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_fixed_column) {
                        responsiveHelper_datatable_fixed_column = new ResponsiveDatatablesHelper($('#datatable_fixed_column'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_datatable_fixed_column.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_datatable_fixed_column.respond();
                }

            });

            // custom toolbar
            $("div.toolbar").html('<div class="text-right"><img src="/Content/img/logo.png" alt="SmartAdmin" style="width: 111px; margin-top: 3px; margin-right: 10px;"></div>');

            // Apply the filter
            $("#datatable_fixed_column thead th input[type=text]").on('keyup change', function () {

                otable
                    .column($(this).parent().index() + ':visible')
                    .search(this.value)
                    .draw();

            });
            /* END COLUMN FILTER */

            /* COLUMN SHOW - HIDE */
            $('#datatable_col_reorder').dataTable({
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'C>r>" +
                        "t" +
                        "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_col_reorder) {
                        responsiveHelper_datatable_col_reorder = new ResponsiveDatatablesHelper($('#datatable_col_reorder'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_datatable_col_reorder.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_datatable_col_reorder.respond();
                }
            });

            /* END COLUMN SHOW - HIDE */

            /* TABLETOOLS */
            $('#datatable_tabletools').dataTable({

                // Tabletools options:
                //   https://datatables.net/extensions/tabletools/button_options
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'T>r>" +
                        "t" +
                        "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
                "oTableTools": {
                    "aButtons": [
                    "copy",
                    "csv",
                    "xls",
                       {
                           "sExtends": "pdf",
                           "sTitle": "SmartAdmin_PDF",
                           "sPdfMessage": "SmartAdmin PDF Export",
                           "sPdfSize": "letter"
                       },
                       {
                           "sExtends": "print",
                           "sMessage": "Generated by SmartAdmin <i>(press Esc to close)</i>"
                       }
                    ],
                    "sSwfPath": "/Scripts/plugin/datatables/swf/copy_csv_xls_pdf.swf"
                },
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_tabletools) {
                        responsiveHelper_datatable_tabletools = new ResponsiveDatatablesHelper($('#datatable_tabletools'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_datatable_tabletools.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_datatable_tabletools.respond();
                }
            });

            /* END TABLETOOLS */

        });

        var confirmAccount = function (id) {
            swal({
                text: "Are you sure you want to confirm this account?",
                buttons: [
                  "Yes",
                  "No"
                ],
                closeOnClickOutside: false,
            }).then(function (isConfirm) {
                if (!isConfirm) {
                    var url = '@Url.Action("ConfirmAccount", "Payees")';
                    $.ajax({
                        type: "POST",
                        url: url,
                        data: { id: id },
                        success: function (response) {
                            if (response == "Success") {
                                swal({
                                    text: "Confirmed successfully!",
                                    icon: "success",
                                    button: "OK",
                                }).then(function () {
                                    location.reload();
                                });
                            }
                            else {
                                swal({
                                    text: response,
                                    icon: "error",
                                    button: "OK",
                                }).then(function () {
                                    location.reload();
                                });
                            }
                        },
                        error: function (response) {
                            swal({
                                text: response,
                                icon: "error",
                                button: "OK",
                            }).then(function () {
                                location.reload();
                            });
                        }
                    });
                }
            });
        }


        var approveAccount = function (id) {
            swal({
                text: "Are you sure you want to approve this account?",
                buttons: [
                  "Yes",
                  "No"
                ],
                closeOnClickOutside: false,
            }).then(function (isConfirm) {
                if (!isConfirm) {
                    var url = '@Url.Action("ApproveBankAccount", "Payees")';
                    $.ajax({
                        type: "POST",
                        url: url,
                        data: { id: id },
                        success: function (response) {
                            if (response == "Success") {
                                swal({
                                    text: "Approved successfully!",
                                    icon: "success",
                                    button: "OK",
                                }).then(function () {
                                    location.reload();
                                });
                            }
                            else {
                                swal({
                                    text: response,
                                    icon: "error",
                                    button: "OK",
                                }).then(function () {
                                    location.reload();
                                });
                            }
                        },
                        error: function (response) {
                            swal({
                                text: response,
                                icon: "error",
                                button: "OK",
                            }).then(function () {
                                location.reload();
                            });
                        }
                    });
                }
            });
        }

        var approvePayee = function (id) {
            $("#responseModal1").modal('show');

            $(".delete-confirm").click(function () {
                if (id != "") {
                    var url = '@Url.Action("ApprovePayee", "Payees")';
                    $.ajax({
                        url: url,
                        data: { id: id },
                        type: "POST",
                        success: function (response) {
                            if (response == "Success") {
                                //now re-using the boostrap modal popup to show success message.
                                //hide ok button as it is not necessary
                                $('.delete-confirm').css('display', 'none');
                                $('.delete-cancel').html('Close').click(function () {
                                    location.reload();
                                });
                            }
                            $('.success-message').html('Approved successfully');
                        }, error: function (err) {
                            if (!$('.modal-header').hasClass('alert-danger')) {
                                $('.modal-header').removeClass('alert-info').addClass('alert-info');
                                //$('.delete-confirm').css('display', 'none');
                            }
                            $('.success-message').html(err.statusText);
                        }
                    });
                }
            });
        };

        //function to reset bootstrap modal popups
        $("#responseModal").on("hidden.bs.modal", function () {
            $(".modal-header").removeClass(' ').addClass('alert-danger');
            $('.delete-confirm').css('display', 'inline-block');
            $('.success-message').html('').html('Are you sure you want to approve this record ?');
        });

        @*var deactivateAccount = function (id) {
            swal({
                text: "Are you sure you want to deactivate this account?",
                buttons: [
                  "Yes",
                  "No"
                ],
                closeOnClickOutside: false,
            }).then(function (isConfirm) {
                if (!isConfirm) {
                    var url = '@Url.Action("DeactivateAccount", "Payees")';
                    $.ajax({
                        type: "POST",
                        url: url,
                        data: { id: id },
                        success: function (response) {
                            if (response == "Success") {
                                swal({
                                    text: "Deactivated successfully!",
                                    icon: "success",
                                    button: "OK",
                                }).then(function () {
                                    location.reload();
                                });
                            }
                            else {
                                swal({
                                    text: response,
                                    icon: "error",
                                    button: "OK",
                                }).then(function () {
                                    location.reload();
                                });
                            }
                        },
                        error: function (response) {
                            swal({
                                text: response,
                                icon: "error",
                                button: "OK",
                            }).then(function () {
                                location.reload();
                            });
                        }
                    });
                }
            });
        }*@

        var PayeeDetailId = 0;
        var deactivateAccount = function (id) {
            PayeeDetailId = id
            $("#deactivatePayeeModal").modal("show");

        };

        var saveRejection = function () {
            var url = '@Url.Action("DeactivateAccount", "Payees")';
            if ($("#deactivateReason").val() == "") {
                swal("Deactivation Reason is required..!")
            } else {
                $.ajax({
                    type: "POST",
                    url: url,
                    data: {
                        DeactivateReason: $("#DeactivateReason").val(),
                        PayeeDetailId
                    },
                    success: function (response) {
                        if (response == "Success") {
                            swal({
                                text: "saved successfully!",
                                icon: "success",
                                button: "OK",
                            }).then(function () {
                                location.reload();
                            });
                        }
                        else {
                            swal({
                                text: response,
                                icon: "error",
                                button: "OK",
                            }).then(function () {
                                location.reload();
                            });
                        }
                    },
                    error: function (response) {
                        swal({
                            text: response,
                            icon: "error",
                            button: "OK",
                        }).then(function () {
                            location.reload();
                        });
                    }
                });
            }

        };
        var activateAccount = function (id) {
            swal({
                text: "Are you sure you want to activate this account?",
                buttons: [
                  "Yes",
                  "No"
                ],
                closeOnClickOutside: false,
            }).then(function (isConfirm) {
                if (!isConfirm) {
                    var url = '@Url.Action("activateAccount", "Payees")';
                    $.ajax({
                        type: "POST",
                        url: url,
                        data: { id: id },
                        success: function (response) {
                            if (response == "Success") {
                                swal({
                                    text: "Activated successfully!",
                                    icon: "success",
                                    button: "OK",
                                }).then(function () {
                                    location.reload();
                                });
                            }
                            else {
                                swal({
                                    text: response,
                                    icon: "error",
                                    button: "OK",
                                }).then(function () {
                                    location.reload();
                                });
                            }
                        },
                        error: function (response) {
                            swal({
                                text: response,
                                icon: "error",
                                button: "OK",
                            }).then(function () {
                                location.reload();
                            });
                        }
                    });
                }
            });
        }
        var cancelAccount = function (id) {
            swal({
                text: "Are you sure you want to cancel this Account?",
                buttons: [
                  "Yes",
                  "No"
                ],
                closeOnClickOutside: false,
            }).then(function (isConfirm) {
                if (!isConfirm) {
                    var url = '@Url.Action("CancelPayeeAccount", "Payees")';
                    $.ajax({
                        type: "POST",
                        url: url,
                        data: { id: id },
                        success: function (response) {
                            if (response == "Success") {
                                swal({
                                    text: "Cancellled successfully!",
                                    icon: "success",
                                    button: "OK",
                                }).then(function () {
                                    location.reload();
                                });
                            }
                            else {
                                swal({
                                    text: response,
                                    icon: "error",
                                    button: "OK",
                                }).then(function () {
                                    location.reload();
                                });
                            }
                        },
                        error: function (response) {
                            swal({
                                text: response,
                                icon: "error",
                                button: "OK",
                            }).then(function () {
                                location.reload();
                            });
                        }
                    });
                }
            });
        }

        function checkTIN(payeeDetailId) {
            $.ajax({
                type: "GET",
                url: '@Url.Action("CheckTraPayee1", "Payees")',
                data: { payeeDetailId },
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    if (data.success) {
                        swal("This payee Account cannot be edited!");
                    } else {

                        //swal("You can add account!");
                        window.location = '@Url.Action("EditBankAccount", "Payees")/?payeeDetailId=' + payeeDetailId + '';
                    }
                    $("#saveLoaderTIN").toggle(false);
                },
                failure: function (error) {
                    swal(error);
                }
            });
        }

        var verifyAccount = function (id) {
            swal({
                text: "Are you sure you want to verify this Payee Account?",
                buttons: [
                  "Yes",
                  "No"
                ],
                closeOnClickOutside: false,
            }).then(function (isConfirm)
            {
                if (!isConfirm) {
                    $("#divLoader").show();
                    var url = '@Url.Action("VerifyAccount", "Payees")';
                    $.ajax({
                        type: "POST",
                        url: url,
                        data: { id: id },
                        success: function (response) {
                            $("#divLoader").hide();
                            if (response == "Success") {
                                swal({
                                    text: "Verified successfully!",
                                    icon: "success",
                                    button: "OK",
                                }).then(function () {
                                    /*location.reload();*/
                                     window.location = '@Url.Action("VerifiedAccount", "Payees")';
                                });
                            }
                            else {
                                swal({
                                    text: response,
                                    icon: "error",
                                    button: "OK",
                                }).then(function () {
                                    location.reload();
                                });
                                $("#divLoader").hide();
                            }
                        },
                        error: function (response) {
                            swal({
                                text: response,
                                icon: "error",
                                button: "OK",
                            }).then(function () {
                                location.reload();
                            });
                            $("#divLoader").hide();
                        }
                    });
                }
            });
        }
         var approveVerifiedAccount = function (id) {
            swal({
                text: "Are you sure you want to approve this payee for Payment?",
                buttons: [
                  "Yes",
                  "No"
                ],
                closeOnClickOutside: false,
            }).then(function (isConfirm) {
                if (!isConfirm) {
                    var url = '@Url.Action("ApproveVerifiedAccount", "Payees")';
                    $.ajax({
                        type: "POST",
                        url: url,
                        data: { id: id },
                        success: function (response) {
                            if (response == "Success") {
                                swal({
                                    text: "Approved successfully for payment!",
                                    icon: "success",
                                    button: "OK",
                                }).then(function () {
                                    location.reload();
                                });
                            }
                            else {
                                swal({
                                    text: response,
                                    icon: "error",
                                    button: "OK",
                                }).then(function () {
                                    location.reload();
                                });
                            }
                        },
                        error: function (response) {
                            swal({
                                text: response,
                                icon: "error",
                                button: "OK",
                            }).then(function () {
                                location.reload();
                            });
                        }
                    });
                }
            });
        }
    </script>
}








