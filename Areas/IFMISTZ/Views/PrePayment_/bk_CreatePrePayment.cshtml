@model IFMIS.Areas.IFMISTZ.Models.PrePaymentVM
@{
    ViewBag.Title = "Create Prepayment";
}

<style type="text/css">
    body {
        margin-top: 40px;
    }
    .stepwizard-step p {
        margin-top: 10px;
    }

    .stepwizard-row {
        display: table-row;
    }

    .stepwizard {
        display: table;
        width: 100%;
        position: relative;
    }

    .stepwizard-step button[disabled] {
        opacity: 1 !important;
        filter: alpha(opacity=100) !important;
    }

    .stepwizard-row:before {
        top: 14px;
        bottom: 0;
        position: absolute;
        content: " ";
        width: 100%;
        height: 1px;
        background-color: #ccc;
        z-order: 0;
    }

    .stepwizard-step {
        display: table-cell;
        text-align: center;
        position: relative;
    }
    .loadingImg {
        display: none;
    }
</style>


<div id="content" style="margin: 5px; padding-top: 30px">
    <div class="row">


    </div>
    <!-- widget grid -->
    <section id="widget-grid" class="">


        <!-- START ROW -->

        <div class="row">

            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">

                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">

                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2> Create Prepayment </h2>

                    </header>


                    <div>
                        <div class="widget-body " style="padding-top:10px;width:100%">

                            <!----WIZARD HEADING -->

                            <div class="stepwizard">
                                <div class="stepwizard-row setup-panel">
                                    <div class="stepwizard-step">
                                        <a href="#step-1" type="button" class="btn btn-primary btn-circle">1</a>
                                        <p><strong>Basic Information </strong></p>
                                    </div>

                                    <div class="stepwizard-step">
                                        <a href="#step-2" type="button" class="btn btn-default btn-circle" disabled="disabled">2</a>
                                        <p><strong>Items</strong></p>
                                    </div>
                                    <div class="stepwizard-step">
                                        <a href="#step-3" type="button" class="btn btn-default btn-circle" disabled="disabled">3</a>
                                        <p><strong>GL Accounts</strong></p>
                                    </div>
                                </div>
                            </div>
                            <br />
                            <br />

                            <!----WIZARD BODY -->
                            @using (Html.BeginForm("CreatePrePayment", "PrePayment", FormMethod.Post))
                            {
                                @Html.AntiForgeryToken()


                                <div class="form-horizontal">


                                    <!---- STEP 1 START HERE -->
                                    <div class="row setup-content" id="step-1">
                                        <div align="center">
                                            <img src="~/Media/Images/ajax_loader.gif" class="loadingImg" />
                                        </div>
                                        <div class="col-xs-12">


                                            <div class="col-md-12">


                                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                                @Html.HiddenFor(model => model.PrePaymentId)
                                                @Html.HiddenFor(model => model.VatPercentage)
                                                @Html.HiddenFor(model => model.CountItems)
                                                @Html.HiddenFor(model => model.CountGLAccounts)
                                                @Html.HiddenFor(model => model.ItemsValues)
                                                @Html.HiddenFor(model => model.ItemCharge)
                                                @Html.HiddenFor(model => model.ItemsValueBalance)
                                                @Html.HiddenFor(model => model.ItemsChargeBalance)
                                                @Html.HiddenFor(model => model.SubBudgetClass)
                                                @Html.HiddenFor(model => model.PayeeDetailId)                                           
                                                @Html.HiddenFor(model => model.Success)
                                                <div class="form-group">
                                                    <label class="col-md-2 control-label">Supplier </label>
                                                    <div class="col-md-3">

                                                        <div class="input-group">

                                                            <span class="input-group-addon" onclick="SearchPayee()"><i class="fa fa-search"></i></span>
                                                            @Html.EditorFor(model => model.Payeename, new { htmlAttributes = new { @class = "form-control", @required = "required", @placeholder = "No Supplier", @onclick = "SearchPayee()", @autocomplete = "off" } })
                                                            @Html.ValidationMessageFor(model => model.Payeename, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                    @Html.LabelFor(model => model.PayeeType, htmlAttributes: new { @class = "control-label   col-md-2" })
                                                    <div class="col-md-3">
                                                        @Html.DropDownListFor(model => model.PayeeType, Model.PayeeTypesList, "Select ---", new { @class = "form-control", @required = "required" })

                                                        @Html.ValidationMessageFor(model => model.PayeeType, "", new { @class = "text-danger" })
                                                    </div>

                                                </div>
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.PrePaymentDesc, htmlAttributes: new { @class = "control-label   col-md-2" })
                                                    <div class="col-md-3">
                                                        @Html.EditorFor(model => model.PrePaymentDesc, new { htmlAttributes = new { @class = "form-control", @required = "required", rows = "2" } })

                                                        @Html.ValidationMessageFor(model => model.PrePaymentDesc, "", new { @class = "text-danger" })
                                                    </div>
                                                     @Html.LabelFor(model => model.CurrencyRateViewId, htmlAttributes: new { @class = "control-label   col-md-2" })
                                                    <div class="col-md-3">
                                                        @Html.DropDownList("CurrencyRateViewId", Model.SubBudgetClassList, "Select ---", new { @class = "form-control", @required = "required" })
                                                        @Html.ValidationMessageFor(model => model.CurrencyRateViewId, "", new { @class = "text-danger" })
                                                    </div>

                                                </div>
                                                <div class="form-group">
                                                   
                                                   @Html.LabelFor(model => model.ApplyDate, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-md-3">

                                                    @*@Html.EditorFor(model => model.ApplyDate, new { htmlAttributes = new { @class = "form-control", @required = "required", autocomplete = "off" } })
                                                        @Html.ValidationMessageFor(model => model.ApplyDate, "", new { @class = "text-danger" })*@
                                                    <table>
                                                        <tr>
                                                            <td>
                                                                <div class="flatpickr date-group">
                                                                    <input type="text" placeholder="Select Date.."
                                                                           data-input
                                                                           style="width:300px;border:none;"
                                                                           autocomplete="off" name="ApplyDate" id="ApplyDate">
                                                                    <a class="input-button" title="open" data-toggle href="#">
                                                                        <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                                                    </a>
                                                                </div>
                                                            </td>
                                                        </tr>
                                                    </table>
                                                </div> 
                                                    @Html.LabelFor(model => model.PrePaymentAmount, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-3">
                                                        <div class="input-group">

                                                            <span class="input-group-addon" id="currencyDisp">@Html.DisplayFor(model => model.OperationalCurrency)</span>
                                                            @Html.EditorFor(model => model.PrePaymentAmount, new { htmlAttributes = new { @class = "form-control", @required = "required", @autocomplete = "off" } })
                                                            @Html.ValidationMessageFor(model => model.PrePaymentAmount, "", new { @class = "text-danger" })
                                                        </div>

                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                      

                                                </div>



                                            </div>
                                            <div class="col-md-offset-2">
                                                <a href="@Url.Action("PrePayments","PrePayment")" style="margin-right:5px" type="submit" class="btn btn-info pull-left"><i class="glyphicon glyphicon-arrow-left"></i> Back  </a>
                                                @*<button type="submit" id="summary" class="btn btn-info" style="margin-right:2px">
                                                        <i class="glyphicon glyphicon-floppy-disk"></i> Save
                                                    </button>*@
                                                <button type="submit" class="btn btn-info" style="margin-right:2px">
                                                    <i class="glyphicon glyphicon-floppy-disk"></i> Save
                                                </button>
                                                <button class="btn btn-info nextBtn" type="button">Next &nbsp;<span class="glyphicon glyphicon-arrow-right" aria-hidden="true"></span></button>
                                            </div>
                                        </div>
                                    </div>


                                    <!----STEP 2 START HERE -->
                                    <div class="row setup-content" id="step-2">
                                        <div align="center">
                                            <img src="~/Media/Images/ajax_loader.gif" class="loadingImg" />
                                        </div>
                                        <div class="col-xs-12">
                                            <div class="col-md-12">


                                                <div class="form-group">

                                                    @Html.Label("Category", htmlAttributes: new { @class = "control-label   col-md-2" })
                                                    <div class="col-md-3">
                                                        @Html.DropDownList("PrepaymentItemClassificationId", Model.ItemClassificationsList, "Select ", new { @class = "form-control" })
                                                        @Html.ValidationMessageFor(model => model.PrepaymentItemClassificationId, "", new { @class = "text-danger" })
                                                    </div>

                                                    @Html.Label("Quantity", htmlAttributes: new { @class = "control-label   col-md-2" })
                                                    <div class="col-md-3">
                                                        @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @min = 1, @class = "form-control" } })
                                                        @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.ItemDesc, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-3">
                                                        @Html.EditorFor(model => model.ItemDesc, new { htmlAttributes = new { @class = "form-control" } })
                                                        @Html.ValidationMessageFor(model => model.ItemDesc, "", new { @class = "text-danger" })
                                                    </div>
                                                    @Html.Label("Unit Price", htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-3">
                                                        @Html.EditorFor(model => model.UnitPrice, new { htmlAttributes = new { @class = "form-control" } })
                                                        @Html.ValidationMessageFor(model => model.UnitPrice, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.UOM, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-3">
                                                        @Html.DropDownListFor(model => model.UOM, Model.UOMList, "Select ", new { @class = "form-control" })
                                                        @Html.ValidationMessageFor(model => model.UOM, "", new { @class = "text-danger" })
                                                    </div>
                                                    @Html.Label("Total Amount", htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-3">
                                                        @Html.EditorFor(model => model.TotalAmount, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                                        @Html.ValidationMessageFor(model => model.TotalAmount, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <div class="form-group">

                                                    @Html.LabelFor(model => model.VatStatus, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-3" style="padding-top:8px">
                                                        @*@Html.CheckBoxFor(model => model.VatStatus)*@
                                                        <input type="checkbox" name="VatStatus" value="Applicable" id="VatStatus">
                                                    </div>
                                                    <div class="col-md-6">

                                                    </div>
                                                </div>



                                            </div>


                                            <div class="col-md-offset-2">
                                                <a href="#step-1" style="margin-right:5px" type="submit" class="btn btn-info pull-left"><i class="glyphicon glyphicon-arrow-left"></i> Back  </a>

                                                <button type="button" id="prePaymentDetails" class="btn btn-info" style="margin-right:2px">
                                                    <i class="glyphicon glyphicon-floppy-disk"></i> Save
                                                </button>
                                                <button class="btn btn-info nextBtn" type="button">Next &nbsp;<span class="glyphicon glyphicon-arrow-right" aria-hidden="true"></span></button>
                                            </div>
                                            <br />

                                            <div class="widget-body no-padding">

                                                <br />
                                                <div class="row" id="items_top">

                                                    <div class="col-xs-9 col-sm-3 col-md-3 col-lg-3">
                                                       
                                                    </div>
                                                    <div class="col-xs-3 col-sm-2 col-md-2 col-lg-2 text-right">



                                                    </div>
                                                    <div class="col-xs-3 col-sm-7 col-md-7 col-lg-7 text-right">
                                                        <strong>
                                                            <span>Currency:<span id="currency"></span></span>
                                                            &nbsp;&nbsp;
                                                            <span>Total Prepayment:<span id="lpo_amount"></span></span>
                                                            &nbsp;&nbsp;
                                                            <span>Balance:<span id="items_balance"></span></span>
                                                            &nbsp;&nbsp;
                                                        </strong>
                                                    </div>

                                                </div>




                                                <div class="custom-scroll" style="height:290px; overflow-y: scroll;">


                                                    <table class="table table-bordered table-hover table-condensed" id="items"></table>

                                                </div>



                                            </div>




                                        </div>
                                    </div>


                                    <!----STEP 3 START HERE -->
                                    <div class="row setup-content" id="step-3">
                                        <div class="col-xs-12">

                                            <div class="col-md-12">

                                                <div class="jarviswidget" data-widget-colorbutton="false" data-widget-colorbutton="false" data-widget-editbutton="false" data-widget-togglebutton="false" data-widget-deletebutton="false" data-widget-fullscreenbutton="false" data-widget-custombutton="false">

                                                    <header>
                                                        <h2><strong></strong> <i></i></h2>

                                                        <ul id="widget-tab-1" class="nav nav-tabs pull-right">

                                                            <li class="active">

                                                                <a data-toggle="tab" href="#hr1"> <i class="fa fa-lg fa-arrow-circle-o-down"></i> <span class="hidden-mobile hidden-tablet"> Items List<span class="badge inbox-badge margin-right-13 items_count" style="background-color:#2196F3"></span></span> </a>

                                                            </li>

                                                            <li>
                                                                <a data-toggle="tab" href="#hr2"> <i class="fa fa-lg fa-arrow-circle-o-up"></i> <span class="hidden-mobile hidden-tablet"> GL Accounts List <span class="badge inbox-badge margin-right-13 gl_count" style="background-color:#2196F3"></span></span></a>
                                                            </li>

                                                        </ul>

                                                    </header>

                                                    <!-- widget div-->
                                                    <div>

                                                        <!-- widget edit box -->
                                                        <div class="jarviswidget-editbox">
                                                            <!-- This area used as dropdown edit box -->

                                                        </div>
                                                        <!-- end widget edit box -->
                                                        <!-- widget content -->
                                                        <div class="widget-body no-padding">

                                                            <!-- widget body text-->

                                                            <div class="tab-content padding-10">
                                                                <div class="tab-pane fade in active" id="hr1">
                                                                    <div class="widget-body no-padding">

                                                                        <br />
                                                                        <div class="row" id="bind_gl">

                                                                            <div class="col-xs-9 col-sm-3 col-md-3 col-lg-3">
                                                                                @*<div class="input-group">
                                                                                        <span class="input-group-addon"><i class="fa fa-search"></i></span>
                                                                                        <input class="form-control" id="prepend" placeholder="Filter" type="text">
                                                                                    </div>*@
                                                                            </div>
                                                                            <div class="col-xs-3 col-sm-2 col-md-2 col-lg-2 text-right">



                                                                            </div>
                                                                            <div class="col-xs-3 col-sm-7 col-md-7 col-lg-7 text-right">

                                                                                <button type="button" class="btn btn-info" id="gl_items_charge">
                                                                                    <i class="fa fa-plus"></i> <span class="hidden-mobile">Add GL Account</span>
                                                                                </button>

                                                                            </div>

                                                                        </div>

                                                                        <br />



                                                                        <div class="custom-scroll" style="height:290px; overflow-y: scroll;">


                                                                            <table class="table table-bordered table-hover table-condensed" id="itemsCharge"></table>

                                                                        </div>



                                                                    </div>

                                                                </div>
                                                                <div class="tab-pane fade" id="hr2">
                                                                    <div class="widget-body no-padding">

                                                                        <br />
                                                                        <div class="row" id="gl_search">

                                                                            <div class="col-xs-9 col-sm-3 col-md-3 col-lg-3">
                                                                                <div class="input-group">
                                                                                    <span class="input-group-addon"><i class="fa fa-search"></i></span>
                                                                                    <input class="form-control" id="prepend" placeholder="Filter" type="text">
                                                                                </div>
                                                                            </div>


                                                                        </div>


                                                                        <div class="custom-scroll" style="height:290px; overflow-y: scroll;">


                                                                            <table class="table table-bordered table-hover table-condensed" id="gl_Accounts"></table>


                                                                        </div>



                                                                    </div>

                                                                </div>
                                                            </div>

                                                            <!-- end widget body text-->
                                                            <!-- widget footer -->
                                                            <div class="widget-footer text-right">

                                                                <span class="onoffswitch-title">

                                                                </span>


                                                            </div>
                                                            <!-- end widget footer -->

                                                            <div class="col-md-offset-2 pull-right">
                                                                <a href="@Request.UrlReferrer" style="margin-right:5px" type="submit" class="btn btn-info pull-left"><i class="glyphicon glyphicon-arrow-left"></i> Back  </a>

                                                                <button type="button" id="complete" class="btn btn-info" style="margin-right:2px">
                                                                    <i class="glyphicon glyphicon-floppy-disk"></i> Finish
                                                                </button>

                                                            </div>

                                                        </div>
                                                        <!-- end widget content -->

                                                       

                                                    </div>
                                                    <!-- end widget div -->



                                                </div>

                                                @*<div class="col-md-offset-2">
                                                    <a href="@Request.UrlReferrer" style="margin-right:5px" type="submit" class="btn btn-info pull-left"><i class="glyphicon glyphicon-arrow-left"></i> Back  </a>

                                                    <button type="button" id="complete" class="btn btn-info" style="margin-right:2px">
                                                        <i class="glyphicon glyphicon-floppy-disk"></i> Finish
                                                    </button>

                                                </div>*@
                                            </div>

                                        </div>

                                    </div>

                                </div>
                            }






                        </div>



                    </div>


                </div>
            </article>

        </div>
    </section>

</div>
<div class="modal fade" id="editItemModal" style="left:4%">

    <div class="modal-dialog" style="width:70%;">
        <div class="modal-content panel-info">


            <div class="modal-header panel-heading">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h3 class="modal-title"> Edit Item</h3>

            </div>

            @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "EditItem" }))
            {
                <div class="modal-body">
                    <div class="form-horizontal">
                        <div class="form-group">
                            @Html.HiddenFor(model => model.PrePaymentDetailId)
                            @Html.Label("Class", htmlAttributes: new { @class = "control-label   col-md-2" })
                            <div class="col-md-3">
                                @Html.DropDownList("PrepaymentItemClassificationId", Model.ItemClassificationsList, "Select ", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.PrepaymentItemClassificationId, "", new { @class = "text-danger" })
                            </div>
                            @Html.Label("Quantity", htmlAttributes: new { @class = "control-label   col-md-2" })
                            <div class="col-md-3">
                                <input type="text" name="Quantity" id="Quantity" value="" class="form-control">
                                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.ItemDesc, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-3">
                                @Html.EditorFor(model => model.ItemDesc, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ItemDesc, "", new { @class = "text-danger" })
                            </div>
                            @Html.Label("Unit Price", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-3">
                                @Html.EditorFor(model => model.UnitPrice, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.UnitPrice, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.UOM, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-3">
                                @Html.DropDownListFor(model => model.UOM, Model.UOMList, "Select ", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.UOM, "", new { @class = "text-danger" })
                            </div>
                            @Html.Label("Total Amount", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-3">
                                @Html.EditorFor(model => model.TotalAmount, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.TotalAmount, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">

                            @Html.LabelFor(model => model.VatStatus, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-3" style="padding-top:8px">
                                @*@Html.CheckBoxFor(model => model.VatStatus)*@
                                <input type="checkbox" name="VatStatus" value="Applicable" id="VatStatus">
                            </div>
                            <div class="col-md-6">

                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-info" id="btn_save_edit_item">
                        <i class="fa fa-save"></i>Save
                    </button>
                    <button class="btn btn-info" data-dismiss="modal">
                        <i class="fa  fa-times"></i>Cancel
                    </button>
                </div>
            }
        </div>
    </div>
</div>
<!----------- Search Payee ----------------->
<div class="modal fade" id="payeeModal" style="left:4%">

    <div class="modal-dialog" style="width:80%;">
        <div class="modal-content panel-info">


            <div class="modal-header panel-heading">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h3 class="modal-title"> Search Supplier</h3>

            </div>
            <div class="modal-body">

                <div class="row">

                    <div class="col-xs-9 col-sm-3 col-md-3 col-lg-3">
                        <div class="input-group">
                            <span class="input-group-addon"><i class="fa fa-search"></i></span>
                            <input class="form-control" id="supplier_name" placeholder="Search" type="text">
                        </div>
                    </div>


                </div>
                <table class="table" id="search_supplier"></table>

            </div>
            <div class="modal-footer">
                <button class="btn btn-info" data-dismiss="modal">
                    <i class="fa  fa-times"></i>Close
                </button>
            </div>
        </div>
    </div>
</div>
<!----------- Search GL Items----------------->
<div class="modal fade" id="glItemsModal" style="left:4%">

    <div class="modal-dialog" style="width:80%;">
        <div class="modal-content panel-info">

            <div class="modal-header panel-heading">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h3 class="modal-title"> Item(s) Charge By GL Account(s)</h3>

            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label class="col-lg-2 col-sm-2 col-xs-2 control-label" style="top:10px">Total Item(s) Value</label>
                    <div class="col-lg-2 col-sm-2 col-xs-2">
                        <input type="text" value="0" readonly id="total_items_amount">
                    </div>


                    <label class="col-lg-2 col-sm-2 col-xs-2 control-label" style="top:10px">Total Line Amount</label>
                    <div class="col-lg-2 col-sm-2 col-xs-2">
                        <input value="0" type="text" readonly id="total_line_amount">
                    </div>
                    <label class="col-lg-1 col-sm-1 col-xs-1 control-label" style="top:10px">Balance</label>
                    <div class="col-lg-2 col-sm-2 col-xs-2">
                        <input value="0" type="text" readonly id="difference">
                    </div>
                    <br />
                    <br />
                    <br />
                    <div class="row">

                        <div class="col-xs-9 col-sm-3 col-md-3 col-lg-3">
                            <div class="input-group">
                                <span class="input-group-addon"><i class="fa fa-search"></i></span>
                                <input class="form-control" id="search_exp_line" placeholder="Search" type="text">
                            </div>
                        </div>


                    </div>
                    <table id="table_items_charge" class="table table-striped table-bordered table-hover" width="100%">
                        <thead>
                            <tr>
                                <th data-hide="phone">ID</th>
                                <th data-class="expand"> Expenditure Line Item</th>
                                <th data-hide="phone"> Item Description</th>

                                <th data-hide="phone,tablet"> Fund Balance</th>
                                <th data-hide="phone,tablet">Funding Reference</th>
                                <th data-hide="phone,tablet"> Expense Amount</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>


                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-info" id="btn_save_items_charge">
                        <i class="fa fa-save"></i>Save
                    </button>
                    <button class="btn btn-info" data-dismiss="modal">
                        <i class="fa  fa-times"></i>Cancel
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>


@section pagespecific {
    <!-- PAGE RELATED PLUGIN(S) -->

    <script type="text/javascript">
        $("#EditItem").on('submit', function (e) {
            e.preventDefault();
            var item_class = $("#EditItem #PrepaymentItemClassificationId").val();
            if (!item_class) {
                swal("Please select Category !");
                return
            }
            var itemDesc = $("#EditItem #ItemDesc").val();
            if (!itemDesc) {
                swal("Please enter item !");
                return
            }
            var uom = $("#EditItem #UOM").val();
            if (!uom) {
                swal("Please select Unit of measure !");
                return
            }

            var quantity = $("#EditItem #Quantity").val();
            if (!quantity) {
                swal("Please enter quantity of items !");
                return
            }
            if (quantity == 0) {
                swal("Please quantity can not be zero !");
                return
            }
            var unitPrice = $("#EditItem #UnitPrice").val();
            if (!unitPrice) {
                swal("Please enter unit price !");
                return
            }
            if (unitPrice == 0) {
                swal("Please Unit price can not be zero !");
                return
            }
            var id = $("#EditItem #PrePaymentDetailId").val();
            var totalAmount = $("#EditItem #TotalAmount").val();
            var vatStatus = "";
            var checkedValue = $("#EditItem #VatStatus:checked").val();
            if (checkedValue == "Applicable") {
                vatStatus = "Applicable";
            } else {
                vatStatus = "Excempted";
            }
            var formData = { "PrePaymentDetailId": id, "PrepaymentItemClassificationId": item_class, "Quantity": quantity, "UnitPrice": unitPrice, "UOM": uom, "ItemDesc": itemDesc, "VatStatus": vatStatus, "TotalAmount": totalAmount };

            var url = '@Url.Action("UpdateItem", "PrePayment")';
            $.ajax(
{
    type: "POST",
    url: url,
    data: formData,
    success: function (response) {
        if (response == "Success") {
            swal("Updated successfully!", { icon: "success" });
            $('#editItemModal').modal('hide');
            var id = $("#PrePaymentId").val();
            var url = '@Url.Action("ItemsList", "PrePayment")';
            $.ajax(
{
    type: "POST",
    data: { id: id },
    url: url,
    success: function (data) {
        $('#items').empty();
        var number = data.length;
        if (number > 0) {
            $('#items_top').show();
            $('<thead><tr><th style="text-align: center">#</th><th>Category</th><th style="text-align: left">Item </th><th style="text-align: center">Quantity</th><th style="text-align: left">UOM</th><th style="text-align: right">Unit Price</th><th style="text-align:right">VAT</th><th style="text-align: right">Total Amount</th><th  style="text-align:center;width:8%">Action</th></tr></thead>').appendTo('#items');
        }
        var j = 0;
        var sum = 0;
        var vat_sum = 0;
        $('<tbody>').appendTo('#items');
        $.each(data, function (i, d) {
            sum = sum + parseFloat(d.TotalAmount);
            vat_sum = vat_sum + parseFloat(d.VAT);
            j++;
           // $('<tr><td align="center">' + j + '</th><td>' + d.ClassificationDesc + '</td><td>' + d.ItemDescription + '</td><td align="center">' + d.Quantity + '</td><td>' + d.UOM + '</td><td align="right">' + d.UnitPrice.toLocaleString('en') + '</td><td align="right">' + d.VAT.toLocaleString('en') + '</td><td align="right">' + d.TotalAmount.toLocaleString('en') + '</td><td style="text-align: center"><div class="btn-group"><button type="button" class="btn  btn-info btn-xs dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><span class="caret"></span><span class="sr-only">Toggle Dropdown</span></button> <ul class="dropdown-menu"> <li>  <a href="#" data-toggle="modal" data-target="#editItemModal" data-id="' + d.PrePaymentDetailId + '" data-classid="' + d.PrepaymentItemClassificationId + '" data-quantity="' + d.Quantity + '" data-item="' + d.ItemDescription + '" data-unitprice="' + d.UnitPrice + '" data-uom="' + d.UOM + '" data-totalamount="' + d.TotalAmount + '" class="editItemModal edit"><i class="fa fa-edit"></i> Edit</a></li><li><a href="#" data-toggle="modal" class="removeItems" data-id="' + d.PrePaymentDetailId + '" data-itemdesc="' + d.ItemDescription + '" ><i class="fa fa-trash-o"></i> Delete</a></li></div></td></tr>').appendTo('#items');
            $('<tr><td align="center">' + j + '</th><td>' + d.ClassificationDesc + '</td><td>' + d.ItemDescription + '</td><td align="center">' + d.Quantity + '</td><td>' + d.UOM + '</td><td align="right">' + d.UnitPrice.toLocaleString('en') + '</td><td align="right">' + d.VAT.toLocaleString('en') + '</td><td align="right">' + d.TotalAmount.toLocaleString('en') + '</td><td style="text-align: center"><div class="btn-group"><button type="button" class="btn  btn-info btn-xs dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><span class="caret"></span><span class="sr-only">Toggle Dropdown</span></button> <ul class="dropdown-menu"> <li>  <a href="#" data-toggle="modal" data-target="#editItemModal" data-id="' + d.PrePaymentDetailId + '" data-classid="' + d.PrepaymentItemClassificationId + '" data-quantity="' + d.Quantity + '" data-item="' + d.ItemDescription + '" data-unitprice="' + d.UnitPrice + '" data-uom="' + d.UOM + '" data-totalamount="' + d.TotalAmount + '" class="editItemModal edit"><i class="fa fa-edit"></i> Edit</a></li><li><a href="#" data-toggle="modal" class="removeItems" data-id="' + d.PrePaymentDetailId + '" data-itemdesc="' + d.ItemDescription + '" ><i class="fa fa-trash-o"></i> Delete</a></li></div></td></tr>').appendTo('#items');
        });
        if (number > 0) {

            $('<tr><td align="right" colspan="6"><strong>Grand Total</strong></td><td align="right"><strong>' + vat_sum.toLocaleString('en') + '</strong></td><td align="right"><strong>' + sum.toLocaleString('en') + '</strong></td><td></td></tr>').appendTo('#items');
        }
        $('</tbody>').appendTo('#items');
        $("#ItemsValues").val(sum);
        var lpo_amount = parseFloat($("#PrePaymentAmount").val());
        var balance = lpo_amount - sum;
        $("#items_balance").text(balance.toLocaleString('en'));
    },
    error: function (xhr) {
        //console.log(xhr.responseText);
        swal("An error has occured, contact system support");

    },

});

            //Charging List
            var url2 = '@Url.Action("ChargingList", "PrePayment")';
            $.ajax(
{
    type: "POST",
    data: { id: id },
    url: url2,
    success: function (data) {
        $('#itemsCharge').empty();
        var number = data.length;
        $(".items_count").text(number);
        if (number > 0) {
            $('#bind_gl').show();
            $('<thead><tr><th style="text-align: right" colspan="7"><input type="checkbox" class="cbCheckAllItems"  /></th></tr></thead>').appendTo('#itemsCharge');
            $('<thead><tr><th style="text-align: center">#</th><th>Category</th><th style="text-align: left">Item </th><th style="text-align: center">Quantity</th><th style="text-align: left">UOM</th><th style="text-align: right">Total Amount</th><th style="text-align:center;width:10%">Select</th></tr></thead>').appendTo('#itemsCharge');

        }
        var j = 0;
        var sum = 0;
        var vat_sum = 0;
        $('<tbody>').appendTo('#itemsCharge');
        $.each(data, function (i, d) {
            sum = sum + parseFloat(d.TotalAmount);
            vat_sum = vat_sum + parseFloat(d.VAT);
            j++;

            $('<tr><td align="center">' + j + '</th><td>' + d.ClassificationDesc + '</td><td>' + d.ItemDescription + '</td><td align="center">' + d.Quantity + '</td><td>' + d.UOM + '</td><td align="right">' + d.TotalAmount.toLocaleString('en') + '</td><td style="text-align: center"><input type="checkbox" value="' + d.TotalAmount + '" class="checkItem" id="' + d.PrePaymentDetailId + '"></td></tr>').appendTo('#itemsCharge');

        });
        if (number > 0) {
            $('<tr><td align="right" colspan="5"><strong>Grand Total</strong></td><td align="right"><strong>' + sum.toLocaleString('en') + '</strong></td><td></td></tr>').appendTo('#itemsCharge');
        }
        $('</tbody>').appendTo('#itemsCharge');
    },
    error: function (xhr) {
        //console.log(xhr.responseText);
        alert("An error has occured, contact system support");

    },

});


            var url = '@Url.Action("GetPrePaymentCoa", "PrePayment")';
            $.ajax({
                type: "post",
                url: url,
                data: { id: id },
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    $('#gl_Accounts').empty();

                    var number = data.length;
                    $(".gl_count").text(number);
                    if (number > 0) {
                        $('#gl_search').show();
                        $('<thead><tr><th style="text-align: center">#</th><th>Expenditure Line Item</th><th style="text-align: left">Item Description</th><th style="text-align: left">Funding Reference</th><th style="text-align: right">Amount</th><th style="text-align: center">Action</th></tr></thead>').appendTo('#gl_Accounts');

                    }
                    var p = 0;
                    var sum = 0;
                    $('<tbody>').appendTo('#gl_Accounts');
                    $.each(data, function (i, d) {
                        sum = sum + parseFloat(d.OperationalAmount);
                        p++;

                        $('<tr><td align="center">' + p + '</th><td>' + d.GlAccount.split("|").join("-") + '</td><td>' + d.GlAccountDesc + '</td><td>' + d.FundingReference + '</td><td align="right">' + d.OperationalAmount.toLocaleString('en') + '</td> <td style="text-align: center"><div class="btn-group"><button type="button" class="btn  btn-info btn-xs dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><span class="caret"></span><span class="sr-only">Toggle Dropdown</span></button> <ul class="dropdown-menu"> <li><a href="#" data-toggle="modal" class="remove_gl" data-id="' + d.PrePaymentCoaId + '" data-lineitem="' + d.GlAccount.split("|").join("-") + '" ><i class="fa fa-edit"></i>Deselect</a></li></div></td></tr>').appendTo('#gl_Accounts');

                    });
                    if (number > 0) {
                        $('<tr><td align="right" colspan="4"><strong>Total</strong></td><td align="right"><strong>' + sum.toLocaleString('en') + '</strong></td><td></td></tr>').appendTo('#gl_Accounts');
                    }
                    $('</tbody>').appendTo('#gl_Accounts');
                },
                failure: function (errmsg) {
                    swal(errmsg);
                }
            });


        }
        else if (response == "Exceed") {

            swal("Not saved, Total Items Amount can not exeed LPO Amount ");
            return;
        }
        else {

            swal("Failed to update ,DbException");
            return;
        }
    },
    error: function (xhr) {
        swal(error);

    },

});
        });
        //SHOW LOADER ICON
        $(document).ajaxStart(function () {
            $(".loadingImg").show();

        });
        //HIDE LOADER ICON
        $(document).ajaxStop(function () {
            $(".loadingImg").hide();
        });

        $(document).on('click', '.cbCheckAllItems', function () {
            $(".checkItem").prop('checked',
                $(this).prop('checked'));
        });

        ////////////////////////////////////////////////


        ///
        $(document).on('click', '.editItemModal', function () {
            var id = $(this).data('id');
            $("#EditItem #PrePaymentDetailId").val(id);
            var classid = $(this).data('classid');
            $("#EditItem #PrepaymentItemClassificationId").val(classid);
            var item = $(this).data('item');
            $("#EditItem #ItemDesc").val(item);
            var uom = $(this).data('uom');
            $("#EditItem #UOM").val(uom);
            var quantity = $(this).data('quantity');
            $("#EditItem #Quantity").val(quantity);
            var unitprice = $(this).data('unitprice');
            $("#EditItem #UnitPrice").val(unitprice);
            var totalamount = $(this).data('totalamount');
            $("#EditItem #TotalAmount").val(totalamount);
            var total = quantity * unitprice;
            if (total == totalamount) {
                $("#EditItem #VatStatus").prop('checked', false)
            } else {
                $("#EditItem #VatStatus").prop('checked', true)
            }
        });
    // =========== END VOUCHER DETAILS ====================
    $("#dt_search_payee_wrapper .dt-toolbar").remove();
    function SearchPayee() {
        $('#payeeModal').modal('show');
    }
    // ============= SHOW PAYEE===============
    var dt_selected_payee = $('#dt_selected_payee').dataTable({
        "data": [],
        "columnDefs": [{
            "targets": [0, 1],
            "visible": false
        }],
        "columns": [
            { title: "Payee DetailId" },
            { title: "Payee BIC" },
            { title: "Payee Name" },
            { title: "Payee Code" },
            { title: "Bank Name" },
            { title: "Payee Type" },
            { title: "Bank Account No" },
            { title: "Address" }
        ]
    });


    // ============= SEARCH PAYEEE ===========

    Date.prototype.toDateInputValue = (function () {
        var local = new Date(this);
        local.setMinutes(this.getMinutes() - this.getTimezoneOffset());
        return local.toJSON().slice(0, 10);
    });

    $(function () {
        //$('#ApplyDate').val(new Date().toDateInputValue());
        $('#InvoiceDate').val(new Date().toDateInputValue());
    });

    var dt_search_payee = $('#dt_search_payee').dataTable({
        "aoColumnDefs": [{ "bVisible": false, "aTargets": [1, 2] }],
    });

    $("#searchbox").on("keyup search input paste cut", function () {
        if (!this.value) {
            dt_search_payee.fnClearTable();
        } else {
            searchPayeeTableUpdate(this.value);
        }
    });

    function searchPayeeTableUpdate(search) {
        var url = '@Url.Action("GetPayee", "PaymentVoucher")';
        $.ajax({
            type: "get",
            url: url + "/?search=" + search + "",
            contenttype: "application/json; charset=utf-8",
            datatype: "json",
            success: function (response) {
                data = response.data;
                dt_search_payee.fnClearTable();
                for (var i = 0; i < data.length; i++) {
                    dt_search_payee.fnAddData([i,
                       data[i]["PayeeDetailId"],
                       data[i]["BIC"],
                       data[i]["AccountName"],
                       data[i]["PayeeCode"],
                       data[i]["BankName"],
                       data[i]["Accountnumber"],
                       data[i]["PayeeType"],
                       data[i]["Address1"],
                       '<a href="#" onclick="payeeClicked(' + i + ')"><i class="glyphicon glyphicon-plus-sign"></i></a>'
                    ]);
                }
            },
            failure: function (error) {
                swal(error);
            }
        });
    }


    function payeeClicked(rowId) {
        var data = dt_search_payee.DataTable().rows().data();
        var row = data[rowId];
        dt_selected_payee.fnClearTable();
        $("#Payeename").val(row[3]);

        dt_selected_payee.fnAddData([row[1], row[2], row[3], row[4], row[5], row[6], row[7], row[8]]);
        $("#payeeModal").modal("hide");
    }
    // =========== END SEARCH PAYEE ====================

    // DO NOT REMOVE : GLOBAL FUNCTIONS!
    /* BASIC ;*/
    var responsiveHelper_dt_basic = undefined;
    var responsiveHelper_dt_glItem = undefined;
    var breakpointDefinition = {
        tablet: 1024,
        phone: 480
    };

    var dt_basic = $('#dt_basic').dataTable({
        "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-12 hidden-xs'l>r>" +
            "t" +
            "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
        "autoWidth": true,
        "preDrawCallback": function () {
            // Initialize the responsive datatables helper once.
            if (!responsiveHelper_dt_basic) {
                responsiveHelper_dt_basic = new ResponsiveDatatablesHelper($('#dt_basic'), breakpointDefinition);
            }
        },
        "rowCallback": function (nRow) {
            responsiveHelper_dt_basic.createExpandIcon(nRow);
        },
        "drawCallback": function (oSettings) {
            responsiveHelper_dt_basic.respond();
        }
    });
    /* END BASIC */

    $(document).ready(function () {
        // ON SUB BUDGET CLASS SELECTED
        $("#CurrencyRateViewId").change(function () {
            var Id = $("#CurrencyRateViewId").val();
            var url = '@Url.Action("GetCurrency", "PrePayment")';
            $.ajax({
                type: "POST",
                url: url,
                data: {Id:Id },
                success: function (data) {
                    $("#currencyDisp").text(data);

                }
            })
        });
        // END ON SUB BUDGET CLASS SELECTED
        var success = $("#Success").val();
        if (success == "Created") {

            swal("Basic information saved successfully", { icon: "success" })
                                                 .then((value) => {

                                                 });

        } else if (success == "Updated") {

            swal("Basic information updated successfully", { icon: "success" })
                                                .then((value) => {

                                                });
        }
        //var i = 0;
        //$('#example tr td').each(function () {
        //    i++;
        //    alert("Oooh My Lord" + $(this).text());
        //    //if (!$.trim($(this).text())) $(this).remove();
        //});
//        $("#example tr").each(function(){
//$(this).find('td').each(function(){
//if($(this).text().trim()==""){
//    $(this).closest("tr").remove();
//};

//});
        //        });
        $(".start").keyup(function () {

            $(this).closest("tr").find("input").each(function () {
                //alert(this.value);
                if (this.value.trim() == "") {
                    //alert("Ooh My Lord");
                    $(this).closest("tr").remove();
                }
            });
            //alert("Ooh My Lord");
        }
        );
        $("#example tr").each(function(){
            $(this).closest("tr").find("input").each(function () {
                if (this.value.trim() == "") {
                    $(this).closest("tr").remove();
                }
            });
                });

        //MANAGE STEP WIZARD
        var navListItems = $('div.setup-panel div a'),
               allWells = $('.setup-content'),
               allNextBtn = $('.nextBtn');

        allWells.hide();

        navListItems.click(function (e) {
            e.preventDefault();
            var $target = $($(this).attr('href')),
                    $item = $(this);

            if (!$item.hasClass('disabled')) {
                navListItems.removeClass('btn-primary').addClass('btn-default');
                $item.addClass('btn-primary');
                allWells.hide();
                $target.show();
                $target.find('input:eq(0)').focus();
            }
        });

        allNextBtn.click(function () {
            var curStep = $(this).closest(".setup-content"),
                curStepBtn = curStep.attr("id"),
                nextStepWizard = $('div.setup-panel div a[href="#' + curStepBtn + '"]').parent().next().children("a"),
                curInputs = curStep.find("input[type='text'],input[type='url']"),
                isValid = true;

            $(".form-group").removeClass("has-error");
            for (var i = 0; i < curInputs.length; i++) {
                if (!curInputs[i].validity.valid) {
                    isValid = false;
                    $(curInputs[i]).closest(".form-group").addClass("has-error");
                }
            }

            if (isValid)
                nextStepWizard.removeAttr('disabled').trigger('click');
        });

        $('div.setup-panel div a.btn-primary').trigger('click');
        //END MANAGE STEP WIZARD

        function SearchPayee() {
            $('#payeeModal').modal('show');
        }
        //LOAD PREVIOUS INSERTED DATA
        var lpo_amount = parseFloat($("#PrePaymentAmount").val());
        if (lpo_amount>=0) {
            $("#lpo_amount").text(lpo_amount.toLocaleString('en'));

        }
        var ItemsValues = parseFloat($("#ItemsValues").val());
        if (ItemsValues >= 0) {
        }
        var ItemsValueBalance = parseFloat($("#ItemsValueBalance").val());
        $("#items_balance").text(ItemsValueBalance.toLocaleString('en'));
        if (ItemsValueBalance >= 0) {
            $("#items_balance").text(ItemsValueBalance.toLocaleString('en'));
        }
        var ItemsChargeBalance = parseFloat($("#ItemsChargeBalance").val());
        if (ItemsChargeBalance >= 0) {
        }
        var currency = $("#OperationalCurrency").val();
        $("#currency").text(currency);


        $('#gl_search').hide();
        $('#bind_gl').hide();
        $('#items_top').hide();
        //$('#ApplyDate').datepicker({
        //    dateFormat: 'mm/dd/yy',
        //    prevText: '<i class="fa fa-chevron-left"></i>',
        //    nextText: '<i class="fa fa-chevron-right"></i>',
        //    onSelect: function (selectedDate) {
        //        $('#ApplyDate').datepicker('option', 'minDate', selectedDate);
        //    }
        //});

        Date.prototype.toDateInputValue = (function () {
            var local = new Date(this);
            local.setMinutes(this.getMinutes() - this.getTimezoneOffset());
            return local.toJSON().slice(0, 10);
        });

        $(function () {
            $('#ApplyDate').val(new Date().toDateInputValue());
        });
        //$('#DeliveryDate').datepicker({
        //    dateFormat: 'mm/dd/yy',
        //    prevText: '<i class="fa fa-chevron-left"></i>',
        //    nextText: '<i class="fa fa-chevron-right"></i>',
        //    onSelect: function (selectedDate) {
        //        $('#DeliveryDate').datepicker('option', 'minDate', selectedDate);
        //    }
        //});

        var id = $("#PrePaymentId").val();
        if (id) {
            var url = '@Url.Action("ItemsList", "PrePayment")';
            $.ajax(
{
    type: "POST",
    data: { id: id },
    url: url,
    success: function (data) {
        $('#items').empty();
        var number = data.length;
        if (number > 0) {
            $('#items_top').show();
            $('<thead><tr><th style="text-align: center">#</th><th>Category</th><th style="text-align: left">Item </th><th style="text-align: center">Quantity</th><th style="text-align: left">UOM</th><th style="text-align: right">Unit Price</th><th style="text-align:right">VAT</th><th style="text-align: right">Total Amount</th><th  style="text-align:center;width:8%"></th></tr></thead>').appendTo('#items');
        }
        var j = 0;
        var sum = 0;
        var vat_sum = 0;
        $('<tbody>').appendTo('#items');
        $.each(data, function (i, d) {
            sum = sum + parseFloat(d.TotalAmount);
            vat_sum = vat_sum + parseFloat(d.VAT);
            j++;
            $('<tr><td align="center">' + j + '</th><td>' + d.ClassificationDesc + '</td><td>' + d.ItemDescription + '</td><td align="center">' + d.Quantity + '</td><td>' + d.UOM + '</td><td align="right">' + d.UnitPrice.toLocaleString('en') + '</td><td align="right">' + d.VAT.toLocaleString('en') + '</td><td align="right">' + d.TotalAmount.toLocaleString('en') + '</td><td style="text-align: center"><div class="btn-group"><button type="button" class="btn  btn-info btn-xs dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><span class="caret"></span><span class="sr-only">Toggle Dropdown</span></button> <ul class="dropdown-menu"> <li>  <a href="#" data-toggle="modal" data-target="#editItemModal" data-id="' + d.PrePaymentDetailId + '" data-classid="' + d.PrepaymentItemClassificationId + '" data-quantity="' + d.Quantity + '" data-item="' + d.ItemDescription + '" data-unitprice="' + d.UnitPrice + '" data-uom="' + d.UOM + '" data-totalamount="' + d.TotalAmount + '" class="editItemModal edit"><i class="fa fa-edit"></i> Edit</a></li><li><a href="#" data-toggle="modal" class="removeItems" data-id="' + d.PrePaymentDetailId + '" data-itemdesc="' + d.ItemDescription + '" ><i class="fa fa-trash-o"></i> Delete</a></li></div></td></tr>').appendTo('#items');

        });
        if (number > 0) {

            $('<tr><td align="right" colspan="6">Grand Total</td><td align="right">' + vat_sum.toLocaleString('en') + '</td><td align="right">' + sum.toLocaleString('en') + '</td><td></td></tr>').appendTo('#items');
        }
        $('</tbody>').appendTo('#items');
    },
    error: function (xhr) {
        //console.log(xhr.responseText);
       // alert("An error has occured, contact system support");
        swal("An error has occured DbException, contact system support"+response, { icon: "danger" });
        $("#divLoader").hide();
    },

});

            //Charging List
            var url2 = '@Url.Action("ChargingList", "PrePayment")';
            $.ajax(
{
    type: "POST",
    data: { id: id },
    url: url2,
    success: function (data) {
        $('#itemsCharge').empty();
        var number = data.length;
        $(".items_count").text(number);
        if (number > 0) {
            $('#bind_gl').show();
            $('<tr><thead><th style="text-align: center">#</th><th>Category</th><th style="text-align: left">Item </th><th style="text-align: center">Quantity</th><th style="text-align: right">Total Amount</th><th style="text-align:center;width:10%">Select</th></thead></tr>').appendTo('#itemsCharge');

        }
        var j = 0;
        var sum = 0;
        var vat_sum = 0;
        $('<tbody>').appendTo('#itemsCharge');
        $.each(data, function (i, d) {
            sum = sum + parseFloat(d.TotalAmount);
            vat_sum = vat_sum + parseFloat(d.VAT);
            j++;

            $('<tr><td align="center">' + j + '</th><td>' + d.ClassificationDesc + '</td><td>' + d.ItemDescription + '</td><td align="center">' + d.Quantity + '</td><td align="right">' + d.TotalAmount.toLocaleString('en') + '</td><td style="text-align: center"><input type="checkbox" value="' + d.TotalAmount + '" class="checkItem" id="' + d.PrePaymentDetailId + '"></td></tr>').appendTo('#itemsCharge');

        });
        if (number > 0) {
            $('<tr><td align="right" colspan="4">Grand Total</td><td align="right">' + sum.toLocaleString('en') + '</td><td></td></tr>').appendTo('#itemsCharge');
        }
        $('</tbody>').appendTo('#itemsCharge');
    },
    error: function (xhr) {
        //console.log(xhr.responseText);
       // alert("An error has occured, contact system support");
        swal("An error has occured DbException, contact system support"+response, { icon: "danger" });
        $("#divLoader").hide();
    },

});


            var url = '@Url.Action("GetPrePaymentCoa", "PrePayment")';
            $.ajax({
                type: "post",
                url: url,
                data: { id: id },
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    $('#gl_Accounts').empty();

                    var number = data.length;
                    if (number > 0) {
                        $('#gl_search').show();
                        $('<tr><thead><th style="text-align: center">#</th><th>Expenditure Line Item</th><th style="text-align: left">Funding Reference</th><th style="text-align: right">Amount</th><th style="text-align: center"></th></thead></tr>').appendTo('#gl_Accounts');

                    }
                    var p = 0;
                    var sum = 0;
                    $('<tbody>').appendTo('#gl_Accounts');
                    $.each(data, function (i, d) {
                        sum = sum + parseFloat(d.OperationalAmount);
                        p++;

                        $('<tr><td align="center">' + p + '</th><td>' + d.GlAccount.split("|").join("-") + '</td><td>' + d.FundingReference + '</td><td align="right">' + d.OperationalAmount.toLocaleString('en') + '</td> <td style="text-align: center"><div class="btn-group"><button type="button" class="btn  btn-info btn-xs dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><span class="caret"></span><span class="sr-only">Toggle Dropdown</span></button> <ul class="dropdown-menu"> <li><a href="#" data-toggle="modal" data-target="#editAdjust" data-id="5" class="editAdjust edit"><i class="fa fa-edit"></i> Edit</a></li><li><a href="#" data-toggle="modal" class="removeItems" data-id="" data-itemdesc="" ><i class="fa fa-trash-o"></i> Delete</a></li></div></td></tr>').appendTo('#gl_Accounts');

                    });
                    if (number > 0) {
                        $('<tr><td align="right" colspan="3">Total</td><td align="right">' + sum.toLocaleString('en') + '</td><td></td></tr>').appendTo('#gl_Accounts');
                    }
                    $('</tbody>').appendTo('#gl_Accounts');
                },
                failure: function (errmsg) {
                   // alert(errmsg);
                    swal(errmsg, { icon: "danger" });
                }
            });

        }
        //END LOAD PREVIOUS INSERTED DATA
        //FINISH LPO CREATION
        $("#complete").click(function (e) {
            var id = $("#PrePaymentId").val();
            if(id>0){
                var url = '@Url.Action("PrePayments", "PrePayment")';
                var new_url = url + "?PrePaymentId=" + id;
                window.location.replace(new_url);
            } else {
               // alert("Click Back button");
                swal("Click Back Button", { icon: "danger" });
            }

        });
        //END FINISH LPO CREATION

        //SUBMIT OR UPDATE BASIC INFORMATION
        $("#summary").click(function (e) {
            var description = $("#PrePaymentDesc").val();
            if (!description) {
               // alert("Please enter Description !");
                swal("Please enter Description ", { icon: "danger" });
                return
            }
            var lpo_amount = $("#PrePaymentAmount").val();
            if (!lpo_amount) {
                //alert("Please enter amount!");
                swal("Please enter amount ", { icon: "danger" });
                return
            }
            var sub_budget_class = $("#SubBudgetClass").val();
            if (!sub_budget_class) {
                //alert("Please select Sub Budget Class!");
                swal("Please enter Sub Budget Class ", { icon: "danger" });
                return
            }
            var currency_id = $("#OperationalCurrencyId").val();

            var payeeId = $("#PayeeId").val();
            if (!payeeId) {
               // alert("Please select supply!");
                swal("Please select supply ", { icon: "danger" });
                return
            }
            var applyDate = $("#ApplyDate").val();
            if (!applyDate) {
               // alert("Select Ordered Date!");
                swal("Please Enter Apply Date", { icon: "danger" });
                return
            }

            //var deliveryDate = $("#DeliveryDate").val();
            //if (!deliveryDate) {
            //    // alert("Select Delivery Date!");
            //    swal("Please Select Delivery Date ", { icon: "danger" });
            //    return
            //}


            var lpoNumber = $("#PrePaymentNo").val();
            var lpoId = $("#PrePaymentId").val();
            if (lpoId) {
                var lpoParams = { "PrePaymentId": lpoId, "PayeeId": payeeId, "PrePaymentDesc": description, "PrePaymentAmount": lpo_amount, "SubBudgetClass": sub_budget_class, "OperationalCurrencyId": currency_id };
                var form_data = {
                    "PrePaymentSummary": lpoParams,
                    //"ApplyDate": applyDate.split(".").join("-")
                    "ApplyDate": applyDate.split("/").join("-")
                    //"DeliveryDate": deliveryDate.split(".").join("-")
                }
                var url = '@Url.Action("UpdatePrePayment", "PrePayment")';
                $.ajax(
                {
                    type: "POST", //HTTP POST Method
                    url: url, // Controller/View
                    data: form_data,
                    success: function (response) {
                        if (response == "DbException") {
                            //alert(" An error has occured DbException, contact system support");
                            swal(" An error has occured DbException, contact system support", { icon: "danger" });
                            $("#divLoader").hide();
                        } else {
                           // alert("Change saved successfully");
                            swal(" Change saved successfully", { icon: "success" });
                        }
                    },
                    error: function (xhr) {
                        //console.log(xhr.responseText);
                        swal(" An error has occured DbException, contact system support"+response, { icon: "danger" });
                        $("#divLoader").hide();
                    },

                });

            }
            else {
                var lpoParams = { "PayeeId": payeeId, "PrePaymentDesc": description, "PrePaymentAmount": lpo_amount, "SubBudgetClass": sub_budget_class, "OperationalCurrencyId": currency_id };
                var form_data = {
                    "PrePaymentSummary": lpoParams,
                    "ApplyDate": applyDate
                    //"DeliveryDate": deliveryDate
                }
                var url = '@Url.Action("NewPrePayment", "PrePayment")';
                $.ajax(
                {
                    type: "POST", //HTTP POST Method
                    url: url, // Controller/View
                    data: form_data,
                    success: function (response) {
                        if (response == "DbException") {
                            //alert(" An error has occured DbException, contact system support");
                            swal(" An error has occured DbException, contact system support"+response, { icon: "danger" });
                            $("#divLoader").hide();
                        } else {

                            $("#PrePaymentId").val(response.PrePaymentId);
                            $("#prePaymentDetails #PrePaymentId").val(response.PrePaymentId);
                            $("#PrePaymentNo").val(response.PrePaymentNo);
                            //alert("Data saved successfully");
                            swal(" Data Saved Successfully", { icon: "success" });

                        }
                    },
                    error: function (xhr) {
                        //console.log(xhr.responseText);
                        //alert("An error has occured, contact system support");
                        swal(" An error has occured DbException, contact system support"+response, { icon: "danger" });
                        $("#divLoader").hide();
                    },

                });

            }
        });
        //END SUBMIT OR UPDATE BASIC INFORMATION

        //SUBMIT LPO ITEM
        $(function () {
            $("#prePaymentDetails").click(function (e) {
                e.preventDefault();
                var lpoId = $("#PrePaymentId").val();
                if (lpoId) {
                    var item_class = $("#PrepaymentItemClassificationId").val();
                    if (!item_class) {
                        //alert("Please select Item Class !");
                       swal("Please select Category ", { icon: "danger" });
                        return
                    }
                    var itemDesc = $("#ItemDesc").val();
                    if (!itemDesc) {
                        //alert("Please enter item !");
                        swal("Please enter Item ", { icon: "danger" });
                        return
                    }
                    //var uomId = $("#UomId").val();
                    //if (!uomId) {
                    //    // alert("Please select Unit of measure !");
                    //    swal("Please select Unit of measure", { icon: "danger" });
                    //    return
                    //}

                    var uom = $("#UOM").val();
                    if (!uom) {
                        swal("Please select Unit of measure !");
                        return
                    }
                    var quantity = $("#Quantity").val();
                    if (!quantity) {
                        // alert("Please enter quantity of items !");
                        swal("Please enter quantity of items ", { icon: "danger" });
                        return
                    }
                    if (quantity==0) {
                        // alert("Please quantity can not be zero !");
                        swal("Quantity can not be Zero ", { icon: "danger" });
                        return
                    }
                    var unitPrice = $("#UnitPrice").val();
                    if (!unitPrice) {
                       // alert("Please enter unit price !");
                        swal("Please enter unit price ", { icon: "danger" });
                        return
                    }
                    if (unitPrice==0) {
                        //alert("Please Unit price can not be zero !");
                        swal("Unit of Price can not be zero", { icon: "danger" });
                        return
                    }
                    var vatStatus ="";
                    var checkedValue = $("#VatStatus:checked").val();
                    if (checkedValue == "Applicable") {
                        vatStatus = "Applicable";
                    } else {
                        vatStatus = "Excempted";
                    }

                    var totalAmount = $("#TotalAmount").val();

                    var formData = { "PrePaymentId": lpoId, "PrepaymentItemClassificationId": item_class, "Quantity": quantity, "UnitPrice": unitPrice, "UOM": uom, "ItemDesc": itemDesc, "VatStatus": vatStatus, "TotalAmount": totalAmount };

                    var url = '@Url.Action("InsertPrePaymentDetails", "PrePayment")';
                    $.ajax(
                    {
                        type: "POST", //HTTP POST Method
                        url: url, // Controller/View
                        data: formData,
                        success: function (data) {
                            if (data == "DbException") {
                                //alert(" An error has occured DbException, contact system support");
                                swal("An error has occured DbException, contact system support ", { icon: "danger" });
                                $("#divLoader").hide();
                            } else if (data == "COASettings") {

                                swal("Chart of Account is incomplete,Please Contact Administrator", { icon: "danger" });
                                $("#divLoader").hide();
                            } else {
                                $('#ItemDesc').val("");
                                $('#Quantity').val("");
                                $('#UnitPrice').val("");
                                $('#ItemsValue').val("");
                                $('#VAT').val("");
                                $('#TotalAmount').val("");
                                $('#items').empty();
                                var number = data.length;
                                if (number > 0) {
                                    $('#items_top').show();
                                    $('<tr><thead><th style="text-align: center">#</th><th>Category</th><th style="text-align: left">Item </th><th style="text-align: center">Quantity</th><th style="text-align: right">Unit Price</th><th style="text-align:right">VAT</th><th style="text-align: right">Total Amount</th><th  style="text-align:center;width:15%">Action</th></thead></tr>').appendTo('#items');
                                }
                                var j = 0;
                                var sum = 0;
                                var vat_sum = 0;
                                $('<tbody>').appendTo('#items');

                                $.each(data, function (i, d) {
                                    sum = sum + parseFloat(d.TotalAmount);
                                    vat_sum = vat_sum + parseFloat(d.VAT);
                                    j++;
                                    $('<tr><td align="center">' + j + '</th><td>' + d.ClassificationDesc + '</td><td>' + d.ItemDescription + '</td><td align="center">' + d.Quantity + '</td><td align="right">' + d.UnitPrice + '</td><td align="right">' + d.VAT.toLocaleString('en') + '</td><td align="right">' + d.TotalAmount.toLocaleString('en') + '</td><td style="text-align: center"><div class="btn-group"><button type="button" class="btn  btn-info btn-xs dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><span class="caret"></span><span class="sr-only">Toggle Dropdown</span></button> <ul class="dropdown-menu"><li>  <a href="#" data-toggle="modal" data-target="#editItemModal" data-id="' + d.PrePaymentDetailId + '" data-classid="' + d.PrepaymentItemClassificationId + '" data-quantity="' + d.Quantity + '" data-item="' + d.ItemDescription + '" data-unitprice="' + d.UnitPrice + '" data-uom="' + d.UOM + '" data-totalamount="' + d.TotalAmount + '" class="editItemModal edit"><i class="fa fa-edit"></i> Edit</a></li><li><a href="#" data-toggle="modal" class="removeItems" data-id="' + d.PrePaymentDetailId + '" data-itemdesc="' + d.ItemDescription + '" ><i class="fa fa-trash-o"></i> Delete</a></li></div></td></tr>').appendTo('#items');
                                   });
                                if (number > 0) {

                                    $('<tr><td align="right" colspan="5">Grand Total</td><td align="right">' + vat_sum + '</td><td align="right">' + sum.toLocaleString('en') + '</td><td></td></tr>').appendTo('#items');
                                }
                                $("#ItemsValues").val(sum);
                                var lpo_amount = parseFloat($("#PrePaymentAmount").val());
                                var balance = lpo_amount - sum;
                                $("#items_balance").text(balance.toLocaleString('en'));
                                $('</tbody>').appendTo('#items');

                                swal("Item added successfully", { icon: "success" })
                                                .then((value) => {

                                                });

                                var id = $("#PrePaymentId").val();
                                //Charging List
                                var url2 = '@Url.Action("ChargingList", "PrePayment")';
                                $.ajax(
                {
                    type: "POST",
                    data: { id: id },
                    url: url2,
                    success: function (data) {
                        $('#itemsCharge').empty();
                        var number = data.length;
                        $(".items_count").text(number);
                        if (number > 0) {
                            $('#bind_gl').show();
                            $('<tr><thead><th style="text-align: center">#</th><th>Category</th><th style="text-align: left">Item </th><th style="text-align: center">Quantity</th><th style="text-align: right">Total Amount</th><th style="text-align:center;width:10%">Select</th></thead></tr>').appendTo('#itemsCharge');

                        }
                        var j = 0;
                        var sum = 0;
                        var vat_sum = 0;
                        $('<tbody>').appendTo('#itemsCharge');

                        $.each(data, function (i, d) {
                            sum = sum + parseFloat(d.TotalAmount);
                            vat_sum = vat_sum + parseFloat(d.VAT);
                            j++;

                            $('<tr><td align="center">' + j + '</th><td>' + d.ClassificationDesc + '</td><td>' + d.ItemDescription + '</td><td align="center">' + d.Quantity + '</td><td align="right">' + d.TotalAmount.toLocaleString('en') + '</td><td style="text-align: center"><input type="checkbox" value="' + d.TotalAmount + '" class="checkItem" id="' + d.PrePaymentDetailId + '"></td></tr>').appendTo('#itemsCharge');

                        });
                        if (number > 0) {
                            $('<tr><td align="right" colspan="4">Grand Total</td><td align="right">' + sum.toLocaleString('en') + '</td><td></td></tr>').appendTo('#itemsCharge');
                        }

                        $('</tbody>').appendTo('#itemsCharge');
                    },
                    error: function (xhr) {
                        //console.log(xhr.responseText);
                        //alert("An error has occured, contact system support");
                        swal("An error has occured DbException, contact system support ", { icon: "danger" });
                        $("#divLoader").hide();
                    },

                });


                            }
                        },
                        error: function (xhr) {
                            //console.log(xhr.responseText);
                            //alert("An error has occured, contact system support");
                            swal("An error has occured DbException, contact system support "+response, { icon: "danger" });
                            $("#divLoader").hide();
                        },

                    });
                } else {
                    swal("Please Insert Prepayment Basic Information on step one ", { icon: "danger" });
                }
            });
        });

        //End of Submit  LPO Item

        //Manage VAT
        $(function () { // this will be called when the DOM is ready
            $("#UnitPrice").keyup(function () {
                var unit_price = parseFloat($("#UnitPrice").val());
                var quantity = parseInt($("#Quantity").val());
                var lpo_amount = parseFloat($("#PrePaymentAmount").val());
                var items_value = parseFloat($("#ItemsValues").val());
                var total = unit_price * quantity;
                var checkedValue = $("#VatStatus:checked").val();

                if (checkedValue=="Applicable") {
                    var vat = parseFloat($("#VatPercentage").val());
                      var total_vat = total * vat / 100;
                      var grand_total = total_vat + unit_price * quantity;
                      if (items_value + grand_total <= lpo_amount) {
                          $("#TotalAmount").val(grand_total);
                      } else {
                          swal("Items value can not exceed Prepayment amount", { icon: "danger" })
                                                 .then((value) => { });
                          $("#TotalAmount").val("");
                          $("#UnitPrice").val("");
                      }


                } else {

                    if (items_value + total <= lpo_amount) {
                        $("#TotalAmount").val(total);
                    } else {
                        swal("Items value can not exceed Prepayment amount", { icon: "danger" })
                                                 .then((value) => { });
                        $("#TotalAmount").val("");
                        $("#UnitPrice").val("");
                    }



                     }



            });

        });
        $(function () { // this will be called when the DOM is ready
            $("#Quantity").keyup(function () {

                var unit_price = parseFloat($("#UnitPrice").val());
                if (unit_price > 0) {
                    var quantity = parseInt($("#Quantity").val());
                    var lpo_amount = parseFloat($("#PrePaymentAmount").val());
                    var items_value = parseFloat($("#ItemsValues").val());
                    var total = unit_price * quantity;

                    var checkedValue = $("#VatStatus:checked").val();

                    if (checkedValue == "Applicable") {
                        var vat = parseFloat($("#VatPercentage").val());
                        var total_vat = total * vat / 100;
                        var grand_total = total_vat + unit_price * quantity;
                        if (items_value + grand_total <= lpo_amount) {
                            $("#TotalAmount").val(grand_total);
                        } else {
                            alert("Items value can not exceed Prepayment amount!!!");

                            //swal("Items value can not exceed Pre Payment amount", { icon: "danger" })
                            //                     .then((value) => { });
                            $("#TotalAmount").val("");
                            $("#Quantity").val("");
                        }
                    } else {
                        if (items_value + total <= lpo_amount) {
                            $("#TotalAmount").val(total);
                        } else {
                            alert("Items value can not exceed Prepayment amount!!!");
                            //swal("Items value can not exceed Pre Payment amount", { icon: "danger" })
                            //                     .then((value) => { });
                            $("#TotalAmount").val("");
                            $("#Quantity").val("");
                        }
                    }
                }

            });

        });

        $("#VatStatus").change(function (e) {
            var unit_price = parseFloat($("#UnitPrice").val());
            var quantity = parseInt($("#Quantity").val());
            var lpo_amount = parseFloat($("#PrePaymentAmount").val());
            var items_value = parseFloat($("#ItemsValues").val());
            if ($(this).is(":checked")) {
                if (unit_price >= 0 && quantity >= 0) {
                    var total = unit_price * quantity;
                    var vat = parseFloat($("#VatPercentage").val());
                    var total_vat = total * vat / 100;
                    var grand_total = total_vat + unit_price * quantity;
                    if (items_value + grand_total <= lpo_amount) {
                        $("#TotalAmount").val(grand_total);
                    } else {
                        //alert("Items value can not exceed Pre Payment amount!!!");
                        swal("Items value can not exceed Prepayment amount", { icon: "danger" })
                                                 .then((value) => { });
                        $("#TotalAmount").val("");
                        $("#UnitPrice").val("");
                    }
                }

            } else {
                if (unit_price >= 0 && quantity >= 0) {
                    var total = unit_price * quantity;
                    if (items_value + total <= lpo_amount) {
                        $("#TotalAmount").val(total);
                    } else {
                        //alert("Items value can not exceed Pre Payment amount!!!");
                        swal("Items value can not exceed Prepayment amount", { icon: "danger" })
                                                 .then((value) => { });
                        $("#TotalAmount").val("");
                        $("#UnitPrice").val("");
                    }
                }
            }
        });


        $(function () { // this will be called when the DOM is ready
            $("#EditItem #UnitPrice").keyup(function () {
                var unit_price = parseFloat($("#EditItem #UnitPrice").val());
                var quantity = parseInt($("#EditItem #Quantity").val());
                var total = unit_price * quantity;
                var checkedValue = $("#EditItem #VatStatus:checked").val();

                if (checkedValue == "Applicable") {
                    var vat = parseFloat($("#VatPercentage").val());
                    var total_vat = total * vat / 100;
                    var grand_total = total_vat + unit_price * quantity;
                    $("#EditItem #TotalAmount").val(grand_total);



                } else {

                    $("#EditItem #TotalAmount").val(total);

                }



            });

        });
        $(function () { // this will be called when the DOM is ready
            $("#EditItem #Quantity").keyup(function () {

                var unit_price = parseFloat($("#EditItem #UnitPrice").val());
                if (unit_price > 0) {
                    var quantity = parseInt($("#EditItem #Quantity").val());
                    var total = unit_price * quantity;

                    var checkedValue = $("#EditItem #VatStatus:checked").val();

                    if (checkedValue == "Applicable") {
                        var vat = parseFloat($("#VatPercentage").val());
                        var total_vat = total * vat / 100;
                        var grand_total = total_vat + unit_price * quantity;

                        $("#EditItem #TotalAmount").val(grand_total);

                    } else {
                        $("#EditItem #TotalAmount").val(total);
                    }
                }

            });

        });
        $("#EditItem #VatStatus").change(function (e) {
            var unit_price = parseFloat($("#EditItem #UnitPrice").val());
            var quantity = parseInt($("#EditItem #Quantity").val());
            if ($(this).is(":checked")) {
                if (unit_price >= 0 && quantity >= 0) {
                    var total = unit_price * quantity;
                    var vat = parseFloat($("#VatPercentage").val());
                    var total_vat = total * vat / 100;
                    var grand_total = total_vat + unit_price * quantity;

                    $("#EditItem #TotalAmount").val(grand_total);

                }

            } else {
                if (unit_price >= 0 && quantity >= 0) {
                    var total = unit_price * quantity;
                    $("#EditItem #TotalAmount").val(total);

                }
            }
        });
        //End Manage VAT
        //End Manage VAT


        $("#gl_items_charge").on('click', function () {
            var itemIds = [];
            var sum = 0;
            $("input:checkbox.checkItem").each(function () {
                if ($(this).prop("checked")) {
                    itemIds.push($(this).val());
                    sum = sum + parseFloat($(this).val());
                    //alert($(this).attr('id'));
                    //$(this).hide();
                }

            });

            if (itemIds.length == 0) {
                $("#glItemsModal").modal("toggle")
                $('#glItemsModal').modal('hide');
                alert("No Item Selected!");
                return;
            } else {
                $("#search_exp_line").val("");
                $("#total_line_amount").val("");
                $("#total_items_amount").val(sum);
                $("#difference").val(sum);
                $("#glItemsModal").modal();

                $("#table_items_charge tr").each(function () {
                    $(this).find('td').each(function () {
                        if ($(this).text().trim() == "") {
                            $(this).closest("tr").remove();
                        };

                    });
                });
            }


        });
        $(function () { // this will be called when the DOM is ready
            $("#search_exp_line").keyup(function () {

                var search = $(this).val();
                var subBudgetClass = $("#SubBudgetClass").val();

                var formParams = {"GlAccountDesc": search,"subBudgetClass": subBudgetClass };
                var url = '@Url.Action("GetFundBalance", "PrePayment")';

                //Feed Datatable
                $.ajax({
                    type: "post",
                    url: url,
                    data: formParams,
                    contenttype: "application/json; charset=utf-8",
                    datatype: "json",
                    success: function (data) {
                        var i = 0;
                        $("#table_items_charge tr").each(function () {
                            $(this).closest("tr").find("input").each(function () {
                                if (this.value.trim() == "") {
                                    $(this).closest("tr").remove();
                                }
                            });
                        });

                        $.each(data, function (i, d) {
                            i++;
                            $('<tr><td>' + i + '</td><td align="left">' + d.GlAccount.split("|").join("-") + '</td><td>' + d.GlAccountDesc + '</td><td align="right">' + d.FundBalance + '</td><td>' + d.FundingRefNo + '</td><td><input type="text" placeholder="Amount" max="'+d.FundBalance+'" id="Id-' + i + '" onkeyup="amountChanged(this)"/></td></tr>').appendTo('#table_items_charge');
                        });
                    },
                    failure: function (errmsg) {
                        alert(errmsg);
                    }
                });





            });
        });
        var CountItems = parseInt($("#CountItems").val());
        if (CountItems >= 0) {
            $(".items_count").text(CountItems);
        }
        var CountGLs = parseInt($("#CountGLAccounts").val());
        if (CountGLs >= 0) {
            $(".gl_count").text(CountGLs);
        }
    });






    //MANAGE ITEMS CHARGE
    function remove(array, val) {
        var found = array.indexOf(val);
        while (found !== -1) {
            array.splice(found, 1);
            found = array.indexOf(val);
        }
    }
    var form_data_status = [];
    var all_amounts = {};
    var total_balance = 0;

    function amountChanged(e) {

        var max_value = parseFloat(e.max);
        var entered_value = parseFloat(e.value);
        if (max_value >= entered_value) {


            var i = 0;
            var sum_total = 0;
            $("#table_items_charge tr").each(function () {


                if (i > 0) {
                    var value = $(this).children().eq(5).find("input").val().trim();
                    if (value != "") {

                        var expense_amount = parseFloat($(this).children().eq(3).text());

                        var amount = parseFloat(value);
                        sum_total = sum_total + amount;

                    }
                }


                i++;
            });


            var total_items_value = parseFloat($("#total_items_amount").val());
            var balance = total_items_value - sum_total;
            if (balance >= 0) {
                $("#total_line_amount").val(sum_total);
                $("#difference").val(balance);
                      }
            else {
               // alert("Total Line Amount can not exceed " + total_items_value.toLocaleString('en'));

                swal("Total Line Amount can not exceed " + total_items_value.toLocaleString('en'), { icon: "danger" });

                e.value = "";
                var i = 0;
                var sum_total = 0;
                $("#table_items_charge tr").each(function () {


                    if (i > 0) {
                        var value = $(this).children().eq(5).find("input").val().trim();
                        if (value != "") {

                            var expense_amount = parseFloat($(this).children().eq(3).text());

                            var amount = parseFloat(value);
                            sum_total = sum_total + amount;

                        }
                    }


                    i++;
                });

                $("#total_line_amount").val(sum_total);
                var total_items_value = parseFloat($("#total_items_amount").val());
                var balance = total_items_value - sum_total;
                $("#difference").val(balance);






                         }
        } else {

            swal("Expense Amount can not exceed " + max_value.toLocaleString('en'), { icon: "danger" });
            e.value="";

            var i = 0;
            var sum_total = 0;
            $("#table_items_charge tr").each(function () {


                if (i > 0) {
                    var value = $(this).children().eq(5).find("input").val().trim();
                    if (value != "") {

                        var expense_amount = parseFloat($(this).children().eq(3).text());

                        var amount = parseFloat(value);
                        sum_total = sum_total + amount;

                    }
                }


                i++;
            });

            $("#total_line_amount").val(sum_total);
            var total_items_value = parseFloat($("#total_items_amount").val());
            var balance = total_items_value - sum_total;
            $("#difference").val(balance);

               }
    }


    function showModal() {
        $('#myModal').modal('show');
    }
    function computeTotalAmount() {
        var total_amount = 0;
        var difference = 0;
        var amount = "";
        var data = dt_basic.DataTable().rows().data();
        var obj = [];
        for (var i = 0; i < data.length; i++) {
            var amount = all_amounts["Id-" + i];
            console.log("============== AMOUNT ==================");
            console.log(amount);
            if (amount == undefined) {
                amount = "";
            }
            if (amount.trim()) {
                total_amount = parseFloat(total_amount) + parseFloat(amount);
                $("#total_line_amount").val(total_amount);

            }
        }
        try {
            difference = parseFloat($('#total_items_amount').val()) - parseFloat(total_amount);
            $('#difference').val(difference);
            total_balance = difference;

            if (difference < 0) {
                $("#difference").css({ 'color': 'red' });
            } else {
                $("#difference").css({ 'color': 'black' });
            }
        } catch (e) { }
    }
    $("#btn_save_gl_items").click(function () {
        var total_amount = 0;
        var difference = 0;
        if (form_data_status.length == 0) {
            var data = dt_basic.DataTable().rows().data();
            var voucherDetails = [];
            for (var i = 0; i < data.length; i++) {

                var amount = all_amounts["Id-" + i];
                if (amount == undefined) {
                    amount = "";
                }
                if (amount.trim()) {
                    var row = data.rows(i).data()[0];

                    //var row = data.rows(i).data()[0];
                    //dt_voucher_detail.fnAddData([row[1], row[2], row[4], amount]);
                    //total_amount = parseFloat(total_amount) + parseFloat(amount);
                    //$("#total_amount").text(total_amount);
                    voucherDetails.push({
                        "ExpenditureLineItem": row[1].split("-").join("|"),
                        "ItemDescription": row[2],
                        "ExpenseAmount": row[3],
                        "FundingReference": row[4],
                        "BaseAmountDetail": amount
                    });



                }

            }
            var itemIds = [];
            $("input:checkbox.checkItem").each(function () {
                if ($(this).prop("checked")) {
                    itemIds.push($(this).attr('id'));
                }
            });
            var lpoId = $("#PrePaymentId").val();
            var form_data = {
                "PrePaymentId": lpoId,
                "PrePaymentIds": itemIds,
                "VoucherDetails": voucherDetails
            }
            var url = '@Url.Action("ItemsCharge", "PrePayment")';
            $.ajax(
{
    type: "POST",
    url: url,
    data: form_data,
    success: function (response) {
        if (response == "DbException") {
            swal(" An error has occured DbException, contact system support", { icon: "danger" });
            $("#divLoader").hide();
        } else {
            $.smallBox({
                title: "GL Account assigned successfully",
                content: "<i class='fa fa-clock-o'></i> <i>1 seconds ago...</i>",
                color: "#2196F3",
                iconSmall: "fa fa-check bounce animated",
                timeout: 4000
            });
            //UPDATE COA
            var url = '@Url.Action("GetPrePaymentCoa", "PrePayment")';
            $.ajax({
                type: "post",
                url: url,
                data: { id:lpoId },
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    $('#gl_Accounts').empty();

                    var number = data.length;
                    $(".gl_count").text(number);
                    if (number > 0) {
                        $('#gl_search').show();
                        $('<tr><thead><th style="text-align: center">#</th><th>Expenditure Line Item</th><th style="text-align: left">Funding Reference</th><th style="text-align: right">Amount</th><th style="text-align: center">Action</th></thead></tr>').appendTo('#gl_Accounts');

                    }
                    var p = 0;
                    var sum = 0;
                    $('<tbody>').appendTo('#gl_Accounts');

                    $.each(data, function (i, d) {
                        sum = sum + parseFloat(d.OperationalAmount);
                        p++;

                        $('<tr><td align="center">' + p + '</th><td>' + d.GlAccount.split("|").join("-") + '</td><td>' + d.FundingReference + '</td><td align="right">' + d.OperationalAmount.toLocaleString('en') + '</td><td style="text-align: center"><div class="btn-group"><button type="button" class="btn  btn-info btn-xs dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><span class="caret"></span><span class="sr-only">Toggle Dropdown</span></button> <ul class="dropdown-menu"> <li><a href="#" data-toggle="modal" data-target="#editAdjust" data-id="' + d.PrePaymentDetailId + '" class="editAdjust edit"><i class="fa fa-edit"></i> Edit</a></li><li><a href="#" data-toggle="modal" class="removeItems" data-id="' + d.PrePaymentDetailId + '" data-itemdesc="' + d.ItemDescription + '" ><i class="fa fa-trash-o"></i> Delete</a></li></div></td></tr>').appendTo('#gl_Accounts');

                    });
                    if (number > 0) {
                        $('<tr><td align="right" colspan="3">Total</td><td align="right">' + sum.toLocaleString('en') + '</td><td></td></tr>').appendTo('#gl_Accounts');
                    }
                    $('</tbody>').appendTo('#gl_Accounts');
                },
                failure: function (errmsg) {
                   // alert(errmsg);
                    swal(errmsg, { icon: "danger" });
                }
            });

            //Charging List
            $('#bind_gl').hide();
            var url2 = '@Url.Action("ChargingList", "PrePayment")';
            $.ajax(
{
    type: "POST",
    data: { id: lpoId },
    url: url2,
    success: function (data) {
        $('#itemsCharge').empty();
        var number = data.length;
        $(".items_count").text(number);
        if (number > 0) {
            $('#bind_gl').show();
            $('<tr><thead><th style="text-align: center">#</th><th>Category</th><th style="text-align: left">Item </th><th style="text-align: center">Quantity</th><th style="text-align: right">Total Amount</th><th style="text-align:center;width:10%">Select</th></thead></tr>').appendTo('#itemsCharge');

        }
        var j = 0;
        var sum = 0;
        var vat_sum = 0;
        $.each(data, function (i, d) {
            sum = sum + parseFloat(d.TotalAmount);
            vat_sum = vat_sum + parseFloat(d.VAT);
            j++;
            $('<tbody>').appendTo('#itemsCharge');

            $('<tr><td align="center">' + j + '</td><td>' + d.ClassificationDesc + '</td><td>' + d.ItemDescription + '</td><td align="center">' + d.Quantity + '</td><td align="right">' + d.TotalAmount.toLocaleString('en') + '</td><td style="text-align: center"><input type="checkbox" value="' + d.TotalAmount + '" class="checkItem" id="' + d.PrePaymentDetailId + '"></td></tr>').appendTo('#itemsCharge');

        });
        if (number > 0) {
            $('<tr><td align="right" colspan="4">Grand Total</td><td align="right">' + sum.toLocaleString('en') + '</td><td></td></tr>').appendTo('#itemsCharge');
        }
        $('</tbody>').appendTo('#itemsCharge');
    },
    error: function (xhr) {
        //console.log(xhr.responseText);
        //alert("An error has occured, contact system support");
        swal(" An error has occured DbException, contact system support"+response, { icon: "danger" });
        $("#divLoader").hide();
    },

});




        }
    },
    error: function (xhr) {
        //console.log(xhr.responseText);
        //alert("An error has occured, contact system support");
        swal(" An error has occured DbException, contact system support"+response, { icon: "danger" });
        $("#divLoader").hide();
    },

});

            difference = parseFloat($('#total_items_amount').val()) - parseFloat(total_amount);
            if (difference < 0) {
                //alert("Difference Cannot be negative..");
                swal(" Difference can not be Negative", { icon: "danger" });
                dt_voucher_detail.fnClearTable();
            } else {
                $('#glItemsModal').modal('hide');
            }
        } else {
           // alert("Please Fix Form Errors....");
            swal("Please Fix Form Errors", { icon: "danger" });
        }


    });
    $("#btn_save_items_charge").click(function () {
        var i = 0;
        var count = 0;
        var voucherDetails = [];
        var sum_total = 0;
        var total_items_value = parseFloat($("#total_items_amount").val());
        $("#table_items_charge tr").each(function () {


            if (i > 0) {
                var value = $(this).children().eq(5).find("input").val().trim();
                if (value !="") {
                    var line = $(this).children().eq(1).text().split("-").join("|");
                    var item_description = $(this).children().eq(2).text();
                    var expense_amount = parseFloat($(this).children().eq(3).text());
                    var funding_ref = $(this).children().eq(4).text();
                    var amount = parseFloat(value);
                    sum_total = sum_total + amount;
                    voucherDetails.push({
                        "ExpenditureLineItem": line,
                        "ItemDescription": item_description,
                        "ExpenseAmount": expense_amount,
                        "FundingReference": funding_ref,
                        "BaseAmountDetail": amount
                    });
                    count++;
                   }
                }


            i++;
        });
        if (count == 0) {
           // alert("Please Enter Amount !");
            swal("Please Enter Amount", { icon: "danger" });
        }
        else if (total_items_value != sum_total) {
            //alert();
            swal("Please Total Line Amount must be equal to " + total_items_value.toLocaleString('en') + " !", { icon: "danger" });
        }
        else {
            $('#glItemsModal').modal('hide');
            var itemIds = [];
            $("input:checkbox.checkItem").each(function () {
                if ($(this).prop("checked")) {
                    itemIds.push($(this).attr('id'));
                }
            });
            var lpoId = $("#PrePaymentId").val();
            var form_data = {
                "PrePaymentId": lpoId,
                "PrePaymentIds": itemIds,
                "VoucherDetails": voucherDetails
            }
            $('#bind_gl').hide();
            var url = '@Url.Action("ItemsCharge", "PrePayment")';
            $.ajax(
{
    type: "POST",
    url: url,
    data: form_data,
    success: function (response) {
        if (response == "DbException") {
            //alert(" An error has occured DbException, contact system support");
            swal("An error has occured DbException, contact system support"+response, { icon: "danger" });
            $("#divLoader").hide();
        } else {
            swal("GL Account(s) assigned successfully", { icon: "success" })
                            .then((value) => {

                            });
            //UPDATE COA
            var url = '@Url.Action("GetPrePaymentCoa", "PrePayment")';
            $.ajax({
                type: "post",
                url: url,
                data: { id: lpoId },
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    $('#gl_Accounts').empty();

                    var number = data.length;
                    $(".gl_count").text(number);
                    if (number > 0) {
                        $('#gl_search').show();
                        $('<tr><thead><th style="text-align: center">#</th><th>Expenditure Line Item</th><th style="text-align: left">Funding Reference</th><th style="text-align: right">Amount</th><th style="text-align: center">Action</th></thead></tr>').appendTo('#gl_Accounts');

                    }
                    var p = 0;
                    var sum = 0;
                    $('<tbody>').appendTo('#gl_Accounts');

                    $.each(data, function (i, d) {
                        sum = sum + parseFloat(d.OperationalAmount);
                        p++;

                        $('<tr><td align="center">' + p + '</th><td>' + d.GlAccount.split("|").join("-") + '</td><td>' + d.FundingReference + '</td><td align="right">' + d.OperationalAmount.toLocaleString('en') + '</td><td style="text-align: center"><div class="btn-group"><button type="button" class="btn  btn-info btn-xs dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><span class="caret"></span><span class="sr-only">Toggle Dropdown</span></button> <ul class="dropdown-menu"> <li><a href="#" data-toggle="modal" data-target="#editAdjust" data-id="' + d.PrePaymentDetailId + '" class="editAdjust edit"><i class="fa fa-edit"></i> Edit</a></li><li><a href="#" data-toggle="modal" class="removeItems" data-id="' + d.PrePaymentDetailId + '" data-itemdesc="' + d.ItemDescription + '" ><i class="fa fa-trash-o"></i> Delete</a></li></div></td></tr>').appendTo('#gl_Accounts');

                    });
                    if (number > 0) {
                        $('<tr><td align="right" colspan="3">Total</td><td align="right">' + sum.toLocaleString('en') + '</td><td></td></tr>').appendTo('#gl_Accounts');
                    }
                    $('</tbody>').appendTo('#gl_Accounts');
                },
                failure: function (errmsg) {
                   // alert(errmsg);
                    swal(errmsg, { icon: "danger" });
                }
            });

            //Charging List
            $('#bind_gl').hide();
            var url2 = '@Url.Action("ChargingList", "PrePayment")';
            $.ajax(
{
    type: "POST",
    data: { id: lpoId },
    url: url2,
    success: function (data) {
        $('#itemsCharge').empty();
        var number = data.length;
        $(".items_count").text(number);
        if (number > 0) {
            $('#bind_gl').show();
            $('<tr><thead><th style="text-align: center">#</th><th>Category</th><th style="text-align: left">Item </th><th style="text-align: center">Quantity</th><th style="text-align: right">Total Amount</th><th style="text-align:center;width:10%">Select</th></thead></tr>').appendTo('#itemsCharge');

        }
        var j = 0;
        var sum = 0;
        var vat_sum = 0;
        $.each(data, function (i, d) {
            sum = sum + parseFloat(d.TotalAmount);
            vat_sum = vat_sum + parseFloat(d.VAT);
            j++;
            $('<tbody>').appendTo('#itemsCharge');

            $('<tr><td align="center">' + j + '</td><td>' + d.ClassificationDesc + '</td><td>' + d.ItemDescription + '</td><td align="center">' + d.Quantity + '</td><td align="right">' + d.TotalAmount.toLocaleString('en') + '</td><td style="text-align: center"><input type="checkbox" value="' + d.TotalAmount + '" class="checkItem" id="' + d.PrePaymentDetailId + '"></td></tr>').appendTo('#itemsCharge');

        });
        if (number > 0) {
            $('<tr><td align="right" colspan="4">Grand Total</td><td align="right">' + sum.toLocaleString('en') + '</td><td></td></tr>').appendTo('#itemsCharge');
        }
        $('</tbody>').appendTo('#itemsCharge');
    },
    error: function (xhr) {
        //console.log(xhr.responseText);
        //alert("An error has occured, contact system support");
        swal("An error has occured DbException, contact system support"+response, { icon: "danger" });
        $("#divLoader").hide();
    },

});




        }
    },
    error: function (xhr) {
        //console.log(xhr.responseText);
       // alert("An error has occured, contact system support");
        swal("An error has occured DbException, contact system support"+response, { icon: "danger" });
        $("#divLoader").hide();
    },

});

        }

    });
    //END MANAGE ITEMS CHARGE
    $(function () { // this will be called when the DOM is ready
        $("#supplier_name").keyup(function () {
            var supplier_name = $("#supplier_name").val();

            var formParam = { "Search": supplier_name};
            var url = '@Url.Action("GetPayee", "PrePayment")';

            //Feed Datatable
            $.ajax({
                type: "post",
                url: url,
                data: formParam,
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    $("#search_supplier").empty();
                    var i = 0;
                    var number = data.length;
                    if (number > 0) {

                        $('<tr><thead><th>#</th><th>BIC</th><th>Supplier Name</th><th>Payee Code</th><th>Bank Name</th><th>Bank Account No</th><th>Address</th><th>Action</th></thead></tr>').appendTo('#search_supplier');

                    }
                    $('<tbody>').appendTo('#search_supplier');
                    $.each(data, function (i, d) {
                        i++;
                        $('<tr><td>' + i + '</td><td align="left">' + d.BIC + '</td><td>' + d.AccountName + '</td><td>' + d.PayeeCode + '</td><td>' + d.BankName + '</td><td>' + d.Accountnumber + '</td><td>' + d.Address1 + '</td><td><a href="#" onclick="supplierClicked(\'' + d.AccountName + '\',' + d.PayeeDetailId + ')" data-toggle="modal" class="pick_supplier" data-id="' + d.PayeeDetailId + '" data-supname="' + d.AccountName + '" ><i class="glyphicon glyphicon-plus-sign"></i></a></td></tr>').appendTo('#search_supplier');
                    });
                    $('</tbody>').appendTo('#search_supplier');
                },
                failure: function (errmsg) {
                    alert(errmsg);
                    //swal(errmsg, { icon: "danger" });
                }
            });


        });
    });
    function supplierClicked(name, id) {
        $("#PayeeDetailId").val(id);
        $("#Payeename").val(name);
        $('#payeeModal').modal('hide');

    }
    $(function () { // this will be called when the DOM is ready
        $('#payeeModal  .pick_supplier').click(function () {
            $('#payeeModal').modal('hide');
          
        });
    });

    //REMOVE ITEM
    $(document).on('click', '.removeItems', function () {
        var id = $(this).data('id');
        var itemdesc = $(this).data('itemdesc');
        swal({
            title: 'Confirmation',
            text: "Do you what to Delete " + itemdesc + " ?",
            buttons: [
              'No',
              'Yes'
            ],
        }).then(function (isConfirm) {
            if (isConfirm) {
                var url = '@Url.Action("DeleteItem", "PrePayment")';
                $.ajax(
    {
        type: "POST",
        url: url,
        data: { id: id },
        success: function (response) {
            if (response == "Success") {

                swal("Deleted successfully!", { icon: "success" });
                var id = $("#PrePaymentId").val();
                var url = '@Url.Action("ItemsList", "PrePayment")';
                $.ajax(
    {
        type: "POST",
        data: { id: id },
        url: url,
        success: function (data) {
            $('#items').empty();
            var number = data.length;
            if (number > 0) {
                $('#items_top').show();
                $('<thead><tr><th style="text-align: center">#</th><th>Category</th><th style="text-align: left">Item </th><th style="text-align: center">Quantity</th><th style="text-align: left">UOM</th><th style="text-align: right">Unit Price</th><th style="text-align:right">VAT</th><th style="text-align: right">Total Amount</th><th  style="text-align:center;width:8%">Action</th></tr></thead>').appendTo('#items');
            }
            var j = 0;
            var sum = 0;
            var vat_sum = 0;
            $('<tbody>').appendTo('#items');
            $.each(data, function (i, d) {
                sum = sum + parseFloat(d.TotalAmount);
                vat_sum = vat_sum + parseFloat(d.VAT);
                j++;
                $('<tr><td align="center">' + j + '</th><td>' + d.ClassificationDesc + '</td><td>' + d.ItemDescription + '</td><td align="center">' + d.Quantity + '</td><td>' + d.UOM + '</td><td align="right">' + d.UnitPrice.toLocaleString('en') + '</td><td align="right">' + d.VAT.toLocaleString('en') + '</td><td align="right">' + d.TotalAmount.toLocaleString('en') + '</td><td style="text-align: center"><div class="btn-group"><button type="button" class="btn  btn-info btn-xs dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><span class="caret"></span><span class="sr-only">Toggle Dropdown</span></button> <ul class="dropdown-menu"> <li>  <a href="#" data-toggle="modal" data-target="#editItemModal" data-id="' + d.PrePaymentDetailId + '" data-classid="' + d.PrepaymentItemClassificationId + '" data-quantity="' + d.Quantity + '" data-item="' + d.ItemDescription + '" data-unitprice="' + d.UnitPrice + '" data-uom="' + d.UOM + '" data-totalamount="' + d.TotalAmount + '" class="editItemModal edit"><i class="fa fa-edit"></i> Edit</a></li><li><a href="#" data-toggle="modal" class="removeItems" data-id="' + d.PrePaymentDetailId + '" data-itemdesc="' + d.ItemDescription + '" ><i class="fa fa-trash-o"></i> Delete</a></li></div></td></tr>').appendTo('#items');

            });
            if (number > 0) {

                $('<tr><td align="right" colspan="6"><strong>Grand Total</strong></td><td align="right"><strong>' + vat_sum.toLocaleString('en') + '</strong></td><td align="right"><strong>' + sum.toLocaleString('en') + '</strong></td><td></td></tr>').appendTo('#items');
            }
            $('</tbody>').appendTo('#items');
            $("#ItemsValues").val(sum);
            var lpo_amount = parseFloat($("#PrePaymentAmount").val());
            var balance = lpo_amount - sum;
            $("#items_balance").text(balance.toLocaleString('en'));
        },
        error: function (xhr) {
            //console.log(xhr.responseText);
            alert("An error has occured, contact system support");
            $("#divLoader").hide();
        },

    });

                //Charging List
                var url2 = '@Url.Action("ChargingList", "PrePayment")';
                $.ajax(
    {
        type: "POST",
        data: { id: id },
        url: url2,
        success: function (data) {
            $('#itemsCharge').empty();
            var number = data.length;
            $(".items_count").text(number);
            if (number > 0) {
                $('#bind_gl').show();
                $('<thead><tr><th style="text-align: right" colspan="7"><input type="checkbox" class="cbCheckAllItems"  /></th></tr></thead>').appendTo('#itemsCharge');
                $('<thead><tr><th style="text-align: center">#</th><th>Category</th><th style="text-align: left">Item </th><th style="text-align: center">Quantity</th><th style="text-align: left">UOM</th><th style="text-align: right">Total Amount</th><th style="text-align:center;width:10%">Select</th></tr></thead>').appendTo('#itemsCharge');

            }
            var j = 0;
            var sum = 0;
            var vat_sum = 0;
            $('<tbody>').appendTo('#itemsCharge');
            $.each(data, function (i, d) {
                sum = sum + parseFloat(d.TotalAmount);
                vat_sum = vat_sum + parseFloat(d.VAT);
                j++;

                $('<tr><td align="center">' + j + '</th><td>' + d.ClassificationDesc + '</td><td>' + d.ItemDescription + '</td><td align="center">' + d.Quantity + '</td><td>' + d.UOM + '</td><td align="right">' + d.TotalAmount.toLocaleString('en') + '</td><td style="text-align: center"><input type="checkbox" value="' + d.TotalAmount + '" class="checkItem" id="' + d.PrePaymentDetailId + '"></td></tr>').appendTo('#itemsCharge');

            });
            if (number > 0) {
                $('<tr><td align="right" colspan="5"><strong>Grand Total</strong></td><td align="right"><strong>' + sum.toLocaleString('en') + '</strong></td><td></td></tr>').appendTo('#itemsCharge');
            }
            $('</tbody>').appendTo('#itemsCharge');
        },
        error: function (xhr) {
            //console.log(xhr.responseText);
            alert("An error has occured, contact system support");
            $("#divLoader").hide();
        },

    });


                var url = '@Url.Action("GetPrePaymentCoa", "PrePayment")';
                $.ajax({
                    type: "post",
                    url: url,
                    data: { id: id },
                    contenttype: "application/json; charset=utf-8",
                    datatype: "json",
                    success: function (data) {
                        $('#gl_Accounts').empty();
                        var number = data.length;
                        $(".gl_count").text(number);
                        if (number > 0) {
                            $('#gl_search').show();
                            $('<thead><tr><th style="text-align: center">#</th><th>Expenditure Line Item</th><th style="text-align: left">Item Description</th><th style="text-align: left">Funding Reference</th><th style="text-align: right">Amount</th><th style="text-align: center">Action</th></tr></thead>').appendTo('#gl_Accounts');

                        }
                        var p = 0;
                        var sum = 0;
                        $('<tbody>').appendTo('#gl_Accounts');
                        $.each(data, function (i, d) {
                            sum = sum + parseFloat(d.OperationalAmount);
                            p++;

                            $('<tr><td align="center">' + p + '</th><td>' + d.GlAccount.split("|").join("-") + '</td><td>' + d.GlAccountDesc + '</td><td>' + d.FundingReference + '</td><td style="text-align: center"><div class="btn-group"><button type="button" class="btn  btn-info btn-xs dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><span class="caret"></span><span class="sr-only">Toggle Dropdown</span></button> <ul class="dropdown-menu"> <li><a href="#" data-toggle="modal" class="remove_gl" data-id="' + d.PrePaymentCoaId + '" data-lineitem="' + d.GlAccount.split("|").join("-") + '" ><i class="fa fa-edit"></i>Deselect</a></li></div></td></tr>').appendTo('#gl_Accounts');

                        });
                        if (number > 0) {
                            $('<tr><td align="right" colspan="4"><strong>Total</strong></td><td align="right"><strong>' + sum.toLocaleString('en') + '</strong></td><td></td></tr>').appendTo('#gl_Accounts');
                        }
                        $('</tbody>').appendTo('#gl_Accounts');
                    },
                    failure: function (errmsg) {
                        swal(errmsg);
                    }
                });


            }
            else {

                swal("Failed to delete ,DbException");
            }
        },
        error: function (xhr) {
            swal(error);
            $("#divLoader").hide();
        },

    });
            } else {
                swal("Cancelled", "No change was made");
            }
        });

    });
        //END REMOVE ITEM

        $(document).on('click', '.remove_gl', function () {
            var id = $(this).data('id');
            var lineitem = $(this).data('lineitem');

            swal({
                title: 'Confirmation',
                text: "Do you what to deselect " + lineitem + " ? Note:All item(s) charged by this GL will be uncharged !",
                buttons: [
                  'No',
                  'Yes'
                ],
            }).then(function (isConfirm) {
                if (isConfirm) {
                    var url = '@Url.Action("DeselectGLAccount", "PrePayment")';
                    $.ajax(
        {
            type: "POST",
            url: url,
            data: { id: id },
            success: function (response) {
                if (response == "Success") {

                    swal("GL Account successfully deselected!", { icon: "success" });
                    var id = $("#PrePaymentId").val();
                    var url = '@Url.Action("ItemsList", "PrePayment")';
                    $.ajax(
        {
            type: "POST",
            data: { id: id },
            url: url,
            success: function (data) {
                $('#items').empty();
                var number = data.length;
                if (number > 0) {
                    $('#items_top').show();
                    $('<thead><tr><th style="text-align: center">#</th><th>Category</th><th style="text-align: left">Item </th><th style="text-align: center">Quantity</th><th style="text-align: left">UOM</th><th style="text-align: right">Unit Price</th><th style="text-align:right">VAT</th><th style="text-align: right">Total Amount</th><th  style="text-align:center;width:8%">Action</th></tr></thead>').appendTo('#items');
                }
                var j = 0;
                var sum = 0;
                var vat_sum = 0;
                $('<tbody>').appendTo('#items');
                $.each(data, function (i, d) {
                    sum = sum + parseFloat(d.TotalAmount);
                    vat_sum = vat_sum + parseFloat(d.VAT);
                    j++;
                    $('<tr><td align="center">' + j + '</th><td>' + d.ClassificationDesc + '</td><td>' + d.ItemDescription + '</td><td align="center">' + d.Quantity + '</td><td>' + d.UOM + '</td><td align="right">' + d.UnitPrice.toLocaleString('en') + '</td><td align="right">' + d.VAT.toLocaleString('en') + '</td><td align="right">' + d.TotalAmount.toLocaleString('en') + '</td><td style="text-align: center"><div class="btn-group"><button type="button" class="btn  btn-info btn-xs dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><span class="caret"></span><span class="sr-only">Toggle Dropdown</span></button> <ul class="dropdown-menu"> <li>  <a href="#" data-toggle="modal" data-target="#editItemModal" data-id="' + d.PrePaymentDetailId + '" data-classid="' + d.PrepaymentItemClassificationId + '" data-quantity="' + d.Quantity + '" data-item="' + d.ItemDescription + '" data-unitprice="' + d.UnitPrice + '" data-uom="' + d.UOM + '" data-totalamount="' + d.TotalAmount + '" class="editItemModal edit"><i class="fa fa-edit"></i> Edit</a></li><li><a href="#" data-toggle="modal" class="removeItems" data-id="' + d.PrePaymentDetailId + '" data-itemdesc="' + d.ItemDescription + '" ><i class="fa fa-trash-o"></i> Delete</a></li></div></td></tr>').appendTo('#items');

                });
                if (number > 0) {

                    $('<tr><td align="right" colspan="6"><strong>Grand Total</strong></td><td align="right"><strong>' + vat_sum.toLocaleString('en') + '</strong></td><td align="right"><strong>' + sum.toLocaleString('en') + '</strong></td><td></td></tr>').appendTo('#items');
                }
                $('</tbody>').appendTo('#items');
                $("#ItemsValues").val(sum);
                var lpo_amount = parseFloat($("#PrePaymentAmount").val());
                var balance = lpo_amount - sum;
                $("#items_balance").text(balance.toLocaleString('en'));
            },
            error: function (xhr) {
                //console.log(xhr.responseText);
                alert("An error has occured, contact system support");
                $("#divLoader").hide();
            },

        });
                    //Charging List
                    var url2 = '@Url.Action("ChargingList", "PrePayment")';
                    $.ajax(
        {
            type: "POST",
            data: { id: id },
            url: url2,
            success: function (data) {
                $('#itemsCharge').empty();
                var number = data.length;
                $(".items_count").text(number);
                if (number > 0) {
                    $('#bind_gl').show();
                    $('<thead><tr><th style="text-align: right" colspan="7"><input type="checkbox" class="cbCheckAllItems"  /></th></tr></thead>').appendTo('#itemsCharge');
                    $('<thead><tr><th style="text-align: center">#</th><th>Category</th><th style="text-align: left">Item </th><th style="text-align: center">Quantity</th><th style="text-align: left">UOM</th><th style="text-align: right">Total Amount</th><th style="text-align:center;width:10%">Select</th></tr></thead>').appendTo('#itemsCharge');

                }
                var j = 0;
                var sum = 0;
                var vat_sum = 0;
                $('<tbody>').appendTo('#itemsCharge');
                $.each(data, function (i, d) {
                    sum = sum + parseFloat(d.TotalAmount);
                    vat_sum = vat_sum + parseFloat(d.VAT);
                    j++;

                    $('<tr><td align="center">' + j + '</th><td>' + d.ClassificationDesc + '</td><td>' + d.ItemDescription + '</td><td align="center">' + d.Quantity + '</td><td>' + d.UOM + '</td><td align="right">' + d.TotalAmount.toLocaleString('en') + '</td><td style="text-align: center"><input type="checkbox" value="' + d.TotalAmount + '" class="checkItem" id="' + d.PrePaymentDetailId + '"></td></tr>').appendTo('#itemsCharge');

                });
                if (number > 0) {
                    $('<tr><td align="right" colspan="5"><strong>Grand Total</strong></td><td align="right"><strong>' + sum.toLocaleString('en') + '</strong></td><td></td></tr>').appendTo('#itemsCharge');
                }
                $('</tbody>').appendTo('#itemsCharge');
            },
            error: function (xhr) {
                //console.log(xhr.responseText);
                alert("An error has occured, contact system support");
                $("#divLoader").hide();
            },

        });


                    var url = '@Url.Action("GetPrePaymentCoa", "PrePayment")';
                    $.ajax({
                        type: "post",
                        url: url,
                        data: { id: id },
                        contenttype: "application/json; charset=utf-8",
                        datatype: "json",
                        success: function (data) {
                            $('#gl_Accounts').empty();

                            var number = data.length;
                            $(".gl_count").text(number);
                            if (number > 0) {
                                $('#gl_search').show();
                                $('<thead><tr><th style="text-align: center">#</th><th>Expenditure Line Item</th><th style="text-align: left">Item Description</th><th style="text-align: left">Funding Reference</th><th style="text-align: right">Amount</th><th style="text-align: center">Action</th></tr></thead>').appendTo('#gl_Accounts');

                            }
                            var p = 0;
                            var sum = 0;
                            $('<tbody>').appendTo('#gl_Accounts');
                            $.each(data, function (i, d) {
                                sum = sum + parseFloat(d.OperationalAmount);
                                p++;

                                $('<tr><td align="center">' + p + '</th><td>' + d.GlAccount.split("|").join("-") + '</td><td>' + d.GlAccountDesc + '</td><td>' + d.FundingReference + '</td><td align="right">' + d.OperationalAmount.toLocaleString('en') + '</td><td style="text-align: center"><div class="btn-group"><button type="button" class="btn  btn-info btn-xs dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><span class="caret"></span><span class="sr-only">Toggle Dropdown</span></button> <ul class="dropdown-menu"> <li><a href="#" data-toggle="modal" class="remove_gl" data-id="' + d.PrePaymentCoaId + '" data-lineitem="' + d.GlAccount.split("|").join("-") + '" ><i class="fa fa-edit"></i>Deselect</a></li></div></td></tr>').appendTo('#gl_Accounts');

                            });
                            if (number > 0) {
                                $('<tr><td align="right" colspan="4"><strong>Total</strong></td><td align="right"><strong>' + sum.toLocaleString('en') + '</strong></td><td></td></tr>').appendTo('#gl_Accounts');
                            }
                            $('</tbody>').appendTo('#gl_Accounts');
                        },
                        failure: function (errmsg) {
                            swal(errmsg);
                        }
                    });


                }
                else {

                    swal("Failed to delete ,DbException");
                }
            },
            error: function (xhr) {
                swal(error);
                $("#divLoader").hide();
            },

        });
                } else {
                    swal("Cancelled", "No change was made");
                }
            });
        });

        //========== INPUT THOUSAND SEPARATOR ==================

        $("#PrePaymentAmountx").on("keyup input paste cut", function () {
            $("#PrePaymentAmountx").val(inputThousandSeparator(this.value))
        })

        var OldVal = 0
        function inputThousandSeparator(NewVal) {
            if (NewVal) {
                try {
                    NewVal = parseFloat(NewVal.split(",").join(""))
                    if (typeof NewVal == 'number'
                        && !Number.isNaN(NewVal)) {
                        OldVal = NewVal;
                        return NewVal.toLocaleString()
                    } else {
                        return OldVal
                    }
                } catch (e) {
                    console.log(e)
                }
            }
        }
    </script>
}
