@model IFMIS.Areas.IFMISTZ.Models.PrePaymentVM
@{
    ViewBag.Title = "Create Prepayment";
}



<style type="text/css">
    body {
        margin-top: 40px;
    }

    .stepwizard-step p {
        margin-top: 10px;
    }

    .stepwizard-row {
        display: table-row;
    }

    .stepwizard {
        display: table;
        width: 100%;
        position: relative;
    }

    .stepwizard-step button[disabled] {
        opacity: 1 !important;
        filter: alpha(opacity=100) !important;
    }

    .stepwizard-row:before {
        top: 14px;
        bottom: 0;
        position: absolute;
        content: " ";
        width: 100%;
        height: 1px;
        background-color: #ccc;
        z-order: 0;
    }

    .stepwizard-step {
        display: table-cell;
        text-align: center;
        position: relative;
    }

    .loadingImg {
        display: none;
    }

    .search-btn {
        border: 1px solid #ccc;
        border-radius: 4px;
        padding: 5px;
        padding-right: 10px;
    }

    .search-container {
        display: inline-flex;
        flex: 1 1 300px;
        position: relative;
        border: 1px solid #ccc;
        border-radius: 5px;
        overflow: hidden;
        padding-left: 10px;
    }

    .name-input-container {
        display: inline-flex;
        flex: 1 1 300px;
        position: relative;
        overflow: hidden;
    }

    .search-icon {
        padding: 0.5rem;
    }

    .search-button {
        background: #538AC5;
        border: 0;
        color: white;
        padding: 8px;
        border-radius: 0;
    }

    input[type=number] {
        padding: 8px;
        border: 1px solid #ccc;
        width: 205px;
    }

    input[type=text] {
        padding: 5px;
        border: 1px solid #ccc;
    }

    input[type=search] {
        padding: 4px;
        border: hidden;
        border-radius: 4px;
    }

    textarea {
        border: 1px solid #ccc;
    }

    select {
        padding: 8px;
        border: 1px solid #ccc;
        resize: vertical;
        width: 230px;
    }

    .action-btn {
        width: 100px;
        color: white;
    }

    .form-label {
        text-align: right;
    }

    td {
        padding: 5px;
    }

    .info-box {
        padding: 10px;
        background-color: #ECF3F8;
        text-align: center;
        border: 1px solid #ccc;
        border-radius: 5px;
    }

    #itemUL li {
        margin-left: -40px;
        border-bottom: 1px solid silver;
        height: 26px;
        padding-left: 5px;
        padding-top: 8px;
        cursor: pointer;
    }
</style>

<div id="content" style="margin: 5px; padding-top: 30px">
    <div class="row">


    </div>
    <!-- widget grid -->
    <section id="widget-grid" class="">


        <!-- START ROW -->

        <div class="row">

            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">

                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">

                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2> Create Prepayment </h2>

                    </header>


                    <div>
                        <div class="widget-body " style="padding-top:10px;width:100%">

                            <!----WIZARD HEADING -->

                            <div class="stepwizard">
                                <div class="stepwizard-row setup-panel">
                                    <div class="stepwizard-step">
                                        <a href="#step-1" type="button" class="btn btn-primary btn-circle">1</a>
                                        <p><strong>Basic Information </strong></p>
                                    </div>

                                    <div class="stepwizard-step">
                                        <a href="#step-2" type="button" class="btn btn-default btn-circle" disabled="disabled">2</a>
                                        <p><strong>Items</strong></p>
                                    </div>
                                    <div class="stepwizard-step">
                                        <a href="#step-3" type="button" class="btn btn-default btn-circle" disabled="disabled">3</a>
                                        <p><strong>GL Accounts</strong></p>
                                    </div>
                                </div>
                            </div>
                            <br />
                            <br />

                            @Html.HiddenFor(model => model.VatPercentage)
                            @Html.HiddenFor(model => model.CountItems)
                            @Html.HiddenFor(model => model.CountGLAccounts)
                            @Html.HiddenFor(model => model.ItemsValues)
                            @Html.HiddenFor(model => model.ItemCharge)
                            @Html.HiddenFor(model => model.ItemsValueBalance)
                            @Html.HiddenFor(model => model.ItemsChargeBalance)
                            @Html.HiddenFor(model => model.SubBudgetClass)
                            <!----WIZARD BODY -->


                            @using (Html.BeginForm("CreatePrePayment", "PrePayment", FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = "return SubmitSummary(this)" }))
                            {
                                @Html.AntiForgeryToken()

                                <div class="form-horizontal">


                                    <!---- STEP 1 START HERE -->
                                    <div class="row setup-content" id="step-1">

                                        <div class="col-xs-12">


                                            <div class="col-md-12">


                                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                                @Html.HiddenFor(model => model.PrePaymentId)
                                                @Html.HiddenFor(model => model.VatPercentage)
                                                @Html.HiddenFor(model => model.CountItems)
                                                @Html.HiddenFor(model => model.CountGLAccounts)
                                                @Html.HiddenFor(model => model.ItemsValues)
                                                @Html.HiddenFor(model => model.ItemCharge)
                                                @Html.HiddenFor(model => model.ItemsValueBalance)
                                                @Html.HiddenFor(model => model.ItemsChargeBalance)
                                                @Html.HiddenFor(model => model.SubBudgetClass)
                                                @Html.HiddenFor(model => model.PayeeDetailId)
                                                @Html.HiddenFor(model => model.Success)
                                                <div class="form-group">

                                                    <label class="col-md-2 control-label">Payee</label>
                                                    <div class="col-md-3">

                                                        <div class="input-group">

                                                            <span class="input-group-addon" onclick="SearchPayee()"><i class="fa fa-search"></i></span>
                                                            @Html.EditorFor(model => model.Payeename, new { htmlAttributes = new { @class = "form-control", @required = "required", autocomplete = "off", @placeholder = "Search", @onclick = "SearchPayee()" } })
                                                            @Html.ValidationMessageFor(model => model.Payeename, "", new { @class = "text-danger" })

                                                        </div>

                                                    </div>
                                                    @Html.LabelFor(model => model.PayeeType, htmlAttributes: new { @class = "control-label   col-md-2" })
                                                    <div class="col-md-3">
                                                        @Html.DropDownListFor(model => model.PayeeType, Model.PayeeTypesList, "Select ---", new { @class = "form-control", @required = "required" })

                                                        @Html.ValidationMessageFor(model => model.PayeeType, "", new { @class = "text-danger" })
                                                    </div>

                                                </div>
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.PrePaymentDesc, htmlAttributes: new { @class = "control-label   col-md-2" })
                                                    <div class="col-md-3">
                                                        @Html.EditorFor(model => model.PrePaymentDesc, new { htmlAttributes = new { @class = "form-control", @required = "required", rows = "2", maxlength = 250 } })

                                                        @Html.ValidationMessageFor(model => model.PrePaymentDesc, "", new { @class = "text-danger" })
                                                    </div>
                                                    @Html.LabelFor(model => model.CurrencyRateViewId, htmlAttributes: new { @class = "control-label   col-md-2" })
                                                    <div class="col-md-3">
                                                        @Html.DropDownList("CurrencyRateViewId", Model.SubBudgetClassList, "Select ---", new { @class = "form-control", @required = "required" })
                                                        @Html.ValidationMessageFor(model => model.CurrencyRateViewId, "", new { @class = "text-danger" })
                                                    </div>

                                                </div>
                                                <div class="form-group">

                                                    @Html.LabelFor(model => model.ApplyDate, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-3">
                                                        <table>
                                                            <tr>
                                                                <td>
                                                                    <div class="flatpickr date-group">
                                                                        <input type="text" placeholder="Select Date.."
                                                                               data-input
                                                                               style="width:100px;border:none"
                                                                               autocomplete="off" name="ApplyDate" id="ApplyDate">
                                                                        <a class="input-button" title="open" data-toggle href="#">
                                                                            <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                                                        </a>
                                                                    </div>
                                                                </td>
                                                            </tr>
                                                        </table>
                                                    </div>
                                                    @Html.LabelFor(model => model.PrePaymentAmount, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-3">
                                                        <div class="input-group">

                                                            <span class="input-group-addon" id="currencyDisp">@Html.DisplayFor(model => model.OperationalCurrency)</span>
                                                            @Html.EditorFor(model => model.PrePaymentAmount, new { htmlAttributes = new { @class = "form-control", @required = "required", @autocomplete = "off" } })
                                                            @Html.ValidationMessageFor(model => model.PrePaymentAmount, "", new { @class = "text-danger" })
                                                        </div>

                                                    </div>
                                                </div>

                                                <div class="form-group">


                                                </div>



                                            </div>
                                            <div class="col-md-offset-2">
                                                <a href="@Url.Action("PrePayments","PrePayment")" style="margin-right:5px" type="submit" class="btn btn-info pull-left"><i class="glyphicon glyphicon-arrow-left"></i> Back  </a>

                                                <button class="btn btn-info" id="save_summary" style="margin-right:2px">
                                                    <i class="glyphicon glyphicon-floppy-disk"></i> Save
                                                </button>

                                                <button class="btn btn-info nextBtn" type="button">Next &nbsp;<span class="glyphicon glyphicon-arrow-right" aria-hidden="true"></span></button>
                                            </div>

                                        </div>
                                        <div align="center">
                                            <img src="~/Media/Images/ajax_loader.gif" class="loadingImg" />
                                        </div>
                                    </div>
                                </div>
                   
                            }

                            <!----STEP 2 START HERE -->
                            <div class="row setup-content" id="step-2">
                                <form id="lpo">
                                    <div class="form-horizontal">
                                        <div class="col-xs-12">
                                            <div class="col-md-12">


                                                <div class="form-group">

                                                    @Html.Label("Class", htmlAttributes: new { @class = "control-label   col-md-2" })
                                                    <div class="col-md-3">
                                                        @Html.DropDownList("ItemClassificationId", Model.ItemClassificationsList, "Select ", new { @class = "form-control" })
                                                        @Html.ValidationMessageFor(model => model.ItemClassificationId, "", new { @class = "text-danger" })
                                                    </div>
                                                    @Html.Label("Quantity", htmlAttributes: new { @class = "control-label   col-md-2" })
                                                    <div class="col-md-3">
                                                        <input type="text" name="Quantity" id="Quantity" value="" class="form-control" autocomplete="off">
                                                        @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.ItemDesc, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-3">
                                                        <div id="itemDiv">
                                                            @Html.EditorFor(model => model.ItemDesc, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                                                        </div>
                                                        @Html.ValidationMessageFor(model => model.ItemDesc, "", new { @class = "text-danger" })
                                                    </div>
                                                    @Html.Label("Unit Price", htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-3">
                                                        <amount-input name="UnitPrice" id="UnitPrice" style="width:100%;">
                                                            @*@Html.EditorFor(model => model.UnitPrice, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })*@
                                                            @Html.ValidationMessageFor(model => model.UnitPrice, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.UOM, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-3">
                                                        @Html.DropDownListFor(model => model.UOM, Model.UOMList, "Select ", new { @class = "form-control" })
                                                        @Html.ValidationMessageFor(model => model.UOM, "", new { @class = "text-danger" })
                                                    </div>
                                                    @Html.Label("Total Amount", htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-3">
                                                        @Html.EditorFor(model => model.TotalAmount, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                                        @Html.ValidationMessageFor(model => model.TotalAmount, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <div class="form-group">

                                                    @Html.LabelFor(model => model.VatStatus, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-3" style="padding-top:8px">
                                                        @*@Html.CheckBoxFor(model => model.VatStatus)*@
                                                        <input type="checkbox" name="VatStatus" value="Applicable" id="VatStatus">
                                                    </div>
                                                    <div class="col-md-6">

                                                    </div>
                                                </div>



                                            </div>


                                            <div class="col-md-offset-2">
                                                <a href="#step-1" style="margin-right:5px" type="submit" class="btn btn-info pull-left"><i class="glyphicon glyphicon-arrow-left"></i> Back  </a>

                                                <button type="button" id="prePaymentDetails" class="btn btn-info" style="margin-right:2px">
                                                    <i class="glyphicon glyphicon-floppy-disk"></i> Save
                                                </button>

                                                <button class="btn btn-info nextBtn" type="button">Next &nbsp;<span class="glyphicon glyphicon-arrow-right" aria-hidden="true"></span></button>
                                            </div>
                                            <p align="right" id="basic_info">Prepayment Amount :<strong> @Html.DisplayFor(model => model.PrePaymentAmount)<span id="display_amount"></span></strong> @Html.DisplayFor(model => model.OperationalCurrency) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
                                            <div align="center">
                                                <img src="~/Media/Images/ajax_loader.gif" class="loadingImg" />
                                            </div>
                                            <br />

                                            <div class="widget-body no-padding">

                                                <br />
                                                <div class="row" id="items_top">

                                                    <div class="col-xs-9 col-sm-3 col-md-3 col-lg-3">

                                                    </div>
                                                    <div class="col-xs-3 col-sm-2 col-md-2 col-lg-2 text-right">



                                                    </div>
                                                    <div class="col-xs-3 col-sm-7 col-md-7 col-lg-7 text-right">
                                                        <strong>
                                                            <span>Currency:<span id="currency"></span></span>
                                                            &nbsp;&nbsp;
                                                            <span>Total Prepayment:<span id="lpo_amount"></span></span>
                                                            &nbsp;&nbsp;
                                                            <span>Balance:<span id="items_balance"></span></span>
                                                            &nbsp;&nbsp;
                                                        </strong>
                                                    </div>

                                                </div>




                                                <div class="custom-scroll" style="height:210px; overflow-y: scroll;">


                                                    <table align="center" class="table table-bordered table-hover table-condensed" id="items" style="width:97%"></table>

                                                </div>



                                            </div>




                                        </div>
                                    </div>
                                </form>
                            </div>


                            <!----STEP 3 START HERE -->
                            <div class="row setup-content" id="step-3">
                                <div class="col-xs-12">

                                    <div class="col-md-12">

                                        <div class="jarviswidget" data-widget-colorbutton="false" data-widget-colorbutton="false" data-widget-editbutton="false" data-widget-togglebutton="false" data-widget-deletebutton="false" data-widget-fullscreenbutton="false" data-widget-custombutton="false">

                                            <header>
                                                <h2><strong></strong> <i></i></h2>

                                                <ul id="widget-tab-1" class="nav nav-tabs pull-right">

                                                    <li class="active">

                                                        <a data-toggle="tab" href="#hr1"> <i class="fa fa-lg fa-arrow-circle-o-down"></i> <span class="hidden-mobile hidden-tablet"> Items List<span class="badge inbox-badge margin-right-13 items_count" style="background-color:#2196F3"></span></span> </a>

                                                    </li>

                                                    <li>
                                                        <a data-toggle="tab" href="#hr2"> <i class="fa fa-lg fa-arrow-circle-o-up"></i> <span class="hidden-mobile hidden-tablet"> GL Accounts List <span class="badge inbox-badge margin-right-13 gl_count" style="background-color:#2196F3"></span></span></a>
                                                    </li>

                                                </ul>

                                            </header>

                                            <!-- widget div-->
                                            <div>

                                                <!-- widget edit box -->
                                                <div class="jarviswidget-editbox">
                                                    <!-- This area used as dropdown edit box -->

                                                </div>
                                                <!-- end widget edit box -->
                                                <!-- widget content -->
                                                <div class="widget-body no-padding">

                                                    <!-- widget body text-->

                                                    <div class="tab-content padding-10">
                                                        <div class="tab-pane fade in active" id="hr1">
                                                            <div class="widget-body no-padding">

                                                                <br />
                                                                <div class="row" id="bind_gl">

                                                                    <div class="col-xs-9 col-sm-3 col-md-3 col-lg-3">
                                                                        @*<div class="input-group">
                                                                                <span class="input-group-addon"><i class="fa fa-search"></i></span>
                                                                                <input class="form-control" id="prepend" placeholder="Filter" type="text">
                                                                            </div>*@
                                                                    </div>
                                                                    <div class="col-xs-3 col-sm-1 col-md-1 col-lg-1 text-right">



                                                                    </div>
                                                                    <div class="col-xs-3 col-sm-7 col-md-7 col-lg-7 text-right">

                                                                        <button type="button" class="btn btn-info" id="gl_items_charge">
                                                                            <i class="fa fa-plus"></i> <span class="hidden-mobile">Add GL Account</span>
                                                                        </button>

                                                                    </div>

                                                                </div>

                                                                <br />



                                                                <div class="custom-scroll" style="height:170px; overflow-y: scroll;">


                                                                    <table align="center" class="table table-bordered table-hover table-condensed" id="itemsCharge" style="width:97%"></table>

                                                                </div>



                                                            </div>

                                                        </div>
                                                        <div class="tab-pane fade" id="hr2">
                                                            <div class="widget-body no-padding">

                                                                <br />
                                                                <div class="row" id="gl_search">

                                                                    <div class="col-xs-9 col-sm-3 col-md-3 col-lg-3">
                                                                        <div class="input-group">

                                                                        </div>
                                                                    </div>


                                                                </div>


                                                                <div class="custom-scroll" style="height:170px; overflow-y: scroll;">


                                                                    <table align="center" class="table table-bordered table-hover table-condensed" id="gl_Accounts" style="width:93%"></table>


                                                                </div>



                                                            </div>

                                                        </div>
                                                    </div>

                                                    <!-- end widget body text-->
                                                    <!-- widget footer -->
                                                    <div class="widget-footer text-right">

                                                        <span class="onoffswitch-title">

                                                        </span>


                                                    </div>
                                                    <!-- end widget footer -->

                                                </div>
                                                <!-- end widget content -->

                                            </div>
                                            <!-- end widget div -->

                                        </div>

                                        <div class="col-md-offset-2">
                                            <a href="@Request.UrlReferrer" style="margin-right:5px" type="submit" class="btn btn-info pull-left"><i class="glyphicon glyphicon-arrow-left"></i> Back  </a>
                                            <button type="button" class="btn btn-info cancel_lpo" style="margin-right:2px;display:none">
                                                <i class="glyphicon revicon-cancel"></i> Cancel
                                            </button>
                                            <button type="button" id="complete" class="btn btn-info" style="margin-right:2px">
                                                <i class="glyphicon glyphicon-floppy-disk"></i> Finish
                                            </button>

                                        </div>
                                    </div>

                                </div>



                            </div>







                        </div>



                    </div>


            </div>
            </article>

    </div>
    </section>

    </div>

    <!----------- Edit Item ----------------->
    <div class="modal fade" id="editItemModal" style="left:4%">

        <div class="modal-dialog" style="width:70%;">
            <div class="modal-content panel-info">


                <div class="modal-header panel-heading">
                    <a href="#" class="close" data-dismiss="modal">&times;</a>
                    <h3 class="modal-title"> Edit Item</h3>

                </div>

                @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "EditItem" }))
            {
                    <div class="modal-body">
                        <div class="form-horizontal">
                            <div class="form-group">
                                @Html.HiddenFor(model => model.PrePaymentDetailId)
                                @Html.Label("Class", htmlAttributes: new { @class = "control-label   col-md-2" })
                                <div class="col-md-3">
                                    @Html.DropDownList("ItemClassificationId", Model.ItemClassificationsList, "Select ", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ItemClassificationId, "", new { @class = "text-danger" })
                                </div>
                                @Html.Label("Quantity", htmlAttributes: new { @class = "control-label   col-md-2" })
                                <div class="col-md-3">
                                    <input type="text" name="Quantity" id="Quantity" value="" class="form-control" autocomplete="off">
                                    @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.ItemDesc, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-3">
                                    @Html.EditorFor(model => model.ItemDesc, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ItemDesc, "", new { @class = "text-danger" })
                                </div>
                                @Html.Label("Unit Price", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-3">
                                    <amount-input name="UnitPrice" id="UnitPrice" style="width:100%;">
                                        @*<input type="text" name="UnitPrice" id="UnitPrice" class = "form-control">*@
                                        @*@Html.EditorFor(model => model.UnitPrice, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })*@
                                        @Html.ValidationMessageFor(model => model.UnitPrice, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.UOM, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-3">
                                    @Html.DropDownListFor(model => model.UOM, Model.UOMList, "Select ", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.UOM, "", new { @class = "text-danger" })
                                </div>
                                @Html.Label("Total Amount", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-3">
                                    @Html.EditorFor(model => model.TotalAmount, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.TotalAmount, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">

                                @Html.LabelFor(model => model.VatStatus, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-3" style="padding-top:8px">
                                    @*@Html.CheckBoxFor(model => model.VatStatus)*@
                                    <input type="checkbox" name="VatStatus" value="Applicable" id="VatStatus">
                                </div>
                                <div class="col-md-6">

                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-info" id="btn_save_edit_item">
                            <i class="fa fa-save"></i>Save
                        </button>
                        <button class="btn btn-info" data-dismiss="modal">
                            <i class="fa  fa-times"></i>Cancel
                        </button>
                    </div>
                }
            </div>
        </div>
    </div>

    <!----------- Search Payee ----------------->
    <div class="modal fade" id="payeeModal" style="left:4%">

        <div class="modal-dialog" style="width:80%;">
            <div class="modal-content panel-info">


                <div class="modal-header panel-heading">
                    <a href="#" class="close" data-dismiss="modal">&times;</a>
                    <h3 class="modal-title"> Search Payee</h3>

                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-6">
                        </div>
                        <div class="col-md-6">
                            <div class="search-container submit-btn" style="float:right">
                                <i class="fa fa-search search-icon"></i>
                                <input type="search" name="search" placeholder="Search..." id="searchbox">
                            </div>
                        </div>
                    </div>
                    <table class="table" id="dt_search_payee">
                        <thead>
                            <tr>
                                <th>#</th>
                                <th>PaymentId</th>
                                <th>BIC</th>
                                <th>Payee Name</th>
                                <th>Payee Code</th>
                                <th>Bank Name</th>
                                <th>Bank Account No</th>
                                <th>Payee Type</th>
                                <th>Address</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>

                </div>
                <div class="modal-footer">
                    <button class="btn btn-info" data-dismiss="modal">
                        <i class="fa  fa-times"></i>Close
                    </button>
                </div>
            </div>
        </div>
    </div>
    <!----------- End Search Payee----------------->
    <!----------- Search Items ----------------->
    <div class="modal fade" id="itemsModal" style="left:4%">

        <div class="modal-dialog" style="width:60%;">
            <div class="modal-content panel-info">


                <div class="modal-header panel-heading">
                    <a href="#" class="close" data-dismiss="modal">&times;</a>
                    <h3 class="modal-title"> Search Item</h3>

                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-6">
                        </div>
                        <div class="col-md-6">
                            <div class="search-container submit-btn" style="float:right">
                                <i class="fa fa-search search-icon"></i>
                                <input type="search" name="search" placeholder="Search..." id="searchItem">
                            </div>
                        </div>
                    </div>
                    <table class="table" id="dt_search_item">
                        <thead>
                            <tr>
                                <th style="width:5%">#</th>
                                <th>Item Name</th>
                                <th style="width:15%">Action</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>

                </div>
                <div class="modal-footer">
                    <button class="btn btn-info" data-dismiss="modal">
                        <i class="fa  fa-times"></i>Close
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!----------- Search  GL----------------->
    <div class="modal fade" id="glItemsModal" style="left:4%">

        <div class="modal-dialog" style="width:80%;">
            <div class="modal-content panel-info">
                <div class="modal-header panel-heading">
                    <a href="#" class="close" data-dismiss="modal">&times;</a>
                    <h3 class="modal-title"> Search Gl Item(s)</h3>
                </div>
                <div class="modal-body">
                    <table>
                        <tr>
                            <td style="padding:5px">Total Items Amount</td>
                            <td style="padding:5px">
                                <input type="text" disabled id="total_items_amount">
                            </td>

                            <td style="padding:5px">Total Line Amount</td>
                            <td style="padding:5px">
                                <input value="0" type="text" disabled id="total_line_amount">
                            </td>

                            <td style="padding:5px">Difference</td>
                            <td style="padding:5px">
                                <input value="0" type="text" disabled id="difference" style="width:250px">
                            </td>
                        </tr>
                    </table>
                    <div>
                        <div class="row" style="padding-top:1%;padding-bottom:1%">
                            <div class="col-md-6">
                            </div>
                            <div class="col-md-6">
                                <div class="search-container " style="float:right">
                                    <i class="fa fa-search search-icon"></i>
                                    <input type="search" name="search" placeholder="Search..." id="search_gl">
                                </div>
                            </div>
                        </div>
                        <div align="center">
                            <img src="/Media/Images/ajax_loader.gif" class="loadingImg" />
                        </div>
                        <table id="dt_search_gl_item" class="table table-striped table-bordered table-hover table-condensed">
                            <thead>
                                <tr>
                                    <th>#</th>
                                    <th>Expenditure Line Item</th>
                                    <th>Item Description</th>
                                    <th>Fund Balance</th>
                                    <th>Funding Reference</th>
                                    <th>Expense Amount</th>
                                </tr>
                            </thead>
                        </table>

                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-info" id="btn_save_items_charge">
                            <i class="fa fa-save"></i>Save
                        </button>
                        <button class="btn btn-info" data-dismiss="modal">
                            <i class="fa  fa-times"></i>Cancel
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    @*<div class="modal fade" id="glItemsModal" style="left:4%">

            <div class="modal-dialog" style="width:80%;">
                <div class="modal-content panel-info">

                    <div class="modal-header panel-heading">
                        <a href="#" class="close" data-dismiss="modal">&times;</a>
                        <h3 class="modal-title"> Item(s) Charge By GL Account(s)</h3>

                    </div>
                    <div class="modal-body">
                        <div class="form-group">
                            <label class="col-lg-2 col-sm-2 col-xs-2 control-label" style="top:10px">Total Item(s) Value</label>
                            <div class="col-lg-2 col-sm-2 col-xs-2">
                                <input type="text" value="0" readonly id="total_items_amount">
                            </div>


                            <label class="col-lg-2 col-sm-2 col-xs-2 control-label" style="top:10px">Total Line Amount</label>
                            <div class="col-lg-2 col-sm-2 col-xs-2">
                                <input value="0" type="text" readonly id="total_line_amount">
                            </div>
                            <label class="col-lg-1 col-sm-1 col-xs-1 control-label" style="top:10px">Balance</label>
                            <div class="col-lg-2 col-sm-2 col-xs-2">
                                <input value="0" type="text" readonly id="difference">
                            </div>
                            <br />
                            <br />
                            <br />
                            <div class="row">

                                <div class="col-xs-9 col-sm-3 col-md-3 col-lg-3">
                                    <div class="input-group">
                                        <span class="input-group-addon"><i class="fa fa-search"></i></span>
                                        <input class="form-control" id="search_exp_line" placeholder="Search" type="text">
                                    </div>
                                </div>


                            </div>
                            <table id="table_items_charge" class="table table-striped table-bordered table-hover" width="100%">
                                <thead>
                                    <tr>
                                        <th data-hide="phone">ID</th>
                                        <th data-class="expand"> Expenditure Line Item</th>
                                        <th data-hide="phone"> Item Description</th>

                                        <th data-hide="phone,tablet"> Fund Balance</th>
                                        <th data-hide="phone,tablet">Funding Reference</th>
                                        <th data-hide="phone,tablet"> Expense Amount</th>
                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>


                        </div>
                        <div class="modal-footer">
                            <button type="submit" class="btn btn-info" id="btn_save_items_charge">
                                <i class="fa fa-save"></i>Save
                            </button>
                            <button class="btn btn-info" data-dismiss="modal">
                                <i class="fa  fa-times"></i>Cancel
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>*@


    @section pagespecific {
        <!-- PAGE RELATED PLUGIN(S) -->
        <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
        <script type="text/javascript">

        //$("#saveLoader").toggle(false);

        //function validateForm(formObj) {

            
        //    // $(".loadingImg").show();
        //    $("#saveLoader").toggle(true);
        //    $("#form_submision").prop('disabled', true);
        //    formObj.submit.disabled = true;
        //    formObj.submit.value = 'Please Wait...';
        //    successMessage = true;
        //    return true;
        //}
        function SubmitSummary(formData) {
            if (formData.PayeeType.value == '' || formData.PrePaymentDesc.value == '' || formData.CurrencyRateViewId.value == '' || formData.PrePaymentAmount.value == '' || formData.Payeename.value == '') {
                swal("Please Fill All the Fields");
                return false;
            }

            $("#save_summary").prop('disabled', true);
            var url = '@Url.Action("SavePrePayment", "PrePayment")';
            var ajaxConfig = {
                type: "post",
                url: url,
                data: new FormData(formData),
                success: function (result) {
                    $("#save_summary").prop('disabled', false);
                    if (result.response == "Success") {
                        swal("Basic information saved successfully", { icon: "success" })
                                                                   .then((value) => {
                                                                       @*var url = '@Url.Action("CreatePrePayment", "PrePayment")';
                                                                       var new_url = url + "?id=" + result.id;
                                                                       window.location.replace(new_url);*@
                                                                       $("#PrePaymentId").val(result.id);
                                                                       $("#SubBudgetClass").val(result.sbc);
                                                                       $("#currency").text(result.currency);
                                                                       $("#display_amount").text($("#PrePaymentAmount").val());
                                                                       $("#lpo_amount").text($("#PrePaymentAmount").val());
                                                                   });
                    }
                    else if (result.response == "Updated") {
                        swal("Basic information updated successfully", { icon: "success" })
                                                                  .then((value) => {
                                                                       $("#SubBudgetClass").val(result.sbc);
                                                                       $("#currency").text(result.currency);
                                                                       $("#display_amount").text($("#PrePaymentAmount").val());
                                                                       $("#lpo_amount").text($("#PrePaymentAmount").val());
                                                                       $("#items_balance").text(result.balance.toLocaleString('en'));
                                                                  });
                    } else {
                        swal("Failed  due to DbException xx");
                    }
                }
            }
            $("#save_summary").prop('disabled', false);
            if ($(formData).attr('enctype') == "multipart/form-data") {
                ajaxConfig["contentType"] = false;
                ajaxConfig["processData"] = false;
            }
            $.ajax(ajaxConfig);
            return false;
        }
    // =========== END Save Prepayment summary ====================
    $("#dt_search_payee_wrapper .dt-toolbar").remove();
    function SearchPayee() {
        $('#payeeModal').modal('show');
    }
    // ============= SHOW PAYEE===============
        function round(value, decimals) {
            return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);
        }
    var dt_selected_payee = $('#dt_selected_payee').dataTable({
        "data": [],
        "columnDefs": [{
            "targets": [0, 1],
            "visible": false
        }],
        "columns": [
            { title: "Payee DetailId" },
            { title: "Payee BIC" },
            { title: "Payee Name" },
            { title: "Payee Code" },
            { title: "Bank Name" },
            { title: "Payee Type" },
            { title: "Bank Account No" },
            { title: "Address" }
        ]
    });


    // ============= SEARCH PAYEEE ===========

    Date.prototype.toDateInputValue = (function () {
        var local = new Date(this);
        local.setMinutes(this.getMinutes() - this.getTimezoneOffset());
        return local.toJSON().slice(0, 10);
    });

    $(function () {
        $('#ApplyDate').val(new Date().toDateInputValue());
        $('#InvoiceDate').val(new Date().toDateInputValue());
    });

    var dt_search_payee = $('#dt_search_payee').dataTable({
        "aoColumnDefs": [{ "bVisible": false, "aTargets": [1, 2] }],
    });

    $("#searchbox").on("keyup search input paste cut", function () {
        if (!this.value) {
            dt_search_payee.fnClearTable();
        } else {
            searchPayeeTableUpdate(this.value);
        }
    });
    var dt_search_item = $('#dt_search_item').dataTable();

    $("#searchItem").on("keyup search input paste cut", function () {
        if (!this.value) {
            dt_search_item.fnClearTable();
        } else {
            searchItemTableUpdate(this.value);
        }
    });
    var dt_search_gl_item = $('#dt_search_gl_item').dataTable();
    //$("#search_gl").on("keyup search input paste cut", function () {
    //    if (!this.value) {
    //        dt_search_gl_item.fnClearTable();
    //    } else {
    //        searchGLTableUpdate(this.value);
    //    }
    //});

    function payeeClicked(rowId) {
        var data = dt_search_payee.DataTable().rows().data();
        var row = data[rowId];
        $("#PayeeDetailId").val(row[1]);
        $("#Payeename").val(row[3]);
        $("#payeeModal").modal("hide");
    }

        // =========== END SEARCH PAYEE ====================
    function searchPayeeTableUpdate(search) {
        var url = '@Url.Action("GetPayee", "PaymentVoucher")';
        $.ajax({
            type: "get",
            url: url + "/?search=" + search + "",
            contenttype: "application/json; charset=utf-8",
            datatype: "json",
            success: function (response) {
                data = response.data;
                dt_search_payee.fnClearTable();
                for (var i = 0; i < data.length; i++) {
                    dt_search_payee.fnAddData([i + 1,
                       data[i]["PayeeDetailId"],
                       data[i]["BIC"],
                       data[i]["AccountName"],
                       data[i]["PayeeCode"],
                       data[i]["BankName"],
                       data[i]["Accountnumber"],
                       data[i]["PayeeType"],
                       data[i]["Address1"],
                       '<a href="#" onclick="payeeClicked(' + i + ')"><i class="glyphicon glyphicon-plus-sign"></i></a>'
                    ]);
                }
            },
            failure: function (error) {
                swal(error);
            }
        });
    }
    function searchPayeeTableUpdate2(search) {
        var url = '@Url.Action("GetPayee", "PaymentVoucher")';
        $.ajax({
            type: "get",
            url: url + "/?search=" + search + "",
            contenttype: "application/json; charset=utf-8",
            datatype: "json",
            success: function (response) {
                data = response.data;
                dt_search_payee2.fnClearTable();
                for (var i = 0; i < data.length; i++) {
                    dt_search_payee2.fnAddData([i + 1,
                       data[i]["PayeeDetailId"],
                       data[i]["BIC"],
                       data[i]["AccountName"],
                       data[i]["PayeeCode"],
                       data[i]["BankName"],
                       data[i]["Accountnumber"],
                       data[i]["PayeeType"],
                       data[i]["Address1"],
                       '<a href="#" onclick="payeeClicked2(' + i + ')"><i class="glyphicon glyphicon-plus-sign"></i></a>'
                    ]);
                }
            },
            failure: function (error) {
                swal(error);
            }
        });
    }

        // =========== SEARCH ITEM ====================
    function searchItemTableUpdate(search) {
        var url = '@Url.Action("GetItems", "PrePayment")';
        var class_id = $("#ItemClassificationId").val();
        $.ajax({
            type: "get",
            url: url + "/?id=" + class_id + "&search=" + search + "",
            contenttype: "application/json; charset=utf-8",
            datatype: "json",
            success: function (response) {
                data = response.data;
                dt_search_item.fnClearTable();
                for (var i = 0; i < data.length; i++) {
                    dt_search_item.fnAddData([i + 1,
                       data[i]["ItemDescription"],
                       '<a href="#" onclick="itemClicked(' + i + ')"><i class="glyphicon glyphicon-plus-sign"></i></a>'
                    ]);
                }
            },
            failure: function (error) {
                swal(error);
            }
        });
    }
        function get_items(query, item_id) {
            var item_id = parseFloat(item_id);
            var form_data = {
                "id": item_id,
                "Prefix": query
            }
            var url = '@Url.Action("SearchItems", "PrePayment")';
            $.ajax({
                type: "POST",
                url: url,
                data: form_data,
                success: function (data) {
                    if (data.response == "Success") {
                        var items_array = [];
                       $.each(data.Items, function (i, d) {
                           items_array.push(d.ItemDescription);
                        });


                       $('#ItemDesc').autocomplete({
                           source: items_array
                           });
                    }
                    else {

                    }

                }
            });
        }
    function itemClicked(rowId) {
        var data = dt_search_item.DataTable().rows().data();
        var row = data[rowId];
        $("#ItemDesc").val(row[1]);
        $("#itemsModal").modal("hide");
    }
        // =========== END SEARCH ITEM ====================
        //=============SEARCH GL ACCOUNTS ==================
    function searchGLTableUpdate() {
            var subBudgetClass = $("#SubBudgetClass").val();
            var url = '@Url.Action("GetFundbalance", "PaymentVoucher")';
            var fundBalanceParams = { "subBudgetClass": subBudgetClass };
            $.ajax({
                type: "get",
                url: url,
                data: fundBalanceParams,
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {
                    //=== UPDATE SEARCH GI TABLE ====
                    data = response.data;
                    dt_search_gl_item.fnClearTable();
                    for (var i = 0; i < data.length; i++) {

                        dt_search_gl_item.fnAddData([i + 1,
                           data[i]["GlAccount"].split("|").join("-"),
                           data[i]["GlAccountDesc"],
                           toLabel(data[i]["FundBalance"]),
                           data[i]["FundingRefNo"],
                           '<amount-input placeholder="Amount" max="' + data[i]["FundBalance"] + '"  onkeyup="amountChanged(this)" />'
                        ]);
                    }
                },
                failure: function (error) {
                    swal(error);
                }
            });
        }
        //==============END SEARCH GL ACCOUNT====================

    // DO NOT REMOVE : GLOBAL FUNCTIONS!
    /* BASIC ;*/
    var responsiveHelper_dt_basic = undefined;
    var responsiveHelper_dt_glItem = undefined;
    var breakpointDefinition = {
        tablet: 1024,
        phone: 480
    };

    var dt_basic = $('#dt_basic').dataTable({
        "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-12 hidden-xs'l>r>" +
            "t" +
            "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
        "autoWidth": true,
        "preDrawCallback": function () {
            // Initialize the responsive datatables helper once.
            if (!responsiveHelper_dt_basic) {
                responsiveHelper_dt_basic = new ResponsiveDatatablesHelper($('#dt_basic'), breakpointDefinition);
            }
        },
        "rowCallback": function (nRow) {
            responsiveHelper_dt_basic.createExpandIcon(nRow);
        },
        "drawCallback": function (oSettings) {
            responsiveHelper_dt_basic.respond();
        }
    });
    /* END BASIC */

    $(document).ready(function () {
        $("#dt_search_gl_item_wrapper .dt-toolbar").remove();
        $("#dt_search_payee_wrapper .dt-toolbar").remove();
        $("#dt_search_item_wrapper .dt-toolbar").remove();
        $("#dt_voucher_detail_wrapper .dt-toolbar").remove();
        $("#dt_voucher_detail_wrapper .dt-toolbar-footer").remove();
        var lpo_amount = $("#PrePaymentAmount").val();
        if (lpo_amount) {
            $("#PrePaymentAmount").val(inputThousandSeparator(lpo_amount))
        }
        $("#gl_items_charge").on('click', function () {

            glItemsCharges = [];
            sum_total = 0;
            var itemIds = [];
            var sum = 0;
            $("input:checkbox.checkItem").each(function () {
                if ($(this).prop("checked")) {
                    itemIds.push($(this).val());
                    sum = sum + parseFloat($(this).val());
                    //alert($(this).attr('id'));
                    //$(this).hide();
                }

            });
            if (itemIds.length == 0) {

                swal("No Item Selected!");
                return;
            } else {
                $("#search_gl").val("");
                $("#total_line_amount").val("");
                $("#total_items_amount").val(sum.toLocaleString('en'));
                $("#difference").val(sum.toLocaleString('en'));
                dt_search_gl_item.fnClearTable();
                $("#glItemsModal").modal();
                searchGLTableUpdate();

            }

        });
        //=============SEARCH GL ACCOUNTS ==================
        $("#search_gl").on("keyup search input paste cut", function () {
            var itemIds = [];
            var sum = 0;
            $("input:checkbox.checkItem").each(function () {
                if ($(this).prop("checked")) {
                    itemIds.push($(this).val());
                    sum = sum + parseFloat($(this).val());
                    //alert($(this).attr('id'));
                    //$(this).hide();
                }

            });
            $("#total_line_amount").val("");
            $("#total_items_amount").val(sum.toLocaleString('en'));
            $("#difference").val(sum.toLocaleString('en'));
            dt_search_gl_item.DataTable().search(this.value).draw();
        });
        // ON SUB BUDGET CLASS SELECTED
        $("#CurrencyRateViewId").change(function () {
            var Id = $("#CurrencyRateViewId").val();
            var url = '@Url.Action("GetCurrency", "PrePayment")';
            $.ajax({
                type: "POST",
                url: url,
                data: {Id:Id },
                success: function (data) {
                    $("#currencyDisp").text(data);

                }
            })
        });
        // END ON SUB BUDGET CLASS SELECTED

        $(".start").keyup(function () {

            $(this).closest("tr").find("input").each(function () {
                //alert(this.value);
                if (this.value.trim() == "") {
                    //alert("Ooh My Lord");
                    $(this).closest("tr").remove();
                }
            });
            //alert("Ooh My Lord");
        }
        );
        $("#example tr").each(function(){
            $(this).closest("tr").find("input").each(function () {
                if (this.value.trim() == "") {
                    $(this).closest("tr").remove();
                }
            });
                });

        //MANAGE STEP WIZARD
        var navListItems = $('div.setup-panel div a'),
               allWells = $('.setup-content'),
               allNextBtn = $('.nextBtn');

        allWells.hide();

        navListItems.click(function (e) {
            e.preventDefault();
            var $target = $($(this).attr('href')),
                    $item = $(this);

            if (!$item.hasClass('disabled')) {
                navListItems.removeClass('btn-primary').addClass('btn-default');
                $item.addClass('btn-primary');
                allWells.hide();
                $target.show();
                $target.find('input:eq(0)').focus();
            }
        });

        allNextBtn.click(function () {
            var curStep = $(this).closest(".setup-content"),
                curStepBtn = curStep.attr("id"),
                nextStepWizard = $('div.setup-panel div a[href="#' + curStepBtn + '"]').parent().next().children("a"),
                curInputs = curStep.find("input[type='text'],input[type='url']"),
                isValid = true;

            $(".form-group").removeClass("has-error");
            for (var i = 0; i < curInputs.length; i++) {
                if (!curInputs[i].validity.valid) {
                    isValid = false;
                    $(curInputs[i]).closest(".form-group").addClass("has-error");
                }
            }

            if (isValid)
                nextStepWizard.removeAttr('disabled').trigger('click');
        });

        $('div.setup-panel div a.btn-primary').trigger('click');
        //END MANAGE STEP WIZARD

        function SearchPayee() {
            $('#payeeModal').modal('show');
        }
        //LOAD PREVIOUS INSERTED DATA
        var lpo_amount = parseFloat($("#PrePaymentAmount").val().split(",").join(""));
        if (lpo_amount>=0) {
            $("#lpo_amount").text(lpo_amount.toLocaleString('en'));

        }
        var ItemsValues = parseFloat($("#ItemsValues").val());
        if (ItemsValues >= 0) {
        }
        var ItemsValueBalance = parseFloat($("#ItemsValueBalance").val());
        $("#items_balance").text(ItemsValueBalance.toLocaleString('en'));
        if (ItemsValueBalance >= 0) {
            $("#items_balance").text(ItemsValueBalance.toLocaleString('en'));
        }
        var ItemsChargeBalance = parseFloat($("#ItemsChargeBalance").val());
        if (ItemsChargeBalance >= 0) {
        }
        var currency = $("#OperationalCurrency").val();
        $("#currency").text(currency);


        $('#gl_search').hide();
        $('#bind_gl').hide();
        $('#items_top').hide();
        //$('#OrderDate').datepicker({
        //    dateFormat: 'mm/dd/yy',
        //    prevText: '<i class="fa fa-chevron-left"></i>',
        //    nextText: '<i class="fa fa-chevron-right"></i>',
        //    onSelect: function (selectedDate) {
        //        $('#OrderDate').datepicker('option', 'minDate', selectedDate);
        //    }
        //});
        //$('#DeliveryDate').datepicker({
        //    dateFormat: 'mm/dd/yy',
        //    prevText: '<i class="fa fa-chevron-left"></i>',
        //    nextText: '<i class="fa fa-chevron-right"></i>',
        //    onSelect: function (selectedDate) {
        //        $('#DeliveryDate').datepicker('option', 'minDate', selectedDate);
        //    }
        //});

        var id = $("#PrePaymentId").val();
        if (id) {
            var url = '@Url.Action("ItemsList", "PrePayment")';
            $.ajax(
{
    type: "POST",
    data: { id: id },
    url: url,
    success: function (data) {
        $('#items').empty();
        var number = data.length;
        if (number > 0) {
            $('#items_top').show();
            $('<thead><tr><th style="text-align: center">#</th><th>Class</th><th style="text-align: left">Item </th><th style="text-align: center">Quantity</th><th style="text-align: left">UOM</th><th style="text-align: right">Unit Price</th><th style="text-align:right">VAT</th><th style="text-align: right">Total Amount</th><th  style="text-align:center;width:8%">Action</th></tr></thead>').appendTo('#items');
        }
        var j = 0;
        var sum = 0;
        var vat_sum = 0;
        $('<tbody>').appendTo('#items');
        $.each(data, function (i, d) {
            var VAT = 0;
            if (d.VAT != null) {
                VAT = d.VAT;
            }
            sum = sum + parseFloat(d.TotalAmount);
            vat_sum = vat_sum + parseFloat(VAT);
            j++;
            $('<tr><td align="center">' + j + '</th><td>' + d.ItemCategory + '</td><td>' + d.ItemDescription + '</td><td align="center">' + d.Quantity + '</td><td>' + d.UOM + '</td><td align="right">' + d.UnitPrice.toLocaleString('en') + '</td><td align="right">' + VAT.toLocaleString('en') + '</td><td align="right">' + d.TotalAmount.toLocaleString('en') + '</td><td style="text-align: center"><div class="btn-group"><button type="button" class="btn  btn-info btn-xs dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><span class="caret"></span><span class="sr-only">Toggle Dropdown</span></button> <ul class="dropdown-menu"> <li><a href="#" data-toggle="modal" data-target="#editItemModal" data-id="' + d.PrePaymentDetailId + '" data-classid="' + d.ItemClassificationId + '" data-quantity="' + d.Quantity + '" data-item="' + d.ItemDescription + '" data-unitprice="' + d.UnitPrice + '" data-uom="' + d.UOM + '" data-totalamount="' + d.TotalAmount + '" class="editItemModal edit"><i class="fa fa-edit"></i> Edit</a></li><li><a href="#" data-toggle="modal" class="removeItems" data-id="' + d.PrePaymentDetailId + '" data-itemdesc="' + d.ItemDescription + '" ><i class="fa fa-trash-o"></i> Delete</a></li></div></td></tr>').appendTo('#items');

        });
        if (number > 0) {
            $('#basic_info').hide();
            $('<tr><td align="right" colspan="6"><strong>Grand Total</strong></td><td align="right"><strong>' + vat_sum.toLocaleString('en') + '</strong></td><td align="right"><strong>' + sum.toLocaleString('en') + '</strong></td><td></td></tr>').appendTo('#items');
        }
        $('</tbody>').appendTo('#items');
    },
    error: function (xhr) {
        //console.log(xhr.responseText);
        alert("An error has occured, contact system support");
        $("#divLoader").hide();
    },

});

            //Charging List
            var url2 = '@Url.Action("ChargingList", "PrePayment")';
            $.ajax(
{
    type: "POST",
    data: { id: id },
    url: url2,
    success: function (data) {
        $('#itemsCharge').empty();
        var number = data.length;
        $(".items_count").text(number);
        if (number > 0) {
            $('#bind_gl').show();
            $('<thead><tr><th style="text-align: right" colspan="7"><input type="checkbox" class="cbCheckAllItems"  /></th></tr></thead>').appendTo('#itemsCharge');
            $('<thead><tr><th style="text-align: center">#</th><th>Class</th><th style="text-align: left">Item </th><th style="text-align: center">Quantity</th><th style="text-align: left">UOM</th><th style="text-align: right">Total Amount</th><th style="text-align:center;width:10%">Select</th></tr></thead>').appendTo('#itemsCharge');

        }
        var j = 0;
        var sum = 0;
        var vat_sum = 0;
        $('<tbody>').appendTo('#itemsCharge');
        $.each(data, function (i, d) {
            var VAT = 0;
            if (d.VAT != null) {
                VAT = d.VAT;
            }
            sum = sum + parseFloat(d.TotalAmount);
            vat_sum = vat_sum + parseFloat(VAT);
            j++;

            $('<tr><td align="center">' + j + '</th><td>' + d.ItemCategory + '</td><td>' + d.ItemDescription + '</td><td align="center">' + d.Quantity + '</td><td>' + d.UOM + '</td><td align="right">' + d.TotalAmount.toLocaleString('en') + '</td><td style="text-align: center"><input type="checkbox" value="' + d.TotalAmount + '" class="checkItem" id="' + d.PrePaymentDetailId + '"></td></tr>').appendTo('#itemsCharge');

        });
        if (number > 0) {
            $('<tr><td align="right" colspan="5"><strong>Grand Total</strong></td><td align="right"><strong>' + sum.toLocaleString('en') + '</strong></td><td></td></tr>').appendTo('#itemsCharge');
        }
        $('</tbody>').appendTo('#itemsCharge');
    },
    error: function (xhr) {
        //console.log(xhr.responseText);
        alert("An error has occured, contact system support");
        $("#divLoader").hide();
    },

});


            var url = '@Url.Action("GetPrePaymentCoa", "PrePayment")';
            $.ajax({
                type: "post",
                url: url,
                data: { id: id },
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    $('#gl_Accounts').empty();

                    var number = data.length;
                    if (number > 0) {
                        $('#gl_search').show();
                        $('<thead><tr><th style="text-align: center">#</th><th>Expenditure Line Item</th><th style="text-align: left">Item Description</th><th style="text-align: left">Funding Reference</th><th style="text-align: right">Amount</th><th style="text-align: center">Action</th></tr></thead>').appendTo('#gl_Accounts');

                    }
                    var p = 0;
                    var sum = 0;
                    $('<tbody>').appendTo('#gl_Accounts');
                    $.each(data, function (i, d) {
                        sum = sum + parseFloat(d.OperationalAmount);
                        p++;

                        $('<tr><td align="center">' + p + '</th><td>' + d.GlAccount.split("|").join("-") + '</td><td>' + d.GlAccountDesc + '</td><td>' + d.FundingReference + '</td><td align="right">' + d.OperationalAmount.toLocaleString('en') + '</td> <td style="text-align: center"><div class="btn-group"><button type="button" class="btn  btn-info btn-xs dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><span class="caret"></span><span class="sr-only">Toggle Dropdown</span></button> <ul class="dropdown-menu"> <li><a href="#" data-toggle="modal" class="remove_gl" data-id="' + d.PrePaymentCoaId + '" data-lineitem="' + d.GlAccount.split("|").join("-") + '" ><i class="fa fa-edit"></i>Deselect</a></li></ul></div></td></tr>').appendTo('#gl_Accounts');

                    });
                    if (number > 0) {
                        $('<tr><td align="right" colspan="4"><strong>Total</strong></td><td align="right"><strong>' + sum.toLocaleString('en') + '</strong></td><td></td></tr>').appendTo('#gl_Accounts');
                    }
                    $('</tbody>').appendTo('#gl_Accounts');
                },
                failure: function (errmsg) {
                    swal(errmsg);
                }
            });

        }
        //END LOAD PREVIOUS INSERTED DATA
        //FINISH LPO CREATION
        $("#complete").click(function (e) {
            var id = $("#PrePaymentId").val();
            if(id>0){
                var url = '@Url.Action("PrePayments", "PrePayment")';
                var new_url = url + "?id=" + id + "&Status=Create";
                window.location.replace(new_url);
            } else {
                swal("Click Back button");
            }

        });
        //END FINISH LPO CREATION


        //Cancel LPO
        $(function () {
            $(".cancel_lpo").click(function (e) {

                var id = $("#PrePaymentId").val();
                if (id > 0) {
                    swal({
                        title: 'Confirmation',
                        text: "Do you what to cancel this Prepayment ?",
                        buttons: [
                          'No',
                          'Yes'
                        ],
                    }).then(function (isConfirm) {
                        if (isConfirm) {
                            var url = '@Url.Action("CancelPrePayment", "PrePayment")';
                            $.ajax(
                {
                    type: "POST",
                    url: url,
                    data: { id: id },
                    success: function (response) {
                        if (response == "Success") {

                            swal("Prepayment Cancelled successfully!", { icon: "success" })
                                      .then((value) => {
                                          //location.reload();
                                          var url = '@Url.Action("PrePayments", "PrePayment")';
                                          window.location.replace(url);
                                      });


                        }
                        else {

                            swal("Failed to Cancel Prepayment");
                        }
                    },
                    error: function (xhr) {
                        swal(error);
                        $("#divLoader").hide();
                    },

                });
                        } else {
                            swal("Cancelled", "No change was made");
                        }
                    });

                }

            });
        });
        //Finish LPO
        $(function () {
            $(".finish_lpo").click(function (e) {

                var id = $("#PrePaymentId").val();
                if (id > 0) {
                    swal({
                        title: 'Confirmation',
                        text: "Do you what to finish this Prepayment ?",
                        buttons: [
                          'No',
                          'Yes'
                        ],
                    }).then(function (isConfirm) {
                        if (isConfirm) {
                            var url = '@Url.Action("FinishPrePayment", "PrePayment")';
                            $.ajax(
                {
                    type: "POST",
                    url: url,
                    data: { id: id },
                    success: function (response) {
                        if (response == "Success") {

                            swal("Prepayment Finished successfully!", { icon: "success" })
                                      .then((value) => {
                                          //location.reload();
                                          var url = '@Url.Action("PrePayments", "PrePayment")';
                                          window.location.replace(url);
                                      });


                        }
                        else {

                            swal("Failed to Finish Prepayment");
                        }
                    },
                    error: function (xhr) {
                        swal(error);
                        $("#divLoader").hide();
                    },

                });
                        } else {
                            swal("Cancelled", "No change was made");
                        }
                    });

                }

            });
        });
        //SUBMIT LPO ITEM
        $(function () {
            $("#prePaymentDetails").click(function (e) {
                e.preventDefault();
                var lpoId = $("#PrePaymentId").val();
                if (lpoId) {
                    var item_class = $("#ItemClassificationId").val();
                    if (!item_class) {
                        swal("Please select Item Class !");
                        return
                    }
                    var itemDesc = $("#ItemDesc").val();
                    if (!itemDesc) {
                        swal("Please enter item !");
                        return
                    }
                    var uom = $("#UOM").val();
                    if (!uom) {
                        swal("Please select Unit of measure !");
                        return
                    }

                    var quantity = $("#Quantity").val();
                    if (!quantity) {
                        swal("Please enter quantity of items !");
                        return
                    }
                    if (quantity==0) {
                        swal("Please quantity can not be zero !");
                        return
                    }

                    var unitPrice = parseFloat($("#_UnitPrice").val().split(",").join(""));
                    if (!unitPrice) {
                        swal("Please enter unit price !");
                        return
                    }
                    if (unitPrice==0) {
                        swal("Please Unit price can not be zero !");
                        return
                    }
                    if (unitPrice < 0) {
                        swal("Please Unit price can not be negative !");
                        return
                    }
                    var vatStatus ="";
                    var checkedValue = $("#VatStatus:checked").val();
                    if (checkedValue == "Applicable") {
                        vatStatus = "Applicable";
                    } else {
                        vatStatus = "Excempted";
                    }

                    var totalAmount = parseFloat($("#TotalAmount").val().split(",").join(""));
                    if (totalAmount == 0) {
                        swal("Please Total Amount can not be zero !");
                        return
                    }
                    if (totalAmount < 0) {
                        swal("Please Total Amount can not be negative !");
                        return
                    }
                    if (totalAmount > 0) {
                    var formData = { "PrePaymentId": lpoId, "ItemClassificationId": item_class, "Quantity": quantity, "UnitPrice": unitPrice, "UOM": uom, "ItemDesc": itemDesc, "VatStatus": vatStatus, "TotalAmount": totalAmount };

                    $("#prePaymentDetails").prop('disabled', true);
                    var url = '@Url.Action("InsertPrePaymentDetails", "PrePayment")';
                    $.ajax(
                    {
                        type: "POST", //HTTP POST Method
                        url: url, // Controller/View
                        data: formData,
                        success: function (data) {
                            $("#prePaymentDetails").prop('disabled', false);
                            if (data == "DbException") {
                                swal(" An error has occured DbException, contact system support");

                            }

                            else if (data == "CACAJournalTypeCode") {
                                swal(" An error has occured, CR Journal Type Code Set up for Prepayment is In Complete, Please Contact Administrator");
                            }
                            else if (data == "DACAJournalTypeCode") {
                                swal(" An error has occured, DR Journal Type Code Set up for Prepayment is In Complete, Please Contact Administrator");
                            }

                            else if (data == "Exceed") {

                                swal("Not saved, Total Items Amount can not exeed Prepayment Amount ");
                                return;
                            }
                            else if (data == "Noquantity") {

                                swal("Not saved, Quantity can not be zero also must be an integer number ");
                                return;
                            }
                            else {
                                $('#ItemDesc').val("");
                                $('#Quantity').val("");
                                $('#_UnitPrice').val("");
                                $('#UnitPrice').val("");
                                $('#ItemsValue').val("");
                                $('#VAT').val("");
                                $('#TotalAmount').val("");
                                $("#VatStatus").prop("checked", false);
                                $('#items').empty();
                                var number = data.length;
                                if (number > 0) {
                                    $('#basic_info').hide();
                                    $('#items_top').show();

                                    $('<thead><tr><th style="text-align: center">#</th><th>Class</th><th style="text-align: left">Item </th><th style="text-align: center">Quantity</th><th style="text-align: center">UOM</th><th style="text-align: right">Unit Price</th><th style="text-align:right">VAT</th><th style="text-align: right">Total Amount</th><th  style="text-align:center;width:8%">Action</th></tr></thead>').appendTo('#items');
                                }
                                var j = 0;
                                var sum = 0;
                                var vat_sum = 0;
                                $('<tbody>').appendTo('#items');

                                $.each(data, function (i, d) {
                                    var VAT = 0;
                                    if (d.VAT != null) {
                                        VAT = d.VAT;
                                    }
                                    sum = sum + parseFloat(d.TotalAmount);
                                    vat_sum = vat_sum + parseFloat(VAT);
                                    j++;
                                    $('<tr><td align="center">' + j + '</th><td>' + d.ItemCategory + '</td><td>' + d.ItemDescription + '</td><td align="center">' + d.Quantity + '</td><td align="center">' + d.UOM + '</td><td align="right">' + d.UnitPrice.toLocaleString('en') + '</td><td align="right">' + VAT.toLocaleString('en') + '</td><td align="right">' + d.TotalAmount.toLocaleString('en') + '</td><td style="text-align: center"><div class="btn-group"><button type="button" class="btn  btn-info btn-xs dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><span class="caret"></span><span class="sr-only">Toggle Dropdown</span></button> <ul class="dropdown-menu"> <li>  <a href="#" data-toggle="modal" data-target="#editItemModal" data-id="' + d.PrePaymentDetailId + '" data-classid="' + d.ItemClassificationId + '" data-quantity="' + d.Quantity + '" data-item="' + d.ItemDescription + '" data-unitprice="' + d.UnitPrice + '" data-uom="' + d.UOM + '" data-totalamount="' + d.TotalAmount + '" class="editItemModal edit"><i class="fa fa-edit"></i> Edit</a></li><li><a href="#" data-toggle="modal" class="removeItems" data-id="' + d.PrePaymentDetailId + '" data-itemdesc="' + d.ItemDescription + '" ><i class="fa fa-trash-o"></i> Delete</a></li></div></td></tr>').appendTo('#items');

                                });
                                if (number > 0) {

                                    $('<tr><td align="right" colspan="6"><strong>Grand Total</strong></td><td align="right"><strong>' + vat_sum + '</strong></td><td align="right"><strong>' + sum.toLocaleString('en') + '</strong></td><td></td></tr>').appendTo('#items');
                                }
                                $("#ItemsValues").val(sum);
                                var lpo_amount = parseFloat($("#PrePaymentAmount").val().split(",").join(""));
                                var balance = lpo_amount - sum;
                                $("#items_balance").text(balance.toLocaleString('en'));
                                $('</tbody>').appendTo('#items');

                                swal("Item added successfully", { icon: "success" })
                                                .then((value) => {

                                                });

                                var id = $("#PrePaymentId").val();
                                //Charging List
                                var url2 = '@Url.Action("ChargingList", "PrePayment")';
                                $.ajax(
                {
                    type: "POST",
                    data: { id: id },
                    url: url2,
                    success: function (data) {
                        $('#itemsCharge').empty();
                        var number = data.length;
                        $(".items_count").text(number);
                        if (number > 0) {
                            $('#bind_gl').show();
                            $('<thead><tr><th style="text-align: right" colspan="7"><input type="checkbox" class="cbCheckAllItems"  /></th></tr></thead>').appendTo('#itemsCharge');
                            $('<thead><tr><th style="text-align: center">#</th><th>Class</th><th style="text-align: left">Item </th><th style="text-align: center">Quantity</th><th style="text-align: left">UOM</th><th style="text-align: right">Total Amount</th><th style="text-align:center;width:10%">Select</th></tr></thead>').appendTo('#itemsCharge');

                        }
                        var j = 0;
                        var sum = 0;
                        var vat_sum = 0;
                        $('<tbody>').appendTo('#itemsCharge');

                        $.each(data, function (i, d) {
                            var VAT = 0;
                            if (d.VAT != null) {
                                VAT = d.VAT;
                            }
                            sum = sum + parseFloat(d.TotalAmount);
                            vat_sum = vat_sum + parseFloat(VAT);
                            j++;

                            $('<tr><td align="center">' + j + '</th><td>' + d.ItemCategory + '</td><td>' + d.ItemDescription + '</td><td align="center">' + d.Quantity + '</td><td>' + d.UOM + '</td><td align="right">' + d.TotalAmount.toLocaleString('en') + '</td><td style="text-align: center"><input type="checkbox" value="' + d.TotalAmount + '" class="checkItem" id="' + d.PrePaymentDetailId + '"></td></tr>').appendTo('#itemsCharge');

                        });
                        if (number > 0) {
                            $('<tr><td align="right" colspan="5"><strong>Grand Total</strong></td><td align="right"><strong>' + sum.toLocaleString('en') + '</strong></td><td></td></tr>').appendTo('#itemsCharge');
                        }

                        $('</tbody>').appendTo('#itemsCharge');
                    },
                    error: function (xhr) {
                        //console.log(xhr.responseText);
                        alert("An error has occured, contact system support");
                        $("#divLoader").hide();
                    },

                });
                            }
                        },
                        error: function (xhr) {
                            $("#prePaymentDetails").prop('disabled', false);
                            swal("An error has occured, contact system support");

                        },

                    });
                     } else {
                    swal("Please Total Amount must be money");
                   }
                } else {
                    swal("Please Insert and save Prepayment Basic Information on step one");
                }
            });
        });
  //MANAGE SELECTED DATE
        $(function () {
               $("#DeliveryDate").change(function () {
                   var deliver_date = $(this).val();
                   var order_date = $("#OrderDate").val();
                   if (order_date) {
                       if (deliver_date) {
                           if (order_date > deliver_date) {
                               swal("Please select date which is greater than the order date");
                               $("#DeliveryDate").val("");
                           }

                       }
                   }

            });
        });
        $(function () {
            $("#OrderDate").change(function () {
                var order_date = $(this).val();
                var deliver_date = $("#DeliveryDate").val();
                if (deliver_date) {
                    if (order_date) {
                        if (order_date > deliver_date) {
                            swal("Please select date which is less than the delivery date");
                            $("#OrderDate").val("");
                        }

                    }
                }


            });
        });

        $("#PrePaymentDesc").on('keypress', function (event) {
            var regex = new RegExp("^[0-9a-zA-Z \b]+$");
            var key = String.fromCharCode(!event.charCode ? event.which : event.charCode);
            if (!regex.test(key)) {
                event.preventDefault();
                return false;
            }
        });

        $(function () { // this will be called when the DOM is ready
            $("#ItemDesc").keyup(function () {
                var query = $(this).val();
                var item_id = $("#ItemClassificationId").val();
                if (!item_id) {
                    swal("Please select class first");
                    $(this).val("");
                    return false;

                }
                var length = query.length;
                if (length >1 ){
                    get_items(query, item_id);
                }

            });
        });
       
        var countries = [
           "Afghanistan",
          "Albania",
          "Algeria",
          "AmericanSamoa",
          "Andorra",
          "Angola",
          "Anguilla",
          "Antigua&Barbuda",
          "Argentina",
          "Armenia",
          "Aruba",
          "Australia",
          "Austria"];

        $(function () { // this will be called when the DOM is ready
            $("#search_item").keyup(function () {
                var search_item = $("#search_item").val();
                var class_id = $("#ItemClassificationId").val();
                var formParam = { "id": class_id, "Search": search_item };
                var url = '@Url.Action("GetItems", "PrePayment")';

                //Feed Datatable
                $.ajax({
                    type: "post",
                    url: url,
                    data: formParam,
                    contenttype: "application/json; charset=utf-8",
                    datatype: "json",
                    success: function (data) {
                        $("#items_list").empty();
                        var j = 0;
                        var number = data.length;
                        if (number > 0) {

                            $('<thead><tr><th style="text-align: center;width:5%">#</th><th>Item Description</th><th style="text-align: center;width:5%">Select</th></tr></thead>').appendTo('#items_list');

                        }
                        $('<tbody>').appendTo('#items_list');
                        $.each(data, function (i, d) {
                            j++;
                            $('<tr><td>' + j + '</td><td align="left">' + d.ItemDescription + '</td><td><a href="#" data-toggle="modal" class="pick_item"  data-item="' + d.ItemDescription + '" ><i class="glyphicon glyphicon-plus-sign"></i></a></td></tr>').appendTo('#items_list');
                        });
                        $('</tbody>').appendTo('#items_list');
                        if (search_item) {
                            if (data.length == 0) {
                                swal("No Matching Item");
                            }
                        }

                    },
                    failure: function (errmsg) {
                        alert(errmsg);
                    }
                });


            });
        });
        //End Select Item
        //Manage VAT
        $(function () { // this will be called when the DOM is ready
            $("#UnitPrice").keyup(function () {
                var unit_price = parseFloat($("#_UnitPrice").val().split(",").join(""));
                var quantity = parseFloat($("#Quantity").val());

                var total = unit_price * quantity;
                var checkedValue = $("#lpo #VatStatus:checked").val();

                if (checkedValue=="Applicable") {
                    var vat = parseFloat($("#VatPercentage").val());
                      var total_vat = total * vat / 100;
                      var grand_total = total_vat + unit_price * quantity;
                      var total_amount = grand_total.toFixed(2);
                      $("#TotalAmount").val(total_amount.toLocaleString('en'));

                } else {

                    $("#TotalAmount").val(total.toLocaleString('en'));

                     }

            });

        });
        $(function () { // this will be called when the DOM is ready
            $("#Quantity").keyup(function () {

                var unit_price = parseFloat($("#_UnitPrice").val().split(",").join(""));
                if (unit_price > 0) {
                    var quantity = parseFloat($("#Quantity").val());
                    var total = unit_price * quantity;

                    var checkedValue = $("#lpo #VatStatus:checked").val();

                    if (checkedValue == "Applicable") {
                        var vat = parseFloat($("#VatPercentage").val());
                        var total_vat = total * vat / 100;
                        var grand_total = total_vat + unit_price * quantity;
                        var total_amount = grand_total.toFixed(2);
                        $("#TotalAmount").val(total_amount.toLocaleString('en'));

                    } else {
                        $("#TotalAmount").val(total.toLocaleString('en'));

                    }
                }

            });

        });

        $("#VatStatus").change(function (e) {
            var unit_price = parseFloat($("#_UnitPrice").val().split(",").join(""));
            var quantity = parseFloat($("#Quantity").val());
            if ($(this).is(":checked")) {
                if (unit_price >= 0 && quantity >= 0) {
                    var total = unit_price * quantity;
                    var vat = parseFloat($("#VatPercentage").val());
                    var total_vat = total * vat / 100;
                    var grand_total = total_vat + unit_price * quantity;
                    var total_amount = grand_total.toFixed(2);
                    $("#TotalAmount").val(total_amount.toLocaleString('en'));

                }

            } else {
                if (unit_price >= 0 && quantity >= 0) {
                    var total = unit_price * quantity;
                    $("#TotalAmount").val(total.toLocaleString('en'));

                }
            }
        });

        $(function () { // this will be called when the DOM is ready
            $("#EditItem #UnitPrice").keyup(function () {
                var unit_price = parseFloat($("#EditItem #_UnitPrice").val().split(",").join(""));
                var quantity = parseFloat($("#EditItem #Quantity").val());
                var total = unit_price * quantity;
                var checkedValue = $("#EditItem #VatStatus:checked").val();

                if (checkedValue == "Applicable") {
                    var vat = parseFloat($("#VatPercentage").val());
                    var total_vat = total * vat / 100;
                    var grand_total = total_vat + unit_price * quantity;
                    var total_amount = grand_total.toFixed(2);
                    $("#EditItem #TotalAmount").val(total_amount.toLocaleString('en'));



                } else {

                    $("#EditItem #TotalAmount").val(total.toLocaleString('en'));

                }

            });

        });
        $(function () { // this will be called when the DOM is ready
            $("#EditItem #Quantity").keyup(function () {

                var unit_price = parseFloat($("#EditItem #_UnitPrice").val().split(",").join(""));
                if (unit_price > 0) {
                    var quantity = parseFloat($("#EditItem #Quantity").val());
                     var total = unit_price * quantity;

                     var checkedValue = $("#EditItem #VatStatus:checked").val();

                    if (checkedValue == "Applicable") {
                        var vat = parseFloat($("#VatPercentage").val());
                        var total_vat = total * vat / 100;
                        var grand_total = total_vat + unit_price * quantity;

                        var total_amount = grand_total.toFixed(2);
                        $("#EditItem #TotalAmount").val(total_amount.toLocaleString('en'));

                    } else {
                        $("#EditItem #TotalAmount").val(total.toLocaleString('en'));
                    }
                }

            });

        });
        $("#EditItem #VatStatus").change(function (e) {
            var unit_price = parseFloat($("#EditItem #_UnitPrice").val().split(",").join(""));
            var quantity = parseFloat($("#EditItem #Quantity").val());
            if ($(this).is(":checked")) {
                if (unit_price >= 0 && quantity >= 0) {
                    var total = unit_price * quantity;
                    var vat = parseFloat($("#VatPercentage").val());
                    var total_vat = total * vat / 100;
                    var grand_total = total_vat + unit_price * quantity;

                    var total_amount = grand_total.toFixed(2);
                    $("#EditItem #TotalAmount").val(total_amount.toLocaleString('en'));

                }

            } else {
                if (unit_price >= 0 && quantity >= 0) {
                    var total = unit_price * quantity;
                    $("#EditItem #TotalAmount").val(total.toLocaleString('en'));

                }
            }
        });
        //End Manage VAT


        $("#gl_items_charge").on('click', function () {
            var itemIds = [];
            var sum = 0;
            $("input:checkbox.checkItem").each(function () {
                if ($(this).prop("checked")) {
                    itemIds.push($(this).val());
                    sum = sum + parseFloat($(this).val());
                    //alert($(this).attr('id'));
                    //$(this).hide();
                }

            });

            if (itemIds.length == 0) {

                swal("No Item Selected!");
                return;
            } else {
                $("#search_gl").val("");
                $("#total_line_amount").val("");
                $("#total_items_amount").val(sum.toLocaleString('en'));
                $("#difference").val(sum.toLocaleString('en'));
                dt_search_gl_item.fnClearTable();
                $("#glItemsModal").modal();
            }
        });
        $(function () { // this will be called when the DOM is ready
            $("#search_exp_line").keyup(function () {

                var search = $(this).val();
                var subBudgetClass = $("#SubBudgetClass").val();

                var formParams = {"GlAccountDesc": search,"subBudgetClass": subBudgetClass };
                var url = '@Url.Action("GetFundBalance", "PrePayment")';

                //Feed Datatable
                $.ajax({
                    type: "post",
                    url: url,
                    data: formParams,
                    contenttype: "application/json; charset=utf-8",
                    datatype: "json",
                    success: function (data) {
                        var i = 0;
                        $("#table_items_charge tr").each(function () {
                            $(this).closest("tr").find("input").each(function () {
                                if (this.value.trim() == "") {
                                    $(this).closest("tr").remove();
                                }
                            });
                        });

                        $.each(data, function (i, d) {
                            i++;
                            $('<tr><td>' + i + '</td><td align="left">' + d.GlAccount.split("|").join("-") + '</td><td>' + d.GlAccountDesc + '</td><td align="right">' + d.FundBalance.toLocaleString('en') + '</td><td>' + d.FundingRefNo + '</td><td><input class="charge" type="text"  placeholder="Amount" max="' + d.FundBalance + '" id="Id-' + i + '" onkeyup="amountChanged(this)"/></td></tr>').appendTo('#table_items_charge');
                        });
                        if (search) {
                            if (data.length == 0) {
                                swal("No Matching GL Account");
                            }
                        }

                    },
                    failure: function (errmsg) {
                        alert(errmsg);
                    }
                });

            });
        });
        var CountItems = parseFloat($("#CountItems").val());
        if (CountItems >= 0) {
            $(".items_count").text(CountItems);
        }
        var CountGLs = parseInt($("#CountGLAccounts").val());
        if (CountGLs >= 0) {
            $(".gl_count").text(CountGLs);
        }
        $("#EditItem").on('submit', function (e) {
            e.preventDefault();
            var item_class = $("#EditItem #ItemClassificationId").val();
            if (!item_class) {
                swal("Please select Item Class !");
                return
            }
            var itemDesc = $("#EditItem #ItemDesc").val();
            if (!itemDesc) {
                swal("Please enter item !");
                return
            }
            var uom = $("#EditItem #UOM").val();
            if (!uom) {
                swal("Please select Unit of measure !");
                return
            }

            var quantity = $("#EditItem #Quantity").val();
            if (!quantity) {
                swal("Please enter quantity of items !");
                return
            }
            if (quantity == 0) {
                swal("Please quantity can not be zero !");
                return
            }

            var unitPrice = parseFloat($("#EditItem #_UnitPrice").val().split(",").join(""));
            if (!unitPrice) {
                swal("Please enter unit price !");
                return
            }
            if (unitPrice == 0) {
                swal("Please Unit price can not be zero !");
                return
            }
            if (unitPrice < 0) {
                swal("Please Unit price can not be negative !");
                return
            }
            var id = $("#EditItem #PrePaymentDetailId").val();
            var totalAmount = parseFloat($("#EditItem #TotalAmount").val().split(",").join(""));
            if (totalAmount == 0) {
                swal("Please Total Amount can not be zero !");
                return
            }
            if (totalAmount < 0) {
                swal("Please Total Amount can not be negative !");
                return
            }
            var vatStatus = "";
            var checkedValue = $("#EditItem #VatStatus:checked").val();
            if (checkedValue == "Applicable") {
                vatStatus = "Applicable";
            } else {
                vatStatus = "Excempted";
            }
            if (totalAmount > 0) {
            var formData = { "PrePaymentDetailId":id, "ItemClassificationId": item_class, "Quantity": quantity, "UnitPrice": unitPrice, "UOM": uom, "ItemDesc": itemDesc, "VatStatus": vatStatus, "TotalAmount": totalAmount };
            $("#btn_save_edit_item").prop('disabled', true);
            var url = '@Url.Action("UpdateItem", "PrePayment")';
            $.ajax(
{
    type: "POST",
    url: url,
    data: formData,
    success: function (response) {
        $("#btn_save_edit_item").prop('disabled', false);
        if (response == "Success") {
            $("#EditItem #VatStatus:checked").prop("checked", false);
            swal("Updated successfully!", { icon: "success" });
            $('#editItemModal').modal('hide');
            var id = $("#PrePaymentId").val();
            var url = '@Url.Action("ItemsList", "PrePayment")';
            $.ajax(
{
    type: "POST",
    data: { id: id },
    url: url,
    success: function (data) {
        $('#items').empty();
        var number = data.length;
        if (number > 0) {
            $('#items_top').show();
            $('<thead><tr><th style="text-align: center">#</th><th>Class</th><th style="text-align: left">Item </th><th style="text-align: center">Quantity</th><th style="text-align: left">UOM</th><th style="text-align: right">Unit Price</th><th style="text-align:right">VAT</th><th style="text-align: right">Total Amount</th><th  style="text-align:center;width:8%">Action</th></tr></thead>').appendTo('#items');
        }
        var j = 0;
        var sum = 0;
        var vat_sum = 0;
        $('<tbody>').appendTo('#items');
        $.each(data, function (i, d) {
            var VAT = 0;
            if (d.VAT != null) {
                VAT = d.VAT;
            }
            sum = sum + parseFloat(d.TotalAmount);
            vat_sum = vat_sum + parseFloat(VAT);
            j++;
            $('<tr><td align="center">' + j + '</th><td>' + d.ItemCategory + '</td><td>' + d.ItemDescription + '</td><td align="center">' + d.Quantity + '</td><td>' + d.UOM + '</td><td align="right">' + d.UnitPrice.toLocaleString('en') + '</td><td align="right">' + VAT.toLocaleString('en') + '</td><td align="right">' + d.TotalAmount.toLocaleString('en') + '</td><td style="text-align: center"><div class="btn-group"><button type="button" class="btn  btn-info btn-xs dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><span class="caret"></span><span class="sr-only">Toggle Dropdown</span></button> <ul class="dropdown-menu"> <li>  <a href="#" data-toggle="modal" data-target="#editItemModal" data-id="' + d.PrePaymentDetailId + '" data-classid="' + d.ItemClassificationId + '" data-quantity="' + d.Quantity + '" data-item="' + d.ItemDescription + '" data-unitprice="' + d.UnitPrice + '" data-uom="' + d.UOM + '" data-totalamount="' + d.TotalAmount + '" class="editItemModal edit"><i class="fa fa-edit"></i> Edit</a></li><li><a href="#" data-toggle="modal" class="removeItems" data-id="' + d.PrePaymentDetailId + '" data-itemdesc="' + d.ItemDescription + '" ><i class="fa fa-trash-o"></i> Delete</a></li></div></td></tr>').appendTo('#items');

        });
        if (number > 0) {

            $('<tr><td align="right" colspan="6"><strong>Grand Total</strong></td><td align="right"><strong>' + vat_sum.toLocaleString('en') + '</strong></td><td align="right"><strong>' + sum.toLocaleString('en') + '</strong></td><td></td></tr>').appendTo('#items');
        }
        $('</tbody>').appendTo('#items');
        $("#ItemsValues").val(sum);
        var lpo_amount = parseFloat($("#PrePaymentAmount").val().split(",").join(""));
        var balance = lpo_amount - sum;
        $("#items_balance").text(balance.toLocaleString('en'));
    },
    error: function (xhr) {
        //console.log(xhr.responseText);
        swal("An error has occured, contact system support");

    },

});

            //Charging List
            var url2 = '@Url.Action("ChargingList", "PrePayment")';
            $.ajax(
{
    type: "POST",
    data: { id: id },
    url: url2,
    success: function (data) {
        $('#itemsCharge').empty();
        var number = data.length;
        $(".items_count").text(number);
        if (number > 0) {
            $('#bind_gl').show();
            $('<thead><tr><th style="text-align: right" colspan="7"><input type="checkbox" class="cbCheckAllItems"  /></th></tr></thead>').appendTo('#itemsCharge');
            $('<thead><tr><th style="text-align: center">#</th><th>Class</th><th style="text-align: left">Item </th><th style="text-align: center">Quantity</th><th style="text-align: left">UOM</th><th style="text-align: right">Total Amount</th><th style="text-align:center;width:10%">Select</th></tr></thead>').appendTo('#itemsCharge');

        }
        var j = 0;
        var sum = 0;
        var vat_sum = 0;
        $('<tbody>').appendTo('#itemsCharge');
        $.each(data, function (i, d) {
            var VAT = 0;
            if (d.VAT != null) {
                VAT = d.VAT;
            }
            sum = sum + parseFloat(d.TotalAmount);
            vat_sum = vat_sum + parseFloat(VAT);
            j++;

            $('<tr><td align="center">' + j + '</th><td>' + d.ItemCategory + '</td><td>' + d.ItemDescription + '</td><td align="center">' + d.Quantity + '</td><td>' + d.UOM + '</td><td align="right">' + d.TotalAmount.toLocaleString('en') + '</td><td style="text-align: center"><input type="checkbox" value="' + d.TotalAmount + '" class="checkItem" id="' + d.PrePaymentDetailId + '"></td></tr>').appendTo('#itemsCharge');

        });
        if (number > 0) {
            $('<tr><td align="right" colspan="5"><strong>Grand Total</strong></td><td align="right"><strong>' + sum.toLocaleString('en') + '</strong></td><td></td></tr>').appendTo('#itemsCharge');
        }
        $('</tbody>').appendTo('#itemsCharge');
    },
    error: function (xhr) {
        //console.log(xhr.responseText);
        alert("An error has occured, contact system support");

    },

});


            var url = '@Url.Action("GetPrePaymentCoa", "PrePayment")';
            $.ajax({
                type: "post",
                url: url,
                data: { id: id },
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    $('#gl_Accounts').empty();

                    var number = data.length;
                    $(".gl_count").text(number);
                    if (number > 0) {
                        $('#gl_search').show();
                        $('<thead><tr><th style="text-align: center">#</th><th>Expenditure Line Item</th><th style="text-align: left">Item Description</th><th style="text-align: left">Funding Reference</th><th style="text-align: right">Amount</th><th style="text-align: center">Action</th></tr></thead>').appendTo('#gl_Accounts');

                    }
                    var p = 0;
                    var sum = 0;
                    $('<tbody>').appendTo('#gl_Accounts');
                    $.each(data, function (i, d) {
                        sum = sum + parseFloat(d.OperationalAmount);
                        p++;

                        $('<tr><td align="center">' + p + '</th><td>' + d.GlAccount.split("|").join("-") + '</td><td>' + d.GlAccountDesc + '</td><td>' + d.FundingReference + '</td><td align="right">' + d.OperationalAmount.toLocaleString('en') + '</td> <td style="text-align: center"><div class="btn-group"><button type="button" class="btn  btn-info btn-xs dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><span class="caret"></span><span class="sr-only">Toggle Dropdown</span></button> <ul class="dropdown-menu"> <li><a href="#" data-toggle="modal" class="remove_gl" data-id="' + d.PrePaymentCoaId + '" data-lineitem="' + d.GlAccount.split("|").join("-") + '" ><i class="fa fa-edit"></i>Deselect</a></li></div></td></tr>').appendTo('#gl_Accounts');

                    });
                    if (number > 0) {
                        $('<tr><td align="right" colspan="4"><strong>Total</strong></td><td align="right"><strong>' + sum.toLocaleString('en') + '</strong></td><td></td></tr>').appendTo('#gl_Accounts');
                    }
                    $('</tbody>').appendTo('#gl_Accounts');
                },
                failure: function (errmsg) {
                    swal(errmsg);
                }
            });


        }
        else if (response == "Exceed") {

            swal("Not saved, Total Items Amount can not exeed Prepayment Amount ");
            return;
        }
        else if (response == "Noquantity") {

            swal("Not saved, Quantity can not be zero also must be an integer number ");
            return;
        }
    else {

            swal("Failed to update ,DbException");
            return;
    }
    },
    error: function (xhr) {
        $("#btn_save_edit_item").prop('disabled', false);
        swal(error);

    },

});
        } else {
                    swal("Please Total Amount must be money");
    }
        });


    });



        //SHOW LOADER ICON
        $(document).ajaxStart(function () {
            $(".loadingImg").show();

        });
        //HIDE LOADER ICON
        $(document).ajaxStop(function () {
            $(".loadingImg").hide();
        });
        //CHECK ALL ITEMS
        $(document).on('click', '.cbCheckAllItems', function () {
            $(".checkItem").prop('checked',
                $(this).prop('checked'));
        });
        //COMMA SEPARATOR ON INSERTING ITEM CHARGE
        $(document).on('keyup', '.charge', function () {
            $(this).val(inputThousandSeparator(this.value))
        });
        //Select Item
        $(document).on('click', '.pick_item', function () {
            var item = $(this).data('item');
            $("#ItemDesc").val(item);
            $('#itemsModal').modal('hide');
        });
        $(document).on('click', '.editItemModal', function () {
            var id = $(this).data('id');
            $("#EditItem #PrePaymentDetailId").val(id);
            var classid = $(this).data('classid');
            $("#EditItem #ItemClassificationId").val(classid);
            var item = $(this).data('item');
            $("#EditItem #ItemDesc").val(item);
            var uom = $(this).data('uom');
            $("#EditItem #UOM").val(uom);
            var quantity = $(this).data('quantity');
            $("#EditItem #Quantity").val(quantity);
            var unitprice = $(this).data('unitprice');
            $("#EditItem #_UnitPrice").val(unitprice.toLocaleString('en'));
            var totalamount = $(this).data('totalamount');
            $("#EditItem #TotalAmount").val(totalamount.toLocaleString('en'));
            var total=quantity * unitprice;
            if (total == totalamount) {
                 $("#EditItem #VatStatus").prop('checked',false)
            }else{
         $("#EditItem #VatStatus").prop('checked',true)
        }

        });


        //REMOVE ITEM
        $(document).on('click', '.removeItems', function () {
            var id = $(this).data('id');
            var itemdesc = $(this).data('itemdesc');
            swal({
                title: 'Confirmation',
                text: "Do you what to Delete " + itemdesc + " ?",
                buttons: [
                  'No',
                  'Yes'
                ],
            }).then(function (isConfirm) {
                if (isConfirm) {
                    var url = '@Url.Action("DeleteItem", "PrePayment")';
                    $.ajax(
        {
            type: "POST",
            url: url,
            data: { id: id },
            success: function (response) {
                if (response == "Success") {

                    swal("Deleted successfully!", { icon: "success" });
                    var id = $("#PrePaymentId").val();
                    var url = '@Url.Action("ItemsList", "PrePayment")';
                    $.ajax(
        {
            type: "POST",
            data: { id: id },
            url: url,
            success: function (data) {
                $('#items').empty();
                var number = data.length;
                if (number > 0) {
                    $('#items_top').show();
                    $('<thead><tr><th style="text-align: center">#</th><th>Class</th><th style="text-align: left">Item </th><th style="text-align: center">Quantity</th><th style="text-align: left">UOM</th><th style="text-align: right">Unit Price</th><th style="text-align:right">VAT</th><th style="text-align: right">Total Amount</th><th  style="text-align:center;width:8%">Action</th></tr></thead>').appendTo('#items');
                }
                var j = 0;
                var sum = 0;
                var vat_sum = 0;
                $('<tbody>').appendTo('#items');
                $.each(data, function (i, d) {
                    var VAT = 0;
                    if (d.VAT != null) {
                        VAT = d.VAT;
                    }
                    sum = sum + parseFloat(d.TotalAmount);
                    vat_sum = vat_sum + parseFloat(VAT);
                    j++;
                    $('<tr><td align="center">' + j + '</th><td>' + d.ItemCategory + '</td><td>' + d.ItemDescription + '</td><td align="center">' + d.Quantity + '</td><td>' + d.UOM + '</td><td align="right">' + d.UnitPrice.toLocaleString('en') + '</td><td align="right">' + VAT.toLocaleString('en') + '</td><td align="right">' + d.TotalAmount.toLocaleString('en') + '</td><td style="text-align: center"><div class="btn-group"><button type="button" class="btn  btn-info btn-xs dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><span class="caret"></span><span class="sr-only">Toggle Dropdown</span></button> <ul class="dropdown-menu"> <li>  <a href="#" data-toggle="modal" data-target="#editItemModal" data-id="' + d.PrePaymentDetailId + '" data-classid="' + d.ItemClassificationId + '" data-quantity="' + d.Quantity + '" data-item="' + d.ItemDescription + '" data-unitprice="' + d.UnitPrice + '" data-uom="' + d.UOM + '" data-totalamount="' + d.TotalAmount + '" class="editItemModal edit"><i class="fa fa-edit"></i> Edit</a></li><li><a href="#" data-toggle="modal" class="removeItems" data-id="' + d.PrePaymentDetailId + '" data-itemdesc="' + d.ItemDescription + '" ><i class="fa fa-trash-o"></i> Delete</a></li></div></td></tr>').appendTo('#items');

                });
                if (number > 0) {

                    $('<tr><td align="right" colspan="6"><strong>Grand Total</strong></td><td align="right"><strong>' + vat_sum.toLocaleString('en') + '</strong></td><td align="right"><strong>' + sum.toLocaleString('en') + '</strong></td><td></td></tr>').appendTo('#items');
                }
                $('</tbody>').appendTo('#items');
                $("#ItemsValues").val(sum);
                var lpo_amount = parseFloat($("#PrePaymentAmount").val().split(",").join(""));
                var balance = lpo_amount - sum;
                $("#items_balance").text(balance.toLocaleString('en'));
            },
            error: function (xhr) {
                //console.log(xhr.responseText);
                alert("An error has occured, contact system support");
                $("#divLoader").hide();
            },

        });

                    //Charging List
                    var url2 = '@Url.Action("ChargingList", "PrePayment")';
                    $.ajax(
        {
            type: "POST",
            data: { id: id },
            url: url2,
            success: function (data) {
                $('#itemsCharge').empty();
                var number = data.length;
                $(".items_count").text(number);
                if (number > 0) {
                    $('#bind_gl').show();
                    $('<thead><tr><th style="text-align: right" colspan="7"><input type="checkbox" class="cbCheckAllItems"  /></th></tr></thead>').appendTo('#itemsCharge');
                    $('<thead><tr><th style="text-align: center">#</th><th>Class</th><th style="text-align: left">Item </th><th style="text-align: center">Quantity</th><th style="text-align: left">UOM</th><th style="text-align: right">Total Amount</th><th style="text-align:center;width:10%">Select</th></tr></thead>').appendTo('#itemsCharge');

                }
                var j = 0;
                var sum = 0;
                var vat_sum = 0;
                $('<tbody>').appendTo('#itemsCharge');
                $.each(data, function (i, d) {
                    var VAT = 0;
                    if (d.VAT != null) {
                        VAT = d.VAT;
                    }
                    sum = sum + parseFloat(d.TotalAmount);
                    vat_sum = vat_sum + parseFloat(VAT);
                    j++;

                    $('<tr><td align="center">' + j + '</th><td>' + d.ItemCategory + '</td><td>' + d.ItemDescription + '</td><td align="center">' + d.Quantity + '</td><td>' + d.UOM + '</td><td align="right">' + d.TotalAmount.toLocaleString('en') + '</td><td style="text-align: center"><input type="checkbox" value="' + d.TotalAmount + '" class="checkItem" id="' + d.PrePaymentDetailId + '"></td></tr>').appendTo('#itemsCharge');

                });
                if (number > 0) {
                    $('<tr><td align="right" colspan="5"><strong>Grand Total</strong></td><td align="right"><strong>' + sum.toLocaleString('en') + '</strong></td><td></td></tr>').appendTo('#itemsCharge');
                }
                $('</tbody>').appendTo('#itemsCharge');
            },
            error: function (xhr) {
                //console.log(xhr.responseText);
                alert("An error has occured, contact system support");
                $("#divLoader").hide();
            },

        });


                    var url = '@Url.Action("GetPrePaymentCoa", "PrePayment")';
                    $.ajax({
                        type: "post",
                        url: url,
                        data: { id: id },
                        contenttype: "application/json; charset=utf-8",
                        datatype: "json",
                        success: function (data) {
                            $('#gl_Accounts').empty();
                            var number = data.length;
                            $(".gl_count").text(number);
                            if (number > 0) {
                                $('#gl_search').show();
                                $('<thead><tr><th style="text-align: center">#</th><th>Expenditure Line Item</th><th style="text-align: left">Item Description</th><th style="text-align: left">Funding Reference</th><th style="text-align: right">Amount</th><th style="text-align: center">Action</th></tr></thead>').appendTo('#gl_Accounts');

                            }
                            var p = 0;
                            var sum = 0;
                            $('<tbody>').appendTo('#gl_Accounts');
                            $.each(data, function (i, d) {
                                sum = sum + parseFloat(d.OperationalAmount);
                                p++;

                                $('<tr><td align="center">' + p + '</th><td>' + d.GlAccount.split("|").join("-") + '</td><td>' + d.GlAccountDesc + '</td><td>' + d.FundingReference + '</td><td style="text-align: center"><div class="btn-group"><button type="button" class="btn  btn-info btn-xs dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><span class="caret"></span><span class="sr-only">Toggle Dropdown</span></button> <ul class="dropdown-menu"> <li><a href="#" data-toggle="modal" class="remove_gl" data-id="' + d.PrePaymentCoaId + '" data-lineitem="' + d.GlAccount.split("|").join("-") + '" ><i class="fa fa-edit"></i>Deselect</a></li></ul></div></td></tr>').appendTo('#gl_Accounts');

                            });
                            if (number > 0) {
                                $('<tr><td align="right" colspan="4"><strong>Total</strong></td><td align="right"><strong>' + sum.toLocaleString('en') + '</strong></td><td></td></tr>').appendTo('#gl_Accounts');
                            }
                            $('</tbody>').appendTo('#gl_Accounts');
                        },
                        failure: function (errmsg) {
                            swal(errmsg);
                        }
                    });


                }
                else {

                    swal("Failed to delete ,DbException");
                }
            },
            error: function (xhr) {
                swal(error);
                $("#divLoader").hide();
            },

        });
                } else {
                    swal("Cancelled", "No change was made");
                }
            });

        });
        //END REMOVE ITEM
        //DESELECT GL ACCOUNTS
        $(document).on('click', '.remove_gl', function () {
            var id = $(this).data('id');
            var lineitem = $(this).data('lineitem');

            swal({
                title: 'Confirmation',
                text: "Do you what to deselect " + lineitem + " ? Note:All item(s) charged by this GL will be uncharged !",
                buttons: [
                  'No',
                  'Yes'
                ],
            }).then(function (isConfirm) {
                if (isConfirm) {
                    var url = '@Url.Action("DeselectGLAccount", "PrePayment")';
                    $.ajax(
        {
            type: "POST",
            url: url,
            data: { id: id },
            success: function (response) {
                if (response == "Success") {

                    swal("GL Account successfully deselected!", { icon: "success" });
                    var id = $("#PrePaymentId").val();
                    var url = '@Url.Action("ItemsList", "PrePayment")';
                    $.ajax(
        {
            type: "POST",
            data: { id: id },
            url: url,
            success: function (data) {
                $('#items').empty();
                var number = data.length;
                if (number > 0) {
                    $('#items_top').show();
                    $('<thead><tr><th style="text-align: center">#</th><th>Class</th><th style="text-align: left">Item </th><th style="text-align: center">Quantity</th><th style="text-align: left">UOM</th><th style="text-align: right">Unit Price</th><th style="text-align:right">VAT</th><th style="text-align: right">Total Amount</th><th  style="text-align:center;width:8%">Action</th></tr></thead>').appendTo('#items');
                }
                var j = 0;
                var sum = 0;
                var vat_sum = 0;
                $('<tbody>').appendTo('#items');
                $.each(data, function (i, d) {
                    var VAT = 0;
                    if (d.VAT != null) {
                        VAT = d.VAT;
                    }
                    sum = sum + parseFloat(d.TotalAmount);
                    vat_sum = vat_sum + parseFloat(VAT);
                    j++;
                    $('<tr><td align="center">' + j + '</th><td>' + d.ItemCategory + '</td><td>' + d.ItemDescription + '</td><td align="center">' + d.Quantity + '</td><td>' + d.UOM + '</td><td align="right">' + d.UnitPrice.toLocaleString('en') + '</td><td align="right">' + VAT.toLocaleString('en') + '</td><td align="right">' + d.TotalAmount.toLocaleString('en') + '</td><td style="text-align: center"><div class="btn-group"><button type="button" class="btn  btn-info btn-xs dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><span class="caret"></span><span class="sr-only">Toggle Dropdown</span></button> <ul class="dropdown-menu"> <li>  <a href="#" data-toggle="modal" data-target="#editItemModal" data-id="' + d.PrePaymentDetailId + '" data-classid="' + d.ItemClassificationId + '" data-quantity="' + d.Quantity + '" data-item="' + d.ItemDescription + '" data-unitprice="' + d.UnitPrice + '" data-uom="' + d.UOM + '" data-totalamount="' + d.TotalAmount + '" class="editItemModal edit"><i class="fa fa-edit"></i> Edit</a></li><li><a href="#" data-toggle="modal" class="removeItems" data-id="' + d.PrePaymentDetailId + '" data-itemdesc="' + d.ItemDescription + '" ><i class="fa fa-trash-o"></i> Delete</a></li></div></td></tr>').appendTo('#items');

                });
                if (number > 0) {

                    $('<tr><td align="right" colspan="6"><strong>Grand Total</strong></td><td align="right"><strong>' + vat_sum.toLocaleString('en') + '</strong></td><td align="right"><strong>' + sum.toLocaleString('en') + '</strong></td><td></td></tr>').appendTo('#items');
                }
                $('</tbody>').appendTo('#items');
                $("#ItemsValues").val(sum);
                var lpo_amount = parseFloat($("#PrePaymentAmount").val().split(",").join(""));
                var balance = lpo_amount - sum;
                $("#items_balance").text(balance.toLocaleString('en'));
            },
            error: function (xhr) {
                //console.log(xhr.responseText);
                alert("An error has occured, contact system support");
                $("#divLoader").hide();
            },

        });
                    //Charging List
                    var url2 = '@Url.Action("ChargingList", "PrePayment")';
                    $.ajax(
        {
            type: "POST",
            data: { id: id },
            url: url2,
            success: function (data) {
                $('#itemsCharge').empty();
                var number = data.length;
                $(".items_count").text(number);
                if (number > 0) {
                    $('#bind_gl').show();
                    $('<thead><tr><th style="text-align: right" colspan="7"><input type="checkbox" class="cbCheckAllItems"  /></th></tr></thead>').appendTo('#itemsCharge');
                    $('<thead><tr><th style="text-align: center">#</th><th>Class</th><th style="text-align: left">Item </th><th style="text-align: center">Quantity</th><th style="text-align: left">UOM</th><th style="text-align: right">Total Amount</th><th style="text-align:center;width:10%">Select</th></tr></thead>').appendTo('#itemsCharge');

                }
                var j = 0;
                var sum = 0;
                var vat_sum = 0;
                $('<tbody>').appendTo('#itemsCharge');
                $.each(data, function (i, d) {
                    var VAT = 0;
                    if (d.VAT != null) {
                        VAT = d.VAT;
                    }
                    sum = sum + parseFloat(d.TotalAmount);
                    vat_sum = vat_sum + parseFloat(VAT);
                    j++;

                    $('<tr><td align="center">' + j + '</th><td>' + d.ItemCategory + '</td><td>' + d.ItemDescription + '</td><td align="center">' + d.Quantity + '</td><td>' + d.UOM + '</td><td align="right">' + d.TotalAmount.toLocaleString('en') + '</td><td style="text-align: center"><input type="checkbox" value="' + d.TotalAmount + '" class="checkItem" id="' + d.PrePaymentDetailId + '"></td></tr>').appendTo('#itemsCharge');

                });
                if (number > 0) {
                    $('<tr><td align="right" colspan="5"><strong>Grand Total</strong></td><td align="right"><strong>' + sum.toLocaleString('en') + '</strong></td><td></td></tr>').appendTo('#itemsCharge');
                }
                $('</tbody>').appendTo('#itemsCharge');
            },
            error: function (xhr) {
                //console.log(xhr.responseText);
                alert("An error has occured, contact system support");
                $("#divLoader").hide();
            },

        });


                    var url = '@Url.Action("GetPrePaymentCoa", "PrePayment")';
                    $.ajax({
                        type: "post",
                        url: url,
                        data: { id: id },
                        contenttype: "application/json; charset=utf-8",
                        datatype: "json",
                        success: function (data) {
                            $('#gl_Accounts').empty();

                            var number = data.length;
                            $(".gl_count").text(number);
                            if (number > 0) {
                                $('#gl_search').show();
                                $('<thead><tr><th style="text-align: center">#</th><th>Expenditure Line Item</th><th style="text-align: left">Item Description</th><th style="text-align: left">Funding Reference</th><th style="text-align: right">Amount</th><th style="text-align: center">Action</th></tr></thead>').appendTo('#gl_Accounts');

                            }
                            var p = 0;
                            var sum = 0;
                            $('<tbody>').appendTo('#gl_Accounts');
                            $.each(data, function (i, d) {
                                sum = sum + parseFloat(d.OperationalAmount);
                                p++;

                                $('<tr><td align="center">' + p + '</th><td>' + d.GlAccount.split("|").join("-") + '</td><td>' + d.GlAccountDesc + '</td><td>' + d.FundingReference + '</td><td align="right">' + d.OperationalAmount.toLocaleString('en') + '</td><td style="text-align: center"><div class="btn-group"><button type="button" class="btn  btn-info btn-xs dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><span class="caret"></span><span class="sr-only">Toggle Dropdown</span></button> <ul class="dropdown-menu"> <li><a href="#" data-toggle="modal" class="remove_gl" data-id="' + d.PrePaymentCoaId + '" data-lineitem="' + d.GlAccount.split("|").join("-") + '" ><i class="fa fa-edit"></i>Deselect</a></li></div></td></tr>').appendTo('#gl_Accounts');

                            });
                            if (number > 0) {
                                $('<tr><td align="right" colspan="4"><strong>Total</strong></td><td align="right"><strong>' + sum.toLocaleString('en') + '</strong></td><td></td></tr>').appendTo('#gl_Accounts');
                            }
                            $('</tbody>').appendTo('#gl_Accounts');
                        },
                        failure: function (errmsg) {
                            swal(errmsg);
                        }
                    });


                }
                else {

                    swal("Failed to delete ,DbException");
                }
            },
            error: function (xhr) {
                swal(error);
                $("#divLoader").hide();
            },

        });
                } else {
                    swal("Cancelled", "No change was made");
                }
            });


        });

    //MANAGE ITEMS CHARGE
    function remove(array, val) {
        var found = array.indexOf(val);
        while (found !== -1) {
            array.splice(found, 1);
            found = array.indexOf(val);
        }
    }
    
    var form_data_status = [];
    var all_amounts = {};
    var total_balance = 0;
    var glItemsCharges = [];
    var sum_total = 0;
/*
    function amountChanged(e) {

        var max_value = parseFloat(e.max);
        var entered_value = parseFloat(e.value.split(",").join(""));
        if (entered_value > 0){
            if (max_value >= entered_value) {


                var i = 0;
                var sum_total = 0;
                $("#dt_search_gl_item tr").each(function () {


                    if (i > 0) {
                        var value = $(this).children().eq(5).find("input").val().trim().split(",").join("");
                        if (value != "") {

                            var expense_amount = parseFloat($(this).children().eq(3).text().split(",").join(""));

                            var amount = parseFloat(value);
                            sum_total = sum_total + amount;

                        }
                    }


                    i++;
                });


                var total_items_value = parseFloat($("#total_items_amount").val().split(",").join(""));
                var balance = total_items_value - sum_total;
                if (balance >= 0) {
                    $("#total_line_amount").val(sum_total.toLocaleString('en'));
                    $("#difference").val(balance.toLocaleString('en'));
                }
                else {
                    alert("Total Line Amount can not exceed " + total_items_value.toLocaleString('en'));
                    e.value = "";
                    var i = 0;
                    var sum_total = 0;
                    $("#dt_search_gl_item tr").each(function () {


                        if (i > 0) {
                            var value = $(this).children().eq(5).find("input").val().trim().split(",").join("");
                            if (value != "") {

                                var expense_amount = parseFloat($(this).children().eq(3).text().split(",").join(""));

                                var amount = parseFloat(value);
                                sum_total = sum_total + amount;

                            }
                        }


                        i++;
                    });

                    $("#total_line_amount").val(sum_total.toLocaleString('en'));
                    var total_items_value = parseFloat($("#total_items_amount").val().split(",").join(""));
                    var balance = total_items_value - sum_total;
                    $("#difference").val(balance.toLocaleString('en'));






                }
            } else {
                swal("Expense Amount can not exceed " + max_value.toLocaleString('en'));
                e.value = "";

                var i = 0;
                var sum_total = 0;
                $("#dt_search_gl_item tr").each(function () {


                    if (i > 0) {
                        var value = $(this).children().eq(5).find("input").val().trim().split(",").join("");
                        if (value != "") {

                            var expense_amount = parseFloat($(this).children().eq(3).text().split(",").join(""));

                            var amount = parseFloat(value);
                            sum_total = sum_total + amount;

                        }
                    }


                    i++;
                });

                $("#total_line_amount").val(sum_total.toLocaleString('en'));
                var total_items_value = parseFloat($("#total_items_amount").val().split(",").join(""));
                var balance = total_items_value - sum_total;
                $("#difference").val(balance.toLocaleString('en'));

            }
        }
    }

*/

            ///start..............................................................................................
    function amountChanged(e) {

        var max_value = parseFloat(e.max);
        var entered_value = parseFloat(e.value.split(",").join(""));
        if (entered_value >= 0) {
            if (max_value >= entered_value) {

                sum_total = 0;

                var i = 0;

                $("#dt_search_gl_item tr").each(function () {


                    if (i > 0) {
                        var value = $(this).children().eq(5).find("input").val().trim().split(",").join("");
                        if (value != "") {

                            var expense_amount = parseFloat($(this).children().eq(3).text().split(",").join(""));

                            var amount = parseFloat(value);

                            //INSERT INTO ARRAY
                            var line = "";
                            line = $(this).children().eq(1).text().split("-").join("|");
                            var item_description = $(this).children().eq(2).text();
                            var expense_amount = parseFloat($(this).children().eq(3).text().split(",").join(""));
                            var funding_ref = $(this).children().eq(4).text();

                            if (glItemsCharges.length > 0) {

                                //CHECK IF EXIST IN THE ARRAY
                                var found = false;
                                for (var j = 0; j < glItemsCharges.length; j++) {
                                    if (glItemsCharges[j].ExpenditureLineItem == line && glItemsCharges[j].FundingReference == funding_ref) {
                                        glItemsCharges[j].BaseAmountDetail = amount;
                                        found = true;
                                    }

                                }

                                if (!found) {

                                    glItemsCharges.push({
                                        "ExpenditureLineItem": line,
                                        "ItemDescription": item_description,
                                        "ExpenseAmount": expense_amount,
                                        "FundingReference": funding_ref,
                                        "BaseAmountDetail": amount
                                    });


                                }


                            } else {

                                glItemsCharges.push({
                                    "ExpenditureLineItem": line,
                                    "ItemDescription": item_description,
                                    "ExpenseAmount": expense_amount,
                                    "FundingReference": funding_ref,
                                    "BaseAmountDetail": amount
                                });


                            }

                        }
                    }

                    i++;
                });

                for (var j = 0; j < glItemsCharges.length; j++) {

                    sum_total = sum_total + glItemsCharges[j].BaseAmountDetail;
                    console.log("length" + glItemsCharges[j].ExpenditureLineItem + ":" + glItemsCharges[j].BaseAmountDetail);

                }

                var total_items_value = parseFloat($("#total_items_amount").val().split(",").join(""));
                var balance = total_items_value - sum_total;
                if (balance >= 0) {
                    $("#total_line_amount").val(sum_total.toLocaleString('en'));
                    $("#difference").val(balance.toLocaleString('en'));
                }
                else {
                    alert("Total Line Amount can not exceed " + total_items_value.toLocaleString('en'));
                    e.value = "";


                }
            } else {
                swal("Expense Amount can not exceed " + max_value.toLocaleString('en'));
                e.value = "";


            }
        }
    }
            ///end...............................................................................................




    function showModal() {
        $('#myModal').modal('show');
    }
    function computeTotalAmount() {
        var total_amount = 0;
        var difference = 0;
        var amount = "";
        var data = dt_basic.DataTable().rows().data();
        var obj = [];
        for (var i = 0; i < data.length; i++) {
            var amount = all_amounts["Id-" + i];
            console.log("============== AMOUNT ==================");
            console.log(amount);
            if (amount == undefined) {
                amount = "";
            }
            if (amount.trim()) {
                total_amount = parseFloat(total_amount) + parseFloat(amount);
                $("#total_line_amount").val(total_amount);

            }
        }
        try {
            difference = parseFloat($('#total_items_amount').val()) - parseFloat(total_amount);
            $('#difference').val(difference);
            total_balance = difference;

            if (difference < 0) {
                $("#difference").css({ 'color': 'red' });
            } else {
                $("#difference").css({ 'color': 'black' });
            }
        } catch (e) { }
    }
    $("#btn_save_gl_items").click(function () {
        var total_amount = 0;
        var difference = 0;
        if (form_data_status.length == 0) {
            var data = dt_basic.DataTable().rows().data();
            var voucherDetails = [];
            for (var i = 0; i < data.length; i++) {

                var amount = all_amounts["Id-" + i];
                if (amount == undefined) {
                    amount = "";
                }
                if (amount.trim()) {
                    var row = data.rows(i).data()[0];

                    //var row = data.rows(i).data()[0];
                    //dt_voucher_detail.fnAddData([row[1], row[2], row[4], amount]);
                    //total_amount = parseFloat(total_amount) + parseFloat(amount);
                    //$("#total_amount").text(total_amount);
                    voucherDetails.push({
                        "ExpenditureLineItem": row[1].split("-").join("|"),
                        "ItemDescription": row[2],
                        "ExpenseAmount": row[3],
                        "FundingReference": row[4],
                        "BaseAmountDetail": amount
                    });



                }

            }
            var itemIds = [];
            $("input:checkbox.checkItem").each(function () {
                if ($(this).prop("checked")) {
                    itemIds.push($(this).attr('id'));
                }
            });
            var lpoId = $("#PrePaymentId").val();
            var form_data = {
                "PrePaymentId": lpoId,
                "PrePaymentIds": itemIds,
                "VoucherDetails": voucherDetails
            }
            var url = '@Url.Action("ItemsCharge", "PrePayment")';
            $.ajax(
{
    type: "POST",
    url: url,
    data: form_data,
    success: function (response) {
        if (response == "DbException") {
            alert(" An error has occured DbException, contact system support");
            $("#divLoader").hide();
        } else {
            $.smallBox({
                title: "GL Account assigned successfully",
                content: "<i class='fa fa-clock-o'></i> <i>1 seconds ago...</i>",
                color: "#2196F3",
                iconSmall: "fa fa-check bounce animated",
                timeout: 4000
            });
            //UPDATE COA
            var url = '@Url.Action("GetPrePaymentCoa", "PrePayment")';
            $.ajax({
                type: "post",
                url: url,
                data: { id:lpoId },
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    $('#gl_Accounts').empty();

                    var number = data.length;
                    $(".gl_count").text(number);
                    if (number > 0) {
                        $('#gl_search').show();
                        $('<thead><tr><th style="text-align: center">#</th><th>Expenditure Line Item</th><th style="text-align: left">Item Description</th><th style="text-align: left">Funding Reference</th><th style="text-align: right">Amount</th><th style="text-align: center">Action</th></tr></thead>').appendTo('#gl_Accounts');

                    }
                    var p = 0;
                    var sum = 0;
                    $('<tbody>').appendTo('#gl_Accounts');

                    $.each(data, function (i, d) {
                        sum = sum + parseFloat(d.OperationalAmount);
                        p++;

                        $('<tr><td align="center">' + p + '</th><td>' + d.GlAccount.split("|").join("-") + '</td><td>' + d.GlAccountDesc + '</td><td>' + d.FundingReference + '</td><td align="right">' + d.OperationalAmount.toLocaleString('en') + '</td><td style="text-align: center"><div class="btn-group"><button type="button" class="btn  btn-info btn-xs dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><span class="caret"></span><span class="sr-only">Toggle Dropdown</span></button> <ul class="dropdown-menu"> <li><a href="#" data-toggle="modal" class="remove_gl" data-id="' + d.PrePaymentCoaId + '" data-lineitem="' + d.GlAccount.split("|").join("-") + '" ><i class="fa fa-edit"></i>Deselect</a></li></div></td></tr>').appendTo('#gl_Accounts');

                    });
                    if (number > 0) {
                        $('<tr><td align="right" colspan="4">Total</td><td align="right">' + sum.toLocaleString('en') + '</td><td></td></tr>').appendTo('#gl_Accounts');
                    }
                    $('</tbody>').appendTo('#gl_Accounts');
                },
                failure: function (errmsg) {
                    alert(errmsg);
                }
            });

            //Charging List
            $('#bind_gl').hide();
            var url2 = '@Url.Action("ChargingList", "PrePayment")';
            $.ajax(
{
    type: "POST",
    data: { id: lpoId },
    url: url2,
    success: function (data) {
        $('#itemsCharge').empty();
        var number = data.length;
        $(".items_count").text(number);
        if (number > 0) {
            $('#bind_gl').show();
            $('<thead><tr><th style="text-align: right" colspan="7"><input type="checkbox" class="cbCheckAllItems"  /></th></tr></thead>').appendTo('#itemsCharge');
            $('<thead><tr><th style="text-align: center">#</th><th>Class</th><th style="text-align: left">Item </th><th style="text-align: center">Quantity</th><th style="text-align: left">UOM</th><th style="text-align: right">Total Amount</th><th style="text-align:center;width:10%">Select</th></tr></thead>').appendTo('#itemsCharge');

        }
        var j = 0;
        var sum = 0;
        var vat_sum = 0;
        $.each(data, function (i, d) {
            var VAT = 0;
            if (d.VAT != null) {
                VAT = d.VAT;
            }
            sum = sum + parseFloat(d.TotalAmount);
            vat_sum = vat_sum + parseFloat(VAT);
            j++;
            $('<tbody>').appendTo('#itemsCharge');

            $('<tr><td align="center">' + j + '</td><td>' + d.ItemCategory + '</td><td>' + d.ItemDescription + '</td><td align="center">' + d.Quantity + '</td><td>' + d.UOM + '</td><td align="right">' + d.TotalAmount.toLocaleString('en') + '</td><td style="text-align: center"><input type="checkbox" value="' + d.TotalAmount + '" class="checkItem" id="' + d.PrePaymentDetailId + '"></td></tr>').appendTo('#itemsCharge');

        });
        if (number > 0) {
            $('<tr><td align="right" colspan="5">Grand Total</td><td align="right">' + sum.toLocaleString('en') + '</td><td></td></tr>').appendTo('#itemsCharge');
        }
        $('</tbody>').appendTo('#itemsCharge');
    },
    error: function (xhr) {
        //console.log(xhr.responseText);
        alert("An error has occured, contact system support");
        $("#divLoader").hide();
    },

});




        }
    },
    error: function (xhr) {
        //console.log(xhr.responseText);
        alert("An error has occured, contact system support");
        $("#divLoader").hide();
    },

});

            difference = parseFloat($('#total_items_amount').val()) - parseFloat(total_amount);
            if (difference < 0) {
                alert("Difference Cannot be negative..");
                dt_voucher_detail.fnClearTable();
            } else {
                $('#glItemsModal').modal('hide');
            }
        } else {
            alert("Please Fix Form Errors....");
        }


    });

            
            $("#btn_save_items_charge").click(function () {
                var total_items_value = parseFloat($("#total_items_amount").val().split(",").join(""));      
                if (glItemsCharges.length == 0) {
                    swal("Please Enter Amount !");
                }
                else if (total_items_value != sum_total) {
                    swal("Please Total Line Amount must be equal to " + total_items_value.toLocaleString('en') + " !");
                }
                else {
                    $('#glItemsModal').modal('hide');
                    var itemIds = [];
                    $("input:checkbox.checkItem").each(function () {
                        if ($(this).prop("checked")) {
                            itemIds.push($(this).attr('id'));
                        }
                    });
                    var lpoId = $("#PrePaymentId").val();
                    var form_data = {
                        "PrePaymentId": lpoId,
                        "PrePaymentIds": itemIds,
                        "VoucherDetails": glItemsCharges
                    }
                    $('#bind_gl').hide();
                    $("#btn_save_items_charge").prop('disabled', true);
                    var url = '@Url.Action("ItemsCharge", "PrePayment")';
                    $.ajax(
        {
            type: "POST",
            url: url,
            data: form_data,
            success: function (response) {
                if (response == "DbException") {
                    $("#btn_save_items_charge").prop('disabled', false);
                    alert(" An error has occured DbException, contact system support");
                    $("#divLoader").hide();
                } else {
                    $("#btn_save_items_charge").prop('disabled', false);
                    swal("GL Account(s) assigned successfully", { icon: "success" })
                                    .then((value) => {

                                    });
                    //UPDATE COA
                    var url = '@Url.Action("GetPrePaymentCoa", "PrePayment")';
                    $.ajax({
                        type: "post",
                        url: url,
                        data: { id: lpoId },
                        contenttype: "application/json; charset=utf-8",
                        datatype: "json",
                        success: function (data) {
                            $('#gl_Accounts').empty();

                            var number = data.length;
                            $(".gl_count").text(number);
                            if (number > 0) {
                                $('#gl_search').show();
                                $('<thead><tr><th style="text-align: center">#</th><th style="text-align: left">Item Description</th><th>Expenditure Line Item</th><th style="text-align: left">Funding Reference</th><th style="text-align: right">Amount</th><th style="text-align: center">Action</th></tr></thead>').appendTo('#gl_Accounts');

                            }
                            var p = 0;
                            var sum = 0;
                            $('<tbody>').appendTo('#gl_Accounts');

                            $.each(data, function (i, d) {
                                sum = sum + parseFloat(d.OperationalAmount);
                                p++;

                                $('<tr><td align="center">' + p + '</th><td>' + d.GlAccount.split("|").join("-") + '</td><td>' + d.GlAccountDesc + '</td><td>' + d.FundingReference + '</td><td align="right">' + d.OperationalAmount.toLocaleString('en') + '</td><td style="text-align: center"><div class="btn-group"><button type="button" class="btn  btn-info btn-xs dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><span class="caret"></span><span class="sr-only">Toggle Dropdown</span></button> <ul class="dropdown-menu"> <li><a href="#" data-toggle="modal" class="remove_gl" data-id="' + d.PrePaymentCoaId + '" data-lineitem="' + d.GlAccount.split("|").join("-") + '" ><i class="fa fa-edit"></i>Deselect</a></li></div></td></tr>').appendTo('#gl_Accounts');

                            });
                            if (number > 0) {
                                $('<tr><td align="right" colspan="4"><strong>Total</strong></td><td align="right"><strong>' + sum.toLocaleString('en') + '</strong></td><td></td></tr>').appendTo('#gl_Accounts');
                            }
                            $('</tbody>').appendTo('#gl_Accounts');
                        },
                        failure: function (errmsg) {
                            alert(errmsg);
                        }
                    });

                    //Charging List
                    $('#bind_gl').hide();
                    var url2 = '@Url.Action("ChargingList", "PrePayment")';
                    $.ajax(
        {
            type: "POST",
            data: { id: lpoId },
            url: url2,
            success: function (data) {
                $('#itemsCharge').empty();
                var number = data.length;
                $(".items_count").text(number);
                if (number > 0) {
                    $('#bind_gl').show();
                    $('<thead><tr><th style="text-align: right" colspan="7"><input type="checkbox" class="cbCheckAllItems"  /></th></tr></thead>').appendTo('#itemsCharge');
                    $('<thead><tr><th style="text-align: center">#</th><th>Class</th><th style="text-align: left">Item </th><th style="text-align: center">Quantity</th><th style="text-align: left">UOM</th><th style="text-align: right">Total Amount</th><th style="text-align:center;width:10%">Select</th></tr></thead>').appendTo('#itemsCharge');

                }
                var j = 0;
                var sum = 0;
                var vat_sum = 0;
                $.each(data, function (i, d) {
                    var VAT = 0;
                    if (d.VAT != null) {
                        VAT = d.VAT;
                    }
                    sum = sum + parseFloat(d.TotalAmount);
                    vat_sum = vat_sum + parseFloat(VAT);
                    j++;
                    $('<tbody>').appendTo('#itemsCharge');

                    $('<tr><td align="center">' + j + '</td><td>' + d.ItemCategory + '</td><td>' + d.ItemDescription + '</td><td align="center">' + d.Quantity + '</td><td>' + d.UOM + '</td><td align="right">' + d.TotalAmount.toLocaleString('en') + '</td><td style="text-align: center"><input type="checkbox" value="' + d.TotalAmount + '" class="checkItem" id="' + d.PrePaymentDetailId + '"></td></tr>').appendTo('#itemsCharge');

                });
                if (number > 0) {
                    $('<tr><td align="right" colspan="5"><strong>Grand Total</strong></td><td align="right"><strong>' + sum.toLocaleString('en') + '</strong></td><td></td></tr>').appendTo('#itemsCharge');
                }
                $('</tbody>').appendTo('#itemsCharge');
            },
            error: function (xhr) {
                //console.log(xhr.responseText);
                alert("An error has occured, contact system support");
                $("#divLoader").hide();
            },

        });




                }
            },
            error: function (xhr) {
                $("#btn_save_items_charge").prop('disabled', false);
                //console.log(xhr.responseText);
                alert("An error has occured, contact system support");
                $("#divLoader").hide();
            },

        });

                }

            });

    //END MANAGE ITEMS CHARGE
    $(function () { // this will be called when the DOM is ready
        $("#supplier_name").keyup(function () {
            var supplier_name = $("#supplier_name").val();

            var formParam = { "Search": supplier_name};
            var url = '@Url.Action("GetPayee", "PrePayment")';

            //Feed Datatable
            $.ajax({
                type: "post",
                url: url,
                data: formParam,
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    $("#search_supplier").empty();
                    var i = 0;
                    var number = data.length;
                    if (number > 0) {

                        $('<tr><thead><th>#</th><th>BIC</th><th>Supplier Name</th><th>Payee Code</th><th>Bank Name</th><th>Bank Account No</th><th>Address</th><th>Action</th></thead></tr>').appendTo('#search_supplier');

                    }
                    $('<tbody>').appendTo('#search_supplier');
                    $.each(data, function (i, d) {
                        i++;
                        $('<tr><td>' + i + '</td><td align="left">' + d.BIC + '</td><td>' + d.AccountName + '</td><td>' + d.PayeeCode + '</td><td>' + d.BankName + '</td><td>' + d.Accountnumber + '</td><td>' + d.Address1 + '</td><td><a href="#" onclick="supplierClicked(\'' + d.AccountName + '\',' + d.PayeeDetailId + ')" data-toggle="modal" class="pick_supplier" data-id="' + d.PayeeDetailId + '" data-supname="' + d.AccountName + '" ><i class="glyphicon glyphicon-plus-sign"></i></a></td></tr>').appendTo('#search_supplier');
                    });
                    $('</tbody>').appendTo('#search_supplier');

                    if (supplier_name) {
                        if (data.length == 0) {
                            swal("No Matching Supplier");
                        }
                    }
                },
                failure: function (errmsg) {
                    alert(errmsg);
                }
            });


        });
    });
    function supplierClicked(name, id) {
        $("#PayeeDetailId").val(id);
        $("#Payeename").val(name);
        $('#payeeModal').modal('hide');

    }
    $(function () { // this will be called when the DOM is ready
        $('#payeeModal  .pick_supplier').click(function () {
            $('#payeeModal').modal('hide');
            alert("Oooh My Lord");
        });
    });

    //========== INPUT THOUSAND SEPARATOR ==================
    $("#UnitPrice").on("keyup input paste", function () {
        //swal(this.value);
        var amount = parseFloat($("#UnitPrice").val());
        $("#UnitPrice").val(toLabel(amount));
    });
    $("#EditItem #UnitPrice").on("keyup input paste", function () {
        $("#EditItem #UnitPrice").val(inputThousandSeparator(this.value))
    });

    //$("#PrePaymentAmount").on("keyup input paste", function () {
    //    $("#PrePaymentAmount").val(inputThousandSeparator(this.value))
    //});
    var OldVal = 0
    function inputThousandSeparator(NewVal) {
        if (NewVal) {
            try {
                NewVal = parseFloat(NewVal.split(",").join(""))
                if (typeof NewVal == 'number' && !Number.isNaN(NewVal)) {
                    OldVal = NewVal;
                    return NewVal.toLocaleString()
                } else {
                    return OldVal
                }
            } catch (e) {
                console.log(e)
            }
        }
    }
    //function numberWithCommas(number) {
    //    var parts = number.toString().split(".");
    //    parts[0] = parts[0].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    //    return parts.join(".");
    //}
    function numberWithCommas(x) {
        return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    }
    function numberWithCommas(x) {
        return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    }
    function isNumber(n) {
        'use strict';
        n = n.replace(/\./g, '').replace(',', '.');
        return !isNaN(parseFloat(n)) && isFinite(n)
    }
    $("#PrePaymentAmount").autoNumeric('init');

    $('#PrePaymentDesc').bind('copy paste cut', function (e) {
        e.preventDefault();
        swal('Paste option is disabled !!');
    });

        </script>
    }
