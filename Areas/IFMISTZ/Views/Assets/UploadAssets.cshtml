@model IFMIS.Areas.IFMISTZ.Models.AssetRegisterVM
@{
    ViewBag.Title = "Create New Asset";
}



<div id="content" style="margin: 5px; padding-top: 30px">

    <div class="row">


    </div>


    <!-- widget grid -->
    <section id="widget-grid" class="">


        <!-- START ROW -->

        <div class="row">

            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">

                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">

                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2> Register New Assets </h2>

                    </header>


                    <div>
                        
                        <fieldset class="scheduler-border" id="file_format" style="display:none">
                            <legend class="scheduler-border">Excel Data Format</legend>
                            <div class="row" id="furns_equips" style="display:none"> <div class="col-sm-3 col-md-2 col-lg-2"><strong>Furnitures & Equipments</strong></div><div class="col-sm-2 col-md-1 col-lg-1"> <a href="~/Media/Assets/FurnitureEqupmentExcelFormat.xlsx"><i class="fa fa-download"></i>Download</a></div></div>
                            <div class="row" id="assetsWithEngine" style="display:none"> <div class="col-sm-4 col-md-4 col-lg-4"><strong>Motor Vehicle/Motor Cycle/Plants & Machinery</strong></div><div class="col-sm-2 col-md-1 col-lg-1"> <a href="~/Media/Assets/MotorVehicleMotorCyclePlantMachineryExcelFormat.xlsx"><i class="fa fa-download"></i>Download</a></div></div>
                            <div class="row" id="land" style="display:none"> <div class="col-sm-22 col-md-1 col-lg-1"><strong>Land</strong></div><div class="col-sm-2 col-md-1 col-lg-1"> <a href="~/Media/Assets/LandExcelFormat.xlsx"><i class="fa fa-download"></i>Download</a></div></div>
                            <div class="row" id="buildings" style="display:none"> <div class="col-sm-2 col-md-1 col-lg-1"><strong>Buildings</strong></div><div class="col-sm-2 col-md-1 col-lg-1"> <a href="~/Media/Assets/BuildingsExcelFormat.xlsx"><i class="fa fa-download"></i>Download</a></div></div>
                            <div class="row" id="road" style="display:none"> <div class="col-sm-2 col-md-1 col-lg-1"><strong>Roads</strong></div><div class="col-sm-2 col-md-1 col-lg-1"> <a href="~/Media/Assets/RoadsExcelFormat.xlsx"><i class="fa fa-download"></i>Download</a></div></div>
                            <div class="row" id="biological" style="display:none"> <div class="col-sm-3 col-md-2 col-lg-2"><strong>Biological Assets</strong></div><div class="col-sm-2 col-md-1 col-lg-1"> <a href="~/Media/Assets/BiologicalAssetExcelFormat.xlsx"><i class="fa fa-download"></i>Download</a></div></div>
                        </fieldset>
                        <br/>
                            @using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = "return UploadAssets(this)" }))
                            {
                                @Html.AntiForgeryToken()
                                <div class="form-horizontal">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Vote, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-3">
                                            @Html.EditorFor(model => model.Vote, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @autocomplete = "off" } })
                                            @Html.ValidationMessageFor(model => model.Vote, "", new { @class = "text-danger" })
                                        </div>
                                        @Html.LabelFor(model => model.InstitutionSubLevelId, htmlAttributes: new { @class = "control-label   col-md-2" })
                                        <div class="col-md-3">
                                            @Html.DropDownListFor(model => model.InstitutionSubLevelId, Model.DepartmentList, "Select ", new { @class = "form-control", @required = "required" })
                                            @Html.ValidationMessageFor(model => model.InstitutionSubLevelId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.RegionId, htmlAttributes: new { @class = "control-label   col-md-2" })
                                        <div class="col-md-3">
                                            @Html.DropDownListFor(model => model.RegionId, Model.RegionsList, "Select ", new { @class = "form-control", @required = "required" })
                                            @Html.ValidationMessageFor(model => model.RegionId, "", new { @class = "text-danger" })
                                        </div>
                                        @Html.LabelFor(model => model.DistrictId, htmlAttributes: new { @class = "control-label   col-md-2" })
                                        <div class="col-md-3">
                                            <select name="DistrictId" id="DistrictId" class="form-control" required><option value="">Select ...</option></select>
                                            @Html.ValidationMessageFor(model => model.DistrictId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.AssetClassId, htmlAttributes: new { @class = "control-label   col-md-2" })
                                        <div class="col-md-3">
                                            @Html.DropDownListFor(model => model.AssetClassId, Model.AssetClassList, "Select ", new { @class = "form-control", @required = "required" })
                                            @Html.ValidationMessageFor(model => model.AssetClassId, "", new { @class = "text-danger" })
                                        </div>
                                        @Html.Label("File", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-3">
                                            <input type="file" class="form-control btn btn-default" id="UploadFile" name="UploadFile" required="required">

                                        </div>
                                    </div>
                                    <div class="form-actions">
                                        <div class="row">
                                            <div class="col-md-8 col-md-offset-2">
                                                <a href="@Url.Action("PendingAssets","Assets")" class="btn btn-info pull-left"><i class="glyphicon glyphicon-arrow-left"></i> Back  </a>
                                                <button type="submit" class="btn btn-info" style="float: left; margin-left: 5px">
                                                    <i class="glyphicon glyphicon-floppy-disk"></i> Save
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-offset-2">

                                    </div>
                                </div>
                            }


                            <div align="center">
                                <img src="~/Media/Images/ajax_loader.gif" class="loadingImg" style="display:none" />
                            </div>





                    </div>

                    </div>

            </article>

        </div>
    </section>

</div>

@section pagespecific {
    <!-- PAGE RELATED PLUGIN(S) -->

    <script type="text/javascript">
 
        function UploadAssets(formData) {

            var url = '@Url.Action("SaveUploadedAssets", "Assets")';
            var ajaxConfig = {
                type: "post",
                url: url,
                data: new FormData(formData),
                success: function (response) {
                    if (response == "Success") {
                        swal("Data saved  successfully", { icon: "Success" })
                                    .then((value) => {
                                       var url = '@Url.Action("PendingAssets", "Assets")';
                                        window.location.replace(url);
                                });
                    }              
                    else {
                        swal(response);
                    }
                }
            }

            if ($(formData).attr('enctype') == "multipart/form-data") {
                ajaxConfig["contentType"] = false;
                ajaxConfig["processData"] = false;
            }
            $.ajax(ajaxConfig);
            return false;
        }


        // =========== End Save Inventory ====================
            $(document).ready(function () {
     $("#RegionId").change(function (e) {

                    var regionId = $(this).val();
                    var url = '@Url.Action("GetDistricts", "Assets")';
                    $.ajax({
                        type: "POST",
                        url: url,
                        data: { id: regionId },
                        success: function (data) {
                            $('#DistrictId').empty();
                            $('<option value="">Select...</option>').appendTo('#DistrictId');
                            $.each(data, function (i, d) {
                                $('<option value="' + d.DistrictId + '">' + d.DistrictName + '</option>').appendTo('#DistrictId');
                            });
                        }
                    });

           });


                        
          $(function () {
              $("#AssetClassId").change(function () {
                  var itemClass = $(this).find('option:selected').text();
                  if (itemClass == "Furniture/Equipment") {
                      $("#file_format").show();
                      $("#furns_equips").show();
                      $("#assetsWithEngine").hide();
                      $("#land").hide();
                      $("#buildings").hide();
                      $("#road").hide();
                      $("#biological").hide();
                      
                  }
                  else if (itemClass == "Motor Vehicle" || itemClass == "Motor Cycle" || itemClass == "Plants" || itemClass == "Machinery") {
                      $("#file_format").show();
                      $("#furns_equips").hide();
                       $("#assetsWithEngine").show();
                      $("#land").hide();
                      $("#buildings").hide();
                      $("#road").hide();
                      $("#biological").hide();
                  }
                  else if (itemClass == "Land") {
                      $("#file_format").show();
                      $("#furns_equips").hide();
                       $("#assetsWithEngine").hide();
                      $("#land").show();
                      $("#buildings").hide();
                      $("#road").hide();
                      $("#biological").hide();
                  }
                  else if (itemClass == "Buildings") {
                      $("#file_format").show();
                      $("#furns_equips").hide();
                       $("#assetsWithEngine").hide();
                      $("#land").hide();
                      $("#buildings").show();
                      $("#road").hide();
                      $("#biological").hide();
                  }
                  else if (itemClass == "Roads") {
                      $("#file_format").show();
                      $("#furns_equips").hide();
                       $("#assetsWithEngine").hide();
                      $("#land").hide();
                      $("#buildings").hide();
                      $("#road").show();
                      $("#biological").hide();
                  }
                  else if (itemClass == "Biological Assets") {
                      $("#file_format").show();
                      $("#furns_equips").hide();
                       $("#assetsWithEngine").hide();
                      $("#land").hide();
                      $("#buildings").hide();
                      $("#road").hide();
                      $("#biological").show();
                  }
                  else {
                    $("#file_format").hide();
                  }
            });
        });
                        });
        
            //SHOW LOADER ICON
    $(document).ajaxStart(function () {
        $(".loadingImg").show();

    });
    //HIDE LOADER ICON
    $(document).ajaxStop(function () {
        $(".loadingImg").hide();
    });
    </script>
}



