@model IFMIS.Areas.IFMISTZ.Models.ImportDummyPaymentVM

<!-- MAIN CONTENT -->
<div id="content" style="margin: 5px; padding-top: 30px">

    <div class="row">
        @*<div class="col-xs-12 col-sm-9 col-md-9 col-lg-9">
            <h1 class="page-title txt-color-blueDark">

            <!-- PAGE HEADER -->
            <!--
            <i class="fa-fw fa fa-pencil-square-o"></i>
            Payments
            <span>
            >
            Bills
            </span>
            -->
            </h1>
            </div>*@

        <div class="col-xs-12 col-sm-3 col-md-3 col-lg-3">
            <!-- Button trigger modal -->
            <!--<a data-toggle="modal" href="#myModal" class="btn btn-success btn-lg pull-right header-btn hidden-mobile"><i class="fa fa-circle-arrow-up fa-lg"></i> Launch form modal</a>-->
        </div>
    </div>

    <!--
    <div class="alert alert-block alert-success">
        <a class="close" data-dismiss="alert" href="#">×</a>
        <h4 class="alert-heading"><i class="fa fa-check-square-o"></i> Check validation!</h4>
        <p>
            You may also check the form validation by clicking on the form action button. Please try and see the results below!
        </p>
    </div>
        -->
    <!-- widget grid -->
    <section id="widget-grid" class="">


        <!-- START ROW -->

        <div class="row">

            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">

                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">
                    <!-- widget options:
                        usage: <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false">

                        data-widget-colorbutton="false"
                        data-widget-editbutton="false"
                        data-widget-togglebutton="false"
                        data-widget-deletebutton="false"
                        data-widget-fullscreenbutton="false"
                        data-widget-custombutton="false"
                        data-widget-collapsed="true"
                        data-widget-sortable="false"

                    -->
                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2> Import Dummy Payment </h2>

                    </header>

                    <!-- widget div-->
                    <div>

                        <!-- widget edit box -->
                        <div class="jarviswidget-editbox">
                            <!-- This area used as dropdown edit box -->

                        </div>
                        <!-- end widget edit box -->
                        <!-- widget content -->
                        <div class="widget-body">
                            <form action="CreateDummyPayment" method="post" class="form-horizontal" name="dummyPaymentForm" id="dummyPaymentForm">
                                @Html.AntiForgeryToken()
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                @Html.HiddenFor(model => model.ReceivingBankBIC)

                                <div class="form-group">
                                    @Html.LabelFor(model => model.ReceivingBankAccountNo, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4">
                                        @Html.TextBoxFor(model => model.ReceivingBankAccountNo, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.ReceivingBankAccountNo, "", new { @class = "text-danger" })
                                    </div>

                                    @Html.LabelFor(model => model.ReceivingBankAccountName, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4">
                                        @Html.EditorFor(model => model.ReceivingBankAccountName, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                        @Html.ValidationMessageFor(model => model.ReceivingBankAccountName, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.ReceivingBankName, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4">
                                        @Html.EditorFor(model => model.ReceivingBankName, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                        @Html.ValidationMessageFor(model => model.ReceivingBankName, "", new { @class = "text-danger" })
                                    </div>

                                    @Html.LabelFor(model => model.OperationalCurrency, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4">
                                        @Html.EditorFor(model => model.OperationalCurrency, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                        @Html.ValidationMessageFor(model => model.OperationalCurrency, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.FileName, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4">
                                        @Html.TextBoxFor(model => model.FileName, new { type = "file", @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.FileName, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-actions">
                                    <div class="row">
                                        <div class="col-md-8 col-md-offset-2">
                                            <button class="btn btn-info" type="button" style="float: left" id="btnSave">
                                                <i class="fa fa-save"></i>
                                                Save
                                            </button>
                                            <a href="@Url.Action("PendingDummyPayments", "DummyPayments" )" class="btn btn-info" style="float: left; margin-left: 5px">
                                                <i class="fa fa-arrow-left"></i>
                                                Back
                                            </a>
                                        </div>
                                    </div>
                                </div>
                            </form>
                        </div>
                        <!-- end widget content -->
                    </div>
                    <!-- end widget div -->

                </div>
                <!-- end widget -->

            </article>
            <!-- END COL -->

        </div>

        <!-- END ROW -->

    </section>
    <!-- end widget grid -->

</div>
<!-- END MAIN CONTENT -->
@section pagespecific {
    <script type="text/javascript">
        $(function () {
            $("#ReceivingBankAccountNo").select2({
                minimumInputLength: 2,  // minimumInputLength for sending ajax request to server
                width: 'resolve',   // to adjust proper width of select2 wrapped elements
                placeholder: "Bank Account No",
                allowClear: false,
                initSelection: function (element, callback) {
                    var id = $(element).val();
                    if (id !== "") {
                        $.ajax('@Url.Action("GetSelectedInstitutionAccount", "DummyPayments")', {
                            data: { id: id },
                            dataType: "json"
                        }).done(function (data) {
                            callback(data);
                        });
                    }
                },
                ajax: {
                    url: '@Url.Action("GetBankAccountNos", "DummyPayments")', // Controller - Select2Demo and Action -AccessRemoteData
                    type: "GET",
                    dataType: 'json',
                    data: function (term) {
                        return {
                            term: term
                        };
                    },
                    results: function (data, page) {
                        return { results: data.refs }; // data.CountryList returning json data from Controlle
                    }
                },
            });
        });

        $('#ReceivingBankAccountNo').on("change", function () {
            var receivingBankAccountNo = $("#ReceivingBankAccountNo").val();

            $.ajax({
                type: "GET",
                url: '@Url.Action("GetInstitutionAccount")',
                data: { id: receivingBankAccountNo },
                success: function (data, status, jqXHR) {                    
                    if (data.success) {
                        $("#OperationalCurrency").val(data.OperationalCurrency);
                        $("#ReceivingBankName").val(data.ReceivingBankName);
                        $("#ReceivingBankBIC").val(data.ReceivingBankBic);
                        $("#ReceivingBankAccountNo").val(data.ReceivingBankAccountNo);
                        $("#ReceivingBankAccountName").val(data.ReceivingBankAccountName);
                    }
                },
                error: function () {
                    swal({
                        text: "Error on accessing bank account details",
                        icon: "success",
                        button: "OK",
                    })
                }
            })
        });

        $("#btnSave").click(function () {
                //debugger
                $('#btnSave').prop("disabled", true);

            if (!$("#dummyPaymentForm").valid()) {
                $('#btnSave').prop("disabled", false);
                    return false;
                }

                var data = {
                    ReferenceNo: $('#ReferenceNo').val().trim(),
                    OperationalAmount: $('#OperationalAmount').val().trim(),
                    OperationalCurrency: $("#OperationalCurrency").val().trim(),
                    ReceivingBankName: $('#ReceivingBankName').val().trim(),
                    ReceivingBankAccountNo: $('#ReceivingBankAccountNo').val().trim(),
                    ReceivingBankAccountName: $('#ReceivingBankAccountName').val().trim(),
                    ApplyDate: $('#ApplyDate').val(),
                    Remarks: $('#Remarks').val().trim(),
                    SubBudgetClassCode: $('#SubBudgetClassCode').val().trim(),
                    FundingSourceCode: $('#FundingSourceCode').val().trim(),
                    DrGlAccount: $('#DrGlAccount').val(),
                    DrGlAccountDesc: $('#DrGlAccountDesc').val(),
                    DummyPaymentDetails: dummyPaymentDetails
                }

                var url = '@Url.Action("CreateDummyPayment", "DummyPayments")';
                $.ajax({
                    url: url,
                    type: "POST",
                    data: JSON.stringify(data),
                    dataType: "JSON",
                    contentType: "application/json",
                    success: function (response) {
                        //check is successfully save to database
                        if (response == "Success") {
                            //will send status from server side
                            swal('Dummy payment successfully saved.');
                            //clear form
                            dummyPaymentDetails = [];

                            window.location = '@Url.Action("PendingDummyPayments", "DummyPayments")';
                        }
                        else {
                            swal(response);
                        }
                    },
                    error: function () {
                        swal('Error. Please try again.');
                    },
                    complete: function () {
                        $('#btnSave').prop("disabled", false);
                    }
                });
            });
    </script>
}
