@model IFMIS.Areas.IFMISTZ.Models.Search
@{
    ViewBag.Title = "Track Advance Payments";
}
<style>
    .tracker-entry {
        border: 1px solid #ccc;
        border-radius: 10px;
        padding-bottom: 10px;
    }
</style>

<div id="content" style="margin: 5px; padding-top: 30px">

    <div class="row">


    </div>


    <!-- widget grid -->
    <section id="widget-grid" class="">


        <!-- START ROW -->

        <div class="row">

            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">

                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">

                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2>Track Advance Payments</h2>

                    </header>


                    <div>
                        <div class="widget-body " style="padding-top:10px;width:100%">
                            @using (Html.BeginForm(null, null, FormMethod.Get))
                            {

                            <div class="form-horizontal">
                                <div class="col-xs-12">
                                    <div class="col-md-12">
                                        <div class="form-group">
                                            <div class="col-md-2">
                                                @Html.EnumDropDownListFor(model => model.ReceivingStatus2, "--Search--", new { @class = "form-control", @required = "required" })
                                                @Html.ValidationMessageFor(model => model.ReceivingStatus2, "", new { @class = "text-danger" })
                                            </div>
                                            <label class="col-md-1 control-label">From</label>
                                            <div class="col-md-2">

                                                <div class="input-group">
                                                    <div class="flatpickr date-group">
                                                        <input type="text" placeholder="Select Date.."
                                                               data-input
                                                               value='@Model.StartDate'
                                                               class="form-control"
                                                               style="width:89px;padding-left:10px;border:none"
                                                               autocomplete="off" name="StartDate" id="StartDate" required>
                                                        <a class="input-button" title="open" data-toggle href="#">
                                                            <span class="input-group-addon" style="height:32px"><i class="fa fa-calendar"></i></span>
                                                        </a>
                                                    </div>
                                                </div>

                                            </div>
                                            <label class="col-md-1 control-label">To</label>
                                            <div class="col-md-2">
                                                <div class="input-group">
                                                    <div class="flatpickr date-group">
                                                        <input type="text" placeholder="Select Date.."
                                                               data-input
                                                               value='@Model.EndDate'
                                                               class="form-control"
                                                               style="width:89px;padding-left:10px;border:none"
                                                               autocomplete="off" name="EndDate" id="EndDate" required>
                                                        <a class="input-button" title="open" data-toggle href="#">
                                                            <span class="input-group-addon" style="height:32px"><i class="fa fa-calendar"></i></span>
                                                        </a>
                                                    </div>
                                                </div>

                                            </div>
                                            <div class="col-md-offset-1 col-md-3">
                                                <div class="input-group"><input class="form-control" id="Keyword" name="Keyword" placeholder="Receiving Number" value='@Model.Keyword' type="text" autocomplete="off" /><span class="input-group-btn"><button class="btn" style="background-color:#2196F3;color:white" id="search" type="submit">Search</button></span></div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            }
                            <div align="center">
                                <img src="~/Media/Images/ajax_loader.gif" class="loadingImg" style="display:none" />
                            </div>
                            <table class="table  table-bordered table-hover table-condensed" id="dt_lpo">
                                <thead>
                                    <tr>
                                        <th style="text-align:right;width:3%"></th>
                                        <th style="text-align:left;">Identification #</th>
                                        <th style="text-align:left">Contract Number</th>
                                        <th style="text-align:left">Payee Name</th>
                                        <th style="text-align:left">Currency</th>
                                        <th style="text-align:right">Advance Payment</th>
                                        <th style="text-align:center">CreatedAt</th>
                                        <th style="text-align:left">Status</th>
                                        <th style="text-align:center">Action</th>

                                    </tr>
                                </thead>

                                <tbody>
                                    @{var i = 0;}
                                    @foreach (var item in ViewBag.receivingList)
                                    {
                                    i++;

                                    <tr>
                                        <td style="text-align:right">
                                            @i
                                        </td>
                                        <td style="text-align:left">
                                            @item.ReceivingNumber
                                        </td>

                                        <td style="text-align:left">
                                            @item.ContractNumber
                                        </td>
                                        <td style="text-align:left">
                                            @item.SupplierName
                                        </td>
                                        <td style="text-align:left">
                                            @item.Currency
                                        </td>

                                        <td style="text-align:right">

                                            @item.ReceivedAmount.ToString("#,##0/=")
                                        </td>
                                        <td style="text-align:center">


                                            @item.CreatedAt.ToString("dd/MM/yyyy")

                                        </td>

                                        <td>
                                            @if (item.OverallStatus.ToUpper() == "REJECTED")
                                            {
                                            <a href="#" data-toggle="modal" data-target="#rejectedContract" data-contact='@item.ContractNumber' data-reason='@item.ApprovalStatus' class="rejected_contact"> @item.OverallStatus</a>
                                            }
                                            else
                                            {
                                            @item.OverallStatus
                                            }

                                        </td>

                                        <td style="text-align:center">
                                            <div class="btn-group">
                                                <button type="button" class="btn btn-info btn-xs dropdown-toggle" data-toggle="dropdown" style="width:40px;border-radius:1px;" aria-haspopup="true" aria-expanded="false">
                                                    <span class="caret"></span>
                                                    <span class="sr-only">Toggle Dropdown</span>
                                                </button>
                                                <ul class="dropdown-menu">
                                                    <li>
                                                        <a href="@Url.Action("AttachmentView", "PaymentVoucherAttachments",new {groupId=item.ReceivingSummaryId,sourceModule="AdvancePayment" })" class="btn-xs edit">
                                                            <i class="fa fa-search-minus"></i>  Attachments
                                                        </a>
                                                    </li>
                                                    <li>

                                                        <a href="#" onclick="showDetails(@item.ReceivingSummaryId)"> <i class="fa fa-search-minus"></i>  Preview</a>

                                                    <li>

                                                </ul>
                                            </div>
                                        </td>

                                    </tr>
                                    }
                                </tbody>
                            </table>

                        </div>





                    </div>


                </div>
            </article>

        </div>
    </section>
</div>
<div class="modal fade" id="divModal" tabindex="-1" role="dialog" aria-labelledby="lblmodal">
    <div class="modal-dialog modal-lg" style="width:80%;">
        <div width="90%" class="modal-content">
            <div class="modal-header alert alert-info" style="font:bold 16px Trebuchet MS, Lucida Sans Unicode, Lucida Grande, Lucida Sans, Arial, sans-serif">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title" id="lblmodal">
                    Preview
                </h4>
            </div>
            <div class="modal-body" id="divModalBody">

            </div>

            <div id="divPaymentStatusLoader" style="text-align:center; display:none">
                <img src="~/assets/img/avatars/ajax_loader.gif" />
            </div>
        </div>
    </div>

</div>

@section pagespecific {
<!-- PAGE RELATED PLUGIN(S) -->

<script type="text/javascript">

    $(document).ready(function () {
        /* // DOM Position key index //
 l - Length changing (dropdown)
 f - Filtering input (search)
 t - The Table! (datatable)
 i - Information (records)
 p - Pagination (paging)
 r - pRocessing
 < and > - div elements
 <"#id" and > - div with an id
 <"class" and > - div with a class
 <"#id.class" and > - div with an id and class
 Also see: http://legacy.datatables.net/usage/features
 */
        /* BASIC ;*/
        var responsiveHelper_dt_lpo = undefined;
        var responsiveHelper_datatable_fixed_column = undefined;
        var responsiveHelper_datatable_col_reorder = undefined;
        var responsiveHelper_datatable_tabletools = undefined;

        var breakpointDefinition = {
            tablet: 1024,
            phone: 480
        };

        $('#dt_lpo').dataTable({
            "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-12 hidden-xs'l>r>" +
                "t" +
                "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
            "autoWidth": true,
            "preDrawCallback": function () {
                // Initialize the responsive datatables helper once.
                if (!responsiveHelper_dt_lpo) {
                    responsiveHelper_dt_lpo = new ResponsiveDatatablesHelper($('#dt_lpo'), breakpointDefinition);
                }
            },
            "rowCallback": function (nRow) {
                responsiveHelper_dt_lpo.createExpandIcon(nRow);
            },
            "drawCallback": function (oSettings) {
                responsiveHelper_dt_lpo.respond();
            }
        });

        /* END BASIC */

        /* COLUMN FILTER  */
        var otable = $('#datatable_fixed_column').DataTable({
            //"bFilter": false,
            //"bInfo": false,
            //"bLengthChange": false
            //"bAutoWidth": false,
            //"bPaginate": false,
            //"bStateSave": true // saves sort state using localStorage
            "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6 hidden-xs'f><'col-sm-6 col-xs-12 hidden-xs'<'toolbar'>>r>" +
                "t" +
                "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
            "autoWidth": true,
            "preDrawCallback": function () {
                // Initialize the responsive datatables helper once.
                if (!responsiveHelper_datatable_fixed_column) {
                    responsiveHelper_datatable_fixed_column = new ResponsiveDatatablesHelper($('#datatable_fixed_column'), breakpointDefinition);
                }
            },
            "rowCallback": function (nRow) {
                responsiveHelper_datatable_fixed_column.createExpandIcon(nRow);
            },
            "drawCallback": function (oSettings) {
                responsiveHelper_datatable_fixed_column.respond();
            }
        });

        // custom toolbar
        $("div.toolbar").html('<div class="text-right"><img src="/Content/img/logo.png" alt="SmartAdmin" style="width: 111px; margin-top: 3px; margin-right: 10px;"></div>');

        // Apply the filter
        $("#datatable_fixed_column thead th input[type=text]").on('keyup change', function () {
            otable
                .column($(this).parent().index() + ':visible')
                .search(this.value)
                .draw();
        });
        /* END COLUMN FILTER */

        /* COLUMN SHOW - HIDE */
        $('#datatable_col_reorder').dataTable({
            "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'C>r>" +
                "t" +
                "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
            "autoWidth": true,
            "preDrawCallback": function () {
                // Initialize the responsive datatables helper once.
                if (!responsiveHelper_datatable_col_reorder) {
                    responsiveHelper_datatable_col_reorder = new ResponsiveDatatablesHelper($('#datatable_col_reorder'), breakpointDefinition);
                }
            },
            "rowCallback": function (nRow) {
                responsiveHelper_datatable_col_reorder.createExpandIcon(nRow);
            },
            "drawCallback": function (oSettings) {
                responsiveHelper_datatable_col_reorder.respond();
            }
        });

        /* END COLUMN SHOW - HIDE */

        /* TABLETOOLS */
        $('#datatable_tabletools').dataTable({

            // Tabletools options:
            //   https://datatables.net/extensions/tabletools/button_options
            "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'T>r>" +
                "t" +
                "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
            "oTableTools": {
                "aButtons": [
                    "copy",
                    "csv",
                    "xls",
                    {
                        "sExtends": "pdf",
                        "sTitle": "SmartAdmin_PDF",
                        "sPdfMessage": "SmartAdmin PDF Export",
                        "sPdfSize": "letter"
                    },
                    {
                        "sExtends": "print",
                        "sMessage": "Generated by SmartAdmin <i>(press Esc to close)</i>"
                    }
                ],
                "sSwfPath": "/Scripts/plugin/datatables/swf/copy_csv_xls_pdf.swf"
            },
            "autoWidth": true,
            "preDrawCallback": function () {
                // Initialize the responsive datatables helper once.
                if (!responsiveHelper_datatable_tabletools) {
                    responsiveHelper_datatable_tabletools = new ResponsiveDatatablesHelper($('#datatable_tabletools'), breakpointDefinition);
                }
            },
            "rowCallback": function (nRow) {
                responsiveHelper_datatable_tabletools.createExpandIcon(nRow);
            },
            "drawCallback": function (oSettings) {
                responsiveHelper_datatable_tabletools.respond();
            }
        });
        /* END TABLETOOLS */
        var result = '@(ViewBag.Message)';
        if (result == "NoMatching") {

            swal("No any matching Advance Payment");

        }
        $(".approve_receiving").on('click', function () {
            var id = $(this).data('id');
            var receivingno = $(this).data('receivingno');
            swal({
                title: 'Approval',
                text: "Do you what to approve receiving   " + receivingno + " ?",
                buttons: [
                    'No',
                    'Yes'
                ],
            }).then(function (isConfirm) {
                if (isConfirm) {
                    var url = '@Url.Action("ApproveReceiving", "Contract")';
                    $.ajax(
                        {
                            type: "POST",
                            url: url,
                            data: { id: id },
                            success: function (response) {
                                if (response == "Success") {

                                    swal("Approved successfully", { icon: "success" })
                                        .then((value) => {
                                            location.reload();
                                        });


                                }
                                else {

                                    swal(response);
                                }
                            },
                            error: function (xhr) {
                                swal(error);
                                $("#divLoader").hide();
                            },

                        });
                } else {
                    swal("Cancelled", "No change was made");
                }
            });

        });
        $(".lpoCancel").on('click', function () {
            var id = $(this).data('id');
            var lpo = $(this).data('lpo');
            var r = confirm("Do you what to cancel Local Purchase Order   " + lpo + " ?");
            if (!r) {
                return;
            }
            var url = '@Url.Action("CancelLPO", "Procurement")';
            $.ajax(
                {
                    type: "POST",
                    url: url,
                    data: { id: id },
                    success: function (response) {
                        if (response == "Success") {
                            alert("Cancelled successfully");
                            location.reload();
                        }
                        else {
                            alert("Failed to cancel ,DbException");
                        }
                    },
                    error: function (xhr) {
                        //console.log(xhr.responseText);
                        alert("An error has occured, contact system support");
                        $("#divLoader").hide();
                    },

                });
        });

        $(".reject_Receiving").on('click', function () {
            var id = $(this).data('id');
            var receiving = $(this).data('receiving');
            $("#receiving_number").text(receiving);
            $(".modal-body #Id").val(id);

        });
        $("#RejectReason").on('submit', function (e) {
            e.preventDefault();

            swal({
                title: 'Confirmation',
                text: "Do you reject this Receiving ?",
                buttons: [
                    'No',
                    'Yes'
                ],
            }).then(function (isConfirm) {
                if (isConfirm) {
                    var url = '@Url.Action("RejectReceiving", "Contract")';
                    var id = $("#Id").val();
                    var reason = $("#Reason").val();
                    var formData = {
                        "Id": id,
                        "Reason": reason
                    }
                    $('#rejectReceiving').modal('hide');
                    $.ajax(
                        {
                            type: "POST",
                            url: url,
                            data: formData,
                            success: function (response) {
                                if (response == "Success") {

                                    swal("Receiving Rejected  successfully!", { icon: "success" })
                                        .then((value) => {
                                            location.reload();
                                        });


                                }
                                else {

                                    swal("Failed to reject ,DbException");
                                }
                            },
                            error: function (xhr) {
                                swal(error);

                            },

                        });
                } else {
                    swal("Cancelled", "No change was made");
                }
            });
        });


    });
       var showDetails = function (id) {
            debugger;
            var url = '@Url.Action("Preview", "AdvancePayment")';
            $("#divModalBody").load(url, { id: id }, function (response, status, xhr) {
                if (status == "error") {
                    $("#divModalBody").html("Error on accessing this details, contact system support.");
                }
                $("#divModal").modal("show");
            });
        };

</script>
}




