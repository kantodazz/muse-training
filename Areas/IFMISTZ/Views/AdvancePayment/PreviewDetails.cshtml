@model IFMIS.Areas.IFMISTZ.Models.ReceivingSummaryVM
@{
    ViewBag.Title = "Preview Receiving";
    string retention_ptg = null;
    if (Model.RetentionPercentage != null)
    {
        retention_ptg = Model.RetentionPercentage.ToString() + "%";
    }
    else
    {
        retention_ptg = "NA";
    }
    var i = 0;
    decimal? sum = 0;
}
<style>
    .searchContainer {
        background-color: white;
        color: black;
        border: 1px solid #ccc;
        border-radius: 4px;
        padding: 3px;
        padding-right: 10px;
    }

    input[type=search] {
        padding: 4px;
        border: hidden;
        border-radius: 4px;
    }

    .info-box {
        padding: 8px;
        background-color: #ECF3F8;
        /*padding-top:10px;*/
        /*text-align: center;*/
        border: 1px solid #ccc;
        border-radius: 5px;
    }

    .payee-entry {
        border: 1px solid #ccc;
        border-radius: 10px;
        padding-bottom: 10px;
    }

    .entry-label {
        position: relative;
        top: -12px;
        background-color: white;
        width: 200px;
        left: 15px;
        padding-left: 5px;
        padding-right: 5px;
        padding-bottom: 5px;
        text-align: center;
        font-weight: bold;
        color: #2196F3;
    }

    .title {
        text-align: center;
        width: 100%;
        padding-top: 10px;
        font-weight: bold;
        font-family: Cambria, Cochin, Georgia, Times, Times New Roman, serif;
    }

    .detail-section {
        padding: 10px;
    }

    .section-title {
        font-family: Cambria, Cochin, Georgia, Times, Times New Roman, serif;
        font-size: 18px;
        font-weight: bold;
    }

    .sect-label {
        width: 250px;
        font-size: 15px;
        font-weight: 600;
    }

    table {
        border-collapse: collapse;
        width: 100%;
    }

    td {
        padding: 5px;
        text-align: left;
        border-bottom: 1px dashed #ccc;
    }

    .row-align {
        display: flex;
        flex-wrap: nowrap;
        justify-content: space-evenly;
    }

    .row-align-1 {
        display: flex;
        flex-wrap: wrap;
        align-content: center;
    }

    .ico {
        margin-right: 5px;
    }

    .btn-size {
        width: 90px;
    }

    .speech-bubble {
        position: relative;
        background: #efebe9;
        border-radius: .4em;
        color: white;
        padding: 10px;
    }

        .speech-bubble:after {
            content: '';
            position: absolute;
            left: 0;
            top: 50%;
            width: 0;
            height: 0;
            border: 9px solid transparent;
            border-right-color: #efebe9;
            border-left: 0;
            margin-top: -9px;
            margin-left: -9px;
        }

    .speech-bubble-r {
        position: relative;
        background: #eeeeee;
        border-radius: .4em;
        color: white;
        padding: 10px;
    }

        .speech-bubble-r:after {
            content: '';
            position: absolute;
            right: 0;
            top: 50%;
            width: 0;
            height: 0;
            border: 9px solid transparent;
            border-left-color: #eeeeee;
            border-right: 0;
            margin-top: -9px;
            margin-right: -9px;
        }

    .chart-box {
        padding: 8px;
        border-radius: 5px;
        min-height: 150px;
    }

    /*  //tunkete.mwamsojo@hazina.go.tz;*/

</style>


<div id="content" style="margin: 5px; padding-top: 30px">

    <div class="row">


    </div>


    <!-- widget grid -->
    <section id="widget-grid" class="">


        <!-- START ROW -->

        <div class="row">

            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">

                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">
                    <br />
                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2>Advance Payment</h2>

                    </header>


                    <div>
                        <div class="widget-body " style="padding-top:10px;width:100%">
                            <div class="payee-entry">
                                <div class="entry-label">Details</div>
                                <table>
                                    <tr>
                                        <th>@Html.DisplayNameFor(model => model.EOfficeRefence)</th>
                                        <td><a href="@Url.Action("eofficedetails","dfundapprovals",new { id = @Model.EOfficeRefenceId })" title="Click to View " data-toggle="tooltip" target="_parent"><b>@Html.DisplayFor(model => model.EOfficeRefence)</b></a></td>
                                        <th>@Html.DisplayNameFor(model => model.EOfficeTitle)</th>
                                        <td>@Html.DisplayFor(model => model.EOfficeTitle)</td>
                                    </tr>
                                    @if (Model.DfundRefence != null)
                                    {
                                        <tr>
                                            <th>@Html.DisplayNameFor(model => model.DfundRefence)</th>
                                            <td><a href="@Url.Action("eofficedetails", "dfundapprovals", new { id = @Model.DfundRefenceId })" title="Click to View " data-toggle="tooltip" target="_parent"><b>@Html.DisplayFor(model => model.DfundRefence)</b></a></td>
                                            <th>@Html.DisplayNameFor(model => model.DfundTitle)</th>
                                            <td>@Html.DisplayFor(model => model.DfundTitle)</td>
                                        </tr>
                                    }
                                    <tr>
                                        <th>@Html.DisplayNameFor(model => model.ReceivingNumber): </th>
                                        <td>@Html.DisplayFor(model => model.ReceivingNumber)</td>
                                        <th>@Html.DisplayNameFor(model => model.ContractNo): </th>
                                        <td>@Html.DisplayFor(model => model.ContractNo)</td>
                                    </tr>
                                    <tr>
                                        <th>@Html.DisplayNameFor(model => model.ContractNumber)</th>
                                        <td>@Html.DisplayFor(model => model.ContractNumber)</td>
                                        <th>@Html.DisplayNameFor(model => model.ContractType): </th>
                                        <td>@Html.DisplayFor(model => model.ContractType)</td>
                                    </tr>
                                    <tr>
                                        <th>@Html.DisplayNameFor(model => model.SubBudgetClass): </th>
                                        <td>@Html.DisplayFor(model => model.SubBudgetClass)</td>
                                        <th>@Html.DisplayNameFor(model => model.PayerAccount)</th>
                                        <td>@Html.DisplayFor(model => model.PayerAccount)</td>
                                    </tr>
                                    <tr>
                                        <th>@Html.DisplayNameFor(model => model.PayeeAccountName): </th>
                                        <td>@Html.DisplayFor(model => model.PayeeAccountName)</td>
                                        <th>@Html.DisplayNameFor(model => model.PayeeAccountNo)</th>
                                        <td>@Html.DisplayFor(model => model.PayeeAccountNo)</td>
                                    </tr>
                                    <tr>
                                        <th>@Html.DisplayNameFor(model => model.TransactionAmount): </th>
                                        <td>@Html.DisplayFor(model => model.TransactionAmount) @Html.DisplayFor(model => model.EOfficeCurrency)</td>
                                        <th>@Html.DisplayNameFor(model => model.TransactionExchangeRate)</th>
                                        <td>@Html.DisplayFor(model => model.TransactionExchangeRate)</td>
                                    </tr>
                                    <tr>
                                        <th>@Html.DisplayNameFor(model => model.OperationAmount): </th>
                                        <td>@Html.DisplayFor(model => model.OperationAmount) @Html.DisplayFor(model => model.OperationCurrency)</td>
                                        <th>@Html.DisplayNameFor(model => model.CurrentExchangeRate)</th>
                                        <td>@Html.DisplayFor(model => model.CurrentExchangeRate)</td>
                                    </tr>





                                    @if (Model.OverallStatus == "Rejected" || Model.Rejecter == "Payment Office")
                                    {
                                        if (Model.RejectionReason != null)
                                        {
                                            <tr>
                                                <th>@Html.DisplayNameFor(model => model.Rejecter): </th>
                                                <td>@Html.DisplayFor(model => model.Rejecter)</td>
                                                <th>@Html.DisplayNameFor(model => model.RejectionSolution)</th>
                                                <td>@Html.DisplayFor(model => model.RejectionSolution)</td>
                                            </tr>
                                        }
                                    }
                                    @if (Model.OverallStatus.ToUpper() == "CONFIRMED")
                                    {
                                        if (Model.RejectionSolution != null)
                                        {
                                            <tr>
                                                @if (Model.RejectionReason != null)
                                                {
                                                    <th>@Html.DisplayNameFor(model => model.RejectionReason): </th>
                                                    <td>@Html.DisplayFor(model => model.RejectionReason)</td>
                                                }
                                                @if (Model.RejectionSolution != null)
                                                {
                                                    <th>@Html.DisplayNameFor(model => model.RejectionSolution)</th>
                                                    <td>@Html.DisplayFor(model => model.RejectionSolution)</td>
                                                }
                                            </tr>
                                        }
                                    }
                                    @if (Model.OverallStatus.ToUpper() == "EXAMINED")
                                    {

                                        if (Model.Rejecter == "Approver")
                                        {
                                            <tr>
                                                @if (Model.RejectionReason != null)
                                                {
                                                    <th>@Html.DisplayNameFor(model => model.RejectionReason): </th>
                                                    <td>@Html.DisplayFor(model => model.RejectionReason)</td>
                                                }
                                                @if (Model.RejectionSolution != null)
                                                {
                                                    <th>@Html.DisplayNameFor(model => model.RejectionSolution)</th>
                                                    <td>@Html.DisplayFor(model => model.RejectionSolution)</td>
                                                }
                                            </tr>
                                        }
                                    }


                                </table>

                            </div>


                            @if (Model.PVNo != null)
                            {
                                <div class="payee-entry">
                                    <div class="entry-label">Voucher Details</div>
                                    <div class="row">
                                        @if (Model.PVNo != null)
                                        {
                                            <div class="col-sm-6 col-md-6 col-lg-6">
                                                <strong>Voucher Number&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:</strong>&nbsp;&nbsp;&nbsp;&nbsp;@Html.DisplayFor(model => model.PVNo)
                                            </div>
                                        }
                                        @if (Model.VoucherStatus != null)
                                        {
                                            <div class="col-sm-6 col-md-6 col-lg-6">
                                                <strong>Voucher Status&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:</strong>&nbsp;&nbsp;&nbsp;&nbsp;@Html.DisplayFor(model => model.VoucherStatus)
                                            </div>
                                        }
                                    </div>
                                    <div class="row">
                                        @if (Model.SubLevelCode != null)
                                        {
                                            <div class="col-sm-6 col-md-6 col-lg-6">
                                                <strong>Cost Center&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:</strong>&nbsp;&nbsp;&nbsp;&nbsp;@Html.DisplayFor(model => model.SubLevelCode)
                                            </div>
                                        }

                                    </div>
                                </div>
                                <br />
                            }
                            <div style="padding-top:5px">

                                <table id="selected_gls" class="table table-bordered table-hover table-condensed" width="100%">
                                    <tr style="background:#f5f5f5; color:#000000"><th style="text-align: center;width:5%">No</th><th>Expenditure Line Item</th><th>Item Description</th><th>Funding Reference</th><th style="text-align:right;width:12%">Amount</th></tr>
                                    @foreach (var item in Model.ReceivingCoas)
                                    {
                                        i++;
                                        sum = sum + item.ExpenseAmount;
                                        <tr><td align="center">@i</td><td>@item.GLAccount<td>@item.GLAccountDesc </td><td>@item.FundingReference </td><td align="right"> @Convert.ToDecimal(item.ExpenseAmount).ToString("#,##0.00")</td></tr>
                                    }
                                    <tr><td colspan="4" align="right"><strong>Total</strong></td><td align="right"><strong> @Convert.ToDecimal(sum).ToString("#,##0.00") </strong></td></tr>
                                </table>

                            </div>



                            <div class="form-actions">
                                <div class="row">
                                    <div class="col-md-8 col-md-offset-1">
                                        @if (Model.OverallStatus.ToUpper() == "PENDING" || Model.OverallStatus == "Rejected")
                                        {
                                            <a href="@Url.Action("PendingList","AdvancePayment")" class="btn btn-info pull-left"><i class="glyphicon glyphicon-arrow-left"></i> Back  </a>

                                        }
                                        else if (Model.OverallStatus.ToUpper() == "CONFIRMED")
                                        {

                                            <a href="@Url.Action("ExamineList","AdvancePayment")" class="btn btn-info pull-left"><i class="glyphicon glyphicon-arrow-left"></i> Back  </a>

                                        }
                                        else if (Model.OverallStatus.ToUpper() == "EXAMINED")
                                        {
                                            <a href="@Url.Action("AdvancePaymentApproval","AdvancePayment")" class="btn btn-info pull-left"><i class="glyphicon glyphicon-arrow-left"></i> Back  </a>

                                        }
                                        else
                                        {
                                            <a href="@Request.UrlReferrer" class="btn btn-info pull-left"><i class="glyphicon glyphicon-arrow-left"></i> Back  </a>

                                        }
                                    </div>
                                </div>
                            </div>

                        </div>


                    </div>
                </div>
            </article>

        </div>
    </section>

</div>









