@model IFMIS.Areas.IFMISTZ.Models.DeductionAccount

@{
    ViewBag.Title = "Create New Account";
}
<style>
    input[type=checkbox] {
        width: 7mm;
        height: 7mm;
    }

        input[type=checkbox]:checked {
            background-color: lightblue;
        }
</style>
<!-- MAIN CONTENT -->
<div id="divLoader"></div>
<div id="content">
    <!-- widget grid -->
    <section id="widget-grid" class="">
        <!-- row -->
        <div class="row">
            <!-- NEW WIDGET START -->
            <article class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget jarviswidget-color-white" id="wid-id-0" data-widget-editbutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">
                    <!-- widget options:
                    usage: <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false">
                    data-widget-colorbutton="false"
                    data-widget-editbutton="false"
                    data-widget-togglebutton="false"
                    data-widget-deletebutton="false"
                    data-widget-fullscreenbutton="false"
                    data-widget-custombutton="false"
                    data-widget-collapsed="true"
                    data-widget-sortable="false"
                    -->
                    <header>
                        <span class="widget-icon"> <i class="fa fa-table"></i> </span>
                        <h2>@ViewBag.Title</h2>
                    </header>
                    <!-- widget content -->
                    <div class="widget-body">

                        @using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = "return SubmitAccount(this)" }))
                            {
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">

                            <div class="form-group">
                                @Html.LabelFor(model => model.InstitutionName, htmlAttributes: new { @class = "control-label col-md-3", @style = "text-align:left" })
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.InstitutionName, new { htmlAttributes = new { @class = "form-control",@placeholder="e.g NHIF", @autocomplete = "off", @required = "required" } })
                                    @Html.ValidationMessageFor(model => model.InstitutionName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.BankId, htmlAttributes: new { @class = "control-label   col-md-3", @style = "text-align:left" })
                                <div class="col-md-4">
                                    @Html.DropDownListFor(model => model.BankId, Model.BanksList, "Select ---", new { @class = "form-control select2", @required = "required" })
                                    @Html.ValidationMessageFor(model => model.BankId, "", new { @class = "text-danger" })
                                </div>

                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.InstitutionBankAccountNo, htmlAttributes: new { @class = "control-label col-md-3", @style = "text-align:left" })
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.InstitutionBankAccountNo, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", @required = "required" } })
                                    @Html.ValidationMessageFor(model => model.InstitutionBankAccountNo, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.InstitutionBankName, htmlAttributes: new { @class = "control-label col-md-3", @style = "text-align:left" })
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.InstitutionBankName, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", @required = "required" } })
                                    @Html.ValidationMessageFor(model => model.InstitutionBankName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.InstitutionAccountName, htmlAttributes: new { @class = "control-label col-md-3", @style = "text-align:left" })
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.InstitutionAccountName, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", @required = "required" } })
                                    @Html.ValidationMessageFor(model => model.InstitutionAccountName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.SubBudgetClass, htmlAttributes: new { @class = "control-label col-md-3", @style = "text-align:left" })
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.SubBudgetClass, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", @required = "required" } })
                                    @Html.ValidationMessageFor(model => model.SubBudgetClass, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">

                                @Html.LabelFor(model => model.RequireCtrNo, htmlAttributes: new { @class = "control-label col-md-3", @style = "text-align:left" })

                                <div class="col-md-4">
                                    @Html.CheckBoxFor(model => model.RequireCtrNo)
                                </div>

                            </div>
                            <div class="form-group">

                                @Html.LabelFor(model => model.RequestCtrNo, htmlAttributes: new { @class = "control-label col-md-3", @style = "text-align:left" })
                                
                                <div class="col-md-4">
                                    @Html.CheckBoxFor(model => model.RequestCtrNo)
                                </div>

                            </div>
                            <div class="form-actions">
                                <div class="row">
                                    <div class="col-md-offset-2">
                                        <a href="@Url.Action("AccountsList","BeneficiaryAccount")" style="margin-right:5px" class="btn btn-info pull-left"><i class="glyphicon glyphicon-arrow-left"></i> Back  </a>
                                        <button type="submit" id="save_data" class="btn btn-info" style="float: left; margin-left: 5px">
                                            <i class="glyphicon glyphicon-floppy-disk"></i> Save
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        }
                        </div>
 <!-- end widget content -->

                    </div>
                <!-- end widget -->

            </article>
            <!-- WIDGET END -->

        </div>

        <!-- end row -->
        <!-- end row -->

    </section>
    <!-- end widget grid -->

</div>
<!-- END MAIN CONTENT -->



@section pagespecific {
    <script type="text/javascript">

   
        function SubmitAccount(formData) {
            $("#save_data").prop('disabled', true);
                          
                            var url = '@Url.Action("SaveAccount", "BeneficiaryAccount")';
                           var ajaxConfig = {
                            type: "post",
                            url: url,
                            data: new FormData(formData),
                             success: function (response) {
                              if (response == "Success") {
                                       swal("Account saved successfully", { icon: "success" })
                                           .then((value) => {
                                            var url = '@Url.Action("AccountsList", "BeneficiaryAccount")';
                                             window.location.replace(url);
                                           });
                                   }
                                   else {
                                  $("#save_data").prop('disabled', false);
                                       swal(response);
                                   }
                               },
                               error: function (xhr) {
                                   $("#save_data").prop('disabled', false);
                                   swal(error);
                               },
                        }
                        if ($(formData).attr('enctype') == "multipart/form-data") {
                            ajaxConfig["contentType"] = false;
                            ajaxConfig["processData"] = false;
                        }
                        $.ajax(ajaxConfig);
                        return false;
                         }

        //SHOW LOADER ICON
        $(document).ajaxStart(function () {
            $("#divLoader").show();
        });
        //HIDE LOADER ICON
        $(document).ajaxStop(function () {
            $("#divLoader").hide();
        });
    </script>
}
