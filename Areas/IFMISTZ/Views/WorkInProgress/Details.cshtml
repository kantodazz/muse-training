@model IFMIS.Areas.IFMISTZ.Models.WorkInProgressVM
@{
    ViewBag.Title = "Work In Progress Details";
}
<div id="divLoader"></div>
<fieldset class="scheduler-border">
    <br />
    <legend class="scheduler-border">Work In Progress Details</legend>
    <div class="row">
        <div class="col-sm-6 col-md-6 col-lg-6">
            <strong>Legal Number&nbsp;:</strong>&nbsp;@Html.DisplayFor(model => model.LegalNumber)
        </div>
        <div class="col-sm-6 col-md-6 col-lg-6">
            <strong>Contract Number&nbsp;:</strong>&nbsp;@Html.DisplayFor(model => model.ContractNo)
        </div>
    </div>


    <div class="row">
        <div class="col-sm-6 col-md-6 col-lg-6">
            <strong>Contract Amount&nbsp;:</strong>&nbsp;@Html.DisplayFor(model => model.TotalQuantityAmount)
        </div>
        <div class="col-sm-6 col-md-6 col-lg-6">
            <strong>Received Amount&nbsp;:</strong>&nbsp;@Html.DisplayFor(model => model.ReceivedQuantityAmount)
        </div>
    </div>

    <div class="row">
        <div class="col-sm-6 col-md-6 col-lg-6">
            <strong>Balance&nbsp;:</strong>&nbsp;@Html.DisplayFor(model => model.BalanceAmount)
        </div>
        <div class="col-sm-6 col-md-6 col-lg-6">
            <strong>Currency&nbsp;:</strong>&nbsp;@Html.DisplayFor(model => model.OperationCurrency)
        </div>
    </div>


    <div class="row">
        <div class="col-sm-6 col-md-6 col-lg-6">
            <strong>WIP Class&nbsp;:</strong>&nbsp;@Html.DisplayFor(model => model.WipClass)
        </div>
    </div>
</fieldset>

<div class="jarviswidget" data-widget-colorbutton="false" data-widget-editbutton="false" data-widget-togglebutton="false" data-widget-deletebutton="false" data-widget-fullscreenbutton="false" data-widget-custombutton="false">

    <header>
        <h2><strong></strong> <i></i></h2>

        <ul id="widget-tab-1" class="nav nav-tabs pull-right">

            <li class="active">

                <a data-toggle="tab" href="#hr1"> <i class="fa fa-lg fa-arrow-circle-o-down"></i> <span class="hidden-mobile hidden-tablet">Asset Items<span class="badge inbox-badge margin-right-13" style="background-color:#2196F3">@Model.FormedAssets.Count()</span></span> </a>

            </li>
            <li>

                <a data-toggle="tab" href="#hr2"> <i class="fa fa-lg fa-arrow-circle-o-down"></i> <span class="hidden-mobile hidden-tablet">WIP Items<span class="badge inbox-badge margin-right-13" style="background-color:#2196F3">@Model.WipDetails.Count()</span></span> </a>

            </li>
        </ul>

    </header>

    <div>


        <div class="jarviswidget-editbox">

        </div>

        <div class="widget-body no-padding">


            <div class="tab-content padding-10">
                <div class="tab-pane fade in active" id="hr1">
                    <div class="widget-body no-padding">

                        <br />




                        <div class="custom-scroll" style="height:210px; overflow-y: scroll;">
                            @if (Model.OverallStatus != "Confirmed")
                            {
                                <div class="row">
                                    <div class="col-xs-9 col-sm-3 col-md-3 col-lg-3 col-md-offset-1">
                                        <div class="input-group">
                                            <a href="#" onclick="addWipAsset()" class="btn btn-info" style="width:120px;border-radius:1px;">
                                                <i class="fa fa-plus"></i>Add Asset
                                            </a>

                                        </div>
                                    </div>

                                </div>
                                <hr/>
                            }
                            @if (Model.FormedAssets.Count() > 0)
                            {
                                <table align="center" class="table table-bordered  table-condensed" style="width:97%">

                                    <tr>
                                        <th style="text-align:center">#</th>
                                        <th style="text-align:left">Asset Name</th>
                                        <th style="text-align:left">Asset No</th>
                                        <th style="text-align:left">Class</th>
                                        <th style="text-align:right">Asset Value</th>
                                        <th style="text-align:center">Action</th>
                                    </tr>


                                    <tbody>

                                        @{var i = 0;}

                                        @foreach (var item in Model.FormedAssets)
                                        {

                                            i++;
                                            <tr>
                                                <td style="text-align:center">
                                                    @i
                                                </td>
                                                <td style="text-align:left">
                                                    @Html.DisplayFor(modelItem => item.AssetName)
                                                </td>
                                                <td style="text-align:left">
                                                    @Html.DisplayFor(modelItem => item.AssetNo)
                                                </td>
                                                <td style="text-align:left">
                                                    @Html.DisplayFor(modelItem => item.AssetClass)
                                                </td>
                                                <td style="text-align:right">
                                                    @Html.DisplayFor(modelItem => item.AssetValue)
                                                </td>
                                                <td style="text-align:center">
                                                    <div class="btn-group">
                                                        <button type="button" class="btn btn-info btn-xs dropdown-toggle" data-toggle="dropdown" style="width:40px;border-radius:1px;" aria-haspopup="true" aria-expanded="false">
                                                            <span class="caret"></span>
                                                            <span class="sr-only">Toggle Dropdown</span>
                                                        </button>
                                                        <ul class="dropdown-menu">
                                                            <li><a href="#" onclick="cancelAsset(@item.WipFormedAssetId)" class="btn-xs edit"><i class="fa fa-edit"></i> Cancel</a></li>
                                                        </ul>
                                                    </div>
                                                </td>
                                            </tr>

                                        }
                                        <tr>
                                            <td colspan="4" style="text-align:right"><strong>Total</strong></td>

                                            <td style="text-align:right"><strong>@Convert.ToDecimal(Model.FormedAssets.Select(a => a.AssetValue).DefaultIfEmpty(0).Sum()).ToString("#,##0.00/=")</strong></td>
                                            <td></td>
                                        </tr>
                                    </tbody>
                                </table>
                            }



                        </div>



                    </div>

                </div>
                <div class="tab-pane fade in" id="hr2">
                    <div class="widget-body no-padding">

                        <br />

                        <div class="custom-scroll" style="height:130px; overflow-y: scroll;">
                            @if (Model.WipDetails.Count() > 0)
                            {

                                <table align="center" class="table table-bordered  table-condensed" style="width:97%">

                                    <tr>
                                        <th style="text-align:center">#</th>
                                        <th style="text-align:left">Item Name</th>
                                        <th style="text-align:left">Category</th>
                                        <th style="text-align:left">Classification</th>
                                        <th style="text-align:center">Quantity</th>
                                        <th style="text-align:right">Unit Price</th>
                                        <th style="text-align:right">Total</th>

                                    </tr>


                                    <tbody>

                                        @{var i = 0;
                                            decimal grandTotal = 0;
                                            decimal item_total = 0;}
                                        @foreach (var item in Model.WipDetails)
                                        {
                                            grandTotal = grandTotal + Convert.ToDecimal(0);
                                            item_total = item_total + (decimal)item.Quantity;
                                            i++;
                                        <tr>
                                            <td style="text-align:center">
                                                @i
                                            </td>
                                            <td style="text-align:left">
                                                @Html.DisplayFor(modelItem => item.ItemName)
                                            </td>
                                            <td style="text-align:left">
                                                @Html.DisplayFor(modelItem => item.itemClassification.ItemCategory)
                                            </td>
                                            <td style="text-align:left">
                                                @Html.DisplayFor(modelItem => item.itemClassification.ClassificationDesc)
                                            </td>
                                            <td style="text-align:center">
                                                @Html.DisplayFor(modelItem => item.Quantity)
                                            </td>
                                            <td style="text-align:right">
                                                @Html.DisplayFor(modelItem => item.UnitPrice)
                                            </td>
                                            <td style="text-align:right">
                                                @Html.DisplayFor(modelItem => item.TotalPrice)
                                            </td>


                                        </tr>

                                        }
                                        <tr>
                                            <td colspan="6" style="text-align:right"><strong>Total</strong></td>

                                            <td style="text-align:right"><strong>@Convert.ToDecimal(Model.WipDetails.Select(a => a.TotalPrice).DefaultIfEmpty(0).Sum()).ToString("#,##0.00/=")</strong></td>
                                        </tr>
                                    </tbody>
                                </table>
                            }

                        </div>



                    </div>

                </div>

            </div>

            <div class="row" style="padding-bottom:30px;">
                <div class="col-md-offset-1">
                    @if (Model.OverallStatus == "Pending")
                    {
                        <a href="@Url.Action("PendingWorkInProgress","WorkInProgress")" class="btn btn-info"><i class="glyphicon glyphicon-arrow-left"></i> Back  </a>

                        <button type="button" onclick="confirmEntry(@Model.WorkInProgressId,'Confirm')" class="btn btn-info">
                            <i class="glyphicon glyphicon-floppy-disk"></i> Confirm
                        </button>
                    }

                    @if (Model.OverallStatus == "Confirmed")
                    {
                        <a href="@Url.Action("ApprovalWorkInProgress","WorkInProgress")" class="btn btn-info"><i class="glyphicon glyphicon-arrow-left"></i> Back  </a>


                        <button type="button" onclick="confirmEntry(@Model.WorkInProgressId,'Approve')" class="btn btn-info">
                            <i class="glyphicon glyphicon-floppy-disk"></i> Approve
                        </button>
                    }

                </div>
            </div>

        </div>

    </div>


</div>

<div class="modal fade" id="add_asset_modal">
    <div class="modal-dialog">
        <div class="modal-content">

            <div class="modal-header">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h4 align="center">New Asset Form</h4>
            </div>
            @using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = "return SubmitAsset(this)" }))
            {
                @Html.AntiForgeryToken()

                <div class="modal-body">
                    <div class="form-horizontal">
                        @Html.HiddenFor(model => model.WorkInProgressId)
                        <div class="form-group">
                            @Html.LabelFor(model => model.AssetName, htmlAttributes: new { @class = "control-label   col-md-3", @style = "text-align:left" })
                            <div class="col-md-7">
                                @Html.EditorFor(model => model.AssetName, new { htmlAttributes = new { @class = "form-control", @required = "required", @autocomplete = "off" } })
                                @Html.ValidationMessageFor(model => model.AssetName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.AssetNumber, htmlAttributes: new { @class = "control-label   col-md-3", @style = "text-align:left" })
                            <div class="col-md-7">
                                @Html.EditorFor(model => model.AssetNumber, new { htmlAttributes = new { @class = "form-control", @required = "required", @autocomplete = "off" } })
                                @Html.ValidationMessageFor(model => model.AssetNumber, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.AssetClassId, htmlAttributes: new { @class = "control-label   col-md-3", @style = "text-align:left" })
                            <div class="col-md-7">
                                @Html.DropDownListFor(model => model.AssetClassId, Model.AssetClassList, "Select ---", new { @class = "form-control select2", @required = "required" })
                                @Html.ValidationMessageFor(model => model.AssetClassId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.AssetValue, htmlAttributes: new { @class = "control-label   col-md-3", @style = "text-align:left" })
                            <div class="col-md-7">
                                @Html.EditorFor(model => model.AssetValue, new { htmlAttributes = new { @class = "form-control", @required = "required", @autocomplete = "off" } })
                                @Html.ValidationMessageFor(model => model.AssetValue, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-default action-btn" data-dismiss="modal">
                        Cancel
                    </button>
                    <button type="submit" id="save_asset" class="btn btn-info">
                        Save
                    </button>
                </div>

            }

        </div>
    </div>
</div>


@section pagespecific {
    <script>

        function confirmEntry(id, action) {

            swal({
                title: 'Confirmation',
                text: "Do you want to " + action + " this entry",
                buttons: ['No', 'Yes'],
            }).then(function (isConfirm) {
                if (isConfirm) {
                    var url = '@Url.Action("ConfirmEntry", "WorkInProgress")';
                    $.ajax({
                        type: "POST",
                        url: url,
                        data: { id: id, action: action },
                        success: function (response) {
                            if (response == "Success") {
                                swal("Successfully!", { icon: "success" })
                                    .then((value) => {
                                        location.reload();
                                    });
                            } else {
                                swal(response);
                            }
                        },
                        error: function (xhr) {
                            swal(error);
                            $("#divLoader").hide();
                        },
                    });
                } else {
                    swal("Cancelled", "No change was made");
                }
            });
        };

        function cancelAsset(id) {

            swal({
                title: 'Confirmation',
                text: "Do you want to cancel this asset",
                buttons: ['No', 'Yes'],
            }).then(function (isConfirm) {
                if (isConfirm) {
                    var url = '@Url.Action("CancelAsset", "WorkInProgress")';
                    $.ajax({
                        type: "POST",
                        url: url,
                        data: { id: id},
                        success: function (response) {
                            if (response == "Success") {
                                swal("Successfully!", { icon: "success" })
                                    .then((value) => {
                                        location.reload();
                                    });
                            } else {
                                swal(response);
                            }
                        },
                        error: function (xhr) {
                            swal(error);
                        },
                    });
                } else {
                    swal("Cancelled", "No change was made");
                }
            });
        };


        var addWipAsset = function () {
            $('#add_asset_modal').modal('show');
        };

        function SubmitAsset(formData) {
            $("#save_asset").prop('disabled', true);
                          var url = '@Url.Action("SaveAsset", "WorkInProgress")';
                           var ajaxConfig = {
                            type: "post",
                            url: url,
                            data: new FormData(formData),
                             success: function (response) {
                              if (response == "Success") {
                                       swal("Asset saved successfully", { icon: "success" })
                                           .then((value) => {
                                           location.reload();
                                           });
                                   }
                                   else {
                                  $("#save_asset").prop('disabled', false);
                                       swal(response);
                                   }
                               },
                               error: function (xhr) {
                                   $("#save_asset").prop('disabled', false);
                                   swal(error);
                               },
                        }
                        if ($(formData).attr('enctype') == "multipart/form-data") {
                            ajaxConfig["contentType"] = false;
                            ajaxConfig["processData"] = false;
                        }
                        $.ajax(ajaxConfig);
                        return false;
                         }
        //SHOW LOADER ICON
        $(document).ajaxStart(function () {
            $("#divLoader").show();
        });
        //HIDE LOADER ICON
        $(document).ajaxStop(function () {
            $("#divLoader").hide();
        });

    </script>
}




