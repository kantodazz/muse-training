@model IFMIS.Areas.IFMISTZ.Models.ContractVM
@{
    ViewBag.Title = "Create Contract";

}
<style type="text/css">
    body {
        margin-top: 40px;
    }

    .stepwizard-step p {
        margin-top: 10px;
    }

    .stepwizard-row {
        display: table-row;
    }

    .stepwizard {
        display: table;
        width: 100%;
        position: relative;
    }

    .stepwizard-step button[disabled] {
        opacity: 1 !important;
        filter: alpha(opacity=100) !important;
    }

    .stepwizard-row:before {
        top: 14px;
        bottom: 0;
        position: absolute;
        content: " ";
        width: 100%;
        height: 1px;
        background-color: #ccc;
        z-order: 0;
    }

    .stepwizard-step {
        display: table-cell;
        text-align: center;
        position: relative;
    }

    .loadingImg {
        display: none;
    }

    .search-btn {
        border: 1px solid #ccc;
        border-radius: 4px;
        padding: 5px;
        padding-right: 10px;
    }

    .search-container {
        display: inline-flex;
        flex: 1 1 300px;
        position: relative;
        border: 1px solid #ccc;
        border-radius: 5px;
        overflow: hidden;
        padding-left: 10px;
    }

    .name-input-container {
        display: inline-flex;
        flex: 1 1 300px;
        position: relative;
        overflow: hidden;
    }

    .search-icon {
        padding: 0.5rem;
    }

    .search-button {
        background: #538AC5;
        border: 0;
        color: white;
        padding: 8px;
        border-radius: 0;
    }

    input[type=number] {
        padding: 8px;
        border: 1px solid #ccc;
        width: 205px;
    }

    input[type=text] {
        padding: 5px;
        border: 1px solid #ccc;
    }

    input[type=search] {
        padding: 4px;
        border: hidden;
        border-radius: 4px;
    }

    textarea {
        border: 1px solid #ccc;
    }

    select {
        padding: 8px;
        border: 1px solid #ccc;
        resize: vertical;
        width: 230px;
    }

    .action-btn {
        width: 100px;
        color: white;
    }

    .form-label {
        text-align: right;
    }

    td {
        padding: 5px;
    }

    .info-box {
        padding: 10px;
        background-color: #ECF3F8;
        text-align: center;
        border: 1px solid #ccc;
        border-radius: 5px;
    }
</style>
<div id="content" style="margin: 5px; padding-top: 30px">
    <div class="row">


    </div>
    <!-- widget grid -->
    <section id="widget-grid" class="">


        <!-- START ROW -->

        <div class="row">

            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">

                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">
                    <br/>
                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2> @ViewBag.Title </h2>

                    </header>


                    <div>
                        <div class="widget-body " style="padding-top:10px;width:100%">

                            <!----WIZARD HEADING -->

                            <div class="stepwizard">
                                <div class="stepwizard-row setup-panel">
                                    <div class="stepwizard-step">
                                        <a href="#step-1" type="button" class="btn btn-primary btn-circle">1</a>
                                        <p><strong>Basic Information </strong></p>
                                    </div>

                                    <div class="stepwizard-step">
                                        <a href="#step-2" type="button" class="btn btn-default btn-circle" disabled="disabled">2</a>
                                        <p><strong>Payment Schedules</strong></p>
                                    </div>
                                    <div class="stepwizard-step">
                                        <a href="#step-3" type="button" class="btn btn-default btn-circle" disabled="disabled">3</a>
                                        <p><strong>Items</strong></p>
                                    </div>
                                </div>
                            </div>
                            <br />
                            <br />

                            <!----WIZARD BODY -->
                            <!---- STEP 1 START HERE -->

                            <div class="row setup-content" id="step-1">
                                @using (Html.BeginForm(null,null, FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = "return SubmitSummary(this)" }))
                                {
                                    @Html.AntiForgeryToken()

                                    <div class="form-horizontal">

                                        <div class="col-xs-12">


                                            <div class="col-md-12">

                                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                                @Html.HiddenFor(model => model.VatPercentage)
                                                @Html.HiddenFor(model => model.ContractId)
                                                @Html.HiddenFor(model => model.PayeeDetailId)
                                                @Html.HiddenFor(model => model.ContractNo)
                                                @Html.HiddenFor(model => model.CurrentExchangeRate)
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.ContractNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-3">
                                                        @Html.EditorFor(model => model.ContractNumber, new { htmlAttributes = new { @class = "form-control", @required = "required", @autocomplete = "off" } })
                                                        @Html.ValidationMessageFor(model => model.ContractNumber, "", new { @class = "text-danger" })
                                                    </div>
                                                    <label class="col-md-2 control-label"><span id="contracter">Supplier</span></label>
                                                    <div class="col-md-3">

                                                        <div class="input-group">

                                                            <span class="input-group-addon" onclick="SearchPayee()"><i class="fa fa-search"></i></span>
                                                            @Html.EditorFor(model => model.Payeename, new { htmlAttributes = new { @class = "form-control", @required = "required", @placeholder = "Search", autocomplete = "off", @onclick = "SearchPayee()" } })
                                                            @Html.ValidationMessageFor(model => model.Payeename, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>

                                                </div>
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.PayeeType, htmlAttributes: new { @class = "control-label   col-md-2" })
                                                    <div class="col-md-3">
                                                        @Html.EditorFor(model => model.PayeeType, new { htmlAttributes = new { @class = "form-control", @required = "required", @autocomplete = "off",@readonly= "readonly" } })
                                                        @Html.ValidationMessageFor(model => model.PayeeType, "", new { @class = "text-danger" })
                                                    </div>
                                                    @Html.LabelFor(model => model.ContractType, htmlAttributes: new { @class = "control-label   col-md-2" })
                                                    <div class="col-md-3">
                                                        @Html.DropDownListFor(model => model.ContractType, Model.ContractTypeList, "Select ---", new { @class = "form-control", @required = "required" })                                                                    
                                                        @Html.ValidationMessageFor(model => model.ContractType, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.ContractName, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-3">
                                                        @Html.EditorFor(model => model.ContractName, new { htmlAttributes = new { @class = "form-control", @required = "required", @autocomplete = "off" } })
                                                        @Html.ValidationMessageFor(model => model.ContractName, "", new { @class = "text-danger" })
                                                    </div>
                                                    @Html.LabelFor(model => model.SubBudgetClass, htmlAttributes: new { @class = "control-label   col-md-2" })
                                                    <div class="col-md-3">
                                                        @Html.DropDownList("SubBudgetClass", Model.SubBudgetClassList, "Select ---", new { @class = "form-control", @required = "required" })
                                                        @Html.ValidationMessageFor(model => model.SubBudgetClass, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.ProcurementMethod, htmlAttributes: new { @class = "control-label   col-md-2" })
                                                    <div class="col-md-3">
                                                        @Html.DropDownListFor(model => model.ProcurementMethod, Model.ProcurementMethodList, "Select ---", new { @class = "form-control", @required = "required" })
                                                        @Html.ValidationMessageFor(model => model.ProcurementMethod, "", new { @class = "text-danger" })
                                                    </div>
                                                    @Html.LabelFor(model => model.ContractAmount, htmlAttributes: new { @class = "control-label   col-md-2" })
                                                    <div class="col-md-3">
                                                        <div class="input-group">

                                                            <span class="input-group-addon currencyDisp">@Html.DisplayFor(model => model.OperationalCurrency)</span>
                                                            @Html.EditorFor(model => model.ContractAmount, new { htmlAttributes = new { @class = "form-control", @required = "required", @autocomplete = "off" } })
                                                            @Html.ValidationMessageFor(model => model.ContractAmount, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>

                                                </div>
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.ContractDescription, htmlAttributes: new { @class = "control-label   col-md-2" })
                                                    <div class="col-md-3">

                                                        @Html.EditorFor(model => model.ContractDescription, new { htmlAttributes = new { @class = "form-control", @required = "required", rows = "3", maxlength = 250 } })

                                                        @Html.ValidationMessageFor(model => model.ContractDescription, "", new { @class = "text-danger" })
                                                    </div>



                                                </div>

                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.ContractStartDate, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-3">
                                                        @Html.EditorFor(model => model.ContractStartDate, new { htmlAttributes = new { @class = "form-control", @required = "required", @autocomplete = "off" } })
                                                        @Html.ValidationMessageFor(model => model.ContractStartDate, "", new { @class = "text-danger" })


                                                    </div>


                                                    @Html.LabelFor(model => model.ContractEndDate, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-md-3">
                                                    @Html.EditorFor(model => model.ContractEndDate, new { htmlAttributes = new { @class = "form-control", @required = "required", @autocomplete = "off" } })
                                                    @Html.ValidationMessageFor(model => model.ContractEndDate, "", new { @class = "text-danger" })
                                                </div>

                                                </div>
                                                @if (ViewBag.STPayments != null)
                                                {
                                                    <div class="form-group">
                                                        @Html.Label("Is ST Payment ?", htmlAttributes: new { @class = "control-label   col-md-2" })
                                                        <div class="col-md-3">

                                                            <input type="checkbox" style="width:30px" id="IsStPayment">
                                                            <input id="StPayment" name="StPayment" style="width:40px;font-weight:bold" type="text" readonly value="NO">

                                                        </div>
                                                        <div class="IsStPayment">
                                                            @Html.LabelFor(model => model.ParentInstitutionCode, htmlAttributes: new { @class = "control-label col-md-2" })
                                                            <div class="col-md-3">
                                                                <select name="ParentInstitutionCode" id="ParentInstitutionCode" class="form-control"></select>
                                                                @Html.ValidationMessageFor(model => model.ParentInstitutionCode, "", new { @class = "text-danger" })
                                                            </div>
                                                        </div>
                                                    </div>
                                                }
                                                @if (ViewBag.STPayments != null)
                                                {
                                                    <div class="form-group">

                                                        <div class="IsStPayment">
                                                            @Html.LabelFor(model => model.SubWarrantCode, htmlAttributes: new { @class = "control-label col-md-2" })
                                                            <div class="col-md-3">
                                                                <select name="SubWarrantCode" id="SubWarrantCode" class="form-control"></select>
                                                                @Html.ValidationMessageFor(model => model.SubWarrantCode, "", new { @class = "text-danger" })
                                                            </div>
                                                        </div>
                                                    </div>
                                                }
                                                <div class="form-group">

                                                    @Html.LabelFor(model => model.Lotted, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-1" style="padding-top:8px">

                                                        @Html.EditorFor(x => x.Lotted)
                                                    </div>
                                                    <div id="lot">
                                                        @Html.LabelFor(model => model.LotNo, htmlAttributes: new { @class = "control-label col-md-1" })
                                                        <div class="col-md-1">
                                                            @Html.EditorFor(model => model.LotNo, new { htmlAttributes = new { @class = "form-control" } })
                                                            @Html.ValidationMessageFor(model => model.LotNo, "", new { @class = "text-danger" })
                                                        </div>
                                                        @Html.LabelFor(model => model.LotDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                                                        <div class="col-md-3">
                                                            @Html.EditorFor(model => model.LotDescription, new { htmlAttributes = new { @class = "form-control", autocomplete = "off", rows = "2", maxlength = 250 } })
                                                            @Html.ValidationMessageFor(model => model.LotDescription, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                </div>




                                            </div>
                                            <div class="col-md-offset-2">
                                                <a href="@Url.Action("PendingContract","ContractRegistration")" style="margin-right:5px" type="submit" class="btn btn-info pull-left"><i class="glyphicon glyphicon-arrow-left"></i> Back  </a>
                                                @*<button type="submit" id="summary" class="btn btn-info" style="margin-right:2px">
                                                        <i class="glyphicon glyphicon-floppy-disk"></i> Save
                                                    </button>*@
                                                <button class="btn btn-info" id="save_summary" style="margin-right:2px">
                                                    <i class="glyphicon glyphicon-floppy-disk"></i> Save
                                                </button>

                                                <button class="btn btn-info nextBtn" type="button">Next &nbsp;<span class="glyphicon glyphicon-arrow-right" aria-hidden="true"></span></button>
                                            </div>
                                            <br />

                                            <div align="center">
                                                <img src="~/Media/Images/ajax_loader.gif" class="loadingImg" />
                                            </div>

                                        </div>
                                    </div>
                                }
                            </div>


                            <!----STEP 2 START HERE -->
                            <div class="setup-content" id="step-2">
                                
                                    <div id="payment-schedule"></div>
                           
                            </div>


                            <!----STEP 3 START HERE -->
                            <div class="setup-content" id="step-3">
                                <div id="contract-items"></div>
                              
                            </div>

                            @*</div>*@






                        </div>


                    </div>


                </div>
            </article>

        </div>
    </section>

</div>

<!----------- Search Payee ----------------->
<div class="modal fade" id="payeeModal" style="left:4%">

    <div class="modal-dialog" style="width:80%;">
        <div class="modal-content panel-info">


            <div class="modal-header panel-heading">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h3 class="modal-title"> Search Payee</h3>

            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-6">
                    </div>
                    <div class="col-md-6">
                        <div class="search-container submit-btn" style="float:right">
                            <i class="fa fa-search search-icon"></i>
                            <input type="search" name="search" placeholder="Search..." autocomplete="off" id="searchbox">
                        </div>
                    </div>
                </div>
                <div align="center">
                    <img src="/Media/Images/ajax_loader.gif" class="loadingImg" />
                </div>
                <table class="table" id="dt_search_payee">
                    <thead>
                        <tr>
                            <th>#</th>
                            <th>PaymentId</th>
                            <th>BIC</th>
                            <th>Payee Name</th>
                            <th>Payee Code</th>
                            <th>Bank Name</th>
                            <th>Bank Account No</th>
                            <th>Payee Type</th>
                            <th>Address</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>

            </div>
            <div class="modal-footer">
                <button class="btn btn-info" data-dismiss="modal">
                    <i class="fa  fa-times"></i>Close
                </button>
            </div>
        </div>
    </div>
</div>
<!----------- Search Payee ----------------->

@section pagespecific {
    <!-- PAGE RELATED PLUGIN(S) -->

    <script type="text/javascript">
                           function SubmitSummary(formData) {
                            $("#save_summary").prop('disabled', true);
                            var url = '@Url.Action("SaveContract", "ContractRegistration")';
                           var ajaxConfig = {
                            type: "post",
                            url: url,
                            data: new FormData(formData),
                            success: function (result) {
                                $("#save_summary").prop('disabled', false);
                            if (result.response == "Success") {
                                    swal("Basic information saved successfully", { icon: "success" })
                                         .then((value) => {
                                            $("#ContractId").val(result.id);
                                             paymentScheduleForm(result.id, result.amount, result.currency);
                                              });
                            }
                            else if (result.response == "Updated") {
                                swal("Updated successfully", { icon: "success" })
                                    .then((value) => {
                                        paymentScheduleForm(result.id, result.amount, result.currency);
                                    });
                            }
                               else {
                                swal(result);
                                }
                            }
                        }
                        if ($(formData).attr('enctype') == "multipart/form-data") {
                            ajaxConfig["contentType"] = false;
                            ajaxConfig["processData"] = false;
                        }
                        $.ajax(ajaxConfig);
                        return false;
                         }

                        $("#dt_search_payee_wrapper .dt-toolbar").remove();
                        function SearchPayee() {
                            $('#payeeModal').modal('show');
                        }


                        // ============= SHOW PAYEE===============
                        var dt_selected_payee = $('#dt_selected_payee').dataTable({
                            "data": [],
                            "columnDefs": [{
                                "targets": [0, 1],
                                "visible": false
                            }],
                            "columns": [
                                { title: "Payee DetailId" },
                                { title: "Payee BIC" },
                                { title: "Payee Name" },
                                { title: "Payee Code" },
                                { title: "Bank Name" },
                                { title: "Payee Type" },
                                { title: "Bank Account No" },
                                { title: "Address" }
                            ]
                        });


                        // ============= SEARCH PAYEEE ===========

                        Date.prototype.toDateInputValue = (function () {
                            var local = new Date(this);
                            local.setMinutes(this.getMinutes() - this.getTimezoneOffset());
                            return local.toJSON().slice(0, 10);
                        });

                        $(function () {
                            $('#ApplyDate').val(new Date().toDateInputValue());
                            $('#InvoiceDate').val(new Date().toDateInputValue());
                        })

                        var dt_search_payee = $('#dt_search_payee').dataTable({
                            "aoColumnDefs": [{ "bVisible": false, "aTargets": [1, 2] }],
                        });

                        $("#searchbox").on("keyup search input paste cut", function () {
                            if (!this.value) {
                                dt_search_payee.fnClearTable();
                            } else {
                                searchPayeeTableUpdate(this.value);
                            }
                        });


                        function searchPayeeTableUpdate(search) {
                            var url = '@Url.Action("GetPayee", "Procurement")';
                            $.ajax({
                                type: "get",
                                url: url + "/?search=" + search + "",
                                contenttype: "application/json; charset=utf-8",
                                datatype: "json",
                                success: function (response) {
                                    data = response.data;
                                    dt_search_payee.fnClearTable();
                                    for (var i = 0; i < data.length; i++) {
                                        dt_search_payee.fnAddData([i+1,
                                           data[i]["PayeeDetailId"],
                                           data[i]["BIC"],
                                           data[i]["AccountName"],
                                           data[i]["PayeeCode"],
                                           data[i]["PayeeName"],
                                           data[i]["Accountnumber"],
                                           data[i]["PayeeType"],
                                           data[i]["Address1"],
                                           '<a href="#" onclick="payeeClicked(' + i + ')"><i class="glyphicon glyphicon-plus-sign"></i></a>'
                                        ]);
                                    }
                                },
                                failure: function (error) {
                                    swal(error);
                                }
                            });
                        }

                        function payeeClicked(rowId) {
                            var data = dt_search_payee.DataTable().rows().data();
                            var row = data[rowId];
                            $("#PayeeDetailId").val(row[1]);
                            $("#Payeename").val(row[3]);
                            $("#PayeeType").val(row[7]);
                            $("#payeeModal").modal("hide");
                        }


                        // =========== END SEARCH PAYEE ====================


                        $(document).ready(function () {
                            $("#dt_search_payee_wrapper .dt-toolbar").remove();
                            var contract_amount = $("#ContractAmount").val();
                            if (contract_amount) {
                                $("#ContractAmount").val(inputThousandSeparator(contract_amount))
                            }
                            if ($("#Lotted").is(":checked")) {
                                $("#lot").show();

                            } else {
                                $("#lot").hide();
                            }

                            var contract_type = $("#ContractType").val();
                            if (contract_type) {
                            if (contract_type == "Goods") {
                                $("#contracter").text("Supplier")
                            }
                            if (contract_type == "Services & Goods") {
                                $("#contracter").text("Supplier")
                            } else if (contract_type == "Works") {
                                $("#contracter").text("Contractor")
                            } else if (contract_type == "Consultancy") {
                                $("#contracter").text("Consultant")
                            }
                            else if (contract_type == "Non Consuntancy") {
                                $("#contracter").text("Service Provider")
                            }
                            }
                            $("#ContractType").change(function (e) {
                                var contract_type = $("#ContractType").val();

                                if (contract_type=="Goods") {
                                    $("#contracter").text("Supplier")
                                } else if (contract_type == "Works") {
                                    $("#contracter").text("Contractor")
                                }
                                if (contract_type == "Services & Goods") {
                                    $("#contracter").text("Supplier")
                                } else if (contract_type == "Consultancy") {
                                    $("#contracter").text("Consultant")
                                }
                                else if (contract_type == "Non Consuntancy") {
                                    $("#contracter").text("Service Provider")
                                }
                            });

                            $("#Lotted").change(function (e) {

                                if ($(this).is(":checked")) {
                                    $("#lot").show();

                                } else {
                                    $("#lot").hide();
                                    $("#LotNo").val("");
                                    $("#LotDescription").val("");
                                }
                            });


                            //MANAGE DATE SELECTED
                            $(function () {
                                $("#ContractEndDate").change(function () {
                                    var end_date = $(this).val();
                                    var start_date = $("#ContractStartDate").val();
                                    if (start_date) {
                                        if (end_date) {
                                            if (start_date > end_date) {
                                                swal("Please select date which is greater than the start date");
                                                $("#ContractEndDate").val("");
                                            }

                                        }
                                    }


                                });
                            });
                            $(function () {
                                $("#ContractStartDate").change(function () {
                                    var start_date = $(this).val();
                                    var end_date = $("#ContractEndDate").val();
                                    if (end_date) {
                                        if (start_date) {
                                            if (start_date > end_date) {
                                                swal("Please select date which is less than the end date");
                                                $("#ContractStartDate").val("");
                                            }

                                        }
                                    }


                                });
                            });





                                  // ON SUB BUDGET CLASS SELECTED
                        $("#SubBudgetClass").change(function () {
                            var sbc = $(this).val();
                            var url = '@Url.Action("GetCurrency", "Procurement")';
                            $.ajax({
                                type: "POST",
                                url: url,
                                data: {sbc:sbc },
                                success: function (data) {
                                          if (data == "SetupProblem") {
                                            swal("Currency Rate Setup is Incomplete");
                                            } else  if (data == "DbException") {
                                            swal("Failed to select currency due to DbException,Contact technical supporter");
                                            }
                                           else {
                                              $(".currencyDisp").text(data.currency);
                                            }


                                }
                            })
                        });


                            //MANAGE STEP WIZARD
                            var navListItems = $('div.setup-panel div a'),
                                   allWells = $('.setup-content'),
                                   allNextBtn = $('.nextBtn');

                            allWells.hide();

                            navListItems.click(function (e) {
                                e.preventDefault();
                                var $target = $($(this).attr('href')),
                                        $item = $(this);

                                if (!$item.hasClass('disabled')) {
                                    navListItems.removeClass('btn-primary').addClass('btn-default');
                                    $item.addClass('btn-primary');
                                    allWells.hide();
                                    $target.show();
                                    $target.find('input:eq(0)').focus();
                                }
                            });

                            allNextBtn.click(function () {
                                var curStep = $(this).closest(".setup-content"),
                                    curStepBtn = curStep.attr("id"),
                                    nextStepWizard = $('div.setup-panel div a[href="#' + curStepBtn + '"]').parent().next().children("a"),
                                    curInputs = curStep.find("input[type='text'],input[type='url']"),
                                    isValid = true;

                                $(".form-group").removeClass("has-error");
                                for (var i = 0; i < curInputs.length; i++) {
                                    if (!curInputs[i].validity.valid) {
                                        isValid = false;
                                        $(curInputs[i]).closest(".form-group").addClass("has-error");
                                    }
                                }

                                if (isValid)
                                    nextStepWizard.removeAttr('disabled').trigger('click');
                            });

                            $('div.setup-panel div a.btn-primary').trigger('click');
                            //END MANAGE STEP WIZARD

                            function SearchPayee() {
                                $('#payeeModal').modal('show');
                            }


                            //FINISH CONTRACT
                            $("#finish").click(function (e) {
                                var id = $("#ContractId").val();
                                if (id > 0) {
                                    var contract_number = $("#ContractNo").val();
                                    swal("New Contact Created successfully with Registration Number " + contract_number, { icon: "success" })
                                                  .then((value) => {
                                                      var url = '@Url.Action("PendingContract", "Contract")';
                                                      window.location.replace(url);
                                                  });
                                } else {
                                    swal("Click Back button");
                                }

                            });

                            $(function () { // this will be called when the DOM is ready
                                $("#add_lot").click(function () {
                                    $("#add_lot_form").show();
                                    $("#add_lot_field").hide();
                                    $("#hide_lot_field").show();

                                });
                            });

                            $(function () { // this will be called when the DOM is ready
                                $("#hide_lot_form").click(function () {
                                    $("#add_lot_form").hide();
                                    $("#add_lot_field").show();
                                    $("#hide_lot_field").hide();

                                });
                            });
                            //End Manage VA

                        });

        $(document).ajaxStart(function () {
            $(".loadingImg").show();
        });

        $(document).ajaxStop(function () {
            $(".loadingImg").hide();
        });

                        $("#ContractAmount").autoNumeric('init');
                        $("#PaymentAmount").autoNumeric('init');

                        $("#ContractName").on('keypress', function (event) {
                            var regex = new RegExp("^[0-9a-zA-Z \b]+$");
                            var key = String.fromCharCode(!event.charCode ? event.which : event.charCode);
                            if (!regex.test(key)) {
                                event.preventDefault();
                                return false;
                            }
                        });
                        $("#ContractDescription").on('keypress', function (event) {
                            var regex = new RegExp("^[0-9a-zA-Z \b]+$");
                            var key = String.fromCharCode(!event.charCode ? event.which : event.charCode);
                            if (!regex.test(key)) {
                                event.preventDefault();
                                return false;
                            }
                        });
                        $("#LotDescription").on('keypress', function (event) {
                            var regex = new RegExp("^[0-9a-zA-Z \b]+$");
                            var key = String.fromCharCode(!event.charCode ? event.which : event.charCode);
                            if (!regex.test(key)) {
                                event.preventDefault();
                                return false;
                            }
                        });

         $(".IsStPayment").toggle(false)
        $("#IsStPayment").change((e) => {
            $("#StPayment").val(e.target.checked ? "YES" : "NO")
            if (e.target.checked) {
                $(".IsStPayment").toggle(true)
                GetParentInstitutions();
            } else {
                $(".IsStPayment").toggle(false)
            }
        });

        function GetParentInstitutions() {
            $.ajax({
                type: "GET",
                url: "@Url.Action("GetParentInstitutions", "PaymentVoucher")",
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {
                if (response.data) {
                      $('#ParentInstitutionCode').empty();
                      $('<option value="">Select...</option>').appendTo('#ParentInstitutionCode');
                      $.each(response.data, function (i, d) {
                       $('<option value="' + d.ParentInstitutionCode + '">' + d.ParentInstitutionCode+'-'+d.ParentInstitutionName+ '</option>').appendTo('#ParentInstitutionCode');
                        });
                }
            },
            failure: function (error) {
                swal(error);
            }
        });
        }

        $("#ParentInstitutionCode").change(function () {
            var institutionCode = $(this).val();
            if (institutionCode) {
                GetSubWarrants(institutionCode);
            }

        });

        function GetSubWarrants(institutionCode) {
            $.ajax({
                type: "GET",
                url: "@Url.Action("GetSubWarrants", "PaymentVoucher")",
                data: { institutionCode },
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {
                if (response.data) {
                       $('#SubWarrantCode').empty();
                      $('<option value="">Select...</option>').appendTo('#SubWarrantCode');
                      $.each(response.data, function (i, d) {
                       $('<option value="' + d.SubWarrantCode + '">' + d.SubWarrantCode+'-'+d.SubWarrantDescription+ '</option>').appendTo('#SubWarrantCode');
                        });
                }
            },
            failure: function (error) {
                swal(error);
            }
        });
        }

         function paymentScheduleForm(id, amount,currency) {
           var url = '@Url.Action("PaymentScheduleForm", "ContractRegistration")';
             $("#payment-schedule").load(url, { id: id, amount: amount, currency: currency }, function (response, status, xhr) {
                if (status == "error") {
                    $("#payment-schedule").html("Error on loading  form, contact system supporter.");
                }

                  });

        };



        function SubmitPaymentSchedule(formData) {
            $("#submit_pay_schedule").prop('disabled', true);
                            var url = '@Url.Action("SavePaymentSchedule", "ContractRegistration")';
                           var ajaxConfig = {
                            type: "post",
                            url: url,
                            data: new FormData(formData),
                            success: function (result) {
                                $("#submit_pay_schedule").prop('disabled', false);
                            if (result.response == "Success") {
                                    swal("Data saved successfully", { icon: "success" })
                                         .then((value) => {
                                             contractItemForm(result.id);
                                             loadPayemntSchedule(result.id);
                                              });
                                }
                               else {
                                swal(result);
                                }
                            }
                        }

                        if ($(formData).attr('enctype') == "multipart/form-data") {
                            ajaxConfig["contentType"] = false;
                            ajaxConfig["processData"] = false;
                        }
                        $.ajax(ajaxConfig);
                        return false;
        }

        function contractItemForm(id) {
           var url = '@Url.Action("ContractItemForm", "ContractRegistration")';
             $("#contract-items").load(url, { id: id }, function (response, status, xhr) {
                if (status == "error") {
                    $("#contract-items").html("Error on loading  form, contact system supporter.");
                }

                  });

        };
                function loadPayemntSchedule(id) {
           var url = '@Url.Action("PaymentSchedulesList", "ContractRegistration")';
                    $("#payment-schedule").load(url, { id: id }, function (response, status, xhr) {
                if (status == "error") {
                    $("#payment-schedule").html("Error on loading  data, contact system supporter.");
                }

                  });

        };
    </script>
}


