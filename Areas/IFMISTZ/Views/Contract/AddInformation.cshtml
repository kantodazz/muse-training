@model IFMIS.Areas.IFMISTZ.Models.ReceivingSummaryVM
@{
    ViewBag.Title = "Receiving Attachment";
    string retention_ptg = null;
    if (Model.RetentionPercentage != null)
    {
        retention_ptg = Model.RetentionPercentage.ToString() + "%";
    }
    else
    {
        retention_ptg = "NA";
    }

    var k = 0;
    var l = 0;
}
<style type="text/css">

    .search-btn {
        border: 1px solid #ccc;
        border-radius: 4px;
        padding: 5px;
        padding-right: 10px;
    }

    .search-container {
        display: inline-flex;
        flex: 1 1 300px;
        position: relative;
        border: 1px solid #ccc;
        border-radius: 5px;
        overflow: hidden;
        padding-left: 10px;
    }

    .name-input-container {
        display: inline-flex;
        flex: 1 1 300px;
        position: relative;
        overflow: hidden;
    }

    .search-icon {
        padding: 0.5rem;
    }

    .search-button {
        background: #538AC5;
        border: 0;
        color: white;
        padding: 8px;
        border-radius: 0;
    }

    input[type=number] {
        padding: 8px;
        border: 1px solid #ccc;
        width: 205px;
    }

    input[type=text] {
        padding: 5px;
        border: 1px solid #ccc;
    }

    input[type=search] {
        padding: 4px;
        border: hidden;
        border-radius: 4px;
    }

    textarea {
        border: 1px solid #ccc;
    }

    select {
        padding: 8px;
        border: 1px solid #ccc;
        resize: vertical;
        width: 230px;
    }

    .action-btn {
        width: 100px;
        color: white;
    }

    .form-label {
        text-align: right;
    }

    td {
        padding: 5px;
    }

    .info-box {
        padding: 10px;
        background-color: #ECF3F8;
        text-align: center;
        border: 1px solid #ccc;
        border-radius: 5px;
    }
</style>

<div id="divLoader"></div>
<div id="content" style="margin: 5px; padding-top: 30px">

    <div class="row">


    </div>


    <!-- widget grid -->
    <section id="widget-grid" class="">


        <!-- START ROW -->

        <div class="row">

            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">

                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">
                    <br />
                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2>Receiving </h2>

                    </header>


                    <div>
                        <div class="widget-body " style="padding-top:10px;width:100%">
                            <fieldset>
                                <div class="row"> <div class="col-sm-6 col-md-6 col-lg-6"><strong>Contract Reg #&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:</strong>&nbsp;&nbsp;&nbsp;@Html.DisplayFor(model => model.ContractNo)</div><div class="col-sm-6 col-md-6 col-lg-6"><strong>Contract Number&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:</strong>&nbsp;&nbsp;&nbsp;@Html.DisplayFor(model => model.ContractNumber)</div></div>
                                <div class="row"> <div class="col-sm-6 col-md-6 col-lg-6"><strong>Receiving Number&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:</strong>&nbsp;&nbsp;&nbsp;@Html.DisplayFor(model => model.ReceivingNumber)</div><div class="col-sm-6 col-md-6 col-lg-6"><strong>Payee Code&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:</strong>&nbsp;&nbsp;&nbsp;@Html.DisplayFor(model => model.PayeeCode)</div></div>
                                <div class="row"> <div class="col-sm-6 col-md-6 col-lg-6"><strong>Currency&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:</strong>&nbsp;&nbsp;&nbsp;@Html.DisplayFor(model => model.Currency) </div><div class="col-sm-6 col-md-6 col-lg-6"><strong>Payee Name&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:</strong>&nbsp;&nbsp;&nbsp;@Html.DisplayFor(model => model.SupplierName)</div></div>
                                <div class="row">  <div class="col-sm-6 col-md-6 col-lg-6"><strong>Receiving Amount&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:</strong>&nbsp;&nbsp;&nbsp;@Html.DisplayFor(model => model.AmountReceived) @Html.DisplayFor(model => model.Currency)</div><div class="col-sm-6 col-md-6 col-lg-6"><strong>Status&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:</strong>&nbsp;&nbsp;&nbsp;&nbsp;@Html.DisplayFor(model => model.OverallStatus)</div></div>
                                <div class="row">
                                    <div class="col-sm-6 col-md-6 col-lg-6">
                                        <strong>Advance Payment&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:</strong>&nbsp;&nbsp;&nbsp;
                                        @if (Model.AdvancePayment != null)
                                        {
                                            @Html.DisplayFor(model => model.AdvancePayment)
                                        }
                                        else
                                        {
                                            <span>NA</span>
                                        }
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-6 col-md-6 col-lg-6"><strong>Available Fund Balance&nbsp;:</strong>&nbsp;&nbsp;&nbsp;@Html.DisplayFor(model => model.AvailableFundBalance) @Html.DisplayFor(model => model.Currency)</div>
                                    <div class="col-sm-6 col-md-6 col-lg-6"><strong>SBC&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:</strong>&nbsp;&nbsp;&nbsp;@Html.DisplayFor(model => model.SubBudgetClass)-(@Html.DisplayFor(model => model.PayerAccount))    <a data-toggle="collapse" data-parent="#accordion" href="#collapse3">&nbsp;&nbsp;&nbsp;Change SBC&nbsp;&nbsp;&nbsp;</a></div>

                                </div>
                                <div id="collapse3" class="panel-collapse collapse">
                                    <br />
                                    <div class="row">
                                        <div class="col-sm-6 col-md-4 col-lg-4">
                                            @Html.DropDownList("NewSubBudgetClass", Model.SBCList, "Select New SBC......", new { @class = "form-control select2" })
                                        </div>
                                        <div class="col-sm-4 col-md-4 col-lg-4 col-md-offset-2">
                                            <select id="NewPayerAccount" name="NewPayerAccount" class="form-control select2">
                                                <option> Select New Payer Account</option>
                                            </select>
                                        </div>
                                        <div class="col-md-1">
                                            <button type="button" id="save_sbc" class="btn btn-info" style="margin-right:2px">
                                                <i class="glyphicon glyphicon-floppy-disk"></i> Save
                                            </button>

                                        </div>
                                    </div>
                                    <br />
                                </div>

                                @if (Model.RetentionPercentage != null || Model.LiquidatedDamageAmount != null)
                                {
                                    <div class="row">
                                        <div class="col-sm-6 col-md-6 col-lg-6">
                                            <strong>Retention Ptg&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:</strong>&nbsp;&nbsp;&nbsp;@retention_ptg
                                        </div>
                                        @if (Model.RetentionAmount != null)
                                        {
                                            <div class="col-sm-6 col-md-6 col-lg-6">
                                                <strong>Retention Amount&nbsp;:</strong>&nbsp;&nbsp;&nbsp;

                                                @Html.DisplayFor(model => model.RetentionAmount)    @Html.DisplayFor(model => model.Currency)


                                            </div>
                                        }
                                    </div>

                                }
                                @if (Model.RetentionPercentage != null)
                                {
                                    <div class="row">
                                        <div class="col-sm-6 col-md-6 col-lg-6"><strong>Transfer Category&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:</strong>&nbsp;&nbsp;&nbsp;@Html.DisplayFor(model => model.RetentionBy)</div>
                                        @if (Model.RetentionBy == "InternalTransfer")
                                        {
                                            <div class="col-sm-6 col-md-6 col-lg-6">
                                                <strong>SBC To&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:</strong>&nbsp;&nbsp;&nbsp;&nbsp;@Html.DisplayFor(model => model.SubBudgetClassTo)
                                            </div>
                                        }
                                        else
                                        {
                                            if (Model.AccountName != null)
                                            {
                                                <div class="col-sm-6 col-md-6 col-lg-6">
                                                    <strong>Bank Account To&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:</strong>&nbsp;&nbsp;&nbsp;&nbsp;@Html.DisplayFor(model => model.AccountName)
                                                </div>
                                            }
                                        }

                                    </div>
                                }

                                @if (Model.LiquidatedDamageAmount != null)
                                {
                                    <div class="row">
                                        <div class="col-sm-6 col-md-6 col-lg-6">
                                            <strong>Liquidated Damages&nbsp;:</strong>&nbsp;&nbsp;&nbsp;
                                            @if (Model.LiquidatedNumberOfDays != null)
                                            {
                                                <span>Number of Days   @Html.DisplayFor(model => model.LiquidatedNumberOfDays) equals to </span>
                                            }
                                            @Html.DisplayFor(model => model.LiquidatedDamageAmount)    @Html.DisplayFor(model => model.Currency)


                                        </div>

                                    </div>

                                }
                                @if (Model.CompensationAmount != null)
                                {
                                    <div class="row">  <div class="col-sm-6 col-md-6 col-lg-6"><strong>Termination Compensation Amount&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:</strong>&nbsp;&nbsp;&nbsp;@Html.DisplayFor(model => model.CompensationAmount) </div></div>
                                }

                                @if (Model.Accrual == "YES")
                                {


                                    <div class="row">
                                        <div class="col-sm-6 col-md-6 col-lg-6">
                                            <strong>Accrual Receiving&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:</strong>&nbsp;&nbsp;&nbsp;

                                            @Html.DisplayFor(model => model.Accrual)


                                        </div>
                                    </div>


                                }
                                @if (Model.ParentInstitutionCode != null)
                                {
                                    <div class="row">  <div class="col-sm-6 col-md-6 col-lg-6"><strong>Parent Institution&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:</strong>&nbsp;&nbsp;&nbsp;@Html.DisplayFor(model => model.ParentInstitutionCode) - @Html.DisplayFor(model => model.ParentInstitutionName)</div><div class="col-sm-6 col-md-6 col-lg-6"><strong>SubWarant&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:</strong>&nbsp;&nbsp;&nbsp;&nbsp;@Html.DisplayFor(model => model.SubWarrantCode) - @Html.DisplayFor(model => model.SubWarrantDescription)</div></div>
                                }




                                @*<div class="row">
                <div class="col-sm-6 col-md-6 col-lg-6">
                    <strong>Last Receiving&nbsp;:</strong>&nbsp;

                    <input type="checkbox" style="width:30px" id="IsLastReceiving">
                    @Html.EditorFor(model => model.Receiving, new { htmlAttributes = new { @style = "width:40px;font-weight:bold", @readonly = "readonly" } })

                </div>
            </div>*@

                            </fieldset>
                            @if (Model.AutomaticRetention == false || Model.ShowLDForm == true)
                            {
                                <fieldset class="bordered">
                                    <legend class="scheduler-border">Deductions</legend>

                                    <div class="row">
                                        <div class="col-md-offset-1 col-sm-6 col-lg-4">
                                            <a data-toggle="collapse" data-parent="#accordion" href="#collapse1" class="btn btn-info btn-xs">&nbsp;&nbsp;&nbsp;Apply Deductions&nbsp;&nbsp;&nbsp;</a>
                                        </div>
                                    </div>
                                    <div id="collapse1" class="panel-collapse collapse">
                                        @if (Model.AutomaticRetention == false)
                                        {
                                            <hr />
                                            <H5><u>Retention </u></H5>
                                            <div class="row">
                                                @*<div class="col-sm-8 col-lg-4">
                                <div class="form-group">
                                    <label class="col-md-3 control-label">Has Retention:</label>
                                    <div class="col-md-1">
                                        @Html.EditorFor(x => x.HasRetention)
                                    </div>
                                    <div class="retention_display" style="display:none">
                                        <label class="col-md-3 control-label">Percentage:</label>
                                        <div class="col-md-3">
                                            @Html.EditorFor(model => model.RetentionPercentage, new { htmlAttributes = new { @class = "form-control", @min = 0, @autocomplete = "off" } })

                                        </div>

                                    </div>
                                </div>
                            </div>*@
                                                @*<label class="col-md-1 control-label">Has Retention:</label>*@
                                                <div class="col-md-2">
                                                    Has Retention:&nbsp;&nbsp;&nbsp;
                                                    @Html.EditorFor(x => x.HasRetention)
                                                </div>
                                                <div class="col-md-2 retention_display" style="display:none">
                                                    @Html.DropDownListFor(model => model.RetentionType, Model.RetentionTypes, "Select Retention Type", new { @class = "form-control" })
                                                </div>
                                                <div class="retention_display" style="display:none">
                                                    <div class="col-md-2">
                                                        @Html.EditorFor(model => model.RetentionPercentage, new { htmlAttributes = new { @class = "form-control", @min = 0, @autocomplete = "off", @placeholder = "Percentage" } })

                                                    </div>

                                                </div>
                                                <div class="col-md-1 non_cash_retention" style="display:none">
                                                    <button type="button" id="accrual_retention" class="btn btn-info" style="margin-right:2px">
                                                        <i class="glyphicon glyphicon-floppy-disk"></i> Save
                                                    </button>

                                                </div>
                                                <div class="cash_retention" style="display:none">

                                                    <div class="col-md-2">

                                                        @Html.DropDownListFor(model => model.RetentionBy, Model.RetentionByList, "Select transfer", new { @class = "form-control" })
                                                    </div>


                                                    <div class="col-md-2">
                                                        <div class="internal_transfer" style="display:none">

                                                            @Html.DropDownListFor(model => model.SubBudgetClassTo, Model.SubBudgetClassList, "Select SubBudgetClass", new { @class = "form-control" })
                                                        </div>
                                                        <div class="bank_transfer" style="display:none">

                                                            @Html.DropDownListFor(model => model.BankAccountTo, Model.AccountToList, "Select Bank Account", new { @class = "form-control" })

                                                        </div>
                                                    </div>

                                                    <div class="col-md-1 submit_retention" style="display:none">
                                                        <button type="button" id="save_retention" class="btn btn-info" style="margin-right:2px">
                                                            <i class="glyphicon glyphicon-floppy-disk"></i> Save
                                                        </button>

                                                    </div>

                                                </div>


                                            </div>
                                        }
                                        <hr />
                                        @if (Model.ShowLDForm)
                                        {
                                            <H5><u>Liquidated Damages</u></H5>
                                            <div class="form-horizontal">
                                                <div class="form-group">
                                                    <label class="col-md-2 control-label">Has Liquidated Damages:</label>
                                                    <div class="col-md-1" style="padding-top:8px">
                                                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@Html.EditorFor(x => x.HasLiquidatedDamage)
                                                    </div>
                                                    <div id="liquided_damage" style="display:none">
                                                        @Html.LabelFor(model => model.LiquidatedNumberOfDays, htmlAttributes: new { @class = "control-label col-md-2" })

                                                        <div class="col-md-3">
                                                            @Html.EditorFor(model => model.LiquidatedNumberOfDays, new { htmlAttributes = new { @class = "form-control", @min = 0, @placeholder = "Days", @autocomplete = "off", @style = "width:70%" } })
                                                        </div>

                                                        <div class="col-md-1">
                                                            <button type="button" id="save_liqdmg" class="btn btn-info" style="margin-right:2px">
                                                                <i class="glyphicon glyphicon-floppy-disk"></i> Save
                                                            </button>
                                                        </div>

                                                    </div>
                                                </div>

                                            </div>
                                        }
                                    </div>
                                    <br />
                                    <br />
                                </fieldset>
                            }

                            @*<fieldset class="bordered">
            <legend class="scheduler-border">Payable</legend>
            <div class="row">
                <div class="col-md-offset-1 col-sm-6 col-lg-4">
                    <a data-toggle="collapse" data-parent="#accordion" href="#payable" class="btn btn-info btn-xs">&nbsp;&nbsp;&nbsp;Apply Payable&nbsp;&nbsp;&nbsp;</a>
                </div>
                <br/>
            </div>
            <div id="payable" class="panel-collapse collapse">
                <hr />
                <H5><u>Interest Payable </u></H5>
                <div class="row">
                    </div>
                </div>
            <hr/>
        </fieldset>*@
                            @Html.HiddenFor(model => model.ReceivingSummaryId)
                            @Html.HiddenFor(model => model.ContractId)
                            @Html.HiddenFor(model => model.SubBudgetClass)
                            @Html.HiddenFor(model => model.ParentInstitutionCode)
                            @Html.HiddenFor(model => model.SubWarrantCode)
                            @Html.HiddenFor(model => model.ReceivedAmount)
                            @Html.HiddenFor(model => model.LiquidatedDamageAmount)
                            @Html.HiddenFor(model => model.RetentionBy)
                            @Html.HiddenFor(model => model.BankAccountToDisp)
                            @Html.HiddenFor(model => model.AccountName)
                            @*@Html.HiddenFor(model => model.InstitutionCodeTo)*@
                            <fieldset class="bordered">
                                <legend class="scheduler-border">GL Items Charge</legend>
                                <div class="col-md-offset-1 col-sm-6 col-lg-4">
                                    <a data-toggle="collapse" data-parent="#accordion" href="#collapse2" class="btn btn-info btn-xs">Assign GL Account(s)</a>
                                </div>

                                <div id="collapse2" class="panel-collapse collapse">
                                    <hr />
                                    @if (!Model.ChagedFull)
                                    {
                                        if (Model.IsFundBalanceAvailable)
                                        {
                                            using (Html.BeginForm(null, null, FormMethod.Get, null))
                                            {
                                                <div class="form-horizontal">

                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.ItemClassificationId, htmlAttributes: new { @class = "control-label   col-md-2" })
                                                        <div class="col-md-4">
                                                            @Html.DropDownListFor(model => model.ItemClassificationId, Model.ItemClassificationsList, "Select ", new { @class = "form-control select2" })
                                                            @Html.ValidationMessageFor(model => model.ItemClassificationId, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>


                                                </div>
                                            }
                                            if (Model.ReceiveType == "ByAmount")
                                            {
                                                <div class="row" id="wip" style="display:none">
                                                    <div class="col-xs-3 col-sm-7 col-md-3 col-lg-3 text-right">


                                                        <button type="button" class="btn btn-info" id="assign_gl_wip">
                                                            <i class="fa fa-plus"></i> <span class="hidden-mobile">Add GL Account</span>
                                                        </button>

                                                    </div>
                                                </div>
                                            }
                                        }
                                        else
                                        {
                                            <div class="row">
                                                <div class="col-lg-12 col-sm-12 col-xs-12">

                                                    <div class="alert alert-block alert-info">
                                                        <h4 class="alert-heading">Insufficient Fund Balance to SBC @Html.DisplayFor(model => model.SubBudgetClass) InstitutionCode @Html.DisplayFor(model => model.InstitutionCode) </h4>
                                                        <p>
                                                            Available amount is <strong>@Html.DisplayFor(model => model.AvailableFundBalance) @Html.DisplayFor(model => model.OperationCurrency)</strong> but required amount is <strong>@Html.DisplayFor(model => model.RequiredAmount) @Html.DisplayFor(model => model.OperationCurrency)</strong>.
                                                        </p>
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                    }
                                    <div align="center">
                                        <img src="~/Media/Images/ajax_loader.gif" class="loadingImg" style="display:none" />
                                    </div>

                                    <div id="purchase-items-list"></div>
                                    @if (Model.ReceivingCoas.Count() > 0)
                                    {
                                        var i = 0;
                                        <div class="accordion-body">
                                            <table class="table table-hover">
                                                <thead>
                                                    <tr>
                                                        <th scope="col" style="text-align: center">#</th>
                                                        <th scope="col" style="text-align: left">Item Description</th>
                                                        <th scope="col">Expenditure Line Item</th>
                                                        <th scope="col" style="text-align: left">Funding Reference</th>
                                                        <th scope="col" style="text-align: left">Item Class</th>
                                                        <th scope="col" style="text-align: right">Amount</th>
                                                        <th scope="col" style="text-align: center">Action</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @foreach (var item in Model.ReceivingCoas)
                                                    {
                                                        i++;
                                                        <tr>
                                                            <td align="center">@i</td>
                                                            <td>@Html.DisplayFor(modelItem => item.GLAccount)</td>
                                                            <td>@Html.DisplayFor(modelItem => item.GLAccountDesc)</td>
                                                            <td>@Html.DisplayFor(modelItem => item.FundingReference)</td>
                                                            <td>@Html.DisplayFor(modelItem => item.ItemClass)</td>
                                                            <td align="right">@Html.DisplayFor(modelItem => item.ExpenseAmount)</td>
                                                            <td style="text-align: center"><div class="btn-group"><button type="button" class="btn  btn-info btn-xs dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><span class="caret"></span><span class="sr-only">Toggle Dropdown</span></button> <ul class="dropdown-menu"> <li><a href="#" onclick="deselectGL(@item.ReceivingCoaId)"><i class="fa fa-edit"></i>Deselect</a></li></ul></div></td>
                                                        </tr>


                                                    }
                                                    <tr><td align="right" colspan="5"><strong>Total</strong></td><td align="right"><strong>@Convert.ToDecimal(Model.ReceivingCoas.Select(a => a.ExpenseAmount).DefaultIfEmpty(0).Sum()).ToString("#,##0.00/=")</strong></td><td></td></tr>
                                                </tbody>
                                            </table>
                                        </div>
                                    }




                                    <hr />
                                </div>

                                <br />
                                <br />
                            </fieldset>
                            <br />
                            @if (Model.ApplyDFund)
                            {
                                <fieldset class="bordered">
                                    <legend class="scheduler-border">Apply Approval</legend>
                                    <div class="col-md-offset-1 col-sm-6 col-lg-4">
                                        <a data-toggle="collapse" data-parent="#accordion" href="#dfund" class="btn btn-info btn-xs">Select DFUND approval</a>
                                    </div>
                                    <div id="dfund" class="panel-collapse collapse">
                                        <hr />
                                        <table class="table">
                                            <tr>
                                                <td><strong>Net Transaction Amount :</strong> @Html.DisplayFor(model => model.TransactionNetAmount)</td>
                                                <td><strong>Currency:</strong> @Html.DisplayFor(model => model.TransactionCurrency)</td>
                                            </tr>
                                            @if (!string.IsNullOrEmpty(Model.DfundTitle))
                                            {
                                            <tr>
                                                <td><strong>DFUND Reference:</strong> @Html.DisplayFor(model => model.DfundRefence)</td>
                                                <td><strong>DFUND Title:</strong> @Html.DisplayFor(model => model.DfundTitle)</td>
                                            </tr>
                                            }
                                        </table>
                                        <hr />
                                        <div class="form-horizontal">
                                            <div class="form-group defundField">
                                                @Html.LabelFor(model => model.DfundApprovalId, htmlAttributes: new { @class = "control-label col-md-2", @style = "text-align:left" })
                                                <div class="col-md-4">
                                                    @Html.EditorFor(model => model.DfundApprovalId, new { htmlAttributes = new { @class = "form-control", @placeholder = "Select Approval Reference" } })
                                                    @Html.ValidationMessageFor(model => model.DfundApprovalId, "", new { @class = "text-danger" })

                                                </div>
                                                @Html.LabelFor(model => model.AvailableBalanceDFund, htmlAttributes: new { @class = "control-label col-md-2", @style = "text-align:left" })
                                                <div class="col-md-4">
                                                    <div class="input-group">

                                                        <span class="input-group-addon dFundCurrency"></span>
                                                        @Html.EditorFor(model => model.AvailableBalanceDFund, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @autocomplete = "off" } })
                                                        @Html.ValidationMessageFor(model => model.AvailableBalanceDFund, "", new { @class = "text-danger" })

                                                    </div>
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.DfundTitle, htmlAttributes: new { @class = "control-label col-md-2", @style = "text-align:left" })
                                                <div class="col-md-4">
                                                    @Html.EditorFor(model => model.DfundTitle, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                                    @Html.ValidationMessageFor(model => model.DfundTitle, "", new { @class = "text-danger" })

                                                </div>
                                            </div>
                                            <div class="col-md-2 col-md-offset-2">
                                                <button id="save_dfund" onclick="saveDFund(@Model.ReceivingSummaryId)" class="btn btn-info" style="margin-right:2px">
                                                    <i class="glyphicon glyphicon-floppy-disk"></i> Save
                                                </button>
                                            </div>
                                            </div>
                                        </div>
                                    <br />
                                    <br />
                                </fieldset>
                            }
                            @if (Model.ChagedFull)
                            {
                                <fieldset class="bordered">
                                    <legend class="scheduler-border">Attachments</legend>

                                    @if (Model.ContractType == "Works")
                                    {
                                        <div class="list-group" style="width:40%">
                                            @if (Model.ApplyInvoice)
                                            {
                                                if (Model.InvoiceNumber == null)
                                                {
                                                    <a href="#" onclick="applyInvoice('Contract','@Model.ContractNo')" class="list-group-item attachment" data-type="InvoiceData"><i class="fa fa-plus"></i>Apply Invoice </a>
                                                }
                                            }
                                            else
                                            {
                                                if (Model.InvoiceNumber == null)
                                                {
                                                    <a href="#" data-toggle="modal" data-target="#attachment" class="list-group-item attachment" data-type="Invoice"><i class="fa fa-plus"></i>Add Invoice Attachment </a>


                                                }
                                            }
                                            @if (Model.InspectionReportNo == null)
                                            {
                                                <a href="#" data-toggle="modal" data-target="#attachment" class="list-group-item attachment" data-type="Payment Certificate"><i class="fa fa-plus"></i>Add Payment Certificate Attachment</a>

                                            }
                                        </div>
                                    }
                                    else if (Model.ContractType == "Goods")
                                    {
                                        <div class="list-group" style="width:40%">
                                            @if (Model.ApplyInvoice)
                                            {
                                                if (Model.InvoiceNumber == null)
                                                {
                                                    <a href="#" onclick="applyInvoice('Contract','@Model.ContractNo')" class="list-group-item attachment" data-type="InvoiceData"><i class="fa fa-plus"></i>Apply Invoice </a>
                                                }
                                            }
                                            else
                                            {
                                                if (Model.InvoiceNumber == null)
                                                {
                                                    <a href="#" data-toggle="modal" data-target="#attachment" class="list-group-item attachment" data-type="Invoice"><i class="fa fa-plus"></i>Add Invoice Attachment </a>


                                                }
                                            }
                                            @if (Model.DeliveryNote == null)
                                            {
                                                <a href="#" data-toggle="modal" data-target="#attachment" class="list-group-item attachment" data-type="Delivery Note"><i class="fa fa-plus"></i>Add Delivery Note Attachment</a>

                                            }
                                            @if (Model.InspectionReportNo == null)
                                            {
                                                <a href="#" data-toggle="modal" data-target="#attachment" class="list-group-item attachment" data-type="Inspection Report"><i class="fa fa-plus"></i>Add Inspection Report Attachment</a>

                                            }
                                        </div>
                                    }
                                    else if (Model.ContractType == "Consultancy")
                                    {
                                        <div class="list-group" style="width:40%">
                                            @if (Model.ApplyInvoice)
                                            {
                                                if (Model.InvoiceNumber == null)
                                                {
                                                    <a href="#" onclick="applyInvoice('Contract','@Model.ContractNo')" class="list-group-item attachment" data-type="InvoiceData"><i class="fa fa-plus"></i>Apply Invoice </a>
                                                }
                                            }
                                            else
                                            {
                                                if (Model.InvoiceNumber == null)
                                                {
                                                    <a href="#" data-toggle="modal" data-target="#attachment" class="list-group-item attachment" data-type="Invoice"><i class="fa fa-plus"></i>Add Invoice Attachment </a>


                                                }
                                            }
                                            @if (Model.DeliveryNote == null)
                                            {
                                                <a href="#" data-toggle="modal" data-target="#attachment" class="list-group-item attachment" data-type="Delivery Note"><i class="fa fa-plus"></i>Add Delivery Note Attachment</a>

                                            }
                                            @if (Model.InspectionReportNo == null)
                                            {
                                                <a href="#" data-toggle="modal" data-target="#attachment" class="list-group-item attachment" data-type="Inspection Report"><i class="fa fa-plus"></i>Add Inspection Report Attachment</a>

                                            }
                                        </div>
                                    }
                                    else if (Model.ContractType == "Non Consuntancy")
                                    {
                                        <div class="list-group" style="width:40%">
                                            @if (Model.ApplyInvoice)
                                            {
                                                if (Model.InvoiceNumber == null)
                                                {
                                                    <a href="#" onclick="applyInvoice('Contract','@Model.ContractNo')" class="list-group-item attachment" data-type="InvoiceData"><i class="fa fa-plus"></i>Apply Invoice </a>
                                                }
                                            }
                                            else
                                            {
                                                if (Model.InvoiceNumber == null)
                                                {
                                                    <a href="#" data-toggle="modal" data-target="#attachment" class="list-group-item attachment" data-type="Invoice"><i class="fa fa-plus"></i>Add Invoice Attachment </a>


                                                }
                                            }
                                            @if (Model.DeliveryNote == null)
                                            {
                                                <a href="#" data-toggle="modal" data-target="#attachment" class="list-group-item attachment" data-type="Delivery Note"><i class="fa fa-plus"></i>Add Delivery Note Attachment</a>

                                            }
                                            @if (Model.InspectionReportNo == null)
                                            {
                                                <a href="#" data-toggle="modal" data-target="#attachment" class="list-group-item attachment" data-type="Inspection Report"><i class="fa fa-plus"></i>Add Inspection Report Attachment</a>

                                            }
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="list-group" style="width:40%">
                                            @if (Model.ApplyInvoice)
                                            {
                                                if (Model.InvoiceNumber == null)
                                                {
                                                    <a href="#" onclick="applyInvoice('Contract','@Model.ContractNo')" class="list-group-item attachment" data-type="InvoiceData"><i class="fa fa-plus"></i>Apply Invoice </a>
                                                }
                                            }
                                            else
                                            {
                                                if (Model.InvoiceNumber == null)
                                                {
                                                    <a href="#" data-toggle="modal" data-target="#attachment" class="list-group-item attachment" data-type="Invoice"><i class="fa fa-plus"></i>Add Invoice Attachment </a>


                                                }
                                            }
                                            @if (Model.DeliveryNote == null)
                                            {
                                                <a href="#" data-toggle="modal" data-target="#attachment" class="list-group-item attachment" data-type="Delivery Note"><i class="fa fa-plus"></i>Add Delivery Note Attachment</a>

                                            }
                                            @if (Model.InspectionReportNo == null)
                                            {
                                                <a href="#" data-toggle="modal" data-target="#attachment" class="list-group-item attachment" data-type="Inspection Report"><i class="fa fa-plus"></i>Add Inspection Report Attachment</a>

                                            }
                                        </div>

                                    }

                                    @if (Model.ContractType == "Works")
                                    {
                                        if (Model.InvoiceNumber != null || Model.InspectionReportNo != null)
                                        {
                                            <table class="table table-bordered table-hover table-condensed" style="width:80%">
                                                <thead>
                                                    <tr>
                                                        <th></th>
                                                        <th style="text-align:center">Ref/No</th>
                                                        <th style="text-align:center">Date</th>
                                                        <th style="text-align:center">Attachment</th>
                                                        <th style="text-align:center">Edit</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @if (Model.InvoiceNumber != null)
                                                    {
                                                        <tr>
                                                            <td style="width:18%">
                                                                Invoice
                                                            </td>
                                                            <td align="center">
                                                                @Html.DisplayFor(model => model.InvoiceNumber)
                                                            </td>
                                                            <td align="center">
                                                                @Convert.ToDateTime(Model.InvoiceDate).ToString("dd/MM/yyyy")
                                                            </td>
                                                            <td align="center">
                                                                <strong>
                                                                    <a href="@Url.Action("InvoiceAttachment","Contract",new {Filename=Model.InvoiceFileName})"><i class="fa fa-download"></i></a>
                                                                </strong>
                                                            </td>
                                                            <td align="center">
                                                                @if (Model.ApplyInvoice)
                                                                {
                                                                }
                                                                else
                                                                {
                                                                    if (Model.EditAttachment != "No")
                                                                    {
                                                                        <a href="#" data-toggle="modal" data-target="#attachment2" class="attachment2" data-type="Invoice" data-cnumber='@Model.InvoiceNumber' data-cdate='@Convert.ToDateTime(Model.InvoiceDate).ToString("yyyy-MM-dd")'><i class="fa fa-pencil"></i></a>

                                                                    }
                                                                }

                                                            </td>
                                                        </tr>
                                                    }

                                                    @if (Model.InspectionReportNo != null)
                                                    {
                                                        <tr>
                                                            <td style="width:18%">
                                                                Payment Certificate
                                                            </td>
                                                            <td align="center">
                                                                @Html.DisplayFor(model => model.InspectionReportNo)
                                                            </td>
                                                            <td align="center">
                                                                @Convert.ToDateTime(Model.InspectionReportDate).ToString("dd/MM/yyyy")
                                                            </td>
                                                            <td align="center">
                                                                <strong>
                                                                    <a href="@Url.Action("InspectionAttachment","Contract",new {Filename=Model.InspReportFileName })"><i class="fa fa-download"></i></a>
                                                                </strong>
                                                            </td>
                                                            <td align="center">
                                                                @if (Model.EditAttachment != "No")
                                                                {
                                                                    <a href="#" data-toggle="modal" data-target="#attachment2" class="attachment2" data-type="Inspection Report" data-cnumber='@Model.InspectionReportNo' data-cdate='@Convert.ToDateTime(Model.InspectionReportDate).ToString("yyyy-MM-dd")'><i class="fa fa-pencil"></i></a>

                                                                }

                                                            </td>
                                                        </tr>
                                                    }
                                                </tbody>
                                            </table>
                                        }
                                    }
                                    else if (Model.ContractType == "Goods")
                                    {
                                        if (Model.InvoiceNumber != null || Model.DeliveryNote != null || Model.InspectionReportNo != null)
                                        {
                                            <table class="table table-bordered table-hover table-condensed" style="width:80%">
                                                <thead>
                                                    <tr>
                                                        <th></th>
                                                        <th style="text-align:center">Ref/No</th>
                                                        <th style="text-align:center">Date</th>
                                                        <th style="text-align:center">Attachment</th>
                                                        <th style="text-align:center">Edit</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @if (Model.InvoiceNumber != null)
                                                    {
                                                        <tr>
                                                            <td style="width:18%">
                                                                Invoice
                                                            </td>
                                                            <td align="center">
                                                                @Html.DisplayFor(model => model.InvoiceNumber)
                                                            </td>
                                                            <td align="center">
                                                                @Convert.ToDateTime(Model.InvoiceDate).ToString("dd/MM/yyyy")
                                                            </td>
                                                            <td align="center">
                                                                <strong>
                                                                    <a href="@Url.Action("InvoiceAttachment","Contract",new {Filename=Model.InvoiceFileName})"><i class="fa fa-download"></i></a>
                                                                </strong>
                                                            </td>
                                                            <td align="center">
                                                                @if (Model.ApplyInvoice)
                                                                {
                                                                }
                                                                else
                                                                {
                                                                    if (Model.EditAttachment != "No")
                                                                    {
                                                                        <a href="#" data-toggle="modal" data-target="#attachment2" class="attachment2" data-type="Invoice" data-cnumber='@Model.InvoiceNumber' data-cdate='@Convert.ToDateTime(Model.InvoiceDate).ToString("yyyy-MM-dd")'><i class="fa fa-pencil"></i></a>

                                                                    }
                                                                }

                                                            </td>
                                                        </tr>
                                                    }
                                                    @if (Model.DeliveryNote != null)
                                                    {
                                                        <tr>
                                                            <td style="width:18%">
                                                                Delivery Note
                                                            </td>
                                                            <td align="center">
                                                                @Html.DisplayFor(model => model.DeliveryNote)
                                                            </td>
                                                            <td align="center">
                                                                @Convert.ToDateTime(Model.DeliveryDate).ToString("dd/MM/yyyy")
                                                            </td>
                                                            <td align="center">
                                                                <strong>
                                                                    <a href="@Url.Action("DeliveryAttachment","Contract",new {Filename=Model.DeliveryFileName })"><i class="fa fa-download"></i></a>
                                                                </strong>
                                                            </td>
                                                            <td align="center">
                                                                @if (Model.EditAttachment != "No")
                                                                {
                                                                    <a href="#" data-toggle="modal" data-target="#attachment2" class="attachment2" data-type="Delivery Note" data-cnumber='@Model.DeliveryNote' data-cdate='@Convert.ToDateTime(Model.DeliveryDate).ToString("yyyy-MM-dd")'><i class="fa fa-pencil"></i></a>

                                                                }

                                                            </td>
                                                        </tr>
                                                    }
                                                    @if (Model.InspectionReportNo != null)
                                                    {
                                                        <tr>
                                                            <td style="width:18%">
                                                                Inspection Report
                                                            </td>
                                                            <td align="center">
                                                                @Html.DisplayFor(model => model.InspectionReportNo)
                                                            </td>
                                                            <td align="center">
                                                                @Convert.ToDateTime(Model.InspectionReportDate).ToString("dd/MM/yyyy")
                                                            </td>
                                                            <td align="center">
                                                                <strong>
                                                                    <a href="@Url.Action("InspectionAttachment","Contract",new {Filename=Model.InspReportFileName })"><i class="fa fa-download"></i></a>
                                                                </strong>
                                                            </td>
                                                            <td align="center">
                                                                @if (Model.EditAttachment != "No")
                                                                {
                                                                    <a href="#" data-toggle="modal" data-target="#attachment2" class="attachment2" data-type="Inspection Report" data-cnumber='@Model.InspectionReportNo' data-cdate='@Convert.ToDateTime(Model.InspectionReportDate).ToString("yyyy-MM-dd")'><i class="fa fa-pencil"></i></a>

                                                                }

                                                            </td>
                                                        </tr>
                                                    }
                                                </tbody>
                                            </table>
                                        }
                                    }
                                    else if (Model.ContractType == "Consultancy")
                                    {
                                        if (Model.InvoiceNumber != null || Model.DeliveryNote != null || Model.InspectionReportNo != null)
                                        {
                                            <table class="table table-bordered table-hover table-condensed" style="width:80%">
                                                <thead>
                                                    <tr>
                                                        <th></th>
                                                        <th style="text-align:center">Ref/No</th>
                                                        <th style="text-align:center">Date</th>
                                                        <th style="text-align:center">Attachment</th>
                                                        <th style="text-align:center">Edit</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @if (Model.InvoiceNumber != null)
                                                    {
                                                        <tr>
                                                            <td style="width:18%">
                                                                Invoice
                                                            </td>
                                                            <td align="center">
                                                                @Html.DisplayFor(model => model.InvoiceNumber)
                                                            </td>
                                                            <td align="center">
                                                                @Convert.ToDateTime(Model.InvoiceDate).ToString("dd/MM/yyyy")
                                                            </td>
                                                            <td align="center">
                                                                <strong>
                                                                    <a href="@Url.Action("InvoiceAttachment","Contract",new {Filename=Model.InvoiceFileName})"><i class="fa fa-download"></i></a>
                                                                </strong>
                                                            </td>
                                                            <td align="center">
                                                                @if (Model.ApplyInvoice)
                                                                {
                                                                }
                                                                else
                                                                {
                                                                    if (Model.EditAttachment != "No")
                                                                    {
                                                                        <a href="#" data-toggle="modal" data-target="#attachment2" class="attachment2" data-type="Invoice" data-cnumber='@Model.InvoiceNumber' data-cdate='@Convert.ToDateTime(Model.InvoiceDate).ToString("yyyy-MM-dd")'><i class="fa fa-pencil"></i></a>

                                                                    }
                                                                }

                                                            </td>
                                                        </tr>
                                                    }
                                                    @if (Model.DeliveryNote != null)
                                                    {
                                                        <tr>
                                                            <td style="width:18%">
                                                                Delivery Note
                                                            </td>
                                                            <td align="center">
                                                                @Html.DisplayFor(model => model.DeliveryNote)
                                                            </td>
                                                            <td align="center">
                                                                @Convert.ToDateTime(Model.DeliveryDate).ToString("dd/MM/yyyy")
                                                            </td>
                                                            <td align="center">
                                                                <strong>
                                                                    <a href="@Url.Action("DeliveryAttachment","Contract",new {Filename=Model.DeliveryFileName })"><i class="fa fa-download"></i></a>
                                                                </strong>
                                                            </td>
                                                            <td align="center">
                                                                @if (Model.EditAttachment != "No")
                                                                {
                                                                    <a href="#" data-toggle="modal" data-target="#attachment2" class="attachment2" data-type="Delivery Note" data-cnumber='@Model.DeliveryNote' data-cdate='@Convert.ToDateTime(Model.DeliveryDate).ToString("yyyy-MM-dd")'><i class="fa fa-pencil"></i></a>

                                                                }

                                                            </td>
                                                        </tr>
                                                    }
                                                    @if (Model.InspectionReportNo != null)
                                                    {
                                                        <tr>
                                                            <td style="width:18%">
                                                                Inspection Report
                                                            </td>
                                                            <td align="center">
                                                                @Html.DisplayFor(model => model.InspectionReportNo)
                                                            </td>
                                                            <td align="center">
                                                                @Convert.ToDateTime(Model.InspectionReportDate).ToString("dd/MM/yyyy")
                                                            </td>
                                                            <td align="center">
                                                                <strong>
                                                                    <a href="@Url.Action("InspectionAttachment","Contract",new {Filename=Model.InspReportFileName })"><i class="fa fa-download"></i></a>
                                                                </strong>
                                                            </td>
                                                            <td align="center">
                                                                @if (Model.EditAttachment != "No")
                                                                {
                                                                    <a href="#" data-toggle="modal" data-target="#attachment2" class="attachment2" data-type="Inspection Report" data-cnumber='@Model.InspectionReportNo' data-cdate='@Convert.ToDateTime(Model.InspectionReportDate).ToString("yyyy-MM-dd")'><i class="fa fa-pencil"></i></a>

                                                                }

                                                            </td>
                                                        </tr>
                                                    }
                                                </tbody>
                                            </table>
                                        }
                                    }
                                    else if (Model.ContractType == "Non Consuntancy")
                                    {
                                        if (Model.InvoiceNumber != null || Model.DeliveryNote != null || Model.InspectionReportNo != null)
                                        {
                                            <table class="table table-bordered table-hover table-condensed" style="width:80%">
                                                <thead>
                                                    <tr>
                                                        <th></th>
                                                        <th style="text-align:center">Ref/No</th>
                                                        <th style="text-align:center">Date</th>
                                                        <th style="text-align:center">Attachment</th>
                                                        <th style="text-align:center">Edit</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @if (Model.InvoiceNumber != null)
                                                    {
                                                        <tr>
                                                            <td style="width:18%">
                                                                Invoice
                                                            </td>
                                                            <td align="center">
                                                                @Html.DisplayFor(model => model.InvoiceNumber)
                                                            </td>
                                                            <td align="center">
                                                                @Convert.ToDateTime(Model.InvoiceDate).ToString("dd/MM/yyyy")
                                                            </td>
                                                            <td align="center">
                                                                <strong>
                                                                    <a href="@Url.Action("InvoiceAttachment","Contract",new {Filename=Model.InvoiceFileName})"><i class="fa fa-download"></i></a>
                                                                </strong>
                                                            </td>
                                                            <td align="center">
                                                                @if (Model.ApplyInvoice)
                                                                {
                                                                }
                                                                else
                                                                {
                                                                    if (Model.EditAttachment != "No")
                                                                    {
                                                                        <a href="#" data-toggle="modal" data-target="#attachment2" class="attachment2" data-type="Invoice" data-cnumber='@Model.InvoiceNumber' data-cdate='@Convert.ToDateTime(Model.InvoiceDate).ToString("yyyy-MM-dd")'><i class="fa fa-pencil"></i></a>

                                                                    }
                                                                }

                                                            </td>
                                                        </tr>
                                                    }
                                                    @if (Model.DeliveryNote != null)
                                                    {
                                                        <tr>
                                                            <td style="width:18%">
                                                                Delivery Note
                                                            </td>
                                                            <td align="center">
                                                                @Html.DisplayFor(model => model.DeliveryNote)
                                                            </td>
                                                            <td align="center">
                                                                @Convert.ToDateTime(Model.DeliveryDate).ToString("dd/MM/yyyy")
                                                            </td>
                                                            <td align="center">
                                                                <strong>
                                                                    <a href="@Url.Action("DeliveryAttachment","Contract",new {Filename=Model.DeliveryFileName })"><i class="fa fa-download"></i></a>
                                                                </strong>
                                                            </td>
                                                            <td align="center">
                                                                @if (Model.EditAttachment != "No")
                                                                {
                                                                    <a href="#" data-toggle="modal" data-target="#attachment2" class="attachment2" data-type="Delivery Note" data-cnumber='@Model.DeliveryNote' data-cdate='@Convert.ToDateTime(Model.DeliveryDate).ToString("yyyy-MM-dd")'><i class="fa fa-pencil"></i></a>

                                                                }

                                                            </td>
                                                        </tr>
                                                    }
                                                    @if (Model.InspectionReportNo != null)
                                                    {
                                                        <tr>
                                                            <td style="width:18%">
                                                                Inspection Report
                                                            </td>
                                                            <td align="center">
                                                                @Html.DisplayFor(model => model.InspectionReportNo)
                                                            </td>
                                                            <td align="center">
                                                                @Convert.ToDateTime(Model.InspectionReportDate).ToString("dd/MM/yyyy")
                                                            </td>
                                                            <td align="center">
                                                                <strong>
                                                                    <a href="@Url.Action("InspectionAttachment","Contract",new {Filename=Model.InspReportFileName })"><i class="fa fa-download"></i></a>
                                                                </strong>
                                                            </td>
                                                            <td align="center">
                                                                @if (Model.EditAttachment != "No")
                                                                {
                                                                    <a href="#" data-toggle="modal" data-target="#attachment2" class="attachment2" data-type="Inspection Report" data-cnumber='@Model.InspectionReportNo' data-cdate='@Convert.ToDateTime(Model.InspectionReportDate).ToString("yyyy-MM-dd")'><i class="fa fa-pencil"></i></a>

                                                                }

                                                            </td>
                                                        </tr>
                                                    }
                                                </tbody>
                                            </table>
                                        }
                                    }
                                    else
                                    {
                                        if (Model.InvoiceNumber != null || Model.DeliveryNote != null || Model.InspectionReportNo != null)
                                        {
                                            <table class="table table-bordered table-hover table-condensed" style="width:80%">
                                                <thead>
                                                    <tr>
                                                        <th></th>
                                                        <th style="text-align:center">Ref/No</th>
                                                        <th style="text-align:center">Date</th>
                                                        <th style="text-align:center">Attachment</th>
                                                        <th style="text-align:center">Edit</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @if (Model.InvoiceNumber != null)
                                                    {
                                                        <tr>
                                                            <td style="width:18%">
                                                                Invoice
                                                            </td>
                                                            <td align="center">
                                                                @Html.DisplayFor(model => model.InvoiceNumber)
                                                            </td>
                                                            <td align="center">
                                                                @Convert.ToDateTime(Model.InvoiceDate).ToString("dd/MM/yyyy")
                                                            </td>
                                                            <td align="center">
                                                                <strong>
                                                                    <a href="@Url.Action("InvoiceAttachment","Contract",new {Filename=Model.InvoiceFileName})"><i class="fa fa-download"></i></a>
                                                                </strong>
                                                            </td>
                                                            <td align="center">
                                                                @if (Model.ApplyInvoice)
                                                                {
                                                                }
                                                                else
                                                                {
                                                                    if (Model.EditAttachment != "No")
                                                                    {
                                                                        <a href="#" data-toggle="modal" data-target="#attachment2" class="attachment2" data-type="Invoice" data-cnumber='@Model.InvoiceNumber' data-cdate='@Convert.ToDateTime(Model.InvoiceDate).ToString("yyyy-MM-dd")'><i class="fa fa-pencil"></i></a>

                                                                    }
                                                                }

                                                            </td>
                                                        </tr>
                                                    }
                                                    @if (Model.DeliveryNote != null)
                                                    {
                                                        <tr>
                                                            <td style="width:18%">
                                                                Delivery Note
                                                            </td>
                                                            <td align="center">
                                                                @Html.DisplayFor(model => model.DeliveryNote)
                                                            </td>
                                                            <td align="center">
                                                                @Convert.ToDateTime(Model.DeliveryDate).ToString("dd/MM/yyyy")
                                                            </td>
                                                            <td align="center">
                                                                <strong>
                                                                    <a href="@Url.Action("DeliveryAttachment","Contract",new {Filename=Model.DeliveryFileName })"><i class="fa fa-download"></i></a>
                                                                </strong>
                                                            </td>
                                                            <td align="center">
                                                                @if (Model.EditAttachment != "No")
                                                                {
                                                                    <a href="#" data-toggle="modal" data-target="#attachment2" class="attachment2" data-type="Delivery Note" data-cnumber='@Model.DeliveryNote' data-cdate='@Convert.ToDateTime(Model.DeliveryDate).ToString("yyyy-MM-dd")'><i class="fa fa-pencil"></i></a>

                                                                }

                                                            </td>
                                                        </tr>
                                                    }
                                                    @if (Model.InspectionReportNo != null)
                                                    {
                                                        <tr>
                                                            <td style="width:18%">
                                                                Inspection Report
                                                            </td>
                                                            <td align="center">
                                                                @Html.DisplayFor(model => model.InspectionReportNo)
                                                            </td>
                                                            <td align="center">
                                                                @Convert.ToDateTime(Model.InspectionReportDate).ToString("dd/MM/yyyy")
                                                            </td>
                                                            <td align="center">
                                                                <strong>
                                                                    <a href="@Url.Action("InspectionAttachment","Contract",new {Filename=Model.InspReportFileName })"><i class="fa fa-download"></i></a>
                                                                </strong>
                                                            </td>
                                                            <td align="center">
                                                                @if (Model.EditAttachment != "No")
                                                                {
                                                                    <a href="#" data-toggle="modal" data-target="#attachment2" class="attachment2" data-type="Inspection Report" data-cnumber='@Model.InspectionReportNo' data-cdate='@Convert.ToDateTime(Model.InspectionReportDate).ToString("yyyy-MM-dd")'><i class="fa fa-pencil"></i></a>

                                                                }

                                                            </td>
                                                        </tr>
                                                    }
                                                </tbody>
                                            </table>
                                        }
                                    }


                                </fieldset>
                            }

                            <br />
                            @if (!Model.ChagedFull)
                            {

                                <div class="col-md-offset-1">
                                    <a href="@Url.Action("PendingReceiving","Contract")" style="margin-right:5px" class="btn btn-info pull-left"><i class="glyphicon glyphicon-arrow-left"></i> Back  </a>
                                </div>
                                <br>
                            }
                            else
                            {
                                <div class="col-md-offset-1">
                                    <a href="@Url.Action("PendingReceiving","Contract")" style="margin-right:5px" class="btn btn-info pull-left"><i class="glyphicon glyphicon-arrow-left"></i> Back  </a>
                                    @if (Model.ContractType == "Works")
                                    {
                                        if (Model.InvoiceNumber != null && Model.InspectionReportNo != null)
                                        {
                                            <a href="@Url.Action("PendingReceiving","Contract")" style="margin-right:5px" class="btn btn-info pull-left"><i class="glyphicon glyphicon-floppy-disk"></i> Finish  </a>

                                        }
                                        else
                                        {
                                            <a href="@Url.Action("PendingReceiving","Contract")" disabled style="margin-right:5px" class="btn btn-info pull-left"><i class="glyphicon glyphicon-floppy-disk"></i> Finish  </a>

                                        }
                                    }
                                    else if (Model.ContractType == "Goods")
                                    {
                                        if (Model.InvoiceNumber != null && Model.DeliveryNote != null && Model.InspectionReportNo != null)
                                        {
                                            <a href="@Url.Action("PendingReceiving","Contract")" style="margin-right:5px" class="btn btn-info pull-left"><i class="glyphicon glyphicon-floppy-disk"></i> Finish  </a>

                                        }
                                        else
                                        {
                                            <a href="@Url.Action("PendingReceiving","Contract")" disabled style="margin-right:5px" class="btn btn-info pull-left"><i class="glyphicon glyphicon-floppy-disk"></i> Finish  </a>

                                        }
                                    }
                                    else if (Model.ContractType == "Consultancy")
                                    {
                                        if (Model.InvoiceNumber != null && Model.DeliveryNote != null && Model.InspectionReportNo != null)
                                        {
                                            <a href="@Url.Action("PendingReceiving","Contract")" style="margin-right:5px" class="btn btn-info pull-left"><i class="glyphicon glyphicon-floppy-disk"></i> Finish  </a>

                                        }
                                        else
                                        {
                                            <a href="@Url.Action("PendingReceiving","Contract")" disabled style="margin-right:5px" class="btn btn-info pull-left"><i class="glyphicon glyphicon-floppy-disk"></i> Finish  </a>

                                        }
                                    }
                                    else if (Model.ContractType == "Non Consuntancy")
                                    {
                                        if (Model.InvoiceNumber != null && Model.DeliveryNote != null && Model.InspectionReportNo != null)
                                        {
                                            <a href="@Url.Action("PendingReceiving","Contract")" style="margin-right:5px" class="btn btn-info pull-left"><i class="glyphicon glyphicon-floppy-disk"></i> Finish  </a>

                                        }
                                        else
                                        {
                                            <a href="@Url.Action("PendingReceiving","Contract")" disabled style="margin-right:5px" class="btn btn-info pull-left"><i class="glyphicon glyphicon-floppy-disk"></i> Finish  </a>

                                        }
                                    }
                                    else
                                    {
                                        if (Model.InvoiceNumber != null && Model.DeliveryNote != null && Model.InspectionReportNo != null)
                                        {
                                            <a href="@Url.Action("PendingReceiving","Contract")" style="margin-right:5px" class="btn btn-info pull-left"><i class="glyphicon glyphicon-floppy-disk"></i> Finish  </a>

                                        }
                                        else
                                        {

                                            <a href="@Url.Action("PendingReceiving","Contract")" disabled style="margin-right:5px" class="btn btn-info pull-left"><i class="glyphicon glyphicon-floppy-disk"></i> Finish  </a>

                                        }

                                    }


                                </div>
                            }

                            <br />
                            <br />
                            <br />




                        </div>
                 </div>
                    </div>
            </article>

        </div>
    </section>

</div>
<!----------- Search  GL----------------->
<div class="modal fade" id="glItemsModal" style="left:4%">

    <div class="modal-dialog" style="width:80%;">
        <div class="modal-content panel-info">
            <div class="modal-header panel-heading">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h3 class="modal-title"> Search Gl Item(s)</h3>
            </div>
            <div class="modal-body">
                <table>
                    <tr>
                        <td style="padding:5px">Total Items Amount</td>
                        <td style="padding:5px">
                            <input type="text" disabled id="total_items_amount">
                        </td>

                        <td style="padding:5px">Total Line Amount</td>
                        <td style="padding:5px">
                            <input value="0" type="text" disabled id="total_line_amount">
                        </td>

                        <td style="padding:5px">Difference</td>
                        <td style="padding:5px">
                            <input value="0" type="text" disabled id="difference" style="width:250px">
                        </td>
                    </tr>
                </table>
                <div>
                    <div class="row" style="padding-top:1%;padding-bottom:1%">
                        <div class="col-md-6">
                        </div>
                        <div class="col-md-6">
                            <div class="search-container " style="float:right">
                                <i class="fa fa-search search-icon"></i>
                                <input type="search" name="search" placeholder="Search..." id="search_gl">
                            </div>
                        </div>
                    </div>
                    <div align="center">
                        <img src="/Media/Images/ajax_loader.gif" class="loadingImg" />
                    </div>
                    <table id="dt_search_gl_item" class="table table-striped table-bordered table-hover table-condensed">
                        <thead>
                            <tr>
                                <th>#</th>
                                <th>Expenditure Line Item</th>
                                <th>Item Description</th>
                                @if (Model.Accrual == "YES")
                                {
                                    <th>Budget Balance</th>
                                }
                                else
                                {
                                    <th>Fund Balance</th>
                                }
                                <th>Funding Reference</th>
                                <th>SubLevelCode</th>
                                <th>Expense Amount</th>
                            </tr>
                        </thead>
                    </table>

                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-info" id="btn_save_items_charge">
                        <i class="fa fa-save"></i>Save
                    </button>
                    <button class="btn btn-info" data-dismiss="modal">
                        <i class="fa  fa-times"></i>Cancel
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

<!----------- Transfer ----------------->
<div class="modal fade" id="Transfer" style="left:4%">

    <div class="modal-dialog" style="width:36%;">
        <div class="modal-content panel-info">

            <div class="modal-header panel-heading">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h3 class="modal-title" style="text-align:center">Transfer To</h3>
            </div>
            @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "Transfer_info" }))
            {
                <div class="modal-body form-horizontal">

                    <br />

                    <input type="hidden" name="Id" id="Id" value="">
                    <div class="form-group">

                            @*@Html.LabelFor(model => model.InstitutionCodeTo, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.DropDownListFor(model => model.InstitutionCodeTo, Model.InstitutionsList, "Select ", new { @class = "form-control", @required = "required" })
                                @Html.ValidationMessageFor(model => model.InstitutionCodeTo, "", new { @class = "text-danger" })
                            </div>*@
                       
                    </div>
                    <div class="form-group">

                        @Html.LabelFor(model => model.BankAccountTo, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @*<select id="BankAccountTo" required="required" style="width:100%">
                                <option> </option>
                            </select>*@
                            <select name="BankAccountTo" id="BankAccountTo" class="form-control" required = "required"></select>  
                        </div>

                    </div>

                </div>
                <div class="modal-footer">
                    <a href="#" class="btn btn-default" data-dismiss="modal">Cancel</a>
                    <input class="btn btn-info" type="submit" id="btnSubmit" value="Select" />
                </div>

            }
        </div>
    </div>
</div>
<div class="modal fade" id="attachment" style="left:4%">

    <div class="modal-dialog" style="width:35%;">
        <div class="modal-content panel-info">

            <div class="modal-header panel-heading">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h3 class="modal-title" style="text-align:center" id="title"> </h3>
            </div>
            @using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = "return SubmitAttachment(this)" }))
            {
                @Html.AntiForgeryToken()
                <div class="modal-body form-horizontal">

                    <br />
                    @Html.HiddenFor(model => model.ReceivingSummaryId)
                    <input type="hidden" name="DocumentType" id="DocumentType" value="">
                    <div class="form-group">
                        @Html.Label("Ref/No", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-7">
                            @Html.EditorFor(modelItem => Model.CertificateNumber, new { htmlAttributes = new { @class = "form-control", @required = "required", autocomplete = "off" } })

                        </div>

                    </div>
                    <div class="form-group">
                        @Html.Label("Date", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-7">
                            <div class="input-group">
                                <div class="flatpickr3 date-group">
                                    <input type="text" placeholder="Select Date.."
                                           data-input
                                           class="form-control"
                                           style="width:140px;padding-left:10px;border:none"
                                           autocomplete="off" name="AttachmentDate" id="AttachmentDate">
                                    <a class="input-button" title="open" data-toggle href="#">
                                        <span class="input-group-addon" style="height:32px"><i class="fa fa-calendar"></i></span>
                                    </a>
                                </div>
                            </div>
                        </div>

                    </div>
                    <div class="form-group">
                        @Html.Label("Attachment(PDF)", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-7">
                            <input type="file" class="form-control btn btn-default" id="AttachentFile" name="AttachentFile" accept=".pdf" required="required">

                        </div>

                    </div>

                </div>
                <div class="modal-footer">
                    <a href="#" class="btn btn-default" data-dismiss="modal">Cancel</a>
                    <button id="save_attach" class="btn btn-info" style="margin-right:2px">
                        <i class="glyphicon glyphicon-floppy-disk"></i> Save
                    </button>
                    @*<input class="btn btn-info" type="submit" id="btnSubmit" value="Save" />*@
                    @*<input type="submit" value="Submit" class="btn btn-success" id="btnSubmit" />*@

                </div>

            }
        </div>
    </div>
</div>

<div class="modal fade" id="attachment2" style="left:4%">

    <div class="modal-dialog" style="width:35%;">
        <div class="modal-content panel-info">

            <div class="modal-header panel-heading">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h3 class="modal-title" style="text-align:center" id="title2"> </h3>
            </div>
            @using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = "return EditSubmitAttachment(this)" }))
            {
                @Html.AntiForgeryToken()
                <div class="modal-body2 form-horizontal">

                    <br />
                    @Html.HiddenFor(model => model.ReceivingSummaryId)
                    <input type="hidden" name="DocumentType" id="DocumentType" value="">
                    <div class="form-group">
                        @Html.Label("Ref/No", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-7">
                            @Html.EditorFor(modelItem => Model.CertificateNumber, new { htmlAttributes = new { @class = "form-control", @required = "required", autocomplete = "off" } })

                        </div>

                    </div>
                    <div class="form-group">
                        @Html.Label("Date", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-7">
                            <div class="input-group">
                                <div class="flatpickr3 date-group">
                                    <input type="text" placeholder="Select Date.."
                                           data-input
                                           class="form-control"
                                           style="width:140px;padding-left:10px;border:none"
                                           autocomplete="off" name="AttachmentDate" id="AttachmentDate">
                                    <a class="input-button" title="open" data-toggle href="#">
                                        <span class="input-group-addon" style="height:32px"><i class="fa fa-calendar"></i></span>
                                    </a>

                                </div>
                            </div>

                        </div>

                    </div>
                    <div class="form-group">
                        @Html.Label("Attachment(PDF)", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-7">
                            <input type="file" class="form-control btn btn-default" id="AttachentFile" name="AttachentFile" accept=".pdf">

                        </div>

                    </div>

                </div>
                <div class="modal-footer">
                    <a href="#" class="btn btn-default" data-dismiss="modal">Cancel</a>
                    <button id="save_attach" class="btn btn-info" style="margin-right:2px">
                        <i class="glyphicon glyphicon-floppy-disk"></i> Save
                    </button>
                    @*<input class="btn btn-info" type="submit" id="btnSubmit" value="Save" />*@
                    @*<input type="submit" value="Submit" class="btn btn-success" id="btnSubmit" />*@

                </div>

            }
        </div>
    </div>
</div>
<div class="modal fade" id="divModal" tabindex="-1" role="dialog" aria-labelledby="lblmodal">
    <div class="modal-dialog modal-lg" style="width:80%;">
        <div width="90%" class="modal-content">
            <div class="modal-header alert alert-info" style="font:bold 16px Trebuchet MS, Lucida Sans Unicode, Lucida Grande, Lucida Sans, Arial, sans-serif">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title" id="lblmodal">
                    Invoice Data
                </h4>
            </div>
            <div class="modal-body" id="divModalBody">

            </div>


        </div>
    </div>

</div>
@section pagespecific {
    <!-- PAGE RELATED PLUGIN(S) -->

    <script type="text/javascript">
        $("#ItemClassificationId").change(function () {
            debugger
            var receiveType = '@(Model.ReceiveType)';
            if (receiveType =="ByQuantity") {
                var itemClassId = $(this).val();
                var id = $("#ReceivingSummaryId").val();
                purchaseItemsList(id, itemClassId);
            }
            else {

                $("#wip").show();
            }
        });


        function purchaseItemsList(id, itemClassId) {
                  var url = '@Url.Action("GetPurchaseItems", "Contract")';
            $("#purchase-items-list").load(url, { id: id, itemClassId: itemClassId }, function (response, status, xhr) {
                if (status == "error") {
                    $("#purchase-items-list").html("Error on displaying items list, contact system support.");
                }

            });

        };


    //CANCEL GL
        var deselectGL = function (id) {
            swal({
                title: 'Confirmation',
                text: "Do you what to remove this GL Account  ?",
                buttons: [
                  'No',
                  'Yes'
                ],
            }).then(function (isConfirm) {
                if (isConfirm) {
                    var url = '@Url.Action("DeselectGLAccount", "Contract")';
                    $.ajax(
        {
            type: "POST",
            url: url,
            data: { id: id },
            success: function (response) {
                if (response == "Success") {
                     swal("Deleted  successfully!", { icon: "success" })
                         .then((value) => {
                             location.reload();
                        });
                }
                else {
                swal(response);
                }
            },
            error: function (xhr) {
                swal(error);
            },

        });
                } else {
                    swal("Cancelled", "No change was made");
                }
            });

        }



        function SetRetentionTypeField(retentionType) {
            if (retentionType == "Cash") {
                $(".cash_retention").show();
                $(".non_cash_retention").hide();
            } else if (retentionType == "Non Cash") {
                $(".cash_retention").hide();
                $(".non_cash_retention").show();
            }
            else {
                $(".cash_retention").hide();
                $(".non_cash_retention").hide();
            }

        }
        function HideRetentionField() {
            $(".retention_display").hide();
            $(".cash_retention").hide();
            $(".non_cash_retention").hide();
        }
        var itemCategory = null;
        function SubmitAttachment(formData) {

            var attachment_number = $(".modal-body #CertificateNumber").val();
            if (!attachment_number) {
                swal("Please enter document number");
                return false;
            }
            var attachment_date = $(".modal-body #AttachmentDate").val();
            if (!attachment_date) {
                swal("Please Select Date");
                return false;
            }

            var attachment_file = $(".modal-body #AttachentFile").val();
            if (!attachment_file) {
                swal("Please upload file");
                return false;
            }


            $('#attachment').modal('hide');
            var url = '@Url.Action("SaveAttachments", "Contract")';
            var ajaxConfig = {
                type: "post",
                url: url,
                data: new FormData(formData),
                success: function (result) {
                    if (result == "Success") {
                        swal("Data saved successfully", { icon: "success" })
                                                                   .then((value) => {
                                                                       location.reload();
                                                                   });
                    }
                    else {
                        swal("Failed  due to DbException");
                    }
                }
            }

            if ($(formData).attr('enctype') == "multipart/form-data") {
                ajaxConfig["contentType"] = false;
                ajaxConfig["processData"] = false;
            }
            $.ajax(ajaxConfig);
            return false;
        }
        // =========== End Save Atttachment ====================

        function EditSubmitAttachment(formData) {

            var attachment_number = $(".modal-body2 #CertificateNumber").val();
            if (!attachment_number) {
                swal("Please enter document number");
                return false;
            }
            var attachment_date = $(".modal-body2 #AttachmentDate").val();
            if (!attachment_date) {
                swal("Please Select Date");
                return false;
            }

            var attachment_file = $(".modal-body2 #AttachentFile").val();
            if (!attachment_file) {
                swal("Please upload file");
                return false;
            }
            $('#attachment2').modal('hide');
            var url = '@Url.Action("EditAttachments", "Contract")';
            var ajaxConfig = {
                type: "post",
                url: url,
                data: new FormData(formData),
                success: function (result) {
                    if (result == "Success") {
                        swal("Data saved successfully", { icon: "success" })
                                                                   .then((value) => {
                                                                       location.reload();
                                                                   });
                    }
                    else {
                        swal("Failed  due to DbException");
                    }
                }
            }

            if ($(formData).attr('enctype') == "multipart/form-data") {
                ajaxConfig["contentType"] = false;
                ajaxConfig["processData"] = false;
            }
            $.ajax(ajaxConfig);
            return false;
        }
        // =========== End Save Atttachment ====================

        var dt_search_gl_item = $('#dt_search_gl_item').dataTable();
        $("#dt_search_payee_wrapper .dt-toolbar").remove();
        //Search Retention Payee
        function SearchPayee() {
            $('#payeeModal').modal('show');
        }

        //Search Retention Payee
        function SearchBankAccount() {
            $('#Transfer').modal('show');
        }
        var dt_search_payee = $('#dt_search_payee').dataTable({
            "aoColumnDefs": [{ "bVisible": false, "aTargets": [1, 2] }],
        });

        $("#searchbox").on("keyup search input paste cut", function () {
            if (!this.value) {
                dt_search_payee.fnClearTable();
            } else {
                searchPayeeTableUpdate(this.value);
            }
        });

        //=============SEARCH GL ACCOUNTS ==================
        $("#search_gl").on("keyup search input paste cut", function () {
            $("#search_exp_line").val("");
            dt_search_gl_item.DataTable().search(this.value).draw();
        });
        function searchGLTableUpdate() {
            var subBudgetClass = $("#SubBudgetClass").val();
             var accrual = '@(Model.Accrual)';
           @*if (accrual == "YES") {
             url = '@Url.Action("GetFundBalanceAccrual", "Procurement")';
            } else {}*@
            var accuralReceiving = false;

            if (accrual == "YES") {
                accuralReceiving = true;
            }
             var url = '@Url.Action("GetFundbalance", "PaymentVoucher")';

            var parent_code = "UNKNOWN";
            if ($("#ParentInstitutionCode").val() !="") {
                parent_code = $("#ParentInstitutionCode").val();
            }
            var sub_warant_code = "UNKNOWN";
            if ($("#SubWarrantCode").val() !="") {
                sub_warant_code = $("#SubWarrantCode").val();
            }

               var fundBalanceParams = {
                subBudgetClass,
                instCode: parent_code,
                subWarrantCode: sub_warant_code,
                IsAccrualVoucher: accuralReceiving
            };
            $.ajax({
                type: "get",
                url: url,
                data: fundBalanceParams,
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {
                    //=== UPDATE SEARCH GI TABLE ====
                    data = response.data;
                    dt_search_gl_item.fnClearTable();
                    if (accrual == "YES") {
                        for (var i = 0; i < data.length; i++) {
                                   var amount = 0;
                            if (data[i]["BudgetBalance"] > 0) {
                                amount = data[i]["BudgetBalance"];
                            }
                           dt_search_gl_item.fnAddData([i + 1,
                           data[i]["GlAccount"].split("|").join("-"),
                           data[i]["GlAccountDesc"],
                            toLabel(data[i]["BudgetBalance"] || 0),
                           'NA',
                           data[i]["SublevelCode"],
                           '<input type="Text" placeholder="Amount" max="' + amount + '"  onkeyup="amountChanged(this)" />'
                        ]);
                    }
                    } else {

                          for (var i = 0; i < data.length; i++) {
                           dt_search_gl_item.fnAddData([i + 1,
                           data[i]["GlAccount"].split("|").join("-"),
                           data[i]["GlAccountDesc"],
                           toLabel(data[i]["FundBalance"]),
                           data[i]["FundingRefNo"],
                           data[i]["SublevelCode"],
                           '<input type="Text" placeholder="Amount" max="' + data[i]["FundBalance"] + '"  onkeyup="amountChanged(this)" />'
                        ]);
                                          }

                    }

                },
                failure: function (error) {
                    swal(error);
                }
            });
        }
        //==============END SEARCH GL ACCOUNT====================
        $(document).ready(function () {
            $(".attachment").on('click', function () {
                var type = $(this).data('type');
                $("#title").text(type);
                $(".modal-body #DocumentType").val(type);
                $(".modal-body #AttachmentDate").val("");
                $(".modal-body #CertificateNumber").val("");
                $(".modal-body #AttachentFile").val("");

            });

            $(".attachment2").on('click', function () {
                var type = $(this).data('type');
                var certificate_number = $(this).data('cnumber');
                var cdate = $(this).data('cdate');
                $("#title2").text(type);
                $(".modal-body2 #DocumentType").val(type);
                $(".modal-body2 #CertificateNumber").val(certificate_number);
                $(".modal-body2 #AttachmentDate").val(cdate);
                $(".modal-body2 #AttachentFile").val("");


            });
            $("#dt_search_gl_item_wrapper .dt-toolbar").remove();
                var contract_amount = $("#ContractAmount").val();
                if (!contract_amount) {
                    $('#save_attachment').prop('disabled', true);
                    //$("#attachment").hide();

                }
                else {
                    $("#attachment").hide();
                }

                $("#HasRetention").change(function (e) {

                    if ($(this).is(":checked")) {
                        $(".retention_display").show();
                        var retentionType = $("#RetentionType").val();
                        SetRetentionTypeField(retentionType);
                    } else {

                        var percentage = $("#RetentionPercentage").val();
                        if (percentage > 1) {
                            var summary_id = $("#ReceivingSummaryId").val();
                            var form_data = {
                                "id": summary_id
                            }
                            swal({
                                title: 'Confirmation',
                                text: "Delete retention information ?",
                                buttons: [
                                  'No',
                                  'Yes'
                                ],
                            }).then(function (isConfirm) {
                                if (isConfirm) {
                                    var url = '@Url.Action("DeleteRetention", "Contract")';
                                    $.ajax(
                                {
                                    type: "POST",
                                    url: url,
                                    data: form_data,
                                    success: function (response) {
                                        if (response == "Success") {
                                            swal("Deleted  successfully!", { icon: "success" })
                                                      .then((value) => {
                                                          location.reload();
                                                      });


                                        }


                                        else {
                                            $(".retention_display").show();
                                            swal("Failed to delete ,DbException");
                                        }
                                    },
                                    error: function (xhr) {
                                        $(".retention_display").show();
                                        swal(error);

                                    },

                                });
                                } else {
                                    $("#HasRetention").prop("checked", true);
                                    $(".retention_display").show();
                                    swal("Cancelled", "No change was made");

                                }
                            });
                        }
                        HideRetentionField();
                    }
                });
                $("#HasLiquidatedDamage").change(function (e) {

                    if ($(this).is(":checked")) {
                        $("#liquided_damage").show();

                    } else {
                        var liq_dmg = $("#LiquidatedDamageAmount").val();
                        if (liq_dmg > 1) {
                            var summary_id = $("#ReceivingSummaryId").val();
                            var form_data = {
                                "id": summary_id
                            }
                            swal({
                                title: 'Confirmation',
                                text: "Delete liquidated damages information ?",
                                buttons: [
                                  'No',
                                  'Yes'
                                ],
                            }).then(function (isConfirm) {
                                if (isConfirm) {
                                    var url = '@Url.Action("DeleteLiqDamage", "Contract")';
                                    $.ajax(
                                {
                                    type: "POST",
                                    url: url,
                                    data: form_data,
                                    success: function (response) {
                                        if (response == "Success") {
                                            swal("Deleted  successfully!", { icon: "success" })
                                                      .then((value) => {
                                                          location.reload();
                                                      });


                                        }


                                        else {
                                            $("#liquided_damage").show();
                                            swal("Failed to delete ,DbException");
                                        }
                                    },
                                    error: function (xhr) {
                                        $("#liquided_damage").show();
                                        swal(error);

                                    },

                                });
                                } else {
                                    $("#HasLiquidatedDamage").prop("checked", true);
                                    $("#liquided_damage").show();
                                    swal("Cancelled", "No change was made");

                                }
                            });
                        }
                        $("#liquided_damage").hide();
                    }
                });


                if ($("#HasLiquidatedDamage").is(":checked")) {
                    $("#liquided_damage").show();

                    //$("#LiguidatedNumberOfDays").val($("#LiguidatedNumberOfDays").val());

                }
                if ($("#HasRetention").is(":checked")) {
                    $(".retention_display").show();
                    var retentionType = $("#RetentionType").val();
                    SetRetentionTypeField(retentionType);
                    $("#save_retention").hide();
                    $("#update_retention").show();
                }
                $("#RetentionPercentage").keyup(function () {
                    var percentage = $("#RetentionPercentage").val();
                    if (percentage > 10) {
                        swal("Percentage of retention can not exceed 10 %");
                        $("#RetentionPercentage").val("");
                    }
                }
               );
                $(function () {
                    $("#RetentionBy").change(function (e) {
                        var retentionBy = $("#RetentionBy").val();
                        if (retentionBy == "BankTransfer") {
                            $(".bank_transfer").show();
                            $(".internal_transfer").hide();
                            $(".submit_retention").show();
                        } else if (retentionBy == "InternalTransfer") {
                            $(".bank_transfer").hide();
                            $(".internal_transfer").show();
                            $(".submit_retention").show();
                        }
                        else {
                            $(".bank_transfer").hide();
                            $(".internal_transfer").hide();
                            $(".submit_retention").hide();
                        }
                    });
                });
                var retentionBy = $("#RetentionBy").val();

                if (retentionBy == "BankTransfer") {
                    $(".bank_transfer").show();
                      $(".submit_retention").show();
                    $("#save_retention").show();
                    $("#BankAccountTo").empty();
                    var account_name = $("#AccountName").val();
                    var bank_account = $("#BankAccountToDisp").val();
                    $('<option value="' + bank_account + '" selected>' + account_name + '</option>').appendTo('#BankAccountTo');
                } else {
                    if ($("#HasRetention").is(":checked")) {
                        $(".internal_transfer").show();
                        $(".submit_retention").show();
                        $("#save_retention").show();
                    } else { }

            }

            $(function () {
                $("#RetentionType").change(function (e) {
                    var retentionType = $(this).val();
                    SetRetentionTypeField(retentionType);
                });
            });
            //Save liquided damage
                $(function () { // this will be called when the DOM is ready
                    $("#save_liqdmg").click(function () {
                        var liqdmgNoOfDays =$("#LiquidatedNumberOfDays").val();
                        if (liqdmgNoOfDays > 0) {

                            var summary_id = $("#ReceivingSummaryId").val();
                            $("#save_liqdmg").prop('disabled', true);
                            var form_data = {
                                "ReceivingSummaryId": summary_id,
                                "NumberOfDays": liqdmgNoOfDays
                                    }
                                    swal({
                                        title: 'Confirmation',
                                        text: "Save Liquidated Damages ?",
                                        buttons: [
                                          'No',
                                          'Yes'
                                        ],
                                    }).then(function (isConfirm) {
                                        if (isConfirm) {
                                            var url = '@Url.Action("SaveLiquidedDamage", "Contract")';
                                            $.ajax(
                                        {
                                            type: "POST",
                                            url: url,
                                            data: form_data,
                                            success: function (response) {
                                                if (response == "Success") {

                                                    swal("Saved  successfully!", { icon: "success" })
                                                              .then((value) => {
                                                                  location.reload();

                                                              });


                                                }
                                                else {

                                                    swal(response);
                                                    $("#save_liqdmg").prop('disabled', false);
                                                }
                                            },
                                            error: function (xhr) {
                                                swal(error);
                                                $("#save_liqdmg").prop('disabled', false);
                                            },

                                        });
                                        } else {
                                            swal("Cancelled", "No change was made");
                                            $("#save_liqdmg").prop('disabled', false);
                                        }
                                    });





                        } else {
                             swal("Number of days is required");
                        }


                    });
                });

            //Save retention
            $(function () { // this will be called when the DOM is ready
                $("#save_retention").click(function () {
                    var percentage = parseFloat($("#RetentionPercentage").val());
                    if (percentage > 0) {
                    } else {
                        swal("Please enter retention percentage");
                        return;
                    }
                        var summary_id = $("#ReceivingSummaryId").val();
                        var retentionBy = $("#RetentionBy").val();
                        if (!retentionBy) {
                            swal("Please select Tranfer Category");
                            return;
                        }
                        if (retentionBy == "BankTransfer") {

                            var bank_account = $("#BankAccountTo").val();
                            if (!bank_account) {
                                swal("Please select Bank Account");
                                return;
                            }

                            $("#save_retention").prop('disabled', true);
                            var form_data = {
                                "id": summary_id,
                                "percentage": percentage,
                                "retentionBy": retentionBy,
                                "bankAccount": bank_account
                            }
                            swal({
                                title: 'Confirmation',
                                text: "Save retention information ?",
                                buttons: [
                                  'No',
                                  'Yes'
                                ],
                            }).then(function (isConfirm) {
                                if (isConfirm) {
                                    var url = '@Url.Action("SaveRetention", "Contract")';
                                    $.ajax(
                                {
                                    type: "POST",
                                    url: url,
                                    data: form_data,
                                    success: function (response) {
                                        if (response == "Success") {
                                            swal("Saved  successfully!", { icon: "success" })
                                                                                   .then((value) => {
                                                                                       location.reload();

                                                                                   });

                                        }
                                        else if (response == "Setup") {
                                            swal("Chart of Account setup is incomplete. COA with GFS Retention for subbudget class 301 is missing. Please contact Administrator!");
                                            $("#save_retention").prop('disabled', false);
                                        }
                                        else if (response == "Exceed") {
                                            swal("Retention can not exceed or be equal to amount payable");
                                            $("#save_retention").prop('disabled', false);
                                        }
                                        else {

                                            swal(response);
                                            $("#save_retention").prop('disabled', false);
                                        }
                                    },
                                    error: function (xhr) {
                                        swal(error);
                                        $("#save_retention").prop('disabled', false);
                                    },

                                });
                                } else {
                                    swal("Cancelled", "No change was made");
                                    $("#save_retention").prop('disabled', false);
                                }
                            });
                        } else {

                            var sbc = $("#SubBudgetClassTo").val();
                            if (!sbc) {
                                swal("Please select SubBudgetClass");
                                return;
                            }
                            $("#save_retention").prop('disabled', true);
                            var form_data = {
                                "id": summary_id,
                                "percentage": percentage,
                                "retentionBy": retentionBy,
                                "SubBudgetClass": sbc
                            }
                            swal({
                                title: 'Confirmation',
                                text: "Save retention information ?",
                                buttons: [
                                  'No',
                                  'Yes'
                                ],
                            }).then(function (isConfirm) {
                                if (isConfirm) {
                                    var url = '@Url.Action("SaveRetention", "Contract")';
                                    $.ajax(
                                {
                                    type: "POST",
                                    url: url,
                                    data: form_data,
                                    success: function (response) {
                                        if (response == "Success") {

                                            swal("Saved  successfully!", { icon: "success" })
                                                  .then((value) => {
                                                      location.reload();

                                                  });
                                        }
                                        else if (response == "Exceed") {
                                           swal("Retention can not exceed or be equal to amount payable");
                                            $("#save_retention").prop('disabled', false);
                                        }
                                     else if (response == "Setup") {
                                            swal("Chart of Account setup is incomplete. COA with GFS Retention for subbudget class 301 is missing. Please contact Administrator!");
                                            $("#save_retention").prop('disabled', false);
                                        }
                                        else {

                                            swal(response);
                                            $("#save_retention").prop('disabled', false);
                                        }
                                    },
                                    error: function (xhr) {
                                        swal(error);
                                        $("#save_retention").prop('disabled', false);
                                    },

                                });
                                } else {
                                    swal("Cancelled", "No change was made");
                                    $("#save_retention").prop('disabled', false);
                                }
                            });

                        }



                });
            });
             //Save accrual retention
            $(function () { // this will be called when the DOM is ready
                $("#accrual_retention").click(function () {
                    var percentage = parseFloat($("#RetentionPercentage").val());
                    if (percentage > 0) {
                    } else {
                        swal("Please enter retention percentage");
                        return;
                    }
                    var summary_id = $("#ReceivingSummaryId").val();

                            $("#accrual_retention").prop('disabled', true);
                            var form_data = {
                                "id": summary_id,
                                "percentage": percentage
                            }
                            swal({
                                title: 'Confirmation',
                                text: "Save retention information?,New entry will be added to retention associated with this deduction!",
                                buttons: [
                                  'No',
                                  'Yes'
                                ],
                            }).then(function (isConfirm) {
                                if (isConfirm) {
                                    var url = '@Url.Action("SaveAccrualRetention", "Contract")';
                                    $.ajax(
                                {
                                    type: "POST",
                                    url: url,
                                    data: form_data,
                                    success: function (response) {
                                        if (response == "Success") {

                                            swal("Saved  successfully!", { icon: "success" })
                                                  .then((value) => {
                                                      location.reload();

                                                  });
                                        }
                                        else if (response == "Exceed") {
                                           swal("Retention can not exceed or be equal to amount payable");
                                            $("#accrual_retention").prop('disabled', false);
                                        }

                                        else {

                                            swal("Failed to save ,DbException");
                                            $("#accrual_retention").prop('disabled', false);
                                        }
                                    },
                                    error: function (xhr) {
                                        swal(error);
                                        $("#accrual_retention").prop('disabled', false);
                                    },

                                });
                                } else {
                                    swal("Cancelled", "No change was made");
                                    $("#accrual_retention").prop('disabled', false);
                                }
                            });



                });
            });
            //Select Bank Transfer
            $("#Transfer_info").on('submit', function (e) {
                e.preventDefault();
                var summary_id = $("#ReceivingSummaryId").val();
                var instituion_code = $("#Transfer_info #InstitutionCodeTo").val();
                var bank_account = $("#Transfer_info #BankAccountTo").val();
                $("#InstitutionCodeTo").val(instituion_code);
                $("#BankAccountTo").val(bank_account);
                $("#Transfer").modal("hide");
            });
            //Save retention with retention by Transfer
            $(function () { // this will be called when the DOM is ready
                $("#save_retention1").click(function () {
                    var percentage = parseFloat($("#RetentionPercentage").val());
                    if (percentage > 0) {
                        var summary_id = $("#ReceivingSummaryId").val();
                        var retentionBy = $("#RetentionBy").val();
                        if (!retentionBy) {
                            swal("Please select RetentionBy");
                            return;
                        }
                        var bank_account = $("#BankAccountTo").val();

                        if (!bank_account) {
                            swal("Please search Bank Account");
                            return;
                        }
                        $("#save_retention1").prop('disabled', true);
                        var form_data = {
                            "id": summary_id,
                            "percentage": percentage,
                            "bankAccount": bank_account,
                            "retentionBy": retentionBy
                        }
                        swal({
                            title: 'Confirmation',
                            text: "Save retention information ?",
                            buttons: [
                              'No',
                              'Yes'
                            ],
                        }).then(function (isConfirm) {
                            if (isConfirm) {
                                var url = '@Url.Action("SaveRetention", "Contract")';
                                $.ajax(
                            {
                                type: "POST",
                                url: url,
                                data: form_data,
                                success: function (response) {
                                    if (response == "Success") {
                                        swal("Saved  successfully!", { icon: "success" })
                                                  .then((value) => {
                                                      location.reload();

                                                  });


                                    }

                                    else {

                                        swal(response);
                                        $("#save_retention1").prop('disabled', false);
                                    }
                                },
                                error: function (xhr) {
                                    swal(error);
                                    $("#save_retention1").prop('disabled', false);
                                },

                            });
                            } else {
                                swal("Cancelled", "No change was made");
                                $("#save_retention1").prop('disabled', false);
                            }
                        });





                    } else {
                        swal("Please enter retention percentage");
                    }


                });
            });
            $("#gl_inv_items_charge").on('click', function () {
                itemCategory = "Inventory";
                glItemsCharges = [];
                sum_total = 0;
                var sum = parseFloat($("#InventoryAmount").val().split(",").join(""));
                if (sum > 0) {
                    $("#search_exp_line").val("");
                    $("#total_line_amount").val("");
                    $("#total_items_amount").val(sum.toLocaleString('en'));
                    $("#difference").val(sum.toLocaleString('en'));
                    $("#glItemsModal").modal();
                    searchGLTableUpdate();
                } else {
                    swal("Please enter amount first");
                }

            });

            $("#assign_gl_wip").on('click', function () {
                 itemCategory = "Non Inventory";
                glItemsCharges = [];
                sum_total = 0;
                var sum = '@(Model.ReceivedAmount)';
                if (sum > 0) {
                    $("#search_exp_line").val("");
                    $("#total_line_amount").val("");
                    $("#total_items_amount").val(sum.toLocaleString('en'));
                    $("#difference").val(sum.toLocaleString('en'));
                    $("#glItemsModal").modal();
                    searchGLTableUpdate();

                } else {
                    swal("Please enter amount first");
                }

                });


                //SAVE GL ACCOUNT(S)
                $("#btn_save_items_charge").click(function () {

                    var total_items_value = '@(Model.ReceivedAmount)';

                       sum_total = sum_total.toFixed(2);
                    if (glItemsCharges.length == 0) {
                        swal("Please Enter Amount !");
                    }
                    else if (total_items_value != sum_total) {
                        swal("Please Total Line Amount must be equal to " + total_items_value.toLocaleString('en') + " !");
                    }
                    else {
                        $('#glItemsModal').modal('hide');
                        var receiving_id = $("#ReceivingSummaryId").val();
                        var contractId = $("#ContractId").val();
                        var itemClassificationId = $("#ItemClassificationId").val();

                        if (!itemClassificationId) {
                            swal("Please select item class!");
                            return false;
                        }

                        var form_data = {
                            "ReceivingSummaryId": receiving_id,
                            "ContractId": contractId,
                            "ItemClassificationId": itemClassificationId,
                            "PaymentDescription": itemCategory,
                            "ReceivingCoas": glItemsCharges
                        }
                        $('#bind_gl').hide();
                        $("#btn_save_items_charge").prop('disabled', true);
                        var url = '@Url.Action("ItemsChargeWip", "Contract")';
                        $.ajax(
            {
                type: "POST",
                url: url,
                data: form_data,
                success: function (response) {
                    $("#btn_save_items_charge").prop('disabled', false);
                      if (response == "Success") {
                 swal("GL Account(s) assigned successfully", { icon: "success" })
                            .then((value) => {
                            location.reload();
                            });
                           }
                           else {
                               swal(response);
                            }
                },
                error: function (xhr) {
                    $("#btn_save_items_charge").prop('disabled', false);
                    swal("An error has occured, contact system support");

                },

            });

                    }

                });
                //END SAVE GL ACCOUNT(S)
                        });

        var glItemsCharges = [];
        var sum_total = 0;

        function amountChanged(e) {

            var max_value = parseFloat(e.max);
            var entered_value = parseFloat(e.value.split(",").join(""));
            if (!entered_value) {
                entered_value = 0;
            }

            if (entered_value >= 0) {
                if (max_value >= entered_value) {

                    sum_total = 0;

                    var i = 0;

                    $("#dt_search_gl_item tr").each(function () {


                        if (i > 0) {
                            var value = $(this).children().eq(6).find("input").val().trim().split(",").join("");

                            if (value !="") {

                                var amount = parseFloat(value);

                                //INSERT INTO ARRAY
                                var line = "";
                                line = $(this).children().eq(1).text().split("-").join("|");
                                var item_description = $(this).children().eq(2).text();
                                var funding_ref = $(this).children().eq(4).text();
                                var sub_level_code = $(this).children().eq(5).text();
                                if (glItemsCharges.length > 0) {

                                    //CHECK IF EXIST IN THE ARRAY
                                    var found = false;
                                    for (var j = 0; j < glItemsCharges.length; j++) {
                                        if (glItemsCharges[j].GLAccount == line && glItemsCharges[j].FundingReference == funding_ref) {
                                            glItemsCharges[j].ExpenseAmount = amount;
                                            found = true;
                                        }

                                    }

                                    if (!found) {

                                        glItemsCharges.push({
                                            "GLAccount": line,
                                            "GLAccountDesc": item_description,
                                            "FundingReference": funding_ref,
                                            "ExpenseAmount": amount,
                                            "SublevelCode": sub_level_code
                                        });


                                    }


                                } else {

                                    glItemsCharges.push({
                                        "GLAccount": line,
                                        "GLAccountDesc": item_description,
                                        "FundingReference": funding_ref,
                                        "ExpenseAmount": amount,
                                        "SublevelCode": sub_level_code
                                    });


                                }




                            }
                        }


                        i++;
                    });

                    for (var j = 0; j < glItemsCharges.length; j++) {

                        sum_total = sum_total + glItemsCharges[j].ExpenseAmount;

                    }

                    var total_items_value = parseFloat($("#total_items_amount").val().split(",").join(""));
                    var balance = total_items_value - sum_total;
                    if (balance >= 0) {
                        $("#total_line_amount").val(sum_total.toLocaleString('en'));
                        $("#difference").val(balance.toLocaleString('en'));
                    }
                    else {
                        swal("Total Line Amount can not exceed " + total_items_value.toLocaleString('en'));
                        e.value = "";


                    }
                } else {
                    swal("Expense Amount can not exceed " + max_value.toLocaleString('en'));
                    e.value = "";


                }
            }
        }

        //SHOW LOADER ICON
        $(document).ajaxStart(function () {
            $(".loadingImg").show();

        });
        //HIDE LOADER ICON
        $(document).ajaxStop(function () {
            $(".loadingImg").hide();
        });
        //COMMA SEPARATOR ON INSERTING ITEM CHARGE
        $(document).on('keyup', '.charge', function () {
            $(this).val(inputThousandSeparator(this.value))
        });
        var OldVal = 0
        function inputThousandSeparator(NewVal) {
            if (NewVal) {
                try {
                    NewVal = parseFloat(NewVal.split(",").join(""))
                    if (typeof NewVal == 'number' && !Number.isNaN(NewVal)) {
                        OldVal = NewVal;
                        return NewVal.toLocaleString()
                    } else {
                        return OldVal
                    }
                } catch (e) {
                    console.log(e)
                }
            }
        }

               $("#IsLastReceiving").change((e) => {
                   $("#Receiving").val(e.target.checked ? "YES" : "NO");
                   var selection = e.target.checked ? "YES" : "NO";
                      var contractId = $("#ContractId").val();
                        var form_data = {
                            "id": contractId,
                            "selection": selection
                   }
                                   var url = '@Url.Action("LastReceiving", "Contract")';
                        $.ajax(
            {
                type: "POST",
                url: url,
                data: form_data,
                success: function (response) {
                    if (response == "Success") {
                        if (selection =="YES") {
                            swal("This will be last receiving to this Contract");
                           }
                    }
                    else {
                        swal("An error has occured DbException, contact system support");
                    }
                },
                error: function (xhr) {
                    swal("An error has occured, contact system support");
                },

            });

               });
        var lastReceiving = '@(Model.Receiving)';
        if (lastReceiving=="YES") {
            $("#IsLastReceiving").prop("checked", true);
        }

               $("#NewSubBudgetClass1").change(function () {
                   var sbc = $(this).val();
                               if (sbc) {
                                   var receivingId = $("#ReceivingSummaryId").val();
                                   var form_data = {
                                           "id": receivingId,
                                           "sbc": sbc
                                   }
                                            var url = '@Url.Action("ChangeSBC", "Contract")';
                        $.ajax(
            {
                type: "POST",
                url: url,
                data: form_data,
                success: function (response) {
                    if (response == "Success") {
                             swal("SBC Changed successfully", { icon: "success" })
                                          .then((value) => {
                                              location.reload();
                                              });
                    }
                    else  if (response == "GLRemoved") {
                              swal("SBC Changed successfully and GL Account(s) assigned previously released", { icon: "success" })
                                          .then((value) => {
                                              location.reload();
                                              });
                    }
                   else  if (response == "SetupProblem") {

                     swal("This will be last receiving to this Contract");

                    }
                    else {
                        swal("An error has occured DbException, contact system support");
                    }
                },
                error: function (xhr) {
                    swal("An error has occured, contact system support");
                },

            });
                                 }

               });
        $("#RetentionPercentage").autoNumeric('init');
        $("#InventoryAmount").autoNumeric('init');
        $("#NonInventoryAmount").autoNumeric('init');
        $("#InventoryAmount").keyup(function () {
            var amount = parseFloat($(this).val().split(",").join(""));
            var max_amount = parseFloat($(this).attr('max'));
            if (amount > max_amount) {
                swal("Inventory amount can not exceed " + max_amount.toLocaleString('en'));
                $(this).val("");
            }
            var receiving_amount = parseFloat($("#ReceivedAmount").val().split(",").join(""));
            if (amount > receiving_amount) {
                swal("Inventory amount can not exceed " + receiving_amount.toLocaleString('en'));
                $(this).val("");
            }
        });
        $("#NonInventoryAmount").keyup(function () {
            var amount = parseFloat($(this).val().split(",").join(""));
            var max_amount = parseFloat($(this).attr('max'));
            if (amount > max_amount) {
                swal("Non Inventory amount can not exceed " + max_amount.toLocaleString('en'));
                $(this).val("");
            }
            var receiving_amount = parseFloat($("#ReceivedAmount").val().split(",").join(""));
            if (amount > receiving_amount) {
                swal("Inventory amount can not exceed " + receiving_amount.toLocaleString('en'));
                $(this).val("");
            }
        });

            //DESELECT GL ACCOUNTS
        var deselectGL = function (id) {
                swal({
                title: 'Confirmation',
                text: "Do you what to deselect Note:All item(s) charged by this GL will be uncharged !",
                buttons: [
                  'No',
                  'Yes'
                ],
            }).then(function (isConfirm) {
                if (isConfirm) {
                    var url = '@Url.Action("CancelGLAccount", "Contract")';
                    $.ajax(
        {
            type: "POST",
            url: url,
            data: { id: id },
            success: function (response) {
                if (response == "Success") {
                       swal("GL Account(s) successfully cancelled!", { icon: "success" })
                                              .then((value) => {
                                                  location.reload();
                          });

                }
                else {

                    swal(response);
                }
            },
            error: function (xhr) {
                swal(error);
            },

        });
                } else {
                    swal("Cancelled", "No change was made");
                }
            });
        }

           function applyInvoice(soureceModule,legalNumber) {
         var url = '@Url.Action("GetInvoicesList", "Procurement")';
       $("#divModalBody").load(url, { soureceModule, legalNumber }, function (response, status, xhr) {
             if (status == "error") {
                 $("#divModalBody").html("Error on accessing this details, contact system support.");
             }
             $("#divModal").modal("show");
        });
        }

                function invoiceClicked(invoiceId) {
            var id = '@Model.ReceivingSummaryId';
               swal({
        title: 'Confirmation',
        text: "Set this invoice ?",
        buttons: [
          'No',
          'Yes'
        ],
    }).then(function (isConfirm) {
        if (isConfirm) {
         var url = '@Url.Action("SaveInvoice", "Procurement")';
            $.ajax(
{
    type: "POST",
    url: url,
    data: { id,invoiceId },
    success: function (response) {
        if (response == "Success") {
            $("#divModal").modal("hide");
            swal("Saved successfully", { icon: "success" })
                      .then((value) => {
                          location.reload();
                      });


        }
        else {

            swal(response);
        }
    },
        error: function (xhr) {
            swal(error);
            $("#divLoader").hide();
        },

     });
        } else {
            swal("Cancelled", "No change was made");
        }
    });

        }

    $(".select2").select2();
           $(function () {
 if ($("#DfundApprovalId")[0]) {
     availableBalanceDFund = 0;
   }
      $("#DfundApprovalId").select2({
       minimumInputLength: 2,
       width: 'resolve',
       ajax: {
           url: '@Url.Action("GetApprovalByApprovalCategory", "DfundApprovals")',
           type: "GET",
           dataType: 'json',
           data: function (term) {
               return { term: term, approvalCategory:"DFUND" };
           },
           results: function (data, page) {
               return { results: data.approvals };
           }
       }
   });
   });

     $("#DfundApprovalId").change(function () {
      var id = $(this).val();
      $.ajax({
          type: "GET",
          url: '@Url.Action("GetApprovalByApprovalId", "DfundApprovals")',
          data: { id: id},
          contenttype: "application/json; charset=utf-8",
          datatype: "json",
          success: function (response) {

              if (response.success) {
                  $(".dFundCurrency").text(response.currency);
                  $("#AvailableBalanceDFund").val(0);
                  $("#DfundTitle").val(response.title);
                  availableBalanceDFund = 0;
                  $("#TransactionAmount").val("");
                  $("#OperationalAmount").val("");
                  $("#DFundAmount").val(0);
                  if (response.balanceAmount) {
                      availableBalanceDFund = response.balanceAmount;
                      $("#AvailableBalanceDFund").val(toLabel(availableBalanceDFund));
                  }

              }
          },
          failure: function (error) {
              swal(error);
          }
      });
  });
        function saveDFund(id) {
            var approvalId = $("#DfundApprovalId").val();
            if (!approvalId) {
                swal("Please select DFUND Approval Reference");
                return;
                  }
                          swal({
        title: 'Confirmation',
        text: "Save this DFUND Approval Reference ?",
        buttons: [
          'No',
          'Yes'
        ],
    }).then(function (isConfirm) {
        if (isConfirm) {
         var url = '@Url.Action("SaveDFundApproval", "Contract")';
            $.ajax(
{
    type: "POST",
    url: url,
    data: { id, approvalId },
    success: function (response) {
        if (response == "Success") {
            swal("Saved successfully", { icon: "success" })
                      .then((value) => {
                          location.reload();
                      });


        }
        else {

            swal(response);
        }
    },
        error: function (xhr) {
            swal(error);
        },

     });
        } else {
            swal("Cancelled", "No change was made");
        }
    });
        }


        $("#NewSubBudgetClass").change(function () {
            var sbc = $(this).val();
                var currency = '@(Model.Currency)';
               var url = '@Url.Action("GetReceivingPayerAccounts", "Contract")';
               $.ajax({
                   type: "POST",
                   url: url,
                   data: { sbc: sbc, currency: currency },
                   success: function (response) {
                       if (response.res == "Success") {
                           payerAccounts = response.data;
                           $("#NewPayerAccount").empty();
                           $('<option value="" selected>------Select-------</option>').appendTo('#NewPayerAccount');
                           $.each(payerAccounts, function (i, d) {
                               $('<option value=' + d.AccountNumber + '>' + d.AccountNumber + '-' + d.Currency + '-' + d.AccountName + '</option>').appendTo('#NewPayerAccount');
                           });

                       }
                       else {
                           swal(response.res);
                       }

                   }
               })
        });

          $(function () { // this will be called when the DOM is ready
        $("#save_sbc").click(function () {
            var sbc = $("#NewSubBudgetClass").val();
            var bank_account = $("#NewPayerAccount").val();
              if (!sbc) {
                  swal("Please select new Sub Budget Class");
                  return;
              }
            if (!bank_account) {
                  swal("Please select new Payer Bank Account");
                  return;
              }
            var summary_id = $("#ReceivingSummaryId").val();
              var form_data = {
                  "id": summary_id,
                  "sbc": sbc,
                  "bankAccount": bank_account
            }
            $("#save_sbc").prop('disabled', true);
              swal({
                  title: 'Confirmation',
                  text: "Save changes ?",
                  buttons: [
                    'No',
                    'Yes'
                  ],
              }).then(function (isConfirm) {
                  if (isConfirm) {
                      var url = '@Url.Action("ChangeSBC", "Contract")';
                      $.ajax(
                  {
                      type: "POST",
                      url: url,
                      data: form_data,
                      success: function (response) {
                          if (response == "Success") {
                              swal("Saved  successfully!", { icon: "success" })
                                        .then((value) => {
                                            location.reload();

                                        });


                          }

                          else {

                              swal(response);
                              $("#save_sbc").prop('disabled', false);
                          }
                      },
                      error: function (xhr) {
                          swal(error);
                          $("#save_retention1").prop('disabled', false);
                      },

                  });
                  } else {
                      $("#save_sbc").prop('disabled', false);
                      swal("Cancelled", "No change was made");
                      $("#save_retention1").prop('disabled', false);
                  }
              });



      });
  });
        //SHOW LOADER ICON
        $(document).ajaxStart(function () {
            $("#divLoader").show();
        });
        //HIDE LOADER ICON
        $(document).ajaxStop(function () {
            $("#divLoader").hide();
        });
    </script>
}








