@model IFMIS.Areas.IFMISTZ.Models.Search
@{
    ViewBag.Title = "Contract tracker";
}



<div id="content" style="margin: 5px; padding-top: 30px">

    <div class="row">


    </div>


    <!-- widget grid -->
    <section id="widget-grid" class="">


        <!-- START ROW -->

        <div class="row">

            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">

                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">
                    <br/>
                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2>Contracts Tracker</h2>

                    </header>


                    <div>
                        <div class="widget-body " style="padding-top:10px;width:100%">
                            @using (Html.BeginForm(null, null, FormMethod.Get))
                            {

                                <div class="form-horizontal">
                                    <div class="col-xs-12">
                                        <div class="col-md-12">
                                            <div class="form-group">
                                                <div class="col-md-2">
                                                    @Html.EnumDropDownListFor(model => model.ContractStatus, "--Search--", new { @class = "form-control", @required = "required" })
                                                    @Html.ValidationMessageFor(model => model.ContractStatus, "", new { @class = "text-danger" })
                                                </div>
                                                <div class="col-md-3">
                                                    @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control", @placeholder = "From" } })

                                                </div>
                                                <div class="col-md-3">
                                                    @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control", @placeholder = "To" } })
                                                </div>
                                                <div class="col-md-offset-1 col-md-3">
                                                    <div class="input-group"><input class="form-control" id="Keyword" name="Keyword" placeholder="Contract Reg Number" value='@Model.Keyword' type="text" autocomplete="off" /><span class="input-group-btn"><button class="btn" style="background-color:#2196F3;color:white" id="search" type="submit">Search</button></span></div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
         
                            <hr />
                            <div align="center">
                                <img src="~/Media/Images/ajax_loader.gif" class="loadingImg" style="display:none" />
                            </div>   
                            <table align="center" class="table  table-bordered table-hover table-condensed" id="dt_contact" style="width:97%">
                                <thead>
                                    <tr>
                                        <th style="text-align:right"></th>
                                        <th style="text-align:left;width:10%">Contract Reg#</th>
                                        <th style="text-align:left">Contract Number</th>
                                        <th style="text-align:left">Supplier</th>
                                        <th style="text-align:left">Contract Description</th>
                                        <th style="text-align:left">Currency</th>
                                        <th style="text-align:right">Amount</th>
                                        <th style="text-align:right">Received</th>
                                        <th style="text-align:right">Balance</th>
                                        <th style="text-align:left">Status</th>
                                        <th style="text-align:center">Action</th>
                                    </tr>
                                </thead>

                                <tbody>
                                    @{var i = 0;}
                                    @foreach (var item in ViewBag.ContractList)
                                    {
                                        i++;
                                        decimal balance = item.ContractAmount;
                                        if (item.ReceivedAmount > 0)
                                        {
                                            balance = balance - item.ReceivedAmount;
                                        }

                                    <tr>
                                        <td style="text-align:right">
                                            @i
                                        </td>
                                        <td style="text-align:left">
                                            @item.ContractNo
                                        </td>
                                        <td>
                                            @item.ContractNumber
                                        </td>
                                        <td style="text-align:left">
                                            @item.Payeename
                                        </td>
                                        <td style="text-align:left">
                                            @item.ContractDescription

                                        </td>
                                        <td style="text-align:left">
                                            @item.Currency
                                        </td>

                                        <td style="text-align:right">


                                            @item.ContractAmount.ToString("#,##0/=")


                                        </td>
                                        <td align="right">

                                            @item.ReceivedAmount.ToString("#,##0/=")


                                        </td>
                                        <td align="right">
                                            @balance.ToString("#,##0/=")
                                        </td>
                                        <td>

                                            @item.OverallStatus

                                        </td>

                                        <td style="text-align:center">

                                            <div class="btn-group">

                                                <button type="button" class="btn btn-info btn-xs dropdown-toggle" data-toggle="dropdown" style="width:40px;border-radius:1px;" aria-haspopup="true" aria-expanded="false">
                                                    <span class="caret"></span>
                                                    <span class="sr-only">Toggle Dropdown</span>
                                                </button>
                                                <ul class="dropdown-menu">

                                                    <li style="text-align:left">
                                                        <a href="@Url.Action("PreviewContract", "Contract",new {id=item.UuId})" class="btn-xs edit">
                                                            <i class="fa fa-search-minus"></i>  Details
                                                        </a>
                                                    </li>
                                                    <li>
                                                        <a href="@Url.Action("AttachmentView", "PaymentVoucherAttachments",new {groupId=item.ContractId,sourceModule="Contract" })" class="btn-xs edit">
                                                            <i class="fa fa-search-minus"></i>  Attachments
                                                        </a>
                                                    </li>
                                                    @if (item.OverallStatus == "Approved")
                                                    {
                                                        <li><a href="@Url.Action("ContractSummaryModuleRptv", "Report",new {id=item.ContractNo,area = "IFMISTZ"})" class="btn-xs edit" target="_blank"><i class="fa fa-print"></i>Print Contact</a></li>


                                                    }

                                                </ul>
                                            </div>
                                        </td>

                                    </tr>
                                    }
                                </tbody>
                            </table>

                        </div>





                    </div>


                </div>
            </article>

        </div>
    </section>
</div>


@section pagespecific {
    <!-- PAGE RELATED PLUGIN(S) -->

    <script type="text/javascript">

            $(document).ready(function () {
                /* // DOM Position key index //
         l - Length changing (dropdown)
         f - Filtering input (search)
         t - The Table! (datatable)
         i - Information (records)
         p - Pagination (paging)
         r - pRocessing
         < and > - div elements
         <"#id" and > - div with an id
         <"class" and > - div with a class
         <"#id.class" and > - div with an id and class
         Also see: http://legacy.datatables.net/usage/features
         */
                /* BASIC ;*/
                var responsiveHelper_dt_contact = undefined;
                var responsiveHelper_datatable_fixed_column = undefined;
                var responsiveHelper_datatable_col_reorder = undefined;
                var responsiveHelper_datatable_tabletools = undefined;

                var breakpointDefinition = {
                    tablet: 1024,
                    phone: 480
                };

                $('#dt_contact').dataTable({
                    "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-12 hidden-xs'l>r>" +
                        "t" +
                        "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                    "autoWidth": true,
                    "preDrawCallback": function () {
                        // Initialize the responsive datatables helper once.
                        if (!responsiveHelper_dt_contact) {
                            responsiveHelper_dt_contact = new ResponsiveDatatablesHelper($('#dt_contact'), breakpointDefinition);
                        }
                    },
                    "rowCallback": function (nRow) {
                        responsiveHelper_dt_contact.createExpandIcon(nRow);
                    },
                    "drawCallback": function (oSettings) {
                        responsiveHelper_dt_contact.respond();
                    }
                });

                /* END BASIC */

                /* COLUMN FILTER  */
                var otable = $('#datatable_fixed_column').DataTable({
                    //"bFilter": false,
                    //"bInfo": false,
                    //"bLengthChange": false
                    //"bAutoWidth": false,
                    //"bPaginate": false,
                    //"bStateSave": true // saves sort state using localStorage
                    "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6 hidden-xs'f><'col-sm-6 col-xs-12 hidden-xs'<'toolbar'>>r>" +
                            "t" +
                            "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                    "autoWidth": true,
                    "preDrawCallback": function () {
                        // Initialize the responsive datatables helper once.
                        if (!responsiveHelper_datatable_fixed_column) {
                            responsiveHelper_datatable_fixed_column = new ResponsiveDatatablesHelper($('#datatable_fixed_column'), breakpointDefinition);
                        }
                    },
                    "rowCallback": function (nRow) {
                        responsiveHelper_datatable_fixed_column.createExpandIcon(nRow);
                    },
                    "drawCallback": function (oSettings) {
                        responsiveHelper_datatable_fixed_column.respond();
                    }
                });

                // custom toolbar
                $("div.toolbar").html('<div class="text-right"><img src="/Content/img/logo.png" alt="SmartAdmin" style="width: 111px; margin-top: 3px; margin-right: 10px;"></div>');

                // Apply the filter
                $("#datatable_fixed_column thead th input[type=text]").on('keyup change', function () {
                    otable
                        .column($(this).parent().index() + ':visible')
                        .search(this.value)
                        .draw();
                });
                /* END COLUMN FILTER */

                /* COLUMN SHOW - HIDE */
                $('#datatable_col_reorder').dataTable({
                    "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'C>r>" +
                            "t" +
                            "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
                    "autoWidth": true,
                    "preDrawCallback": function () {
                        // Initialize the responsive datatables helper once.
                        if (!responsiveHelper_datatable_col_reorder) {
                            responsiveHelper_datatable_col_reorder = new ResponsiveDatatablesHelper($('#datatable_col_reorder'), breakpointDefinition);
                        }
                    },
                    "rowCallback": function (nRow) {
                        responsiveHelper_datatable_col_reorder.createExpandIcon(nRow);
                    },
                    "drawCallback": function (oSettings) {
                        responsiveHelper_datatable_col_reorder.respond();
                    }
                });

                /* END COLUMN SHOW - HIDE */

                /* TABLETOOLS */
                $('#datatable_tabletools').dataTable({

                    // Tabletools options:
                    //   https://datatables.net/extensions/tabletools/button_options
                    "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'T>r>" +
                            "t" +
                            "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
                    "oTableTools": {
                        "aButtons": [
                        "copy",
                        "csv",
                        "xls",
                           {
                               "sExtends": "pdf",
                               "sTitle": "SmartAdmin_PDF",
                               "sPdfMessage": "SmartAdmin PDF Export",
                               "sPdfSize": "letter"
                           },
                           {
                               "sExtends": "print",
                               "sMessage": "Generated by SmartAdmin <i>(press Esc to close)</i>"
                           }
                        ],
                        "sSwfPath": "/Scripts/plugin/datatables/swf/copy_csv_xls_pdf.swf"
                    },
                    "autoWidth": true,
                    "preDrawCallback": function () {
                        // Initialize the responsive datatables helper once.
                        if (!responsiveHelper_datatable_tabletools) {
                            responsiveHelper_datatable_tabletools = new ResponsiveDatatablesHelper($('#datatable_tabletools'), breakpointDefinition);
                        }
                    },
                    "rowCallback": function (nRow) {
                        responsiveHelper_datatable_tabletools.createExpandIcon(nRow);
                    },
                    "drawCallback": function (oSettings) {
                        responsiveHelper_datatable_tabletools.respond();
                    }
                });
                /* END TABLETOOLS */
                var result = '@(ViewBag.Message)';
                if (result == "NoMatching") {

                    swal("No any matching Contract");

                }
                //$('#StartDate').datepicker({
                //    dateFormat: 'mm/dd/yy',
                //    prevText: '<i class="fa fa-chevron-left"></i>',
                //    nextText: '<i class="fa fa-chevron-right"></i>',
                //    onSelect: function (selectedDate) {
                //        $('#StartDate').datepicker('option', 'minDate', selectedDate);
                //    }
                //});
                //$('#EndDate').datepicker({
                //    dateFormat: 'mm/dd/yy',
                //    prevText: '<i class="fa fa-chevron-left"></i>',
                //    nextText: '<i class="fa fa-chevron-right"></i>',
                //    onSelect: function (selectedDate) {
                //        $('#EndDate').datepicker('option', 'minDate', selectedDate);
                //    }
                //});
               


                        });
        //SHOW LOADER ICON
        $(document).ajaxStart(function () {
            $(".loadingImg").show();

        });
        //HIDE LOADER ICON
        $(document).ajaxStop(function () {
            $(".loadingImg").hide();
        });


    </script>
}
