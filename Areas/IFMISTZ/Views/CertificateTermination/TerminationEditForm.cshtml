@model IFMIS.Areas.IFMISTZ.Models.CertificateTerminationVm
<style>
    .search-btn {
        border: 1px solid #ccc;
        border-radius: 4px;
        padding: 5px;
        padding-right: 10px;
    }

    .search-container {
        background-color: white;
        color: black;
        border: 1px solid #ccc;
        border-radius: 4px;
        padding: 3px;
        padding-right: 10px;
        padding-left: 10px;
    }

    .name-input-container {
        display: inline-flex;
        flex: 1 1 300px;
        position: relative;
        overflow: hidden;
    }

    .search-icon {
        padding: 0.5rem;
    }

    .search-button {
        background: #538AC5;
        border: 0;
        color: white;
        padding: 8px;
        border-radius: 0;
    }

    input[type=number] {
        padding: 8px;
        border: 1px solid #ccc;
        width: 205px;
    }

    input[type=text] {
        padding: 5px;
        border: 1px solid #ccc;
    }

    input[type=search] {
        padding: 4px;
        border: hidden;
        border-radius: 4px;
    }

    textarea {
        border: 1px solid #ccc;
    }

    select {
        padding: 8px;
        border: 1px solid #ccc;
        resize: vertical;
        width: 230px;
    }

    .action-btn {
        width: 100px;
        color: white;
    }

    .form-label {
        text-align: right;
    }

    td {
        padding: 5px;
    }

    .info-box {
        padding: 10px;
        background-color: #ECF3F8;
        text-align: center;
        border: 1px solid #ccc;
        border-radius: 5px;
    }

    .row-align {
        display: flex;
        flex-direction: row;
        flex-wrap: wrap;
        justify-content: space-between;
    }
</style>

<div style="padding:1em;padding-top:4em">
    <section id="widget-grid">
        <article class="col-sm-12 col-md-12 col-lg-12">

            <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">

                <header>
                    <span class="widget-icon"> <i class="fa fa-table"></i> </span>
                    <h2>Contract Termination</h2>
                </header>
                <div class="widget-body">
                    <div class="row" style="padding:1% 5% 0 5%;">
                        <div class="col-md-6 col-lg-6 col-sm-12">
                            <table>
                                <tr>
                                    <td class="form-label">
                                        Contract Name
                                    </td>
                                    <td>
                                        <div class="name-input-container">
                                            <input type="text" readonly id="ContractName" placeholder="No Contract Selected" style="width:260px" />
                                            <a class="search-btn" onclick="SearchContract()"
                                               href="#" style="float:right">
                                                <i class="fa fa-search search-icon"></i>
                                            </a>
                                        </div>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="form-label">
                                        Contract Number
                                    </td>
                                    <td>
                                        <div class="name-input-container">
                                            <input type="text" disabled id="ContractNumber" style="width:300px" />
                                        </div>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="form-label">
                                        Contractor Name
                                    </td>
                                    <td>
                                        <div class="name-input-container">
                                            <input type="text" disabled id="ContractorName" style="width:300px" />
                                        </div>
                                    </td>
                                </tr>
                            </table>
                        </div>
                        <div class="col-md-6 col-lg-6 col-sm-12" style="margin-top:-20px;">
                            <div>
                                <div> Termination Reason</div>
                                <table>
                                    <tr>
                                        <td>
                                            <textarea style="width:500px" rows="5" id="Reason"></textarea><br />
                                            (Remained characters: <i id="maxchars_c">500</i>)
                                        </td>
                                    </tr>
                                </table>
                            </div>
                        </div>
                    </div>
                    <hr />
                    <div style="padding-bottom: 5px;text-align:center; font-weight: bold">Compesation Details</div>
                    <div class="row" style="padding:1%;">
                        <div class="col-md-6 col-lg-6 col-sm-12">
                            <table>
                                <tr>
                                    <td class="form-label">
                                        Contract Amount
                                    </td>
                                    <td>
                                        <div class="name-input-container">
                                            <input type="text" disabled id="ContractAmount" style="width:300px" />
                                        </div>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="form-label">
                                        Executed Work
                                    </td>
                                    <td>
                                        <div class="name-input-container">
                                            <input type="text" disabled id="ExecutedAmount" style="width:300px" />
                                        </div>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="form-label">Unpaid Certificate Amount </td>
                                    <td>
                                        <div class="input-group">
                                            <amount-input id="UnpaidCertificateAmount" style="width: 300px" class="amount-input" />
                                        </div>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="form-label">15% of Un-executed work</td>
                                    <td>
                                        <div class="input-group">
                                            <input type="text" id="UnexecutedWork" style="width: 300px" disabled />
                                        </div>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="form-label">Total Amount</td>
                                    <td>
                                        <div class="input-group">
                                            <input type="text" id="TotalAmount" style="width: 300px" disabled />
                                        </div>
                                    </td>
                                </tr>
                            </table>
                        </div>
                        <div class="col-md-6 col-lg-6 col-sm-12">
                            <table>
                                <tr>
                                    <td class="form-label">Certificate Amount </td>
                                    <td>
                                        <div class="input-group">
                                            <input type="checkbox" style="width:30px" id="CertificateAmountCheckbox">
                                            <amount-input id="CertificateAmount" style="width: 300px" class="amount-input" />
                                        </div>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="form-label">Insurance Amount</td>
                                    <td>
                                        <div class="input-group">
                                            <input type="checkbox" style="width:30px" id="InsuranceAmountCheckbox">
                                            <amount-input id="InsuranceAmount" style="width: 300px;" class="amount-input" />
                                        </div>
                                    </td>
                                </tr>
                                <tr class="InsuranceAmount">
                                    <td class="form-label">Insurance Payer</td>
                                    <td>
                                        <div class="form-group" style="margin-left: 17px">
                                            <section>
                                                <div class="col col-md-8" style="width: 330px;">
                                                    @Html.TextBoxFor(model => model.InsurancePayerId, new { @class = "form-control" })
                                                    @Html.ValidationMessageFor(model => model.InsurancePayerId, "", new { @class = "text-danger" })
                                                </div>
                                            </section>
                                        </div>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="form-label">Cash Amount</td>
                                    <td>
                                        <div class="input-group">
                                            <input type="checkbox" style="width:30px" id="CashAmountCheckbox">
                                            <amount-input id="CashAmount" style="width: 300px;" class="amount-input" />
                                        </div>
                                    </td>
                                </tr>
                                <tr class="CashAmount">
                                    <td class="form-label">Cash Payer</td>
                                    <td>
                                        <div class="form-group" style="margin-left: 17px">
                                            <section>
                                                <div class="col col-md-8" style="width: 330px;">
                                                    @Html.TextBoxFor(model => model.CashPayeePayerId, new { @class = "form-control" })
                                                    @Html.ValidationMessageFor(model => model.CashPayeePayerId, "", new { @class = "text-danger" })
                                                </div>
                                            </section>
                                        </div>
                                    </td>
                                </tr>
                            </table>
                        </div>
                    </div>
                    <hr />
                    <div class="row">
                        <div class="col-md-2"></div>
                        <div class="col-md-6">
                            <button class="btn btn-info" href='@Url.Action("PendingTermination", "CertificateTermination")' style="margin-right:5px">
                                <i class="glyphicon glyphicon-arrow-left"></i>Back
                            </button>
                            <button type="submit" class="btn btn-info" onclick="SubmitData()">
                                <i class="fa fa-save"></i>Save
                                <img src="~/Content/img/loading.gif" id="saveLoader" />
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </article>

    </section>
</div>

<div class="modal fade" id="contractModal" style="left:4%">
    <div class="modal-dialog" style="width:80%;">
        <div class="modal-content panel-info">
            <div class="modal-header panel-heading">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h3 class="modal-title"> Search Payee</h3>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-6">
                    </div>
                    <div class="col-md-6" style="margin-bottom: 10px">
                        <div class="search-container" style="float:right;">
                            <i class="fa fa-search search-icon"></i>
                            <input type="search" name="search" placeholder="Search..." id="searchbox">
                        </div>
                    </div>
                </div>
                <table class="table" id="dt_search_contract">
                    <thead>
                        <tr>
                            <th>#</th>
                            <th>Contract Name</th>
                            <th>Contract Number</th>
                            <th>Contract Amount</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                </table>

            </div>
            <div class="modal-footer">
                <button class="btn btn-info" data-dismiss="modal">
                    <i class="fa  fa-times"></i>Close
                </button>
            </div>
        </div>
    </div>
</div>


@section pagespecific{
    <script>
        var dt_search_contract = $('#dt_search_contract').dataTable();
        $("#dt_search_contract_wrapper .dt-toolbar").remove();

        $("#CertificateAmountCheckbox").change(function () {
            $('#CertificateAmount').toggle(this.checked);
        });
        $('#CertificateAmount').toggle(false);

        $("#InsuranceAmountCheckbox").change(function () {
            $('#InsuranceAmount').toggle(this.checked);
            $('.InsuranceAmount').toggle(this.checked);
        });
        $('#InsuranceAmount').toggle(false);
        $('.InsuranceAmount').toggle(false);

        $("#CashAmountCheckbox").change(function () {
            $('#CashAmount').toggle(this.checked);
            $('.CashAmount').toggle(this.checked);
        });
        $('#CashAmount').toggle(false);
        $('.CashAmount').toggle(false);

        function SearchContract() {
            $('#contractModal').modal('show');
        }

        $("#Reason").on("keyup", function (e) {
            if (250 - this.value.length<0) {
                $("#Reason").val(this.value.slice(0, 250))
                return
            }
            $("#maxchars_c").text(250 - this.value.length)
        });

        $("#searchbox").on("keyup search input paste cut", function () {
            if (!this.value) {
                dt_search_contract.fnClearTable();
            } else {
                searchCertificate(this.value);
            }
        });

        var TotalAmount = 0;
        var unExcecutedWork = 0;
        $(".amount-input").on("keyup search input paste", function () {
            updateTotalAmount()
        });

        function updateTotalAmount() {
            var InsuranceAmount = $("#_InsuranceAmount").val() || 0;
            var CashAmount = $("#_CashAmount").val() || 0;
            var CertificateAmount = $("#_CertificateAmount").val() || 0;
            TotalAmount = toNumber(InsuranceAmount) + toNumber(CashAmount) + toNumber(CertificateAmount)
            $("#TotalAmount").val(toLabel(TotalAmount));

            var unPaidCertificate = toNumber($("#_UnpaidCertificateAmount").val());
            var _15percentOfUnExcecutedWork = (unExcecutedWork - unPaidCertificate || 0) * 0.15
            $("#UnexecutedWork").val(toLabel(_15percentOfUnExcecutedWork));
        }

        var contracts = []
        function searchCertificate(keyword) {
            $.ajax({
                type: "GET",
                url: '@Url.Action("SearchCertificates", "CertificateTermination")',
                data: { keyword },
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {
                    contracts = response.data;
                    dt_search_contract.fnClearTable();
                    for (var i = 0; i < contracts.length; i++) {
                        dt_search_contract.fnAddData([i + 1,
                            contracts[i]["ContractName"],
                            contracts[i]["ContractNumber"],
                            toLabel(contracts[i]["ContractAmount"]),
                            '<a href="#" onclick="contractClicked(' + contracts[i].ContractId + ')"><i class="glyphicon glyphicon-plus-sign"></i></a>'
                        ]);
                    }
                },
                failure: function (error) {
                    swal(error);
                }
            });
        }

        var contractId = null
        function contractClicked(Id) {
            contractId = Id
            var contract = contracts.filter(a=>a.ContractId == Id)[0]
            $("#ContractName").val(contract.ContractName);
            $("#ContractNumber").val(contract.ContractNumber);
            $("#ContractAmount").val(toLabel(contract.ContractAmount));
            $("#ContractorName").val(contract.Payeename);
            $('#contractModal').modal('hide');
            computeTenPercent(Id);
        }


       $("#form_submision").prop('disabled', false);
        $("#saveLoader").toggle(false);

        function SubmitData() {
            var formData = {
                ContractId: contractId,
                Reason: $("#Reason").val(),
                CashAmount: 0,
                CertificateAmount: 0,
                InsuranceAmount: 0,
                CashPayeePayerId: null,
                InsurancePayerId: null,
                CertificateTerminationId: '@ViewBag.CertificateTerminationId',
                UnPaidCertificateAmount: toNumber($("#_UnpaidCertificateAmount").val() || 0),
            }

            formData.Reason = formData.Reason.trim();
            if ($("#CashAmountCheckbox").is(":checked")) {
                formData.CashAmount = $("#_CashAmount").val() || 0
                formData.CashPayeePayerId = $("#CashPayeePayerId").val()
                if (!formData.CashPayeePayerId) {
                    swal("Cash payer is required.")
                    return
                }

                if (!formData.CashAmount) {
                    swal("Cash amount is required.")
                    return
                }
            }

            if ($("#InsuranceAmountCheckbox").is(":checked")) {
                formData.InsuranceAmount = $("#_InsuranceAmount").val() || 0,
                formData.InsurancePayerId = $("#InsurancePayerId").val()
                if (!formData.InsurancePayerId) {
                    swal("Insurance payer is required.")
                    return
                }
                if (!formData.InsuranceAmount) {
                    swal("Insurance amount is required.")
                    return
                }
            }

            if ($("#CertificateAmountCheckbox").is(":checked")) {
                formData.CertificateAmount = $("#_CertificateAmount").val() || 0
                if (toNumber($("#_UnpaidCertificateAmount").val()) === 0) {
                    swal("Please specify unpaid certificate amount.")
                    return
                }
                if (toNumber(formData.CertificateAmount) > toNumber($("#_UnpaidCertificateAmount").val())) {
                    swal("Certificate amount is greater than unpaid certificate amount.");
                    return
                }
            }

            if (TotalAmount <= 0) {
                swal("Total amount cannot be zero or less.");
                return
            }

            let y = toNumber($("#UnexecutedWork").val())
          
            if (TotalAmount !== y) {
                swal(`Total amount should be equal to 15% of Un-executed work. \n
                  TotalAmount: ${TotalAmount}, 15% of Un-executed: ${y}`);
                return
            }

            if (!contractId) {
                swal("No selected contract");
                return
            }

            if (!formData.Reason) {
                swal("Please provide termination reason.");
                return
            }
            formData.UnexecutedWork = y
            SaveData(formData);
        }

        function SaveData(formData) {
           $.ajax({
               type: "POST",
               url: '@Url.Action("UpdateTermination", "CertificateTermination")',
               data: formData,
               contenttype: "application/json; charset=utf-8",
               datatype: "json",
               success: function (response) {
                   $("#form_submision").prop('disabled', false);
                   $("#saveLoader").toggle(false);
                   if (response == "Success") {
                       swal("Saved Successfully!", { icon: "success" })
                           .then((value) => {
                               window.location.href = '@Url.Action("PendingTermination", "CertificateTermination")';
                           });
                   }else {
                       swal(response);
                   }
               },
               failure: function (error) {
                   $("#form_submision").prop('disabled', false);
                   $("#saveLoader").toggle(false);
                   swal(error);
               }
           });
        }

        var url = '@Url.Action("GetCustomers", "Customers")';
        $("#InsurancePayerId").select2({
                minimumInputLength: 2,
                width: 'resolve',
                placeholder: 'Select Customer',
                initSelection: function (element, callback) {
                    var id = $(element).val();
                    if (id && id != 0) {
                        $.ajax('@Url.Action("GetSelectedCustomer", "Customers")', {
                            data: { id: id },
                            dataType: "json"
                        }).done(function (data) {
                            callback(data);
                        });
                    }
                },
                ajax: {
                    url: url,
                    type: "GET",
                    dataType: 'json',
                    data: function (term) {
                        return {
                            term: term
                        };
                    },
                    results: function (data, page) {
                        return { results: data.customers };
                    }
                }
            });
        $("#CashPayeePayerId").select2({
                minimumInputLength: 2,
                width: 'resolve',
                placeholder: 'Select Customer',
                initSelection: function (element, callback) {
                    var id = $(element).val();
                    if (id && id != 0) {
                        $.ajax('@Url.Action("GetSelectedCustomer", "Customers")', {
                            data: { id: id },
                            dataType: "json"
                        }).done(function (data) {
                            callback(data);
                        });
                    }
                },
                ajax: {
                    url: url,
                    type: "GET",
                    dataType: 'json',
                    data: function (term) {
                        return {
                            term: term
                        };
                    },
                    results: function (data, page) {
                        return { results: data.customers };
                    }
                }
           });

        function computeTenPercent(id) {
            $("#UnexecutedWork").val(0);
            $.ajax({
                type: "GET",
                url: '@Url.Action("ComputeTenPercent", "CertificateTermination")',
                data: { id },
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {
                    unExcecutedWork = response.unExcecutedWork;
                    $("#ExecutedAmount").val(toLabel(response.executedWorkAmount));
                    $("#UnexecutedWork").val(toLabel(unExcecutedWork * 0.15));
                },
                failure: function (error) {
                    swal(error);
                }
            });
        }

        function preLoadData() {
            $.ajax({
                type: "GET",
                url: '@Url.Action("GetContractTermination", "CertificateTermination")',
                data: { id: '@ViewBag.CertificateTerminationId' },
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {
                    contractData(response.data);
                },
                failure: function (error) {
                    swal(error);
                }
            });
        }

        function contractData(contract) {
            contractId = contract.ContractId;
            $("#ContractName").val(contract.ContractName);
            $("#ContractNumber").val(contract.ContractNumber);
            $("#ContractAmount").val(toLabel(contract.ContractAmount));
            $("#ContractorName").val(contract.Payeename);
            $("#Reason").val(contract.Reason);
            $("#Reason").keyup();

            if (contract.InsuranceAmount) {
                $("#_InsuranceAmount").val(toLabel(contract.InsuranceAmount))
                $("#InsuranceAmount").val(toLabel(contract.InsuranceAmount))
                $('#InsuranceAmountCheckbox').prop('checked', true);
                $('#InsuranceAmountCheckbox').change();
                $('#InsurancePayerId').select2('data', {
                    id: contract.InsurancePayerId,
                    text: contract.InsurancePayerName
                });
            }

            if (contract.CertificateAmount) {
                $("#_CertificateAmount").val(toLabel(contract.CertificateAmount))
                $("#CertificateAmount").val(toLabel(contract.CertificateAmount))
                $('#CertificateAmountCheckbox').prop('checked', true);
                $('#CertificateAmountCheckbox').change()
            }

            if (contract.CashAmount) {
                $("#_CashAmount").val(toLabel(contract.CashAmount))
                $("#CashAmount").val(toLabel(contract.CashAmount))
                $('#CashAmountCheckbox').prop('checked', true);
                $('#CashAmountCheckbox').change();
                $('#CashPayeePayerId').select2('data', {
                    id: contract.CashPayeePayerId,
                    text: contract.CashPayeePayerName
                });
            }


            $("#_UnpaidCertificateAmount").val(toLabel(contract.UnPaidCertificateAmount))
            $("#UnpaidCertificateAmount").val(toLabel(contract.UnPaidCertificateAmount))

            $("#UnexecutedWork").val(0);
            $.ajax({
                type: "GET",
                url: '@Url.Action("ComputeTenPercent", "CertificateTermination")',
                data: { id: contractId },
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {
                    unExcecutedWork = response.unExcecutedWork;
                    $("#ExecutedAmount").val(toLabel(response.executedWorkAmount));
                    $("#UnexecutedWork").val(toLabel(unExcecutedWork * 0.15));
                    updateTotalAmount();
                },
                failure: function (error) {
                    swal(error);
                }
            });
        }
        preLoadData();
    </script>
}


