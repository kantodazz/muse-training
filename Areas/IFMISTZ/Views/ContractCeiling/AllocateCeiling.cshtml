@model IFMIS.Areas.IFMISTZ.Models.ContractCeilingVM
@{
    ViewBag.Title = "New Ceiling";


}

<style>
    #dropSection {
        background: #fafafa;
        border: black dashed 1px;
        height: 50%;
        text-align: center;
        color: #fff;
        padding-top: 12px;
    }

    .active-drop {
        background: #eeeeee !important;
        border: solid 2px blue !important;
        opacity: .5;
        color: black !important;
    }

    .container {
        position: relative;
        height: 50%;
        border: 2px solid #006100;
    }

    .vertical-center {
        margin: 0;
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
    }
</style>
<div id="content">

    <!-- widget grid -->
    <section id="widget-grid">


        <!-- START ROW -->

        <div>

            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">

               
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">

                    <header class="margin-top-10">
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2> Create Ceiling </h2>

                    </header>


                    <div>
                        <div class="widget-body">
                            <div align="center">
                                <img src="~/Media/Images/ajax_loader.gif" class="loadingImg" style="display:none" />
                            </div>

                            <div class="row">


                                <div class="col-md-9">
                                    @using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = "return SubmitCeiling(this)" }))
                                    {
                                        @Html.AntiForgeryToken()
                                        <div class="row ">
                                            <div class="form-horizontal">


                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.InstitutionId, htmlAttributes: new { @class = "control-label   col-md-2" })
                                                    <div class="col-md-10">
                                                        @Html.DropDownListFor(model => model.InstitutionId, Model.InstitutionList, "Select ", new { @class = "form-control select2", @required = "required" })
                                                        @Html.ValidationMessageFor(model => model.InstitutionId, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.FundCategoryId, htmlAttributes: new { @class = "control-label   col-md-2" })
                                                    <div class="col-md-4">
                                                        @Html.DropDownListFor(model => model.FundCategoryId, Model.FundCategories, "Select ", new { @class = "form-control select2", @required = "required" })
                                                        @Html.ValidationMessageFor(model => model.FundCategoryId, "", new { @class = "text-danger" })
                                                    </div>
                                                    @Html.LabelFor(model => model.Currency, htmlAttributes: new { @class = "control-label   col-md-2" })
                                                    <div class="col-md-4">
                                                        @Html.DropDownListFor(model => model.Currency, Model.CurrencyList, "Select ", new { @class = "form-control", @required = "required" })
                                                        @Html.ValidationMessageFor(model => model.Currency, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                            </div>
                                        </div>

                                        <div id="ceiling-form"></div>
                                        <div class="form-group">
                                            <div class="col-md-10 col-md-offset-2">
                                                <a href="@Url.Action("PendingCeiling","ContractCeiling")" style="margin-right:5px" class="btn btn-info pull-left"><i class="glyphicon glyphicon-arrow-left"></i> Back  </a>
                                            </div>
                                        </div>

                                    }
                                </div>
                                <div class="col-md-3">
                                   
                                </div>
                            </div>
                            <div class="form-actions">
                                <div class="row">
                                    <div class="col-md-8 col-md-offset-1 py-4">

                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>


                </div>
            </article>

        </div>
    </section>

</div>
@section pagespecific {
    <script>
        $("#dropBoxDisplayText").html("Drop file here");

    $("#InstitutionId").change(function () {
       var id = $(this).val();
        var fundId = $("#FundCategoryId").val();
        if (!fundId) {
            return false;
             }
        var currency = $("#Currency").val();
        loadForm(id, fundId, currency);
       });

        $("#FundCategoryId").change(function () {
            var fundId = $(this).val();
            var id = $("#InstitutionId").val();
            if (!id) {
                return false;
                }
       var currency = $("#Currency").val();
            loadForm(id, fundId, currency);
        });


        $("#Currency").change(function () {
            var currency = $(this).val();
            var id = $("#InstitutionId").val();
            if (!id) {
                return false;
            }
            var fundId = $("#FundCategoryId").val();
            if (!fundId) {
                return false;
            }
            loadForm(id, fundId, currency);
        });

        function loadForm(id, fundId, currency) {
              var url = '@Url.Action("CeilingForm", "ContractCeiling")';
            $("#ceiling-form").load(url, { id: id, fundId: fundId, currency: currency }, function (response, status, xhr) {
                if (status == "error") {
                    $("#ceiling-form").html("Error on loading cost centers, contact system supporter.");
                }

            });

        }


        var uploadedFile = null;


        $("#uploadFile").on("change", function (e) {
            uploadedFile = $(this)[0].files[0];

            if (uploadedFile != null) {
                $("#dropBoxDisplayText").html(uploadedFile.name);
                $("#dropBoxDisplayText").addClass("text-success fw-bold");
            } else {
                $("#dropBoxDisplayText").html("Drop file here");
            }
        });

        //SHOW LOADER ICON
        $(document).ajaxStart(function () {
            $(".loadingImg").show();

        });
        //HIDE LOADER ICON
        $(document).ajaxStop(function () {
            $(".loadingImg").hide();
        });
        $("#Amount").autoNumeric('init');

        $('#drop-file-box').dblclick(function () {
            $('#uploadFile').click();
        });


         function upload(formData) {

            $("#save_button").prop('disabled', true);
            var url = '@Url.Action("upload", "ContractCeiling")';
            var ajaxConfig = {
                type: "post",
                url: url,
                data: new FormData(formData),
                success: function (response) {
                         $("#save_button").prop('disabled', false);
                        if (response == "Success") {
                            swal("Data saved successfully", { icon: "success" })
                                .then((value) => {
                           var url = '@Url.Action("PendingCeiling", "ContractCeiling")';
                                   window.location.replace(url);
                                });
                        }
                        else {
                            swal(response);
                    }
                    $("#dropBoxDisplayText").html("Drop file here");
                    $("#dropBoxDisplayText").removeClass("text-success fw-bold");
                }
            }

            if ($(formData).attr('enctype') == "multipart/form-data") {
                ajaxConfig["contentType"] = false;
                ajaxConfig["processData"] = false;
            }
            $.ajax(ajaxConfig);
            return false;
        }
    </script>
}


