@model IFMIS.Areas.IFMISTZ.Models.CeilingSummaryVM
@{
    ViewBag.Title = "Ceiling Details";
    var i = 0;


}

<style>
    .pull-right {
        margin-top: 10px;
    }

    ul .header-dropdown-list, .hidden-xs {
        margin-top: 10px;
    }
</style>
<div id="content">

    <!-- widget grid -->
    <section id="widget-grid">


        <!-- START ROW -->

        <div>

            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">

                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">

                    <header class="margin-top-10">
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2>Ceiling Details </h2>

                    </header>


                    <div>

                        <div class="widget-body">
                            <div align="center">
                                <img src="~/Media/Images/ajax_loader.gif" class="loadingImg" style="display:none" />
                            </div>
                            <div class="row mx-1 fs-3">
                                <div class="col-md-8 py-5">
                                    <div class="row py-2">
                                        <div class="control-label col-sm-12  col-md-4 col-lg-3  fs-4">Institution Name</div>
                                        <div class="col-sm-12 col-md-8 col-lg-9">
                                            <span>:</span>  @Html.DisplayFor(model => model.InstitutionName)
                                        </div>
                                    </div>

                                    <div class="row py-2">
                                        <div class="control-label  col-md-4 col-lg-3 fs-4">Institution Code</div>
                                        <div class="col-md-8 col-lg-9">
                                            <div>
                                                <span class="">
                                                    <span>:</span>  @Html.DisplayFor(model => model.InstitutionCode)
                                                </span>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row py-2">
                                        <div class="control-label  col-md-4 col-lg-3  fs-4">Fund Category</div>
                                        <div class="col-md-8 col-lg-9">
                                            <div>
                                                <span class="">
                                                    <span>:</span>  @Html.DisplayFor(model => model.FundCategoryDescription)
                                                </span>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row py-2">
                                        <div class="control-label  col-md-4 col-lg-3 fs-4">Total Amount Allocated</div>
                                        <div class="col-md-8 col-lg-9">
                                            <div>
                                                <span class="">
                                                    <span>:</span>  @Html.DisplayFor(model => model.TotalAmount)
                                                    <span> @Html.DisplayFor(model => model.Currency)</span>
                                                </span>
                                            </div>
                                        </div>
                                    </div>


                                    <div class="row py-2">
                                        <div class="control-label  col-md-4 col-lg-3 fs-4">Description</div>
                                        <div class="col-md-8 col-lg-9">
                                            <div>
                                                <span class="text-muted">
                                                    <span>:</span>  @Html.DisplayFor(model => model.CeilingDescription)
                                                </span>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                            </div>
                            Number of allocations (@Model.ContractCeilings.Count())
                            <hr class="" />
                            <div class="row">

                                <table class="table table-hover">
                                    <thead>
                                        <tr>
                                            <th scope="col">#</th>
                                            <th scope="col">Cost Center</th>
                                            <th scope="col">Amount</th>
                                            <th scope="col">Action</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in Model.ContractCeilings)
                                        {
                                            i++;
                                            using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = "return edit(this," + @item.ContractCeilingId + ",'" + @item.UuId + "')" }))
                                            {
                                                @Html.AntiForgeryToken()
                                                <tr>

                                                    <th scope="row">@i</th>
                                                    <td>
                                                        @Html.DisplayFor(modelItem => item.CostCenter) - @Html.DisplayFor(modelItem => item.CostCenterName)
                                                    </td>
                                                    <td>
                                                        @*<input class="form-control euuid" type="text" name="Uuid" value="@item.UuId" id="@item.ContractCeilingId" readonly />*@
                                                        @Html.EditorFor(modelItem => item.ContractCeilingId, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", @id = @item.ContractCeilingId, @readonly = "readonly", @style = "display:none" } })

                                                        @Html.EditorFor(modelItem => item.Amount, new { htmlAttributes = new {@class = "form-control amount", @autocomplete = "off", @id = @item.UuId, @readonly = "readonly" } })
                                                        @*<input class="form-control eamount" type="text" name="Amount" value="@item.Amount"  readonly />*@
                                                    </td>
                                                    @if (Model.OverallStatus == "Pending")
                                                    {
                                                        <td class="col-md-2">
                                                            <button type="button" onclick="requestEdit('@item.UuId')" class="btn btn-info text-white">
                                                                Edit
                                                            </button>
                                                            <span class="mx-2">|</span>
                                                            <button type="submit" class="btn btn-info text-white" >Save</button>

                                                        </td>
                                                    }

                                                    @if (Model.OverallStatus == "Confirmed")
                                                    {
                                                        <td class="col-md-2">
                                                            <button type="button" onclick="ApproveSingleEntry(@item.ContractCeilingId,'APPROVED')" class="btn btn-info text-white">Approve</button>
                                                            <span class="mx-2">|</span>
                                                            <button type="button" onclick="ApproveSingleEntry(@item.ContractCeilingId,'CANCELED')" class="btn btn-info text-white">Cancel</button>

                                                        </td>

                                                    }
                                                </tr>
                                            }

                                        }
                                    </tbody>
                                </table>
                            </div>
                            <div class="row">
                                <div class="row  py-4">
                                    <div class="col-md-offset-1">
                                        <a href="@Url.Action("PendingCeiling","ContractCeiling")" class="btn btn-info text-white"><i class="glyphicon glyphicon-arrow-left"></i> Back  </a>
                                        @if (Model.OverallStatus == "Pending")
                                        {
                                            <button type="button" onclick="confirmEntry(@Model.CeilingSummaryId)" class="btn btn-info text-white">
                                                <i class="glyphicon glyphicon-floppy-disk"></i> Confirm
                                            </button>
                                        }
                                        @if (Model.OverallStatus == "Confirmed")
                                        {
                                            <button type="button" onclick="approveEntry(@Model.CeilingSummaryId,'APPROVED')" class="btn btn-info text-white">
                                                <i class="glyphicon glyphicon-floppy-disk"></i> Approve
                                            </button>

                                            <button type="button" onclick="cancelEntry(@Model.CeilingSummaryId,'CANCELED')" class="btn btn-info text-white">
                                                <i class="glyphicon glyphicon-floppy-disk"></i> Cancel
                                            </button>
                                        }
                                    </div>
                                </div>
                            </div>
                            <div class="form-actions">
                                <div class="row">

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </article>

        </div>
    </section>

</div>
@section pagespecific {

    <script>
       var isReadOnly = true;
       function requestEdit(id) {

           if (isReadOnly) {
               isReadOnly = false;
               document.getElementById(id).readOnly = false;
           } else {
               isReadOnly = true;
               document.getElementById(id).readOnly = true;
           }

       }

         var confirmEntry = function (id) {
                                  swal({
                                    title: 'Confirmation',
                                    text: "Do you what to confirm this entry",
                                    buttons: [
                                      'No',
                                      'Yes'
                                    ],
                                }).then(function (isConfirm) {
                                    if (isConfirm) {
                                        var url = '@Url.Action("ConfirmEntry", "ContractCeiling")';
                                        $.ajax(
                            {
                                type: "POST",
                                url: url,
                                data: { id: id },
                                success: function (response) {
                                    if (response == "Success") {

                                        swal("Confirmed successfully!", { icon: "success" })
                                                  .then((value) => {
                                                      var url = '@Url.Action("PendingCeiling", "ContractCeiling")';
                                                                    window.location.replace(url);
                                                  });


                                    }
                                    else {

                                        swal(response);
                                    }
                                },
                                error: function (xhr) {
                                    swal(error);
                                    $("#divLoader").hide();
                                },

                            });
                                    } else {
                                        swal("Cancelled", "No change was made");
                                    }
                                });


        };

        function cancelEntry(id) {
             swal({
                        title: 'Confirmation',
                        text: "Do you what to cancel this entry ?",
                        buttons: [
                          'No',
                          'Yes'
                        ],
                    }).then(function (isConfirm) {
                        if (isConfirm) {
                            var url = '@Url.Action("CancelEntry", "ContractCeiling")';
                            $.ajax(
                {
                    type: "POST",
                    url: url,
                    data: { id: id },
                    success: function (response) {
                        if (response == "Success") {
                            swal("Cancelled  successfully!", { icon: "success" })
                                         .then((value) => {
                                             location.reload();
                                         });
                        }
                        else {
                            alert(response);
                        }
                    },
                    error: function (xhr) {
                        //console.log(xhr.responseText);
                        swal("An error has occured, contact system support");

                    },

                });
                        } else {
                            swal("Cancelled", "No change was made");
                        }
                    });

        };
        function approveEntry(id,action) {
                                  swal({
                                    title: 'Confirmation',
                                    text: "Do you what to approve this entry",
                                    buttons: [
                                      'No',
                                      'Yes'
                                    ],
                                }).then(function (isConfirm) {
                                    if (isConfirm) {
                                        var url = '@Url.Action("ApproveEntry", "ContractCeiling")';
                                        $.ajax(
                                        {
                                            type: "POST",
                                            url: url,
                                                data: { id: id, action: action },
                                            success: function (response) {
                                                if (response == "Success") {

                                                    swal("Approved successfully!", { icon: "success" })
                                                              .then((value) => {
                                                                  var url = '@Url.Action("ApproveCeiling", "ContractCeiling")';
                                                                    window.location.replace(url);
                                                              });


                                                }
                                                else {

                                                    swal(response);
                                                }
                                            },
                                            error: function (xhr) {
                                                swal(error);
                                                $("#divLoader").hide();
                                            },

                                        });
                                    } else {
                                        swal("Cancelled", "No change was made");
                                    }
                                });


        };


        function edit(formData, id, uuid) {
            $("#save_button").prop('disabled', true);
            var url = '@Url.Action("PostCeiling", "ContractCeiling")';
            var cid = id;
            var amount = $("#" + uuid).val();
            amount = amount.split(",").join("");
            var am = parseFloat(amount);
            $.ajax({
                type: "post",
                url: url,
                data: { ContractCeilingId: cid, Amount: am },

                success: function (response) {
                    $("#save_button").prop('disabled', false);
                    if (response.Response == "Success") {
                        swal("Data saved successfully", { icon: "success" })
                            .then((value) => {
                                var url = '@Url.Action("NewCeilingDetails", "ContractCeiling")';
                                window.location.replace(url);
                            });
                    }
                    else {
                        swal(response.ResponseDescription);
                    }
                }
            });
            return false;
        }

        function ApproveSingleEntry(id, action) {

            swal({
                title: 'Confirmation',
                text: "Do you what to approve this entry",
                buttons: ['No', 'Yes'],
            }).then(function (isConfirm) {
                if (isConfirm) {
                    var url = '@Url.Action("ApproveSingleEntry", "ContractCeiling")';
                    $.ajax({
                        type: "POST",
                        url: url,
                        data: { id: id, action: action },
                        success: function (response) {
                            if (response == "Success") {
                                swal("Approved successfully!", { icon: "success" })
                                    .then((value) => {
                                        location.reload();
                                    });
                            }
                            else {
                                swal(response);
                            }
                        },
                        error: function (xhr) {
                            swal(error);
                            $("#divLoader").hide();
                        },
                    });
                } else {
                    swal("Cancelled", "No change was made");
                }
            });
        };

        $(".amount").autoNumeric('init');
    </script>
}


