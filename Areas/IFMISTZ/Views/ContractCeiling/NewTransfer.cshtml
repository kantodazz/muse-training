@model IFMIS.Areas.IFMISTZ.Models.ContractCeilingVM
@{
    ViewBag.Title = "Manage Ceiling";
}
<style>
    .pull-right {
        margin-top: 10px;
    }

    ul .header-dropdown-list, .hidden-xs {
        margin-top: 10px;
    }
</style>
<svg xmlns="http://www.w3.org/2000/svg" style="display: none;">
    <symbol id="check-circle-fill" fill="currentColor" viewBox="0 0 16 16">
        <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z" />
    </symbol>
    <symbol id="info-fill" fill="currentColor" viewBox="0 0 16 16">
        <path d="M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zm.93-9.412-1 4.705c-.07.34.029.533.304.533.194 0 .487-.07.686-.246l-.088.416c-.287.346-.92.598-1.465.598-.703 0-1.002-.422-.808-1.319l.738-3.468c.064-.293.006-.399-.287-.47l-.451-.081.082-.381 2.29-.287zM8 5.5a1 1 0 1 1 0-2 1 1 0 0 1 0 2z" />
    </symbol>
    <symbol id="exclamation-triangle-fill" fill="currentColor" viewBox="0 0 16 16">
        <path d="M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z" />
    </symbol>
</svg>

<div id="content">

    <!-- widget grid -->
    <section id="widget-grid">


        <!-- START ROW -->

        <div>

            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">

                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">

                    <header class="margin-top-10">
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2> Transfer Ceiling </h2>

                    </header>



                    <div class="widget-body">
                        <div align="center">
                            <img src="~/Media/Images/ajax_loader.gif" class="loadingImg" style="display:none" />
                        </div>

                        <div class="border-bottom border-1 border-default">
                            @using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = "return getBalanceForTransfer(this)" }))
                            {
                                @Html.AntiForgeryToken()
                                <div class="row">

                                    <div id="transfer-div" class="form-horizontal">

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.InstitutionId, htmlAttributes: new { @class = "control-label   col-md-2" })
                                            <div class="col-md-10">
                                                @Html.DropDownListFor(model => model.InstitutionId, Model.InstitutionList, "Select ", new { @class = "form-control select2", @required = "required",@id="InstitutionIdFrom" })
                                                @Html.ValidationMessageFor(model => model.InstitutionId, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.CostCenter, htmlAttributes: new { @class = "control-label   col-md-2" })
                                            <div class="col-md-10">
                                                <select id="InstitutionSubLevelIdFrom" name="InstitutionSubLevelId" class="form-control select2" required>
                                                    <option value="" selected>Select ...</option>
                                                </select>

                                                @Html.ValidationMessageFor(model => model.CostCenter, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">

                                            @Html.LabelFor(model => model.FundCategoryId, htmlAttributes: new { @class = "control-label   col-md-2" })
                                            <div class="col-md-10">
                                                @Html.DropDownListFor(model => model.FundCategoryId, Model.FundCategories, "Select ", new { @class = "form-control select2", @required = "required",@id= "FundCategoryId" })
                                                @Html.ValidationMessageFor(model => model.FundCategoryId, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group">

                                            @Html.LabelFor(model => model.Currency, htmlAttributes: new { @class = "control-label   col-md-2" })
                                            <div class="col-md-4">
                                                @Html.DropDownListFor(model => model.Currency, Model.CurrencyList, "Select ", new { @class = "form-control select2", @required = "required" })
                                                @Html.ValidationMessageFor(model => model.Currency, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="col-md-10 col-md-offset-2">
                                                <button type="button" class="btn btn-info px-5 py-3" onclick="getBalanceForTransfer()" style="float: left; margin-left: 5px">
                                                    Request Balance
                                                </button>
                                            </div>
                                        </div>

                                    </div>
                                </div>

                                <div class="form-group border-start border-info border-5 pb-3 col-md-10 col-md-offset-2">

                                    <div class="form-horizontal">

                                        <div class="form-group pt-4">
                                            <div class="col-md-12 text-start fs-5 fw-bold text-muted">
                                                <span>Current Balance Surmmary :</span>
                                                <span id="current-transfer-amount"></span>
                                            </div>

                                        </div>

                                    </div>
                                </div>

                                <div class="form-group ">
                                    <div class="form-horizontal">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.InstitutionId, htmlAttributes: new { @class = "control-label   col-md-2" })
                                            <div class="col-md-10">
                                                @Html.DropDownListFor(model => model.InstitutionId, Model.InstitutionListData, "Select ", new { @class = "form-control select2", @required = "required" ,@id= "InstitutionIdTo" })
                                                @Html.ValidationMessageFor(model => model.InstitutionId, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.CostCenter, htmlAttributes: new { @class = "control-label   col-md-2" })
                                            <div class="col-md-10">
                                                <select id="InstitutionSubLevelIdTo" name="InstitutionSubLevelId" class="form-control select2" required>
                                                    <option value="" selected>Select ...</option>
                                                </select>

                                                @Html.ValidationMessageFor(model => model.CostCenter, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                    </div>

                                    <div class="form-horizontal">
                                        <div class="form-group mt-4">
                                            <label class="control-label  col-md-2">Reducing Amount :</label>
                                            <div class="col-md-4">
                                                @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", @id = "transferReducedAmount" } })
                                                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label  col-md-2">Reducing Reason :</label>
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.CeilingDescription, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", rows = "3", maxlength = 250, @id = "TransferCeilingDescription" } })
                                                @Html.ValidationMessageFor(model => model.CeilingDescription, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                    </div>
                                     
                                    <div class="form-group mt-2">
                                        <div class="col-md-10 col-md-offset-2" style="margin-top:20px;">
                                            <a href="@Url.Action("TransferCeiling","ContractCeiling")" style="margin-right:5px" class="btn btn-info pull-left px-5 py-3"><i class="glyphicon glyphicon-arrow-left"></i> Back  </a>

                                            <button onclick="onTransfer()" type="button" class="btn btn-info px-5 py-3" id="save_button" style="float: left; margin-left: 5px">
                                                <i class="glyphicon glyphicon-floppy-disk"></i> Save
                                            </button>
                                        </div>
                                    </div>
                                </div>


                            }



                        </div>

                    </div>

                </div>
            </article>

        </div>
    </section>

</div>
@section pagespecific {
    <script>

      $("#InstitutionIdTo").change(function () {
             var id = $(this).val();

            var url = '@Url.Action("GetCostCenters", "ContractCeiling")';
            $.ajax({
            type: "GET",
            url: url,
            data: { id : id },
            success: function (response) {
                $("#InstitutionSubLevelIdTo").empty();
                $("#InstitutionSubLevelIdTo").append(response);
            }
            })
         });

         $("#InstitutionIdFrom").change(function () {
             var id = $(this).val();

            var url = '@Url.Action("GetCostCenters", "ContractCeiling")';
            $.ajax({
            type: "GET",
            url: url,
            data: { id : id },
            success: function (response) {
                $("#InstitutionSubLevelIdFrom").empty();
                $("#InstitutionSubLevelIdFrom").append(response);
            }
            })
         });


        function SubmitCeiling(formData) {
               $("#save_button").prop('disabled', true);
            var url = '@Url.Action("SaveCeiling", "ContractCeiling")';
            var ajaxConfig = {
                type: "post",
                url: url,
                data: new FormData(formData),
                success: function (response) {
                    $("#save_button").prop('disabled', false);
                    if (response == "Success") {
                        swal("Data saved successfully", { icon: "success" })
                            .then((value) => {
                       var url = '@Url.Action("PendingCeiling", "ContractCeiling")';
                               window.location.replace(url);
                               });
                    }
                    else {
                        swal(response);
                    }
                }
            }

            if ($(formData).attr('enctype') == "multipart/form-data") {
                ajaxConfig["contentType"] = false;
                ajaxConfig["processData"] = false;
            }
            $.ajax(ajaxConfig);
            return false;
        }
        //SHOW LOADER ICON
        $(document).ajaxStart(function () {
            $(".loadingImg").show();

        });
        //HIDE LOADER ICON
        $(document).ajaxStop(function () {
            $(".loadingImg").hide();
        });
        $("#Amount").autoNumeric('init');



        function generateUUID() { // Public Domain/MIT
            var d = new Date().getTime();//Timestamp
            var d2 = ((typeof performance !== 'undefined') && performance.now && (performance.now() * 1000)) || 0;//Time in microseconds since page-load or 0 if unsupported
            return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
                var r = Math.random() * 16;//random number between 0 and 16
                if (d > 0) {//Use timestamp until depleted
                    r = (d + r) % 16 | 0;
                    d = Math.floor(d / 16);
                } else {//Use microseconds since page-load if supported
                    r = (d2 + r) % 16 | 0;
                    d2 = Math.floor(d2 / 16);
                }
                return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);
            });
        }


        function remove(index) {
            var transferList = [];
            transferList = transfers.splice(index,1);
            console.log("TR ", transferList);

            tableOfTransfer.innerHTML.removeChild();
            for (i = 0; i < transferList.length; i++) {
                var sNo = i + 1;
                tableOfTransfer.innerHTML += '<tr><th scope = "row">' + sNo + '</th><td>' + transferList[i].institutionName + '</td><td>' + transferList[i].costCenter + '</td><td>' + transferList[i].Amount + '</td><td><span class= "btn btn-outline-danger" onclick="remove(' + i + ')"> <i class="bi bi-x-square"></i></span ></td></tr>';

            }

            transfers = transferList

        }

        var balance = 0;
        function getBalanceForTransfer() {
            $("#save_button").prop('disabled', true);
            var url = '@Url.Action("GetBalance", "ContractCeiling")';
            var InstitutionSubLevelId = parseInt($("#InstitutionSubLevelIdFrom").val());
            var FundCategoryId = parseInt($("#FundCategoryId").val());
            var Currency = $("#Currency").val();
            debugger;
            $.ajax({
                type: "post",
                url: url,
                data: { InstitutionSubLevelId, FundCategoryId, Currency },

                success: function (response) {

                    $("#save_button").prop('disabled', false);
                    var response = response;
                    if (response.response == "Success") {
                        if (response.amount > 0) {
                            balance = parseInt(response.amount);
                            $("#current-transfer-amount").text(balance);
                        } else {
                            $("#current-transfer-amount").text(balance);
                        }
                    } else {
                        $("#current-transfer-amount").text(balance);
                    }
                }
            });
            return false;
        }


        var transferSuccessAlert = document.getElementById("transfer-success-alert");
        var transferErrorAlert = document.getElementById("transfer-error-alert");
        transferSuccessAlert.classList.add("d-none");
        transferErrorAlert.classList.add("d-none");

        var transfers = [];
        var tableOfTransfer = document.getElementById("addedList");
        var collectedAmount = 0;
        $("#collected-amount").text(collectedAmount);

        $("#addToList").click(() => {
            var institution = $("#transfer-div #InstitutionId").find('option:selected').text().trim();
            var costCenter = $("#transfer-div #InstitutionSubLevelId").find('option:selected').text().trim();
            var fundCategory = $("#transfer-div #FundCategoryId").find('option:selected').text().trim();

            var reducedAmount = $("#transferReducedAmount").val();
            var tReason = $("#TransferCeilingDescription").val();

            if (reducedAmount == 0) {
                transferErrorAlert.classList.remove("d-none");
                $("#transfer-error-text").html("Please provide amount to be transfered")
                return;
            } else {
                transferErrorAlert.classList.add("d-none");
            }

            if (tReason == "" || tReason == null) {
                transferErrorAlert.classList.remove("d-none");
                $("#transfer-error-text").html("Please provide reason for transfer")
                return;
            } else {
                transferErrorAlert.classList.add("d-none");
            }

            if ((institution != null && institution != "" && institution != 0) &&
                (costCenter != null && costCenter != "" && costCenter != 0) &&
                (fundCategory != null && fundCategory != "" && fundCategory != 0)) {

                var instId = $("#transfer-div #InstitutionId").val();
                var subLevelId = $("#transfer-div #InstitutionSubLevelId").val();
                var fundCatId = $("#transfer-div #FundCategoryId").val();
                var trans = {
                    "uuid": generateUUID(),
                    "InstitutionId": instId,
                    "institutionName": institution,
                    "InstitutionSubLevelId": subLevelId,
                    "costCenter": costCenter,
                    "FundCategoryId": fundCatId,
                    "fundCategory": fundCategory,
                    "Amount": reducedAmount,
                    "reason": tReason
                }

                if (parseInt(collectedAmount) + parseInt(reducedAmount) > balance) {
                    transferErrorAlert.classList.remove("d-none");
                    $("#transfer-error-text").html("You have insufficient balance");
                    return;
                } else {
                    transferErrorAlert.classList.add("d-none");
                    $("#transfer-error-text").html()
                    collectedAmount = (parseInt(collectedAmount) + parseInt(reducedAmount));
                }

                $("#collected-amount").text(null);
                $("#collected-amount").text(collectedAmount);
                $("#transfer-new-balancy-amount").text(balance - collectedAmount);
                transfers.push(trans);

                receivingCostCenter.classList.remove("d-none");
                var i = 0;
                tableOfTransfer.innerHTML += '<tr><th scope = "row">' + (i + 1) + '</th><td>' + trans.institutionName + '</td><td>' + trans.costCenter + '</td><td>' + trans.Amount + '</td><td><span class= "btn btn-outline-danger" onclick="remove(' + i + ')"> <i class="bi bi-x-square"></i></span ></td></tr>';

            } else {
                transferErrorAlert.classList.remove("d-none");
                $("#transfer-error-text").html("Please provide Transfer Details")
                return;

            }

        });


        function onTransfer() {
            var InstitutionIdFrom = parseInt($("#InstitutionIdFrom").val());
            var InstitutionSubLevelIdFrom = parseInt($("#InstitutionSubLevelIdFrom").val());
            var FundCategoryId = parseInt($("#FundCategoryId").val());
            var Currency = $("#Currency").val();
            var InstitutionIdTo = parseInt($("#InstitutionIdTo").val());
            var InstitutionSubLevelIdTo = parseInt($("#InstitutionSubLevelIdTo").val());
            var transferReducedAmount = parseInt($("#transferReducedAmount").val());
            var TransferCeilingDescription = $("#TransferCeilingDescription").val();
            debugger;
            var url = '@Url.Action("SaveTransfer", "ContractCeiling")';
            $.ajax({
            type: "POST",
            url: url,
                data: {
                    InstitutionIdFrom: InstitutionIdFrom,
                    InstitutionSubLevelIdFrom: InstitutionSubLevelIdFrom,
                    FundCategoryId: FundCategoryId,
                    Currency: Currency,
                    InstitutionIdTo: InstitutionIdTo,
                    InstitutionSubLevelIdTo: InstitutionSubLevelIdTo,
                    Amount: transferReducedAmount,
                    Description: TransferCeilingDescription
                },
                success: function (response) {
                    $("#save_button").prop('disabled', false);
                    if (response.Response == "Success") {
                        swal("Data saved successfully", { icon: "success" })
                            .then((value) => {
                                window.location.reload();
                               });
                    }
                    else {
                        swal(response.ResponseDescription, {icon:"error"});
                    }
                 }
            })
        }

    </script>
}


