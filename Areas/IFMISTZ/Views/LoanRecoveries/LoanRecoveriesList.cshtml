
@model IEnumerable<IFMIS.Areas.IFMISTZ.Models.LoanRecoverySummaryVM>

@{
    ViewBag.Title = "Loan Recovery Entry";
    decimal? amount = 0;
    decimal? amount2 = 0;
    decimal? deduct = 0;
}

<style type="text/css">
    .loadingImg {
        display: none;
    }
</style>

<div id="content" style="margin: 5px; padding-top: 30px">
    <div class="row"></div>

    <!-- widget grid -->
    <section id="widget-grid" class="">

        <!-- START ROW -->

        <div class="row">

            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">

                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">

                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2> Loan Recovery Entry</h2>

                    </header>


                    <div>
                        <div class="widget-body " style="padding-top:10px;width:100%">

                            <div align="center">
                                <img src="~/Media/Images/ajax_loader.gif" class="loadingImg" />
                            </div>

                            <div class="row">

                                <div class="col-xs-9 col-sm-3 col-md-3 col-lg-3">
                                    <div class="input-group">
                                        <a href="@Url.Action("LoanReceivingItems", "LoanRecoveries")" class="btn btn-info" style="width:120px;border-radius:1px;">
                                            <i class="fa fa-plus"></i>Add Recovery
                                        </a>

                                    </div>
                                </div>


                            </div>
                            <br />


                            <table class="table  table-bordered table-hover table-condensed" id="dt_lpo">
                                <thead>
                                    <tr>
                                        <th style="text-align:right;width:4%"></th>
                                        <th style="text-align:left;">Recovery #</th>
                                        <th style="text-align:left">Customer Name</th>
                                        <th style="text-align:left">Customer Code</th>
                                        <th style="text-align:right">Total Amount</th>
                                        <th style="text-align:right">Recovery Date</th>
                                        @*<th style="text-align:right">Remaining Amount</th>*@
                                        <th style="text-align:right">Received Amount</th>
                                        <th style="text-align:right">Recovery Status</th>
                                        <th style="text-align:right">Status</th>
                                        <th style="text-align:center">Action</th>

                                    </tr>
                                </thead>

                                <tbody>
                                    @{
                                        int i = 0;
                                    }
                                    @foreach (var item in Model)
                                    {
                                        i++;
                                        <tr>
                                            <td>@i</td>
                                            <td>@Html.DisplayFor(modelItem => item.LoanCode)</td>
                                            <td>@Html.DisplayFor(modelItem => item.CustomerName)</td>
                                            <td>@Html.DisplayFor(modelItem => item.CustomerCode)</td>
                                            <td align='right'>@Html.DisplayFor(modelItem => item.AmountDue)</td>
                                            <td>@Html.DisplayFor(modelItem => item.RecoveryDate)</td>
                                            <td align='right'>@Html.DisplayFor(modelItem => item.TotalDeductedAmount)</td>

                                            <td>@Html.DisplayFor(modelItem => item.RecoveryStatus)</td>
                                            <td>
                                                @if (item.OverAllStatus.ToUpper() == IFMIS.Libraries.Constants.REJECTED.ToUpper())
                                            {
                                                <a href="#" data-toggle="modal" data-target="#rejectedLoan" title="Rejected Reason" data-loan='@item.LoanCode' data-reason='@item.Remark' class="rejected_loan"><i class="fa fa-eye"></i>@Html.DisplayFor(modelItem => item.OverAllStatus)</a>
                                            }
                                            else
                                            {
                                                @Html.DisplayFor(modelItem => item.OverAllStatus)
                                            }
                                        </td>
                                        <td style="text-align:center">
                                            <div class="btn-group">
                                                <button type="button" class="btn btn-info btn-xs dropdown-toggle" data-toggle="dropdown" style="width:40px;border-radius:1px;" aria-haspopup="true" aria-expanded="false">
                                                    <span class="caret"></span>
                                                    <span class="sr-only">Toggle Dropdown</span>
                                                </button>
                                                <ul class="dropdown-menu">
                                                    <li><a href="@Url.Action("PreviewLoan", "LoanRecoveries",new {id=item.LoanCode})" data-toggle="modal" data-id=@item.LoanId data-lpo='@item.LoanCode' class="btn-xs edit"><i class="fa fa-eye"></i> Preview</a></li>
                                                    <li><a href="#" data-toggle="modal" data-target="#cancelLoans" data-id=@item.LoanRecoverySummaryId data-lpo='@item.LoanCode' class="cancel_loans  btn-xs edit"><i class="fa fa-edit"></i>Cancel</a></li>
                                                    @if (item.OverAllStatus.ToUpper() == "PENDING" || item.OverAllStatus.ToUpper() == "REJECTED" || item.OverAllStatus.ToUpper() == "CONFIRMED")
                                                    {
                                                        <li><a href="@Url.Action("Edit", "LoanRecoveries",new {id=item.LoanId})" data-toggle="modal" data-id=@item.LoanId data-lpo='@item.LoanCode' class="btn-xs edit"><i class="fa fa-edit"></i>Edit</a></li>
                                                            <li><a href="@Url.Action("AttachmentEntry", "PaymentVoucherAttachments")/?groupId=@item.LoanRecoverySummaryId&&sourceModule=@IFMIS.Libraries.Constants.SOURCE_MODULE_LOAN_RECOVERY"><i class="glyphicon glyphicon-pencil"></i>Attach</a></li>
                                                    }

                                                    @if (item.OverAllStatus.ToUpper() == "PENDING" || item.OverAllStatus.ToUpper() == "REJECTED")
                                                    {

                                                        <li><a href="#" data-toggle="modal" data-id=@item.LoanRecoverySummaryId data-loancode='@item.LoanCode' class="loanConfirmation  btn-xs edit"><i class="fa fa-edit"></i> Confirm</a></li>
                                                    }
                                                </ul>
                                            </div>
                                        </td>
                                    </tr>
                                    }
                                </tbody>
                            </table>

                        </div>

                    </div>

                </div>
            </article>

        </div>
    </section>

</div>



<div class="modal fade" id="rejectedLoan">
    <div class="modal-dialog">
        <div class="modal-content">

            <div class="modal-header">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h4 align="center">Loan Number <span id="loan_number"></span></h4>
            </div>

            <div class="modal-body">


                <span id="reason"></span>


            </div>
            <div class="modal-footer">
                <a href="#" class="btn btn-info" data-dismiss="modal">Ok</a>

            </div>


        </div>
    </div>
</div>


<div class="modal fade" id="cancelLoans">
    <div class="modal-dialog">
        <div class="modal-content">

            <div class="modal-header">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h4 align="center">Cancellation of Loan Number <span id="lpo_number"></span></h4>
            </div>
            @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "RejectReason" }))
            {
                <div class="modal-body form-horizontal">

                    <br />

                    <input type="hidden" name="Id" id="Id" value="">
                    <div class="form-group">
                        <label class="control-label col-md-3" for="Remark">Reason(<span style="font-weight:bold;" id="ReasonCount">250</span>)</label>
                        <div class="col-md-7">
                            <textarea name="Reason" id="Reason" required rows="4" maxlength="250" class="form-control"></textarea>
                        </div>
                    </div>

                </div>
                <div class="modal-footer">
                    <a href="#" class="btn btn-info" data-dismiss="modal">Cancel</a>
                    @*<input class="btn btn-info" type="submit" id="btnSubmit" value="Submit" />*@

                    <button type="submit" class="btn btn-info" style="margin-right:2px">
                        <i class="glyphicon glyphicon-floppy-disk"></i> Save
                    </button>
                    @*<input type="submit" value="Submit" class="btn btn-success" id="btnSubmit" />*@

                </div>

            }
        </div>
    </div>
</div>

@section pagespecific {
    <!-- PAGE RELATED PLUGIN(S) -->

    <script type="text/javascript">


        //SHOW LOADER ICON
        $(document).ajaxStart(function () {
            $(".loadingImg").show();

        });
        //HIDE LOADER ICON
        $(document).ajaxStop(function () {
            $(".loadingImg").hide();
        });
            $(document).ready(function () {
                /* // DOM Position key index //
 l - Length changing (dropdown)
 f - Filtering input (search)
 t - The Table! (datatable)
 i - Information (records)
 p - Pagination (paging)
 r - pRocessing
 < and > - div elements
 <"#id" and > - div with an id
 <"class" and > - div with a class
 <"#id.class" and > - div with an id and class
 Also see: http://legacy.datatables.net/usage/features
 */
                /* BASIC ;*/
                var responsiveHelper_dt_lpo = undefined;
                var responsiveHelper_datatable_fixed_column = undefined;
                var responsiveHelper_datatable_col_reorder = undefined;
                var responsiveHelper_datatable_tabletools = undefined;

                var breakpointDefinition = {
                    tablet: 1024,
                    phone: 480
                };

                $('#dt_lpo').dataTable({
                    "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-12 hidden-xs'l>r>" +
                        "t" +
                        "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                    "autoWidth": true,
                    "preDrawCallback": function () {
                        // Initialize the responsive datatables helper once.
                        if (!responsiveHelper_dt_lpo) {
                            responsiveHelper_dt_lpo = new ResponsiveDatatablesHelper($('#dt_lpo'), breakpointDefinition);
                        }
                    },
                    "rowCallback": function (nRow) {
                        responsiveHelper_dt_lpo.createExpandIcon(nRow);
                    },
                    "drawCallback": function (oSettings) {
                        responsiveHelper_dt_lpo.respond();
                    }
                });

                /* END BASIC */

                /* COLUMN FILTER  */
                var otable = $('#datatable_fixed_column').DataTable({
                    //"bFilter": false,
                    //"bInfo": false,
                    //"bLengthChange": false
                    //"bAutoWidth": false,
                    //"bPaginate": false,
                    //"bStateSave": true // saves sort state using localStorage
                    "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6 hidden-xs'f><'col-sm-6 col-xs-12 hidden-xs'<'toolbar'>>r>" +
                            "t" +
                            "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                    "autoWidth": true,
                    "preDrawCallback": function () {
                        // Initialize the responsive datatables helper once.
                        if (!responsiveHelper_datatable_fixed_column) {
                            responsiveHelper_datatable_fixed_column = new ResponsiveDatatablesHelper($('#datatable_fixed_column'), breakpointDefinition);
                        }
                    },
                    "rowCallback": function (nRow) {
                        responsiveHelper_datatable_fixed_column.createExpandIcon(nRow);
                    },
                    "drawCallback": function (oSettings) {
                        responsiveHelper_datatable_fixed_column.respond();
                    }
                });

                // custom toolbar
                $("div.toolbar").html('<div class="text-right"><img src="/Content/img/logo.png" alt="SmartAdmin" style="width: 111px; margin-top: 3px; margin-right: 10px;"></div>');

                // Apply the filter
                $("#datatable_fixed_column thead th input[type=text]").on('keyup change', function () {
                    otable
                        .column($(this).parent().index() + ':visible')
                        .search(this.value)
                        .draw();
                });
                /* END COLUMN FILTER */

                /* COLUMN SHOW - HIDE */
                $('#datatable_col_reorder').dataTable({
                    "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'C>r>" +
                            "t" +
                            "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
                    "autoWidth": true,
                    "preDrawCallback": function () {
                        // Initialize the responsive datatables helper once.
                        if (!responsiveHelper_datatable_col_reorder) {
                            responsiveHelper_datatable_col_reorder = new ResponsiveDatatablesHelper($('#datatable_col_reorder'), breakpointDefinition);
                        }
                    },
                    "rowCallback": function (nRow) {
                        responsiveHelper_datatable_col_reorder.createExpandIcon(nRow);
                    },
                    "drawCallback": function (oSettings) {
                        responsiveHelper_datatable_col_reorder.respond();
                    }
                });

                /* END COLUMN SHOW - HIDE */

                /* TABLETOOLS */
                $('#datatable_tabletools').dataTable({

                    // Tabletools options:
                    //   https://datatables.net/extensions/tabletools/button_options
                    "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'T>r>" +
                            "t" +
                            "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
                    "oTableTools": {
                        "aButtons": [
                        "copy",
                        "csv",
                        "xls",
                           {
                               "sExtends": "pdf",
                               "sTitle": "SmartAdmin_PDF",
                               "sPdfMessage": "SmartAdmin PDF Export",
                               "sPdfSize": "letter"
                           },
                           {
                               "sExtends": "print",
                               "sMessage": "Generated by SmartAdmin <i>(press Esc to close)</i>"
                           }
                        ],
                        "sSwfPath": "/Scripts/plugin/datatables/swf/copy_csv_xls_pdf.swf"
                    },
                    "autoWidth": true,
                    "preDrawCallback": function () {
                        // Initialize the responsive datatables helper once.
                        if (!responsiveHelper_datatable_tabletools) {
                            responsiveHelper_datatable_tabletools = new ResponsiveDatatablesHelper($('#datatable_tabletools'), breakpointDefinition);
                        }
                    },
                    "rowCallback": function (nRow) {
                        responsiveHelper_datatable_tabletools.createExpandIcon(nRow);
                    },
                    "drawCallback": function (oSettings) {
                        responsiveHelper_datatable_tabletools.respond();
                    }
                });
                /* END TABLETOOLS */
                $(".loanConfirmation").on('click', function () {
                    // alert('am heree');
                    var id = $(this).data('id');
                    var loancode = $(this).data('loancode');
                    swal({
                        title: 'Confirmation',
                        text: "Do you what to confirm Recovered Loan   " + loancode + " ?",
                        buttons: [
                          'No',
                          'Yes'
                        ],
                    }).then(function (isConfirm) {
                        if (isConfirm) {
                            var url = '@Url.Action("ConfirmLoan", "LoanRecoveries")';
                            $.ajax(
                {
                    type: "POST",
                    url: url,
                    data: { id: id },
                    success: function (response) {
                        if (response == "Success") {

                            swal("Confirmed successfully!", { icon: "success" })
                                      .then((value) => {
                                          location.reload();
                                      });

                        }
                        else {

                            swal("Failed to confirm Loan" + response);
                        }
                    },
                    error: function (xhr) {
                        swal(error);
                        $("#divLoader").hide();
                    },

                });
                        } else {
                            swal("Cancelled", "No change was made");
                        }
                    });

                });

                $(".loanCancellation").on('click', function () {
                    // alert('am heree');
                    var id = $(this).data('id');
                    var lpo = $(this).data('lpo');
                    swal({
                        title: 'Cancellation',
                        text: "Do you what to Cancel Loan   " + lpo + " ?",
                        buttons: [
                          'No',
                          'Yes'
                        ],
                    }).then(function (isConfirm) {
                        if (isConfirm) {
                            var url = '@Url.Action("CancelLoan", "LoanRecoveries")';
                            $.ajax(
                {
                    type: "POST",
                    url: url,
                    data: { id: id },
                    success: function (response) {
                        if (response == "Success") {

                            swal("Cancelled successfully!", { icon: "success" })
                                      .then((value) => {
                                          location.reload();
                                      });

                        }
                        else {

                            swal("Failed to confirm ,DbException" + response);
                        }
                    },
                    error: function (xhr) {
                        swal(error);
                        $("#divLoader").hide();
                    },

                });
                        } else {
                            swal("Cancelled", "No change was made");
                        }
                    });

                });


                $(".rejected_loan").on('click', function () {
                    var reason = $(this).data('reason');
                    var loan = $(this).data('loan');
                    $("#loan_number").text(loan);
                    $("#reason").text(reason);
                });

                $(".receiveConfirm").on('click', function () {
                    var id = $(this).data('id');
                    var receivingno = $(this).data('receivingno');
                    swal({
                        title: 'Confirmation',
                        text: "Do you what to confirm Recovering Loan   " + receivingno + " ?",
                        buttons: [
                          'No',
                          'Yes'
                        ],
                    }).then(function (isConfirm) {
                        if (isConfirm) {
                         var url = '@Url.Action("ConfirmReceiving", "LoanRecoveries")';
                            $.ajax(
                {
                    type: "POST",
                    url: url,
                    data: { id: id },
                    success: function (response) {
                        if (response == "Success") {

                            swal("Confirmed successfully", { icon: "success" })
                                      .then((value) => {
                                          location.reload();
                                      });


                        }
                        else {

                            swal("Failed to confirm ,DbException"+response);
                        }
                    },
                    error: function (xhr) {
                        swal(error);
                        $("#divLoader").hide();
                    },

                });
                        } else {
                            swal("Cancelled", "No change was made");
                        }
                    });

                });


                $(".cancel_loans").on('click', function () {
                    var id = $(this).data('id');
                    var lpo = $(this).data('lpo');
                    $("#lpo_number").text(lpo);
                    $(".modal-body #Id").val(id);

                });

                $('#Reason').on("keyup", function () {
                    var count = $('#Reason').val().split('');
                    var numChars = 250 - parseInt(count.length);
                    $('#ReasonCount').text(parseInt(numChars));
                });

                $("#RejectReason").on('submit', function (e) {
                    e.preventDefault();
                    var reason = $("#Reason").val();
                    if (!reason) {
                        swal("Please enter reason for Cancellation", { icon: "danger" })
                           .then((value) => { });
                        return
                    }
                    var url = '@Url.Action("CancelLoanRecovery", "LoanRecoveries")';
                    var formData = $(this).serialize();
                    $('#cancelLoans').modal('hide');
                    $.ajax(
                {
                    type: "POST",
                    url: url,
                    data: formData,
                    success: function (response) {
                        if (response == "Success") {
                            swal("Recovered Loan Cancelled Successfully", { icon: "success" })
                                                                .then((value) => { });
                            location.reload();
                        }
                        else {
                            swal("Failed to Cancel Recovered Loan" + response, { icon: "danger" })
                                                                .then((value) => { });
                        }
                    },
                    error: function (xhr) {

                        swal("An error has occured, contact system support" + response, { icon: "danger" })
                                                                .then((value) => { });
                        $("#divLoader").hide();
                    },

                });

                });

           });

    </script>
}




