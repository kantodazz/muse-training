@model IFMIS.Areas.IFMISTZ.Models.StockTakingVM
@{
    ViewBag.Title = "Stock Taking";
}



<div id="content" style="margin: 5px; padding-top: 30px">

    <div class="row">


    </div>


    <!-- widget grid -->
    <section id="widget-grid" class="">


        <!-- START ROW -->

        <div class="row">

            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">

                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">
                    <header>
                        <!-- Nav tabs -->
                        <ul id="widget-tab-1" class="nav nav-tabs  pull-right">
                            @if (Model.OverallStatus == "New")
                            {
                                <li class="nav-item active">
                                    <a class="nav-link active" data-toggle="tab" href="#home"> Available Inventories<span class="badge inbox-badge margin-right-13" style="background-color:#2196F3">@Model.InventoryDetails.Count()</span></a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link" data-toggle="tab" href="#menu1">Stock Taking</a>
                                </li>
                            }
                            else
                            {
                                <li class="nav-item active">
                                    <a class="nav-link active" data-toggle="tab" href="#home">Stock Taking <span class="badge inbox-badge margin-right-13" style="background-color:#2196F3">@Model.InventoryDetails.Count()</span></a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link" data-toggle="tab" href="#menu1">Available Inventories</a>
                                </li>

                            }

                        </ul>
                    </header>
                    <!-- Tab panes -->
                          <div class="widget-body " style="padding-top:10px;width:100%">
                    <div class="tab-content">
                        <div id="home" class="tab-pane active">
                            @if (Model.OverallStatus == "New")
                            {
                                if (Model.InventoryDetails.Any())
                                {
                                    if (Model.OverallStatus != "Confirmed")
                                    {
                                        <p align="left">

                                            <a href="@Url.Action("InventoriesDetails","Inventories", new { })" class="btn btn-info" target="_blank">
                                                <span class="glyphicon glyphicon-download"></span>&nbsp;Download
                                            </a>
                                        </p>
                                    }
                                }



                                <table align="center" class="table  table-bordered table-hover table-condensed" id="dt_inventories">
                                    <thead>
                                        <tr>
                                            <th style="text-align:right;width:4%">No</th>
                                            <th style="text-align:left">Inventory Code</th>
                                            <th style="text-align:left">Inventory Name</th>
                                            <th style="text-align:left">Item Card</th>
                                            <th style="text-align:left">Store Name</th>
                                            <th style="text-align:center;">Quantity</th>
                                            <th style="text-align:left;">UOM</th>
                                            <th style="text-align:right">Unit Price(Tsh)</th>
                                            <th style="text-align:right">Inventory Value(Tsh)</th>
                                        </tr>
                                    </thead>

                                    <tbody>
                                        @{decimal totalInventoriesValue = 0, totalQuantity = 0;}
                                        @for (var i = 0; i < Model.InventoryDetails.Count(); i++)
                                        {
                                            var j = i + 1;
                                            decimal quantity = 0;
                                            if (Model.InventoryDetails[i].Quantity > 0)
                                            {
                                                quantity = (decimal)Model.InventoryDetails[i].Quantity;
                                            }
                                            else
                                            {
                                                quantity = 1;
                                            }
                                            decimal unit_price = Convert.ToDecimal(Model.InventoryDetails[i].InventoryValue / quantity);
                                            decimal inventory_value = Convert.ToDecimal(unit_price * Model.InventoryDetails[i].BalanceQuantity);
                                        <tr>
                                            <td style="text-align:right">
                                                @j
                                            </td>
                                            <td style="text-align:left">
                                                @Html.DisplayFor(modelItem => Model.InventoryDetails[i].InventoryCode)
                                            </td>
                                            <td style="text-align:left">
                                                @Html.DisplayFor(modelItem => Model.InventoryDetails[i].ItemName)
                                            </td>
                                            <td style="text-align:left">
                                                @Html.DisplayFor(modelItem => Model.InventoryDetails[i].InventoryItemCard.ItemCard)-
                                                @Html.DisplayFor(modelItem => Model.InventoryDetails[i].InventoryItemCard.AvailableQuantity)
                                            </td>
                                            @if (Model.InventoryDetails[i].StoreName != null)
                                            {
                                                <td style="text-align:left">
                                                    @Html.DisplayFor(modelItem => Model.InventoryDetails[i].StoreName)
                                                </td>
                                            }
                                            else
                                            {
                                                <td style="text-align:left">
                                                    NA
                                                </td>
                                            }


                                            <td style="text-align:center">
                                                @Html.DisplayFor(modelItem => Model.InventoryDetails[i].BalanceQuantity)
                                            </td>
                                            <td style="text-align:left">
                                                @Html.DisplayFor(modelItem => Model.InventoryDetails[i].UOM)
                                            </td>
                                            <td style="text-align:right">
                                                @unit_price.ToString("#,##0.00")
                                            </td>
                                            <td style="text-align:right">
                                                @inventory_value.ToString("#,##0.00")
                                            </td>

                                        </tr>
                                        }
                                        @*<tr>
    <td></td>
    <td></td>
    <td></td>
    <td style="text-align:right">Total</td>
    <td style="text-align:right">@totalQuantity.ToString("#,##0.00")</td>
    <td style="text-align:right">@totalInventoriesValue.ToString("#,##0.00") </td>
</tr>*@
                                    </tbody>
                                </table>
                            }
                            else
                            {
                                if (Model.OverallStatus == "Pending")
                                {
                                    decimal total_missed = 0;
                                    decimal total_missing_value = 0;
                                    decimal total_exceeded = 0;
                                    decimal total_inventory_value = 0;


                                    <a href="#" data-toggle="modal" class="Confirm  btn btn-info"><i class="fa fa-edit"></i> Confirm</a>
                                    <div align="center">
                                        <img src="~/Media/Images/ajax_loader.gif" class="loadingImg" style="display:none" />
                                    </div>
                                    <table align="center" class="table  table-bordered table-hover table-condensed">
                                        <caption><H3 align="center">INVENTORIES STOCK TAKING OUTPUT</H3></caption>
                                        <thead>
                                            <tr>
                                                <th style="text-align:right;width:4%">No</th>
                                                <th style="text-align:left">Ledger Folio</th>
                                                <th style="text-align:left">Batch Number</th>
                                                <th style="text-align:left">Inventory Name</th>
                                                <th style="text-align:left">Store Name</th>
                                                <th style="text-align:left;">UOM</th>
                                                <th style="text-align:right">Unit Price(Tsh)</th>
                                                <th style="text-align:right">Inventory Value(Tsh)</th>
                                                <th style="text-align:right;">Quantity</th>
                                                <th style="text-align:right">Physically Available</th>
                                                <th style="text-align:right">Missing</th>
                                                <th style="text-align:right">Missing Value(Tsh)</th>
                                                <th style="text-align:right">Excess</th>
                                            </tr>
                                        </thead>

                                        <tbody>

                                            @for (var i = 0; i < Model.InventoryDetails.Count(); i++)
                                            {
                                                decimal missed = 0;
                                                decimal exceeded = 0;
                                                decimal missing_value = 0;
                                                var j = i + 1;
                                                decimal quantity = 0;
                                                if (Model.InventoryDetails[i].Quantity > 0)
                                                {
                                                    quantity = (decimal)Model.InventoryDetails[i].Quantity;
                                                }
                                                else
                                                {
                                                    quantity = 1;
                                                }
                                                decimal unit_price = Convert.ToDecimal(Model.InventoryDetails[i].InventoryValue / quantity);
                                                decimal inventory_value = Convert.ToDecimal(unit_price * Model.InventoryDetails[i].BalanceQuantity);
                                                if (Model.InventoryDetails[i].PhysiacallyAvailable != null)
                                                {

                                                    decimal physical_available = Convert.ToDecimal(Model.InventoryDetails[i].PhysiacallyAvailable);
                                                    if (physical_available > quantity)
                                                    {
                                                        exceeded = physical_available - quantity;
                                                    }
                                                    else
                                                    {
                                                        missed = quantity - physical_available;
                                                        missing_value = missed * unit_price;
                                                    }
                                                }

                                                total_missed = total_missed + missed;
                                                total_exceeded = total_exceeded + exceeded;
                                                total_missing_value = total_missing_value + missing_value;
                                                total_inventory_value = total_inventory_value + inventory_value;
                                            <tr>
                                                <td style="text-align:right">
                                                    @j
                                                </td>
                                                <td style="text-align:left">
                                                    @Html.DisplayFor(modelItem => Model.InventoryDetails[i].LedgerFolio)
                                                </td>
                                                <td style="text-align:left">
                                                    @Html.DisplayFor(modelItem => Model.InventoryDetails[i].BatchNo)
                                                </td>
                                                <td style="text-align:left">
                                                    @Html.DisplayFor(modelItem => Model.InventoryDetails[i].ItemName)
                                                </td>
                                                @if(Model.InventoryDetails[i].StoreName !=null){
                                                <td style="text-align:left">
                                                    @Html.DisplayFor(modelItem => Model.InventoryDetails[i].StoreName)
                                                </td>
                                                }else{
                                                <td style="text-align:left">
                                                    NA
                                                </td>
                                                }
                                                <td style="text-align:left">
                                                    @Html.DisplayFor(modelItem => Model.InventoryDetails[i].UOM)
                                                </td>
                                                <td style="text-align:right">
                                                    @unit_price.ToString("#,##0.00")
                                                </td>
                                                <td style="text-align:right">
                                                    @inventory_value.ToString("#,##0.00")
                                                </td>
                                                <td style="text-align:right">
                                                    @Html.DisplayFor(modelItem => Model.InventoryDetails[i].BalanceQuantity)
                                                </td>

                                                <td style="text-align:right">
                                                    @Html.DisplayFor(modelItem => Model.InventoryDetails[i].PhysiacallyAvailable)
                                                </td>
                                                <td style="text-align:right">
                                                    @if (missed > 0)
                                                    {
                                                    @missed
                                                    }
                                                </td>
                                                <td style="text-align:right">
                                                    @if (missed > 0)
                                                    {
                                                    @missing_value
                                                    }
                                                </td>
                                                <td style="text-align:right">
                                                    @if (exceeded > 0)
                                                    {
                                                    @exceeded
                                                    }
                                                </td>
                                            </tr>
                                            }
                                        <tr>
                                            <td colspan="6" style="text-align:right">Total</td>
                                            <td></td>
                                            <td style="text-align:right">@total_inventory_value.ToString("#,##0.00") </td>
                                            <td style="text-align:right">@Convert.ToDecimal(Model.InventoryDetails.Select(a => a.BalanceQuantity).DefaultIfEmpty(0).Sum()).ToString("#,##0.00")</td>
                                            <td style="text-align:right">@Convert.ToDecimal(Model.InventoryDetails.Select(a => a.PhysiacallyAvailable).DefaultIfEmpty(0).Sum()).ToString("#,##0.00")</td>
                                            <td style="text-align:right">
                                                @if (total_missed > 0)
                                                {@total_missed}
                                            </td>
                                            <td style="text-align:right">
                                                @if (total_missing_value > 0)
                                                {
                                                    @total_missing_value.ToString("#,##0.00")
                                                }
                                            </td>
                                            <td style="text-align:right">
                                                @if (total_exceeded > 0)
                                                {@total_exceeded}
                                            </td>

                                        </tr>
                                        </tbody>
                                    </table>

                                                    }
                                                    else
                                                    {
                                                        decimal total_missed1 = 0;
                                                        decimal total_exceeded1 = 0;
                                                        decimal total_missing_value1 = 0;
                                                        decimal total_inventory_value1 = 0;

                                    <table align="center" class="table  table-bordered table-hover table-condensed">
                                        <caption><H3 align="center">INVENTORIES STOCK TAKING OUTPUT</H3></caption>
                                        <thead>
                                            <tr>
                                                <th style="text-align:right;width:4%">No</th>
                                                <th style="text-align:left">Ledger Folio</th>
                                                <th style="text-align:left">Batch Number</th>
                                                <th style="text-align:left">Inventory Name</th>
                                                <th style="text-align:left">Store Name</th>
                                                <th style="text-align:left;">UOM</th>
                                                <th style="text-align:right">Unit Price(Tsh)</th>
                                                <th style="text-align:right">Inventory Value(Tsh)</th>
                                                <th style="text-align:right;">Quantity</th>
                                                <th style="text-align:right">Physically Available</th>
                                                <th style="text-align:right">Missin</th>
                                                <th style="text-align:right">Missing Value(Tsh)</th>
                                                <th style="text-align:right">Excess</th>
                                            </tr>
                                        </thead>

                                        <tbody>

                                            @for (var i = 0; i < Model.InventoryDetails.Count(); i++)
                                            {
                                                decimal missed = 0;
                                                decimal exceeded = 0;
                                                decimal missing_value = 0;
                                                var j = i + 1;
                                                decimal quantity = 0;
                                                if (Model.InventoryDetails[i].Quantity > 0)
                                                {
                                                    quantity = (decimal)Model.InventoryDetails[i].Quantity;
                                                }
                                                else
                                                {
                                                    quantity = 1;
                                                }
                                                decimal unit_price = Convert.ToDecimal(Model.InventoryDetails[i].InventoryValue / quantity);
                                                decimal inventory_value = Convert.ToDecimal(unit_price * Model.InventoryDetails[i].BalanceQuantity);
                                                if (Model.InventoryDetails[i].PhysiacallyAvailable != null)
                                                {

                                                    decimal physical_available = Convert.ToDecimal(Model.InventoryDetails[i].PhysiacallyAvailable);
                                                    if (physical_available > quantity)
                                                    {
                                                        exceeded = physical_available - quantity;
                                                    }
                                                    else
                                                    {
                                                        missed = quantity - physical_available;
                                                        missing_value = missed * unit_price;
                                                    }
                                                }

                                                total_missed1 = total_missed1 + missed;
                                                total_exceeded1 = total_exceeded1 + exceeded;
                                                total_missing_value1 = total_missing_value1 + missing_value;
                                                total_inventory_value1 = total_inventory_value1 + inventory_value;
                                            <tr>
                                                <td style="text-align:right">
                                                    @j
                                                </td>
                                                <td style="text-align:left">
                                                    @Html.DisplayFor(modelItem => Model.InventoryDetails[i].LedgerFolio)
                                                </td>
                                                <td style="text-align:left">
                                                    @Html.DisplayFor(modelItem => Model.InventoryDetails[i].BatchNo)
                                                </td>
                                                <td style="text-align:left">
                                                    @Html.DisplayFor(modelItem => Model.InventoryDetails[i].ItemName)
                                                </td>
                                                @if(Model.InventoryDetails[i].StoreName !=null){
                                                <td style="text-align:left">
                                                    @Html.DisplayFor(modelItem => Model.InventoryDetails[i].StoreName)
                                                </td>
                                                }else{
                                                <td style="text-align:left">
                                                    NA
                                                </td>
                                                }
                                                <td style="text-align:left">
                                                    @Html.DisplayFor(modelItem => Model.InventoryDetails[i].UOM)
                                                </td>
                                                <td style="text-align:right">
                                                    @unit_price.ToString("#,##0.00")
                                                </td>
                                                <td style="text-align:right">
                                                    @inventory_value.ToString("#,##0.00")
                                                </td>
                                                <td style="text-align:right">
                                                    @Html.DisplayFor(modelItem => Model.InventoryDetails[i].BalanceQuantity)
                                                </td>

                                                <td style="text-align:right">
                                                    @Html.DisplayFor(modelItem => Model.InventoryDetails[i].PhysiacallyAvailable)
                                                </td>
                                                <td style="text-align:right">
                                                    @if (missed > 0)
                                                    {
                                                    @missed
                                                    }
                                                </td>
                                                <td style="text-align:right">
                                                    @if (missed > 0)
                                                    {
                                                    @missing_value
                                                    }
                                                </td>
                                                <td style="text-align:right">
                                                    @if (exceeded > 0)
                                                    {
                                                    @exceeded
                                                    }
                                                </td>
                                            </tr>
                                            }
                                        <tr>
                                            <td colspan="6" style="text-align:right">Total</td>
                                            <td></td>
                                            <td style="text-align:right">@total_inventory_value1.ToString("#,##0.00") </td>
                                            <td style="text-align:right">@Convert.ToDecimal(Model.InventoryDetails.Select(a => a.BalanceQuantity).DefaultIfEmpty(0).Sum()).ToString("#,##0.00")</td>
                                            <td style="text-align:right">@Convert.ToDecimal(Model.InventoryDetails.Select(a => a.PhysiacallyAvailable).DefaultIfEmpty(0).Sum()).ToString("#,##0.00")</td>
                                            <td style="text-align:right">
                                                @if (total_missed1 > 0)
                                                {@total_missed1}
                                            </td>
                                            <td style="text-align:right">
                                                @if (total_missing_value1 > 0)
                                                {
                                                    @total_missing_value1.ToString("#,##0.00")
                                                }
                                            </td>
                                            <td style="text-align:right">
                                                @if (total_exceeded1 > 0)
                                                {@total_exceeded1}
                                            </td>

                                        </tr>
                                        </tbody>
                                    </table>

                                }

                            }

                        </div>
                        <div id="menu1" class="tab-pane fade">
                            @if (Model.OverallStatus == "New")
                            {
                                using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = "return SubmitForm(this)" }))
                                {
                                    @Html.AntiForgeryToken()

                                    <table align="center" class="table  table-bordered table-hover table-condensed">
                                        <caption><H3 align="center">INVENTORIES IN THE SYSTEM AGAINIST PHYSICAL AVAILABLE</H3></caption>
                                        <thead>
                                            <tr>
                                                <th style="text-align:right;width:4%">No</th>
                                                <th style="text-align:left">Ledger Folio</th>
                                                <th style="text-align:left">Batch Number</th>
                                                <th style="text-align:left">Inventory Name</th>
                                                <th style="text-align:left">Store Name</th>
                                                <th style="text-align:center;">Quantity</th>
                                                <th style="text-align:left;">UOM</th>
                                                <th style="text-align:right">Unit Price(Tsh)</th>
                                                <th style="text-align:right">Inventory Value(Tsh)</th>
                                                <th style="text-align:center">Physical Available</th>

                                            </tr>
                                        </thead>

                                        <tbody>
                                            @{decimal total_inventories_value = 0, total_quantity = 0;}
                                            @for (var i = 0; i < Model.InventoryDetails.Count(); i++)
                                            {
                                                var j = i + 1;
                                                decimal quantity = 0;
                                                if (Model.InventoryDetails[i].Quantity > 0)
                                                {
                                                    quantity = (decimal)Model.InventoryDetails[i].Quantity;
                                                }
                                                else
                                                {
                                                    quantity = 1;
                                                }
                                                decimal unit_price = Convert.ToDecimal(Model.InventoryDetails[i].InventoryValue / quantity);
                                                decimal inventory_value = Convert.ToDecimal(unit_price * Model.InventoryDetails[i].BalanceQuantity);
                                                total_quantity = total_quantity + (Decimal)Model.InventoryDetails[i].BalanceQuantity;
                                                total_inventories_value = total_inventories_value + inventory_value;

                                            <tr>
                                                <td style="text-align:right">
                                                    @j
                                                </td>
                                                <td style="text-align:left">
                                                    @Html.DisplayFor(modelItem => Model.InventoryDetails[i].LedgerFolio)
                                                </td>
                                                <td style="text-align:left">
                                                    @Html.DisplayFor(modelItem => Model.InventoryDetails[i].BatchNo)
                                                </td>
                                                <td style="text-align:left">
                                                    @Html.HiddenFor(modelItem => Model.InventoryDetails[i].InventoryDetailId)
                                                    @Html.DisplayFor(modelItem => Model.InventoryDetails[i].ItemName)
                                                </td>
                                                @if(Model.InventoryDetails[i].StoreName !=null){
                                                <td style="text-align:left">
                                                    @Html.DisplayFor(modelItem => Model.InventoryDetails[i].StoreName)
                                                </td>
                                                }else{
                                                <td style="text-align:left">
                                                    NA
                                                </td>
                                                }
                                                <td style="text-align:right">
                                                    @Html.DisplayFor(modelItem => Model.InventoryDetails[i].BalanceQuantity)
                                                </td>

                                                <td style="text-align:left">
                                                    @Html.DisplayFor(modelItem => Model.InventoryDetails[i].UOM)
                                                </td>
                                                <td style="text-align:right">
                                                    @unit_price.ToString("#,##0.00")
                                                </td>
                                                <td style="text-align:right">
                                                    @inventory_value.ToString("#,##0.00")
                                                </td>

                                                <td style="text-align:center">
                                                    <div align="center">
                                                        @Html.EditorFor(modelItem => Model.InventoryDetails[i].PhysiacallyAvailable, new { htmlAttributes = new { @class = "form-control", style = "width:90px;height:27px", min = 0, @onkeyup = "enteredQuantity(this)" } })
                                                    </div>
                                                </td>
                                            </tr>
                                            }
                                            <tr>
                                                <td colspan="5" style="text-align:right">Total</td>
                                                <td style="text-align:right"> @total_quantity.ToString("#,##0.00") </td>
                                                <td></td>
                                                <td></td>
                                                <td style="text-align:right">@total_inventories_value.ToString("#,##0.00")</td>
                                                <td></td>
                                            </tr>
                                        </tbody>
                                    </table>
                                    <div class="col-md-offset-11">
                                        <button type="submit" class="btn btn-info" style="margin-right:2px">
                                            <i class="glyphicon glyphicon-floppy-disk"></i> Save
                                        </button>
                                    </div>
                                    <br />
                                    <br />
                                }


                            }
                            else
                            {
                                if (Model.InventoryDetails.Any())
                                {
                                    if (Model.OverallStatus != "Confirmed")
                                    {
                                        <p align="left">

                                            <a href="@Url.Action("InventoriesDetails","Inventories", new { })" class="btn btn-info" target="_blank">
                                                <span class="glyphicon glyphicon-download"></span>&nbsp;Download
                                            </a>
                                        </p>
                                    }
                                }



                                <table align="center" class="table  table-bordered table-hover table-condensed" id="dt_inventories">
                                    <thead>
                                        <tr>
                                            <th style="text-align:right;width:4%">No</th>
                                            <th style="text-align:left">Ledger Folio</th>
                                            <th style="text-align:left">Batch Number</th>
                                            <th style="text-align:left">Inventory Name</th>
                                            <th style="text-align:left">Store Name</th>
                                            <th style="text-align:center;">Quantity</th>
                                            <th style="text-align:left;">UOM</th>
                                            <th style="text-align:right">Unit Price(Tsh)</th>
                                            <th style="text-align:right">Inventory Value(Tsh)</th>
                                        </tr>
                                    </thead>

                                    <tbody>
                                        @{decimal totalInventoriesValue = 0, totalQuantity = 0;}
                                        @for (var i = 0; i < Model.InventoryDetails.Count(); i++)
                                        {
                                            var j = i + 1;
                                            decimal quantity = 0;
                                            if (Model.InventoryDetails[i].Quantity > 0)
                                            {
                                                quantity = (decimal)Model.InventoryDetails[i].Quantity;
                                            }
                                            else
                                            {
                                                quantity = 1;
                                            }
                                            decimal unit_price = Convert.ToDecimal(Model.InventoryDetails[i].InventoryValue / quantity);
                                            decimal inventory_value = Convert.ToDecimal(unit_price * Model.InventoryDetails[i].BalanceQuantity);
                                        <tr>
                                            <td style="text-align:right">
                                                @j
                                            </td>
                                            <td style="text-align:left">
                                                @Html.DisplayFor(modelItem => Model.InventoryDetails[i].LedgerFolio)
                                            </td>
                                            <td style="text-align:left">
                                                @Html.DisplayFor(modelItem => Model.InventoryDetails[i].BatchNo)
                                            </td>
                                            <td style="text-align:left">
                                                @Html.DisplayFor(modelItem => Model.InventoryDetails[i].ItemName)
                                            </td>
                                            @if(Model.InventoryDetails[i].StoreName !=null){
                                            <td style="text-align:left">
                                                @Html.DisplayFor(modelItem => Model.InventoryDetails[i].StoreName)
                                            </td>
                                            }else{
                                            <td style="text-align:left">
                                                NA
                                            </td>
                                            }
                                            <td style="text-align:center">
                                                @Html.DisplayFor(modelItem => Model.InventoryDetails[i].BalanceQuantity)
                                            </td>
                                            <td style="text-align:left">
                                                @Html.DisplayFor(modelItem => Model.InventoryDetails[i].UOM)
                                            </td>
                                            <td style="text-align:right">
                                                @unit_price.ToString("#,##0.00")
                                            </td>
                                            <td style="text-align:right">
                                                @inventory_value.ToString("#,##0.00")
                                            </td>

                                        </tr>
                                        }
                                        @*<tr>
    <td></td>
    <td></td>
    <td></td>
    <td style="text-align:right">Total</td>
    <td style="text-align:right">@totalQuantity.ToString("#,##0.00")</td>
    <td style="text-align:right">@totalInventoriesValue.ToString("#,##0.00") </td>
</tr>*@
                                    </tbody>
                                </table>


                            }
                            <br />
                        </div>
                     
                    </div>

                    </div>
                </div>
            </article>

        </div>
    </section>
</div>

@section pagespecific {
    <!-- PAGE RELATED PLUGIN(S) -->

    <script type="text/javascript">
      function SubmitForm(formData) {

            var url = '@Url.Action("SavePhysicalAvailable", "Inventories")';
            var ajaxConfig = {
                type: "post",
                url: url,
                data: new FormData(formData),
                success: function (result) {
                    if (result == "Success") {
                        swal("Data saved successfully", { icon: "Success" })
                                    .then((value) => {
                                   location.reload();
                                    });
                    }
                    else {
                        swal("Failed  due to DbException");
                    }
                }
            }

            if ($(formData).attr('enctype') == "multipart/form-data") {
                ajaxConfig["contentType"] = false;
                ajaxConfig["processData"] = false;
            }
            $.ajax(ajaxConfig);
            return false;
        }
        // =========== End Save Inventory ====================

        // =========== End Save Write Off Inventories ====================
            $(document).ready(function () {
                /* // DOM Position key index //
              l - Length changing (dropdown)
              f - Filtering input (search)
              t - The Table! (datatable)
              i - Information (records)
              p - Pagination (paging)
              r - pRocessing
              < and > - div elements
              <"#id" and > - div with an id
              <"class" and > - div with a class
              <"#id.class" and > - div with an id and class
              Also see: http://legacy.datatables.net/usage/features
              */
                /* BASIC ;*/
                var responsiveHelper_dt_inventories = undefined;
                var responsiveHelper_datatable_fixed_column = undefined;
                var responsiveHelper_datatable_col_reorder = undefined;
                var responsiveHelper_datatable_tabletools = undefined;

                var breakpointDefinition = {
                    tablet: 1024,
                    phone: 480
                };

                $('#dt_inventories').dataTable({
                    "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-12 hidden-xs'l>r>" +
                        "t" +
                        "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                    "autoWidth": true,
                    "preDrawCallback": function () {
                        // Initialize the responsive datatables helper once.
                        if (!responsiveHelper_dt_inventories) {
                            responsiveHelper_dt_inventories = new ResponsiveDatatablesHelper($('#dt_inventories'), breakpointDefinition);
                        }
                    },
                    "rowCallback": function (nRow) {
                        responsiveHelper_dt_inventories.createExpandIcon(nRow);
                    },
                    "drawCallback": function (oSettings) {
                        responsiveHelper_dt_inventories.respond();
                    }
                });

                /* END BASIC */

                /* COLUMN FILTER  */
                var otable = $('#datatable_fixed_column').DataTable({
                    //"bFilter": false,
                    //"bInfo": false,
                    //"bLengthChange": false
                    //"bAutoWidth": false,
                    //"bPaginate": false,
                    //"bStateSave": true // saves sort state using localStorage
                    "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6 hidden-xs'f><'col-sm-6 col-xs-12 hidden-xs'<'toolbar'>>r>" +
                            "t" +
                            "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                    "autoWidth": true,
                    "preDrawCallback": function () {
                        // Initialize the responsive datatables helper once.
                        if (!responsiveHelper_datatable_fixed_column) {
                            responsiveHelper_datatable_fixed_column = new ResponsiveDatatablesHelper($('#datatable_fixed_column'), breakpointDefinition);
                        }
                    },
                    "rowCallback": function (nRow) {
                        responsiveHelper_datatable_fixed_column.createExpandIcon(nRow);
                    },
                    "drawCallback": function (oSettings) {
                        responsiveHelper_datatable_fixed_column.respond();
                    }
                });

                // custom toolbar
                $("div.toolbar").html('<div class="text-right"><img src="/Content/img/logo.png" alt="SmartAdmin" style="width: 111px; margin-top: 3px; margin-right: 10px;"></div>');

                // Apply the filter
                $("#datatable_fixed_column thead th input[type=text]").on('keyup change', function () {
                    otable
                        .column($(this).parent().index() + ':visible')
                        .search(this.value)
                        .draw();
                });
                /* END COLUMN FILTER */

                /* COLUMN SHOW - HIDE */
                $('#datatable_col_reorder').dataTable({
                    "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'C>r>" +
                            "t" +
                            "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
                    "autoWidth": true,
                    "preDrawCallback": function () {
                        // Initialize the responsive datatables helper once.
                        if (!responsiveHelper_datatable_col_reorder) {
                            responsiveHelper_datatable_col_reorder = new ResponsiveDatatablesHelper($('#datatable_col_reorder'), breakpointDefinition);
                        }
                    },
                    "rowCallback": function (nRow) {
                        responsiveHelper_datatable_col_reorder.createExpandIcon(nRow);
                    },
                    "drawCallback": function (oSettings) {
                        responsiveHelper_datatable_col_reorder.respond();
                    }
                });

                /* END COLUMN SHOW - HIDE */

                /* TABLETOOLS */
                $('#datatable_tabletools').dataTable({

                    // Tabletools options:
                    //   https://datatables.net/extensions/tabletools/button_options
                    "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'T>r>" +
                            "t" +
                            "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
                    "oTableTools": {
                        "aButtons": [
                        "copy",
                        "csv",
                        "xls",
                           {
                               "sExtends": "pdf",
                               "sTitle": "SmartAdmin_PDF",
                               "sPdfMessage": "SmartAdmin PDF Export",
                               "sPdfSize": "letter"
                           },
                           {
                               "sExtends": "print",
                               "sMessage": "Generated by SmartAdmin <i>(press Esc to close)</i>"
                           }
                        ],
                        "sSwfPath": "/Scripts/plugin/datatables/swf/copy_csv_xls_pdf.swf"
                    },
                    "autoWidth": true,
                    "preDrawCallback": function () {
                        // Initialize the responsive datatables helper once.
                        if (!responsiveHelper_datatable_tabletools) {
                            responsiveHelper_datatable_tabletools = new ResponsiveDatatablesHelper($('#datatable_tabletools'), breakpointDefinition);
                        }
                    },
                    "rowCallback": function (nRow) {
                        responsiveHelper_datatable_tabletools.createExpandIcon(nRow);
                    },
                    "drawCallback": function (oSettings) {
                        responsiveHelper_datatable_tabletools.respond();
                    }
                });
                /* END TABLETOOLS */

                $(".Confirm").on('click', function () {
              
                    swal({
                        title: 'Confirmation',
                        text: "Do you what to confirm this stock taking ?",
                        buttons: [
                          'No',
                          'Yes'
                        ],
                    }).then(function (isConfirm) {
                        if (isConfirm) {
                            var url = '@Url.Action("ConfirmStockTaking", "Inventories")';
                            $.ajax(
                {
                    type: "POST",
                    url: url,
                    success: function (response) {
                        if (response == "Success") {

                            swal("Confirmed successfully!", { icon: "success" })
                                      .then((value) => {
                                          location.reload();
                                      });


                        }
                        else {

                            swal("Failed to confirm ,DbException");
                        }
                    },
                    error: function (xhr) {
                        swal(error);
                        $("#divLoader").hide();
                    },

                });
                        } else {
                            swal("Cancelled", "No change was made");
                        }
                    });

                });

                $(".addConfirm").on('click', function () {
                    var id = $(this).data('id');
                    var inventoryno = $(this).data('inventoryno');
                    swal({
                        title: 'Confirmation',
                        text: "Do you confirm added quantity to invetory with Ledger Folio of" + inventoryno + " ?",
                        buttons: [
                          'No',
                          'Yes'
                        ],
                    }).then(function (isConfirm) {
                        if (isConfirm) {
                            var url = '@Url.Action("ConfirmAddition", "Inventories")';
                            $.ajax(
                {
                    type: "POST",
                    url: url,
                    data: { id: id },
                    success: function (response) {
                        if (response == "Success") {

                            swal("Confirmed successfully!", { icon: "success" })
                                      .then((value) => {
                                          location.reload();
                                      });


                        }
                        else {

                            swal("Failed to confirm ,DbException");
                        }
                    },
                    error: function (xhr) {
                        swal(error);
                        $("#divLoader").hide();
                    },

                });
                        } else {
                            swal("Cancelled", "No change was made");
                        }
                    });

                });

                $(".writeOffConfirm").on('click', function () {
                    var id = $(this).data('id');
                    var inventoryno = $(this).data('inventoryno');
                    swal({
                        title: 'Confirmation',
                        text: "Do you confirm writing off to invetory with Ledger Folio of " + inventoryno + " ?",
                        buttons: [
                          'No',
                          'Yes'
                        ],
                    }).then(function (isConfirm) {
                        if (isConfirm) {
                            var url = '@Url.Action("ConfirmWriteOff", "Inventories")';
                            $.ajax(
                {
                    type: "POST",
                    url: url,
                    data: { id: id },
                    success: function (response) {
                        if (response == "Success") {

                            swal("Confirmed successfully!", { icon: "success" })
                                      .then((value) => {
                                          location.reload();
                                      });


                        }
                        else {

                            swal("Failed to confirm ,DbException");
                        }
                    },
                    error: function (xhr) {
                        swal(error);
                        $("#divLoader").hide();
                    },

                });
                        } else {
                            swal("Cancelled", "No change was made");
                        }
                    });

                });


                $(".AddInventory").on('click', function () {
                    var id = $(this).data('id');
                    var code = $(this).data('code');
                    $(".modal-body #Id").val(id);
                    $(".code").text(code);
                });

                $(".WriteOff").on('click', function () {
                    var id = $(this).data('id');
                    var code = $(this).data('code');
                    $(".modal-body2 #Id").val(id);
                    $(".code").text(code);
                });

                var $rows = $('#lpo tr');
                $('#search').keyup(function () {
                    var val = $.trim($(this).val()).replace(/ +/g, ' ').toLowerCase();

                    $rows.show().filter(function () {
                        var text = $(this).text().replace(/\s+/g, ' ').toLowerCase();
                        return !~text.indexOf(val);
                    }).hide();
                });


                        });

        //SHOW LOADER ICON
        $(document).ajaxStart(function () {
            $(".loadingImg").show();

        });
        //HIDE LOADER ICON
        $(document).ajaxStop(function () {
            $(".loadingImg").hide();
        });
   
    </script>
}