@model IFMIS.Areas.IFMISTZ.Models.PaymentBatchVM
<style>
    .search-btn {
        border: 1px solid #ccc;
        border-radius: 4px;
        padding: 5px;
        padding-right: 10px;
    }

    .search-container {
        display: inline-flex;
        flex: 1 1 300px;
        position: relative;
        border: 1px solid #ccc;
        border-radius: 5px;
        overflow: hidden;
        padding-left: 10px;
    }

    .name-input-container {
        display: inline-flex;
        flex: 1 1 300px;
        position: relative;
        overflow: hidden;
    }

    .search-icon {
        padding: 0.5rem;
    }

    .search-button {
        background: #538AC5;
        border: 0;
        color: white;
        padding: 8px;
        border-radius: 0;
    }

    input[type=number] {
        padding: 8px;
        border: 1px solid #ccc;
        width: 205px;
    }

    input[type=text] {
        padding: 5px;
        border: 1px solid #ccc;
    }

    input[type=search] {
        padding: 4px;
        border: hidden;
        border-radius: 4px;
    }

    textarea {
        border: 1px solid #ccc;
    }

    select {
        padding: 8px;
        border: 1px solid #ccc;
        resize: vertical;
        width: 230px;
    }

    .action-btn {
        width: 100px;
        color: white;
    }

    .form-label {
        text-align: right;
    }

    td {
        padding: 5px;
    }

    .info-box {
        padding: 10px;
        background-color: #ECF3F8;
        text-align: center;
        border: 1px solid #ccc;
        border-radius: 5px;
    }

    .searchContainer {
        background-color: white;
        color: black;
        border: 1px solid #ccc;
        border-radius: 4px;
        padding: 3px;
        padding-right: 10px;
    }

    input[type=search] {
        padding: 4px;
        border: hidden;
        border-radius: 4px;
    }

    .info-box {
        padding: 8px;
        background-color: #ECF3F8;
        /*padding-top:10px;*/
        /*text-align: center;*/
        border: 1px solid #ccc;
        border-radius: 5px;
    }

    .payee-entry {
        border: 1px solid #ccc;
        border-radius: 10px;
        padding-bottom: 10px;
    }

    .entry-label {
        position: relative;
        top: -12px;
        background-color: white;
        width: 180px;
        left: 15px;
        padding-left: 5px;
        padding-right: 5px;
        text-align: center;
        font-weight: bold;
        color: #2196F3;
    }
</style>

<div style="padding:1em;padding-top:4em">
    <section id="widget-grid">
        <div class="row">
            <article class="col-sm-12 col-md-12 col-lg-12">

                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">

                    <header>
                        <span class="widget-icon"> <i class="fa fa-table"></i> </span>
                        <h2>Edit GL item</h2>
                    </header>
                    <div>
                        <div class="widget-body">

                            <div class="row" style="padding:1% 5% 0 5%;">
                                <div class="col-md-6 col-lg-6 col-sm-12">
                                    <table>
                                        @Html.HiddenFor(model => model.InstitutionCode)
                                        @Html.HiddenFor(model => model.PaymentBatchID)
                                        <tr class="IsStPayment">
                                            <td class="form-label">
                                                Payer SBC
                                                <i class="fa fa-times" style="color:white" id="ParentInstitution_1"></i>
                                            </td>
                                            <td>
                                                @*@Html.TextBoxFor(a => a.SubBudgetClass, new { @class = "form-control col-md-4", @placeholder = "Select  Payer Account" })*@
                                                @*   <input type="text" id="SubBudgetClass" readonly="readonly" style="width:300px" />*@
                                                <div style="width: 300px">
                                                    @Html.DropDownList("SubBudgetClass", Model.SubbugetClasses as SelectList, "Select Financial Year", new { @class = "form-control" })
                                                </div>
                                            </td>
                                        </tr>
                                        <tr class="IsStPayment">
                                            <td class="form-label">
                                                Payer Account
                                            </td>
                                            <td>
                                                @*<select id="PayerAccount" style="width:300px"></select>*@
                                                @*  @Html.TextBoxFor(model => model.PayerAccount, new { @class = "form-control col-md-4", @placeholder = "Select Sub Budget Class" })*@
                                                <input type="text" id="PayerAccount" value="@Model.PayerAccount" readonly="readonly" style="width:300px" />
                                                <input type="hidden" id="PayerAccountNumber" value="@Model.PayerBankAccount" readonly="readonly" style="width:300px" />

                                            </td>
                                        </tr>

                                        <tr>
                                            <td class="form-label">
                                                Account Currency
                                                <i class="fa fa-times" style="color:white" id="PayerAccountCurrency_1"></i>
                                            </td>
                                            <td>
                                                <input type="text" id="PayerAccountCurrercy" value="@Model.PayerAccountCurrercy" readonly="readonly" style="width:300px" />
                                            </td>
                                        </tr>

                                        <tr>
                                            <td class="form-label">
                                                SBC Fund Balance Amount
                                            </td>
                                            <td>
                                                @*<div class="input-group">
                                                        <span class="input-group-addon">
                                                            <strong class="totalsbcAmount-currency">TZS</strong>
                                                        </span>
                                                        <input type="text" id="totalsbcAmount" readonly="readonly" disabled class="form-control" style="width:250px" name="equivalentOperationalAmount" />
                                                    </div>*@

                                                <div class="input-group">
                                                    <span class="input-group-addon">
                                                        <strong class="totalBatchCurrency">TZS</strong>
                                                    </span>
                                                    <input type="text" readonly="readonly" value="@Model.SBCFundBalance" disabled id="totalsbcAmount" style="width:250px" name="equivalentOperationalAmount" />
                                                </div>
                                            </td>
                                        </tr>

                                        <tr class="IsStPayment">
                                            <td class="form-label">
                                                Pre Funded Account
                                            </td>
                                            <td>
                                                <div style="width: 300px">
                                                    @Html.DropDownList("SourceAccountNo", Model.SourceAccountNos as SelectList, "Select Source Account", new { @class = "form-control" })
                                                </div>
                                            </td>
                                        </tr>


                                        <tr>
                                            <td class="form-label">GL Items</td>
                                            <td>
                                                <a class="search-btn" onclick="SearchGl()" href="#" style="display:block;width:300px">
                                                    <i class="fa fa-search search-icon"></i>
                                                    Search...
                                                </a>
                                            </td>
                                        </tr>




                                    </table>
                                </div>
                                <div class="col-md-6 col-lg-6 col-sm-12">
                                    <table>

                                        <tr>
                                            <td class="form-label">
                                                Batch No.
                                                <i class="fa fa-asterisk" style="color:white;"></i>
                                            </td>
                                            <td>
                                                <input type="text" disabled id="BatchNumber" value="@Model.BatchNo" style="width:300px" />
                                            </td>
                                        </tr>
                                        <tr class="IsStPaymentFlag">
                                            <td class="form-label">
                                                No of Transactions
                                            </td>
                                            <td>
                                                <input type="text" readonly="readonly" id="NoofTransaction" value="@Model.NoTrx" style="width:300px" />
                                            </td>
                                        </tr>
                                        <tr class="is-dfund">
                                            <td class="form-label">
                                                Batch Total Amount
                                                <i class="fa fa-times" style="color:white" id="DfundApprovalRef_1"></i>
                                            </td>
                                            <td>
                                                <div class="input-group">
                                                    <span class="input-group-addon">
                                                        <strong class="totalBatchCurrency">@Model.OperationalCurrencyCode</strong>
                                                    </span>
                                                    <input type="text" readonly="readonly" disabled id="total_voucher_amount" value="@string.Format("{0:#,0.00}", Model.TotalAmount)" style="width:255px" />
                                                </div>
                                            </td>
                                        </tr>
                                        <tr class="is-dfund2" style="display:none">
                                            <td class="form-label">
                                            </td>
                                            <td>
                                            </td>
                                        </tr>

                                        <tr>
                                            <td class="form-label">
                                                Batch Description
                                                <i class="fa fa-asterisk" style="color:white;"></i>
                                            </td>
                                            <td>
                                                @*<input type="text" disabled id="BatchDescription" value="" style="width:300px" />*@
                                                <textarea rows="4" disabled id="BatchDescription" style="width:300px"> @Model.BatchDesc </textarea>

                                            </td>
                                        </tr>
                                        <tr class="IsStPaymentFlag">
                                            <td class="form-label">
                                                Bulk Payment Method
                                            </td>
                                            <td>
                                                <input type="text" readonly="readonly" id="BulkPaymentMethod" value="@Model.BulkPaymentMethod" style="width:300px" />
                                            </td>
                                        </tr>

                                    </table>
                                </div>
                            </div>
                            <div style="padding-top:5px">

                                <table id="dt_voucher_detail" class="table table-striped table-bordered
                                       table-hover table-condensed" width="100%"></table>
                                <div style="padding-bottom:10px" id="infoPanel">
                                    <div class="info-box">No GL Items Selected</div>
                                </div>
                            </div>
                            <!-- end widget content -->
                            <div style="float:right;padding-bottom:10px">
                                <strong>TOTAL AMOUNT (<strong id="currency2">TZS</strong>): </strong>
                                <strong id="total_amount">0.00</strong>
                            </div>
                            <div class="row">
                                <div class="col-md-2"></div>
                                <div class="col-md-6">

                                    <a class="btn btn-info" href='@Url.Action("PaymentBatchConfirmation", "ExternalPayment")' style="margin-right:5px">
                                        <i class="glyphicon glyphicon-arrow-left"></i>Back
                                    </a>
                                    <button type="submit" class="btn btn-info" id="form_submision">
                                        <i class="fa fa-save"></i>Save
                                        <img src="~/Content/img/loading.gif" id="saveLoader" />
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </article>
        </div>
    </section>
</div>




<!----------- Search Payee ----------------->
<div class="modal fade" id="payeeModal" style="left:4%">

    <div class="modal-dialog" style="width:80%;">
        <div class="modal-content panel-info">


            <div class="modal-header panel-heading">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h3 class="modal-title"> Search Payee</h3>

            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-6">
                    </div>
                    <div class="col-md-6">
                        <div class="search-container submit-btn" style="float:right">
                            <i class="fa fa-search search-icon"></i>
                            <input type="search" name="search" placeholder="Search..." id="searchbox">
                        </div>
                    </div>
                </div>
                <table class="table" id="dt_search_payee">
                    <thead>
                        <tr>
                            <th>#</th>
                            <th>PaymentId</th>
                            <th>BIC</th>
                            <th>Payee Name</th>
                            <th>Payee Code</th>
                            <th>Bank Name</th>
                            <th>Bank Account No</th>
                            <th>Payee Type</th>
                            <th>Address</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>

            </div>
            <div class="modal-footer">
                <button class="btn btn-info" data-dismiss="modal">
                    <i class="fa  fa-times"></i>Close
                </button>
            </div>
        </div>
    </div>
</div>




<!----------- Search GL Items ----------------->
<div class="modal fade" id="glItemsModal" style="left:4%">

    <div class="modal-dialog" style="width:80%;">
        <div class="modal-content panel-info">
            <div class="modal-header panel-heading">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h3 class="modal-title"> Search Gl Item(s)</h3>
            </div>
            <div class="modal-body">
                <table>
                    <tr>
                        <td style="padding:5px">Total Amount</td>
                        <td style="padding:5px">
                            <input type="text" disabled id="total_voucher_amount2">
                        </td>

                        <td style="padding:5px">Total Line Amount</td>
                        <td style="padding:5px">
                            <input value="0" type="text" disabled id="total_line_amount">
                        </td>

                        <td style="padding:5px">Difference</td>
                        <td style="padding:5px">
                            <input value="0" type="text" disabled id="difference" style="width:250px">
                        </td>
                    </tr>
                </table>
                <div>
                    <div class="row" style="padding-top:1%;padding-bottom:1%">
                        <div class="col-md-6">
                            Operational Currency: <strong class="currency"></strong>
                            @*<div>Currency:<strong class="Currency"></strong></div>*@
                        </div>
                        <div class="col-md-6">
                            <div class="search-container submit-btn" style="float:right">
                                <i class="fa fa-search search-icon"></i>
                                <input type="search" name="search" placeholder="Search..." id="searchbox2">
                            </div>
                        </div>
                    </div>
                    <table id="dt_search_gl_item" class="table table-striped table-bordered table-hover table-condensed" width="100%">
                        <thead>
                            <tr>
                                <th>#</th>
                                <th width="250">Expenditure Line Item</th>
                                <th width="100">Item Description</th>
                                <th>Fund Balance</th>
                                <th>Funding Reference</th>
                                <th>Expense Amount</th>
                            </tr>
                        </thead>
                    </table>

                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-info" id="btn_save_gl_items">
                        <i class="fa fa-save"></i>Save
                    </button>
                    <button class="btn btn-info" data-dismiss="modal">
                        <i class="fa  fa-times"></i>Cancel
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

<!--- HIDDEN SECTION -->
<section id="widget-grid" style="visibility:hidden">
    <div class="row">
        <div class="jarviswidget jarviswidget-color-darken" id="wid-id-0" data-widget-colorbutton="false" data-widget-editbutton="false">

            <header style="background-color:#2196F3">
                <span class="widget-icon"> <i class="fa fa-table"></i> </span>
                <h2>Payee Details</h2>
            </header>

            <div>
                <div class="widget-body " style="padding-top:10px">
                    <a class="submit-btn" onclick="SearchPayee()" href="#">
                        <i class="fa fa-search search-icon"></i>
                        Search Payee
                    </a>
                    <table id="dt_selected_payee" class="table table-striped table-bordered table-hover table-condensed" width="100%"></table>
                </div>
                <!-- end widget content -->

            </div>
            <!-- end widget div -->

        </div>
    </div>
</section>

@section pagespecific{
    <script>

        $(document).ready(function () {
            $("#dt_search_gl_item_wrapper .dt-toolbar").remove();
            $("#dt_search_payee_wrapper .dt-toolbar").remove();
            $("#dt_voucher_detail_wrapper .dt-toolbar").remove();
            $("#dt_voucher_detail_wrapper .dt-toolbar-footer").remove();


            preLoadData();
        });





        // ============= SHOW PAYEE===============
        var dt_selected_payee = $('#dt_selected_payee').dataTable({
            "data": [],
            "columnDefs": [{
                "targets": [0, 1],
                "visible": false
            }],
            "columns": [
                { title: "Payee DetailId" },
                { title: "Payee BIC" },
                { title: "Payee Name" },
                { title: "Payee Code" },
                { title: "Bank Name" },
                { title: "Payee Type" },
                { title: "Bank Account No" },
                { title: "Address" }
            ]
        });


        // ============= SEARCH PAYEEE ===========

        Date.prototype.toDateInputValue = (function () {
            var local = new Date(this);
            local.setMinutes(this.getMinutes() - this.getTimezoneOffset());
            return local.toJSON().slice(0, 10);
        });



        var dt_search_payee = $('#dt_search_payee').dataTable({
            "aoColumnDefs": [{ "bVisible": false, "aTargets": [1, 2] }],
        });

        $("#searchbox").on("keyup search input paste cut", function () {
            if (!this.value) {
                dt_search_payee.fnClearTable();
            } else {
                searchPayeeTableUpdate(this.value);
            }
        });

        function searchPayeeTableUpdate(search) {
            var url = '@Url.Action("GetPayee", "PaymentVoucher")';
            $.ajax({
                type: "get",
                url: url + "/?search=" + search + "",
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {
                    data = response.data;
                    dt_search_payee.fnClearTable();
                    for (var i = 0; i < data.length; i++) {
                        dt_search_payee.fnAddData([i+1,
                           data[i]["PayeeDetailId"],
                           data[i]["BIC"],
                           data[i]["AccountName"],
                           data[i]["PayeeCode"],
                           data[i]["BankName"],
                           data[i]["Accountnumber"],
                           data[i]["PayeeType"],
                           data[i]["Address1"],
                           '<a href="#" onclick="payeeClicked(' + i + ')"><i class="glyphicon glyphicon-plus-sign"></i></a>'
                        ]);
                    }
                },
                failure: function (error) {
                    swal(error);
                }
            });
        }

        function payeeClicked(rowId) {

            var data = dt_search_payee.DataTable().rows().data();
            var row = data[rowId];
            dt_selected_payee.fnClearTable();
            $("#PayeeName").val(row[3]);
            dt_selected_payee.fnAddData([row[1], row[2], row[3], row[4], row[5], row[6], row[7], row[8]]);
            $("#payeeModal").modal("hide");
        }
        // =========== END SEARCH PAYEE ====================

        // =========== START VOUCHER DETAILS ===============

        var dt_voucher_listing = $('#dt_voucher_listing').dataTable({
            "language": {
                "emptyTable": '<strong id="loader" style="color:green">No matching records found</strong>',
                "zeroRecords": "No matching records found"
            }
        });

        $("#dt_voucher_listing_wrapper .dt-toolbar").remove();

        $("#searchbox").on("keyup search input paste cut", function () {
            dt_voucher_listing.DataTable().search(this.value).draw();
        });




        var dt_voucher_detail = $('#dt_voucher_detail').dataTable({
            "data": [],
            "columns": [
                { title: "Expenditure Line Item" },
                { title: "Item Description" },
                { title: "Funding Allocation Reference" },
                { title: "Expense Amount" }
            ]
        });

        // =========== END VOUCHER DETAILS ====================

        ///========== SEARCH GL =====

        var dt_search_gl_item = $('#dt_search_gl_item').dataTable({
            "language": {
                "emptyTable": '<strong id="loader" style="color:green">No matching records found</strong>',
                "zeroRecords": "No matching records found"
            },
        });

        $("#searchbox2").on("keyup search input paste cut", function () {
            dt_search_gl_item.DataTable().search(this.value).draw();
        });
        var SubBudgetClassOld = $("#SubBudgetClass").val();


        $("#SubBudgetClass").change(function () {

            var sourceaccount = $("#SourceAccountNo").val();
            var subbudgetclass = $(this).val();
            var url = '@Url.Action("GetPayerAccountBySubbudgetClass", "ExternalPayment")/?subbudgetclass=' + subbudgetclass;
            $.ajax({
                type: "POST",
                url: url,
                contentType: "html",
                success: function (response) {
                    console.log(response[1]);
                        $("#PayerAccountNumber").val(response[1]);
                        $("#PayerAccount").val(response[2]);
                       $("#PayerAccountCurrercy").val(response[3]);

                    if (sourceaccount != "" || sourceaccount != undefined) {
                        var payeraccountno = $("#PayerAccountNumber").val();

                        if (sourceaccount == payeraccountno) {
                            paymentmethod = "Same Account";
                        }
                        else {
                            paymentmethod = "Different Account";
                        }
                        $("#BulkPaymentMethod").val(paymentmethod);
                    }
                },
            });

           var _data = dt_voucher_detail.DataTable().rows().data();
           if (_data.length > 0) {
                confirmSubBudgetClassChange(SubBudgetClassOld, $(this).val());
           } else {
               updateSearchGITable(subbudgetclass);
           }

            getTotalSbcAmount(subbudgetclass);

        });


        $("#SourceAccountNo").change(function () {
            debugger;

            var sourceaccount = $(this).val();
            var payeraccountno = $("#PayerAccountNumber").val();
            if (sourceaccount == payeraccountno) {
                paymentmethod = "Same Account";
            }
            else {
                paymentmethod = "Different Account";
            }
            $("#BulkPaymentMethod").val(paymentmethod);


        });

        // debugger
        function GetPaymentMethod(subBudgetClassList) {
            //debugger
            subBudgetClassList = subBudgetClassList.split(";");
            var subBudgetClass = subBudgetClassList[0].trim();
            $.ajax({
                type: "GET",
                url: "@Url.Action("GetBulkPaymentMethod", "PaymentBatches")",
                data: { subBudgetClass },
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {

                    $("#BulkPaymentMethod").val(response.method);
                    var cat = response.method;
                    if (cat == "Same Account") {
                        $('#Name').toggle(false)
                        $('#Type').toggle(false)
                    }
                    else {
                        $('#Name').toggle(true)
                        $('#Type').toggle(true)
                    }

            },
            failure: function (error) {
                swal(error);
            }
        });
        }

        function updateSearchGITable(subBudgetClass) {

            dt_search_gl_item.fnClearTable();
            $("#loader").text("Loading Please Wait...")
            var url = '@Url.Action("GetFundbalance", "ExternalPayment")';
            var fundBalanceParams = {"subBudgetClass": subBudgetClass};

            $.ajax({
                type: "post",
                url: url,
                data: fundBalanceParams,
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {
                    //=== UPDATE SEARCH GI TABLE ====
                    data = response.data;
                    dt_search_gl_item.fnClearTable();
                    for (var i = 0; i < data.length; i++) {
                        dt_search_gl_item.fnAddData([i+1,
                           data[i]["GlAccount"].split("|").join("-"),
                           data[i]["GlAccountDesc"],
                            toLabel(data[i]["FundBalance"]),
                           data[i]["FundingRefNo"],
                          '<amount-input type="number" placeholder="Amount" id="Id-' + i + '" onkeyup="amountChanged(' + i + ')"/>'

                        ]);
                    }

                    if (data.length == 0) {
                        $("#loader").text("No Matching Record Found")
                    } else {
                        $("#loader").text("")
                    }
                },
                failure: function (error) {
                    swal(error);
                }
            });
        }

        var TotalAmountOld = $("#total_voucher_amount").val();
        function clearVochaDetailsTable() {
            var _data = dt_voucher_detail.DataTable().rows().data();

            if (_data.length > 0) {
                confirmTotalAmountChange(TotalAmountOld, $("#total_voucher_amount").val().split(",").join(""));
            }
            TotalAmountOld = $("#total_voucher_amount").val().split(",").join("");
        }


        function resetVochaDetailsTable() {
            $("#total_amount").text("0.00");
            dt_voucher_detail.fnClearTable();
        }

        function SearchGl() {


            swal({
                title: 'Change GL Items ?',
                text: "All Saved GL Items  will be Cleared",
                buttons: [
                    'Proceed',
                    'Cancel'
                ],
                closeOnClickOutside: false,
            }).then(function (isConfirm) {
                if (isConfirm) {
                    swal("Cancelled", "No change was made");
                } else {
                    let id = $("#PaymentBatchID").val();

                    let operaAmount = toNumber($("#total_voucher_amount").val());
                    let totalSbcBalance = toNumber($("#totalsbcAmount").val());
                    debugger;
                    if (parseFloat(totalSbcBalance) < parseFloat(operaAmount)) {

                        swal("Transaction amount (" + operaAmount + ") exceeds Total  Sub Budget Class fund balance (" + totalSbcBalance + ")", { icon: "warning" }).then((e) => {
                        });
                        return;
                    }

                    $('#total_voucher_amount2').val(toLabel(operaAmount));
                    $('#glItemsModal').modal('show');
                }
            });

        }
        /////// ==== END OF SEARCH GL ==============


        //==== START OF ADD GL Items to Voucher Details ======
        function remove(array, val) {
            var found = array.indexOf(val);
            while (found !== -1) {
                array.splice(found, 1);
                found = array.indexOf(val);
            }
        }

        var form_data_status = [];
        var all_amounts = {};
        function amountChanged(i) {

            var data = dt_search_gl_item.DataTable().rows().data();
            var row = data.rows(i).data()[0]
            var original_amount = toNumber(row[3]);
            var entered_amount = toNumber($("#_Id-" + i).val());
            all_amounts["Id-" + i] = toNumber($("#_Id-" + i).val());
            var balance = original_amount - entered_amount;

            if (balance < 0) {
                form_data_status.push(i);
                $("#_Id-" + i).css({ 'color': 'red' });
                $("#btn_save_gl_items").attr("disabled", true);
            } else {
                $("#_Id-" + i).css({ 'color': 'black' });
                $("#btn_save_gl_items").attr("disabled", false);
                remove(form_data_status, i);
                computeTotalAmount();
            }

        }

        function computeTotalAmount() {

            var total_amount = 0;
            var difference = 0;
            var amount = "";
            var data = dt_search_gl_item.DataTable().rows().data();
            var obj = [];

            for (var i = 0; i < data.length; i++) {
                var amount = all_amounts["Id-" + i];

                if (amount == undefined) {
                    amount = "";
                }

                if (amount) {
                    total_amount = toNumber(total_amount) + toNumber(amount);
                }

            }
            try {

                difference = toNumber($('#total_voucher_amount2').val()) - toNumber(total_amount);
                $('#difference').val(difference.toLocaleString());
                if (difference < 0) {
                    $("#difference").css({ 'color': 'red' });
                    $("#btn_save_gl_items").attr("disabled", true);

                } else {
                    $("#difference").css({ 'color': 'black' });
                    $("#btn_save_gl_items").attr("disabled", false);
                }
            } catch (e) { }
            $("#total_line_amount").val(toLabel(total_amount));
        }


        $("#btn_save_gl_items").click(function () {

            var total_amount = 0;
            var difference = 0;
            var data = dt_search_gl_item.DataTable().rows().data();
            if (form_data_status.length == 0) {
                var obj = [];
                dt_voucher_detail.fnClearTable();
                $("#total_amount").text("0.00");
                for (var i = 0; i < data.length; i++) {

                    var amount = all_amounts["Id-" + i];
                    if (amount == undefined) {
                        amount = "";
                    }
                    if (amount.toString().trim()) {
                        var row = data.rows(i).data()[0];
                        if (parseFloat(amount) > 0) {
                            console.log(typeof(amount))
                            dt_voucher_detail.fnAddData([row[1], row[2], row[4], toLabel(amount)]);
                        }
                        total_amount = parseFloat(total_amount) + parseFloat(amount);
                        $("#total_amount").text(total_amount.toLocaleString());
                    }
                }

                difference = parseFloat(total_amount) - parseFloat(amount);
                if (difference < 0) {
                    swal("Difference Cannot be negative..");
                    dt_voucher_detail.fnClearTable();
                } else {
                    $('#glItemsModal').modal('hide');

                }
            } else {
                swal("Item has insufficient fund balance....");
            }
            toggleTableInfo();
        });

        toggleTableInfo();
        function toggleTableInfo() {
            var data = dt_voucher_detail.DataTable().rows().data();
            if (data.length > 0) {
                $("#dt_voucher_detail").toggle(true);
                $("#infoPanel").toggle(false);
            } else {
                $("#dt_voucher_detail").toggle(false);
                $("#infoPanel").toggle(true);
            }
        }
        //==== END OF ADD GL Items to Voucher Details ======


        // =========== FORM SUBMISSION ==================
        $("#saveLoader").toggle(false);
        $("#form_submision").click(function () {
            debugger;
            let totalbatchamount = $("#total_voucher_amount2").val();
            let totalSBCamount = $("#totalsbcAmount").val().split(",").join("");
            let BatchTotalAmount = totalbatchamount.split(",").join("");
            let totalAmountGLitem = $('#total_amount').text().split(",").join("");

            if (totalbatchamount == "") {
                totalbatchamount = $("#total_voucher_amount").val();
                BatchTotalAmount = totalbatchamount.split(",").join("");
                totalAmountGLitem = $("#total_voucher_amount").val().split(",").join("");
            }

            var diff = parseFloat(BatchTotalAmount) - parseFloat(totalAmountGLitem);
            if (diff != 0) {
                swal("GL Item Amount and Total Batch Amount does not Match !", { icon: "warning" }).then((e) => {
                });
                return;
            }

            if (parseFloat(totalSBCamount) < parseFloat(BatchTotalAmount)) {
                swal("Total SBC Amount is less than total Batch Amount", { icon: "warning" }).then((e) => {
                });
                return;
            }

            var paymentBatchCoa = []
            var voucherDetailsData = dt_voucher_detail.DataTable().rows().data();

            for (var i = 0; i < voucherDetailsData.length; i++) {
                var _row = voucherDetailsData.rows(i).data()[0];
                var baseAmountDetail = parseFloat(_row[3].split(",").join(""));
                if (baseAmountDetail > 0) {
                    paymentBatchCoa.push({
                        "ExpenditureLineItem": _row[0].split("-").join("|"),
                        "ItemDescription": _row[1],
                        "FundingReference": _row[2],
                        "ExpenseAmount": _row[3],
                        "baseAmountDetail": baseAmountDetail,
                    })
                }
            }

            var form_data = {}

            form_data = {

                "SubBudgetClass": $("#SubBudgetClass").val(),
                "PaymentBatchID": $("#PaymentBatchID").val(),
                "BatchNo": $("#BatchNumber").val(),
                "BatchDesc": $("#BatchDescription").val(),
                "OperationalAmount": totalAmountGLitem,
                "PaymentBatchCoa": paymentBatchCoa,
                "PayerAccount": $("#PayerAccountNumber").val(),
                "PayerAccountCurrercy": $("#PayerAccountCurrercy").val(),
                "TransactionAmount": totalAmountGLitem,
                "EquivalentOperationalAmount": totalAmountGLitem,
                "SourceAccountNo": $("#SourceAccountNo").val(),
                "BulkPaymentMethod": $("#BulkPaymentMethod").val()
            }

            if (paymentBatchCoa.length == 0) {
                swal("No GL Items Selected", { icon: "warning" })
            } else {
                var url = '@Url.Action("EditGLitem", "ExternalPayment")';
                var urlList = '@Url.Action("PaymentBatchConfirmation", "ExternalPayment")';
                $("#form_submision").prop('disabled', true);
                var paymentbatchId = $("#PaymentBatchID").val();
                $("#saveLoader").toggle(true);
                $.ajax({
                    type: "post",
                    url: url,
                    data: { paymentBatch: form_data,id:paymentbatchId },
                    contenttype: "application/json; charset=utf-8",
                    datatype: "json",
                    success: function (response) {
                        $("#form_submision").prop('disabled', false);
                        $("#saveLoader").toggle(false);
                        if (response == "Success") {
                            swal("Saved Successfully!", { icon: "success" })
                                .then((value) => {
                                    window.location.href = urlList;
                                });
                        }
                        else {
                            swal(response, { icon: "warning" });
                        }
                    },
                    failure: function (error) {
                        $("#form_submision").prop('disabled', false);
                        $("#saveLoader").toggle(false);
                        swal(error);
                    }
                });
            }


        });

        var controlNumberIsProvided = false;


        function validateInputsParameters(parameterList) {
            var resetStyle = function (parameterList) {
                for (var i = 0; i < parameterList.length; i++) {
                    $(parameterList[i] + "_1").attr("style", "color: white;");
                }
            }

            resetStyle(parameterList);
            for (var i = 0; i < parameterList.length; i++) {
                if (!$(parameterList[i]).val()) {
                    return parameterList[i];
                }
            }
            return null;
        }


        function confirmTotalAmountChange(oldVal, newVal) {
            swal({
                title: 'Change Total Amount?',
                text: "All the GL Items will be Cleared",
                buttons: [
                  'Cancel',
                  'Proceed'
                ],
            }).then(function (isConfirm) {
                if (isConfirm) {
                    $("#total_voucher_amount").val(newVal);
                    dt_voucher_detail.fnClearTable();
                    $("#total_amount").load(location.href + " #total_amount");
                    $("#total_line_amount").val(0);

                    all_amounts = {};
                    updateSearchGITable($("#SubBudgetClass").val());
                    computeTotalAmount();

                    swal({
                        title: 'Success',
                        icon: 'success'
                    });
                } else {
                    $("#total_voucher_amount").val(oldVal);
                    TotalAmountOld = oldVal;
                    swal("Cancelled", "No change was made");
                }
            });

        }
        function confirmSubBudgetClassChange(oldVal, newVal) {
            swal({
                title: 'Change Sub Budget Class?',
                text: "All the GL Items will be Cleared",
                buttons: [
                  'Cancel',
                  'Proceed'
                ],
            }).then(function (isConfirm) {
                if (isConfirm) {
                    dt_voucher_detail.fnClearTable();
                    $("#total_amount").load(location.href + " #total_amount");
                    $("#total_line_amount").val(0);
                    all_amounts = {};
                    updateSearchGITable(newVal);
                    computeTotalAmount();

                    swal({
                        title: 'Success',
                        icon: 'success'
                    });
                } else {
                    $("#SubBudgetClass").val(oldVal).prop('selected', true);
                    SubBudgetClassOld = $("#SubBudgetClass").val();
                    swal("Cancelled", "No change was made");
                }
            });

        }

        //========== INPUT THOUSAND SEPARATOR ==================

        $("#total_voucher_amount").on("keyup input paste", function () {
            $("#total_voucher_amount").val(inputThousandSeparator(this.value))
        })

        var OldVal = 0
        function inputThousandSeparator(NewVal) {
            if (NewVal) {
                try {
                    NewVal = parseFloat(NewVal.split(",").join(""))
                    if (typeof NewVal == 'number' && !Number.isNaN(NewVal)) {
                        OldVal = NewVal;
                        return NewVal.toLocaleString()
                    } else {
                        return OldVal
                    }
                } catch (e) {
                    console.log(e)
                }
            }
        }

        function preLoadData() {

            var paymentbatchId = $("#PaymentBatchID").val();
            var subbudgetclass = $("#SubBudgetClass").val();
            $("#total_amount").text(toLabel($("#total_voucher_amount").val()))

            var totalItemAmount = 0;
            var url = '@Url.Action("GetPaymentBatchCoasDetails", "ExternalPayment")';
            $.ajax({
                type: "get",
                url: url + "/?id=" + paymentbatchId,
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {
                    data = response.data;
                    dt_voucher_detail.fnClearTable();
                    for (var i = 0; i < data.length; i++) {
                        dt_voucher_detail.fnAddData([
                           data[i]["DrGlAccount"].split("|").join("-"),
                           data[i]["DrGlAccountDesc"],
                           data[i]["FundingReferenceNo"],
                           data[i]["BaseAmount"].toLocaleString(),
                        ]);

                        totalItemAmount = parseFloat(totalItemAmount) + parseFloat(data[i]["BaseAmount"]);

                    }
                    toggleTableInfo();
                   // $("#total_amount").text(toLabel(totalItemAmount));
                },
                failure: function (error) {
                    swal(error);
                }
            });
            console.log

            updateSearchGITable(subbudgetclass);
        }


         function getTotalSbcAmount(sbc) {
          debugger


            $.ajax({
                type: "GET",
                url: "@Url.Action("GetTotalSubBudgetClassAmount", "PaymentBatches")",
                data: { sbc },
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {
                    var balanceAmount = response.data.BalanceAmount;
                    $("#totalsbcAmount").val(toLabel(balanceAmount || 0))
                },
                failure: function (error) {
                    swal(error);
                }
            });
         }

    </script>
}


