@model IEnumerable<IFMIS.Areas.IFMISTZ.Models.PrePaymentVM>
    @{
    ViewBag.Title = "Prepayment Examine Receiving";
    }

    <div id="content" style="margin: 5px; padding-top: 30px">

        <div class="row">

        </div>
        <!-- widget grid -->
        <section id="widget-grid" class="">
            <!-- START ROW -->

            <div class="row">

                <!-- NEW COL START -->
                <article class="col-sm-12 col-md-12 col-lg-12">

                    <!-- Widget ID (each widget will need unique ID)-->
                    <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">

                        <header>
                            <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                            <h2> Prepayment Examine Receiving </h2>
                        </header>
                        <div>
                            <div class="widget-body " style="padding-top:10px;width:100%">

                                <table class="table  table-bordered table-hover table-condensed" id="dt_lpo">
                                    <thead>
                                        <tr>
                                            <th style="text-align:right;width:4%"></th>
                                            <th style="text-align:left;">Receiving Number</th>
                                            <th style="text-align:left">Prepayment Number</th>
                                            <th style="text-align:left">Supplier</th>
                                            <th style="text-align:right">Prepayment Amount</th>
                                            <th style="text-align:right">Total Received</th>
                                            <th style="text-align:right">Receiving Amount</th>
                                            <th style="text-align:right">Remaining Amount</th>
                                            <th style="text-align:left">Status</th>
                                            <th style="text-align:center">Action</th>
                                        </tr>
                                    </thead>

                                    <tbody>
                                        @{var i = 0;}
                                        @foreach (var item in Model)
                                        {
                                            i++;
                                            decimal balance = Convert.ToDecimal(item.PrePaymentAmount) - Convert.ToDecimal(item.ReceivedAmount);

                                            decimal receivedAmt = Convert.ToDecimal(item.ReceivedAmount);
                                            // decimal receivedAmt = Convert.ToDecimal(item.ReceivedAmount) - Convert.ToDecimal(item.ReceivingItemsValue);
                                            <tr>
                                            <td style="text-align:right">
                                                @i
                                            </td>
                                            <td style="text-align:left">
                                                @Html.DisplayFor(modelItem => item.ReceivingNumber)
                                            </td>
                                            <td style="text-align:left">
                                                @Html.DisplayFor(modelItem => item.PrePaymentNo)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.SupplierName)
                                            </td>

                                            <td style="text-align:right">
                                                @Html.DisplayFor(modelItem => item.Currency)
                                                @Html.DisplayFor(modelItem => item.PrePaymentAmount)

                                            </td>
                                                <td style="text-align:right">
                                                    @*@Html.DisplayFor(modelItem => item.Currency)*@
                                                    @*@Html.DisplayFor(modelItem => item.ReceivedAmount)*@
                                                    @receivedAmt
                                                </td>
                                                <td style="text-align:right">
                                                    @*@Html.DisplayFor(modelItem => item.Currency)*@
                                                    @Html.DisplayFor(modelItem => item.ReceivingItemsValue)
                                                </td>
                                            <td style="text-align:right">


                                                @Html.DisplayFor(modelItem => item.Currency)
                                                @balance.ToString("#,##0")

                                            </td>

                                            <td style="text-align:left">
                                                @Html.DisplayFor(modelItem => item.OverallStatus)
                                            </td>


                                            <td style="text-align:center">

                                                <div class="btn-group">

                                                    <button type="button" class="btn btn-info btn-xs dropdown-toggle" data-toggle="dropdown" style="width:40px;border-radius:1px;" aria-haspopup="true" aria-expanded="false">
                                                        <span class="caret"></span>
                                                        <span class="sr-only">Toggle Dropdown</span>
                                                    </button>
                                                    <ul class="dropdown-menu">
                                                        <li>
                                                            <a href="@Url.Action("PreviewReceiving", "PrePayment" ,new {id=item.ReceivingSummaryId})" class="btn-xs edit">
                                                                <i class="fa fa-search-minus"></i>  Preview
                                                            </a>
                                                        </li>

                                                        @*<li id="decisionList"><a href="#" data-toggle="modal" data-id=@item.PrePaymentId data-lpo='@item.PrePaymentNo' class="approve_lpo  btn-xs edit"><i class="fa fa-edit"></i>Examine</a></li>*@
                                                        <li id="decisionList"><a href="#" data-toggle="modal" data-target="#examinePrePayment" data-id=@item.PrePaymentId data-prepayment='@item.PrePaymentNo' class="examine_prepayment  btn-xs edit">Examine</a></li>
                                                        <li id="decisionList2"><a href="#" data-toggle="modal" data-target="#rejectPrePayment" data-id=@item.PrePaymentId data-lpo='@item.PrePaymentNo' class="reject_lpo  btn-xs edit"><i class="fa fa-edit"></i>Reject</a></li>

                                                    </ul>
                                                </div>
                                            </td>

                                        </tr>
                                        }
                                    </tbody>
                                </table>

                            </div>
                        </div>
                    </div>
                </article>

            </div>
        </section>

    </div>

<div class="modal fade" id="rejectPrePayment">
    <div class="modal-dialog">
        <div class="modal-content">

            <div class="modal-header">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h4 align="center">Prepayment Number <span id="lpo_number"></span></h4>
            </div>
            @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "RejectReason" }))
            {
                <div class="modal-body form-horizontal">

                    <br />

                    <input type="hidden" name="Id" id="Id" value="">
                    <div class="form-group">
                        <label class="control-label col-md-3" for="Remark">Reason</label>
                        <div class="col-md-7">
                            <textarea name="Reason" id="Reason" required rows="4" class="form-control"></textarea>
                        </div>
                    </div>

                </div>
                <div class="modal-footer">
                    <a href="#" class="btn btn-info" data-dismiss="modal">Cancel</a>
                    @*<input class="btn btn-info" type="submit" id="btnSubmit" value="Submit" />*@

                    <button type="submit" class="btn btn-info" style="margin-right:2px">
                        <i class="glyphicon glyphicon-floppy-disk"></i> Save
                    </button>
                    @*<input type="submit" value="Submit" class="btn btn-success" id="btnSubmit" />*@

                </div>

            }
        </div>
    </div>
</div>


<div class="modal fade" id="examinePrePayment">
    <div class="modal-dialog">
        <div class="modal-content">

            <div class="modal-header">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h4 align="center">Prepayment Number <span id="prepayment_number2"></span></h4>
            </div>
            @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "ExamineReason" }))
            {
                <div class="modal-body form-horizontal">

                    <br />

                    <input type="hidden" name="Id" id="Id" value="">
                    <div class="form-group">
                        <label class="control-label col-md-3" for="Remark">Reason</label>
                        <div class="col-md-7">
                            <textarea name="Reason" id="Reason" required rows="4" class="form-control"></textarea>
                        </div>
                    </div>

                </div>
                    <div class="modal-footer">
                        <a href="#" class="btn btn-info" data-dismiss="modal">Cancel</a>
                        <button type="submit" class="btn btn-info" style="margin-right:2px">
                            <i class="glyphicon glyphicon-floppy-disk"></i> Examine
                        </button>
                    </div>
            }
        </div>
    </div>
</div>



    @section pagespecific {
    <!-- PAGE RELATED PLUGIN(S) -->

    <script type="text/javascript">

            $(document).ready(function () {
                /* BASIC ;*/
                var responsiveHelper_dt_lpo = undefined;
                var responsiveHelper_datatable_fixed_column = undefined;
                var responsiveHelper_datatable_col_reorder = undefined;
                var responsiveHelper_datatable_tabletools = undefined;

                var breakpointDefinition = {
                    tablet: 1024,
                    phone: 480
                };

                $('#dt_lpo').dataTable({
                    "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-12 hidden-xs'l>r>" +
                        "t" +
                        "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                    "autoWidth": true,
                    "preDrawCallback": function () {
                        // Initialize the responsive datatables helper once.
                        if (!responsiveHelper_dt_lpo) {
                            responsiveHelper_dt_lpo = new ResponsiveDatatablesHelper($('#dt_lpo'), breakpointDefinition);
                        }
                    },
                    "rowCallback": function (nRow) {
                        responsiveHelper_dt_lpo.createExpandIcon(nRow);
                    },
                    "drawCallback": function (oSettings) {
                        responsiveHelper_dt_lpo.respond();
                    }
                });

                /* END BASIC */

                /* COLUMN FILTER  */
                var otable = $('#datatable_fixed_column').DataTable({
                    "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6 hidden-xs'f><'col-sm-6 col-xs-12 hidden-xs'<'toolbar'>>r>" +
                            "t" +
                            "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                    "autoWidth": true,
                    "preDrawCallback": function () {
                        // Initialize the responsive datatables helper once.
                        if (!responsiveHelper_datatable_fixed_column) {
                            responsiveHelper_datatable_fixed_column = new ResponsiveDatatablesHelper($('#datatable_fixed_column'), breakpointDefinition);
                        }
                    },
                    "rowCallback": function (nRow) {
                        responsiveHelper_datatable_fixed_column.createExpandIcon(nRow);
                    },
                    "drawCallback": function (oSettings) {
                        responsiveHelper_datatable_fixed_column.respond();
                    }
                });

                // custom toolbar
                $("div.toolbar").html('<div class="text-right"><img src="/Content/img/logo.png" alt="SmartAdmin" style="width: 111px; margin-top: 3px; margin-right: 10px;"></div>');

                // Apply the filter
                $("#datatable_fixed_column thead th input[type=text]").on('keyup change', function () {
                    otable
                        .column($(this).parent().index() + ':visible')
                        .search(this.value)
                        .draw();
                });
                /* END COLUMN FILTER */

                /* COLUMN SHOW - HIDE */
                $('#datatable_col_reorder').dataTable({
                    "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'C>r>" +
                            "t" +
                            "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
                    "autoWidth": true,
                    "preDrawCallback": function () {
                        // Initialize the responsive datatables helper once.
                        if (!responsiveHelper_datatable_col_reorder) {
                            responsiveHelper_datatable_col_reorder = new ResponsiveDatatablesHelper($('#datatable_col_reorder'), breakpointDefinition);
                        }
                    },
                    "rowCallback": function (nRow) {
                        responsiveHelper_datatable_col_reorder.createExpandIcon(nRow);
                    },
                    "drawCallback": function (oSettings) {
                        responsiveHelper_datatable_col_reorder.respond();
                    }
                });

                /* END COLUMN SHOW - HIDE */

                /* TABLETOOLS */
                $('#datatable_tabletools').dataTable({

                    // Tabletools options:
                    //   https://datatables.net/extensions/tabletools/button_options
                    "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'T>r>" +
                            "t" +
                            "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
                    "oTableTools": {
                        "aButtons": [
                        "copy",
                        "csv",
                        "xls",
                           {
                               "sExtends": "pdf",
                               "sTitle": "SmartAdmin_PDF",
                               "sPdfMessage": "SmartAdmin PDF Export",
                               "sPdfSize": "letter"
                           },
                           {
                               "sExtends": "print",
                               "sMessage": "Generated by SmartAdmin <i>(press Esc to close)</i>"
                           }
                        ],
                        "sSwfPath": "/Scripts/plugin/datatables/swf/copy_csv_xls_pdf.swf"
                    },
                    "autoWidth": true,
                    "preDrawCallback": function () {
                        // Initialize the responsive datatables helper once.
                        if (!responsiveHelper_datatable_tabletools) {
                            responsiveHelper_datatable_tabletools = new ResponsiveDatatablesHelper($('#datatable_tabletools'), breakpointDefinition);
                        }
                    },
                    "rowCallback": function (nRow) {
                        responsiveHelper_datatable_tabletools.createExpandIcon(nRow);
                    },
                    "drawCallback": function (oSettings) {
                        responsiveHelper_datatable_tabletools.respond();
                    }
                });
                /* END TABLETOOLS */

                //START PREPAYMENT EXAMINATION WITH REASONS

                $(".examine_prepayment").on('click', function () {
                    var id = $(this).data('id');
                    var prepayment = $(this).data('prepayment');
                    $("#prepayment_number2").text(prepayment);
                    $(".modal-body #Id").val(id);

                });

                $("#ExamineReason").on('submit', function (e) {
                    e.preventDefault();
                    var reason = $("#Reason").val();
                    var url = '@Url.Action("PrePaymentReceivingExamination", "PrePayment")';
                    var formData = $(this).serialize();
                    $('#examinePrePayment').modal('hide');
                    $.ajax(
                {
                    type: "POST",
                    url: url,
                    data: formData,
                    success: function (response) {
                        if (response == "Success") {
                            swal("Prepayment Examined Successfully", { icon: "success" })
                                                                .then((value) => { });
                            location.reload();
                        }
                        else {
                            swal("Failed to Examine Prepayment: " + response, { icon: "danger" })
                                                                .then((value) => { });
                        }
                    },
                    error: function (xhr) {
                        swal("An error has occured, contact system support" + response, { icon: "danger" })
                                                                .then((value) => { });
                        $("#divLoader").hide();
                    },

                });

                });
                //END PREPAYMENT EXAMINATION WITH REASONS

                @*//START APPROVE PRE PAYMENT
                $(".approve_lpo").on('click', function () {
                    var id = $(this).data('id');
                    var lpo = $(this).data('lpo');
                    swal({
                        title: 'Examine Receiving Prepayment',
                        text: "Do you what to Confirm Examine Receiving Prepayment   " + lpo + " ?",
                        buttons: [
                          'No',
                          'Yes'
                        ],
                    }).then(function (isConfirm) {
                        if (isConfirm) {
                            var url = '@Url.Action("ExamineReceiving", "PrePayment")';
                            document.getElementById("decisionList").style.display = "none";
                            document.getElementById("decisionList2").style.display = "none";
                            $.ajax(
                {
                    type: "POST",
                    url: url,
                    data: { id: id },
                    success: function (response) {
                        document.getElementById("decisionList").style.display = "block";
                        document.getElementById("decisionList2").style.display = "block";
                        if (response == "Success") {
                            swal("Examined Successfully", { icon: "success" })
                                                                            .then((value) => { });
                            location.reload();
                        }
                        else {
                            swal("Failed to approve:"+response, { icon: "danger" })
                                                                            .then((value) => { });
                        }
                    },
                    error: function (xhr) {
                        swal("An error has occured, contact system support:" + response, { icon: "danger" })
                                                                        .then((value) => { });
                        $("#divLoader").hide();
                    },

                });
                        } else {
                            swal("Cancelled", "No change was made");
                        }
                    });

                });
                //END APPROVE PRE PAYMENT*@

                $(".reject_lpo").on('click', function () {
                    var id = $(this).data('id');
                    var lpo = $(this).data('lpo');
                    $("#lpo_number").text(lpo);
                    $(".modal-body #Id").val(id);

                });

                $("#RejectReason").on('submit', function (e) {
                    e.preventDefault();
                    var reason = $("#Reason").val();
                    if (!reason) {
                        swal("Please enter reason of rejection", { icon: "danger" })
                                                                .then((value) => { });
                        return
                    }
                    var url = '@Url.Action("RejectReceiving", "PrePayment")';
                    var formData = $(this).serialize();
                    $('#rejectPrePayment').modal('hide');
                    $.ajax(
                {
                    type: "POST",
                    url: url,
                    data: formData,
                    success: function (response) {
                        if (response == "Success") {
                            // alert("Pre Payment Rejected  successfully");
                            swal("Prepayment Rejected Successfully", { icon: "success" })
                                                                .then((value) => { });
                            location.reload();
                        }
                        else {
                            // alert("Failed to reject Pre Payment,DbException");
                            swal("Failed to Reject Prepayment,DbException" + response, { icon: "danger" })
                                                                .then((value) => { });
                        }
                    },
                    error: function (xhr) {
                        //console.log(xhr.responseText);
                        // alert("An error has occured, contact system support");

                        swal("An error has occured, contact system support" + response, { icon: "danger" })
                                                                .then((value) => { });
                        $("#divLoader").hide();
                    },

                });

                });

                $(".receiveConfirm").on('click', function () {
                                var id = $(this).data('id');
                                var receivingno = $(this).data('receivingno');
                                var r = confirm("Do you what to confirm receiving   " + receivingno + " ?");
                                if (!r) {
                                    return;
                                }
                                var url = '@Url.Action("ConfirmReceiving", "PrePayment")';
                                $.ajax(
                    {
                        type: "POST",
                        url: url,
                        data: { id: id },
                        success: function (response) {
                            if (response == "Success") {
                                alert("Confirmed successfully");
                                location.reload();
                            }
                            else {
                                alert("Failed to confirm ,DbException");
                            }
                        },
                        error: function (xhr) {
                            //console.log(xhr.responseText);
                            alert("An error has occured, contact system support:"+response);
                            $("#divLoader").hide();
                        },

                    });
                            });
                            $(".lpoCancel").on('click', function () {
                                var id = $(this).data('id');
                                var lpo = $(this).data('lpo');
                                var r = confirm("Do you what to cancel Receiving Prepayment   " + lpo + " ?");
                                if (!r) {
                                    return;
                                }
                                var url = '@Url.Action("CancelLPO", "PrePayment")';
                                $.ajax(
                    {
                        type: "POST",
                        url: url,
                        data: { id: id },
                        success: function (response) {
                            if (response == "Success") {
                                alert("Cancelled successfully");
                                location.reload();
                            }
                            else {
                                alert("Failed to cancel ,DbException");
                            }
                        },
                        error: function (xhr) {
                            //console.log(xhr.responseText);
                            alert("An error has occured, contact system support");
                            $("#divLoader").hide();
                        },

                    });
                            });

                $(".rejected_lpo").on('click', function () {
                    var reason = $(this).data('reason');
                    var lpo = $(this).data('lpo');
                    $("#lpo_number").text(lpo);
                    $("#reason").text(reason);



                });

                var $rows = $('#lpo tr');
                $('#search').keyup(function () {
                    var val = $.trim($(this).val()).replace(/ +/g, ' ').toLowerCase();

                    $rows.show().filter(function () {
                        var text = $(this).text().replace(/\s+/g, ' ').toLowerCase();
                        return !~text.indexOf(val);
                    }).hide();
                });


                        });

    </script>
    }






