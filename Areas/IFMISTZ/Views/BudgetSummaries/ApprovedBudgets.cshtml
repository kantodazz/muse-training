@model IEnumerable<IFMIS.Areas.IFMISTZ.Models.GovBudgetSummaryVM>

@{
    ViewBag.Title = "Approved Budgets";
}

<div id="divLoader"></div>
<!-- MAIN CONTENT -->
<div id="content">

    <div class="row">
      

        <div class="col-xs-12 col-sm-3 col-md-3 col-lg-3">
            <!-- Button trigger modal -->
            <!--<a data-toggle="modal" href="#myModal" class="btn btn-success btn-lg pull-right header-btn hidden-mobile"><i class="fa fa-circle-arrow-up fa-lg"></i> Launch form modal</a>-->
        </div>
    </div>

    
    <!-- widget grid -->
    <section id="widget-grid" class="">


        <!-- START ROW -->

        <div class="row">

            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">

                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">
                    
                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2> Approved Budgets </h2>

                    </header>

                    <!-- widget div-->
                    <div>

                        <!-- widget edit box -->
                        <div class="jarviswidget-editbox">
                            <!-- This area used as dropdown edit box -->

                        </div>
                        <!-- end widget edit box -->
                        <!-- widget content -->
                        <div class="widget-body">
                            <table id="dt_basica" class="table table-striped table-bordered table-hover table-condensed" width="100%">
                                <thead>
                                    <tr style="color:black;">
                                        <th style="text-align:center"></th>
                                        <th style="text-align:center">
                                            Received Ceiling
                                        </th>
                                        <th style="text-align:center">
                                            Received Budget
                                        </th>
                                        <th style="text-align:center">
                                            Difference
                                        </th>
                                    </tr>
                                </thead>
                                    <tr style="background-color: #ffffff; color: black;">
                                        <th style="text-align:right">
                                            Revenue
                                        </th>
                                        <td style="text-align:right">
                                            @string.Format("{0:#,0.00}", ViewBag.REVENUETotalAmount)
                                        </td>
                                        <td style="text-align:right">
                                            @string.Format("{0:#,0.00}", ViewBag.REVENUETotalAmountReceived)
                                        </td>
                                        <td style="text-align:right">
                                            @string.Format("{0:#,0.00}", ViewBag.REVENUETotalAmount > ViewBag.REVENUETotalAmountReceived ? ViewBag.REVENUETotalAmount - ViewBag.REVENUETotalAmountReceived : ViewBag.REVENUETotalAmountReceived - ViewBag.REVENUETotalAmount)
                                        </td>
                                    </tr>
                                    <tr>
                                        <th style="text-align:right">
                                            Expenditure
                                        </th>
                                        <td style="text-align:right">
                                            @string.Format("{0:#,0.00}", ViewBag.EXPENDITURETotalAmount)
                                        </td>
                                        <td style="text-align:right">
                                            @string.Format("{0:#,0.00}", ViewBag.EXPENDITURETotalAmountReceived)
                                        </td>
                                        <td style="text-align:right">
                                            @string.Format("{0:#,0.00}", ViewBag.EXPENDITURETotalAmount > ViewBag.EXPENDITURETotalAmountReceived ? ViewBag.EXPENDITURETotalAmount - ViewBag.EXPENDITURETotalAmountReceived : ViewBag.EXPENDITURETotalAmountReceived - ViewBag.EXPENDITURETotalAmount)
                                        </td>
                                    </tr>
                                
                            </table>
                            <br />
                            <br />
                            <hr />
                            <table id="dt_basic" class="table table-striped table-bordered table-hover table-condensed" width="100%">
                                <thead>
                                    <tr style="background-color: #f5f5f5; color:black;">
                                        <th colspan="8" style="text-align:center">
                                            Total Government Budget : @string.Format("{0:#,0.00}", ViewBag.TotalBudgetAmt)/=
                                        </th>
                                    </tr>
                                    <tr style="background-color: #f5f5f5; color:black">
                                        <th>#</th>
                                        <th>
                                            @Html.DisplayNameFor(model => model.MuseInstitutionName)
                                        </th>
                                        <th colspan="2" style="text-align:center">
                                            Received ceiling
                                        </th>
                                        <th colspan="2" style="text-align:center">
                                            Received Budget
                                        </th>
                                        <th>
                                            @Html.DisplayNameFor(model => model.Status)
                                        </th>
                                        <th>Action</th>
                                    </tr>
                                    <tr style="background-color: #f5f5f5; color:black">
                                        <th></th>
                                        <th></th>
                                        <th style="text-align:center">
                                            @Html.DisplayNameFor(model => model.ExpectedAmountExpenditure)
                                        </th>
                                        <th style="text-align:center">
                                            @Html.DisplayNameFor(model => model.ExpectedAmount)
                                        </th>
                                        <th style="text-align:center">
                                            @Html.DisplayNameFor(model => model.TotalAmountReceivedExpenditure)
                                        </th>
                                        <th style="text-align:center">
                                            @Html.DisplayNameFor(model => model.TotalAmountReceived)
                                        </th>
                                        <th></th>
                                        <th></th>
                                    </tr>
                                </thead>
                                @{int i = 0;}
                                @foreach (var item in Model)
                                {
                                    i++;
                                    var status = item.Status;
                                    //var code = int.Parse(item.Code);
                                    //var code1 = int.Parse(item.MuseInstitutionCode);
                                    <tr>
                                        <td>
                                            @i
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.InstitutionCode) - @Html.DisplayFor(modelItem => item.MuseInstitutionName)
                                        </td>
                                        <td style="text-align:right">
                                            @Html.DisplayFor(modelItem => item.ExpectedAmountExpenditure)
                                        </td>
                                        <td style="text-align:right">
                                            @Html.DisplayFor(modelItem => item.ExpectedAmount)
                                        </td>
                                        <td style="text-align:right">
                                            @Html.DisplayFor(modelItem => item.TotalAmountReceivedExpenditure)
                                        </td>
                                        <td style="text-align:right">
                                            @Html.DisplayFor(modelItem => item.TotalAmountReceived)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Status)
                                        </td>
                                        <td style="text-align: center">
                                            <!-- Split button -->
                                            @*@if (status == "Not Balanced")
                                            {*@
                                                <div class="btn-group">
                                                    <button type="button" class="btn btn-info btn-xs">Action</button>
                                                    <button type="button" class="btn btn-info btn-xs dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                        <span class="caret"></span>
                                                        <span class="sr-only">Toggle Dropdown</span>
                                                    </button>
                                                    <ul class="dropdown-menu">
                                                        <li><a href="#" onclick="deleteBudget(@item.FinancialYear,`@item.Code`,`@item.MuseInstitutionCode`,`@status`)">Cancel</a></li>
                                                    </ul>
                                                </div>
                                            @*}*@
                                        </td>
                                    </tr>
                                }
                                <tfoot>
                                    <tr>
                                        <td></td>
                                        <td style="text-align:right">
                                            <strong>Total</strong>
                                        </td>
                                        <td style="text-align:right">
                                            <strong>@string.Format("{0:#,0.00}", Model.Sum(a => a.ExpectedAmountExpenditure))</strong>
                                        </td>
                                        <td style="text-align:right">
                                            <strong>@string.Format("{0:#,0.00}", Model.Sum(a => a.ExpectedAmount))</strong>
                                        </td>
                                        <td style="text-align:right">
                                            <strong>@string.Format("{0:#,0.00}", Model.Sum(a => a.TotalAmountReceivedExpenditure))</strong>
                                        </td>
                                        <td style="text-align:right">
                                            <strong>@string.Format("{0:#,0.00}", Model.Sum(a => a.TotalAmountReceived))</strong>
                                        </td>
                                        <td></td>
                                        <td></td>
                                    </tr>
                                </tfoot>
                            </table>
                        </div>
                        <!-- end widget content -->
                    </div>
                    <!-- end widget div -->

                </div>
                <!-- end widget -->

            </article>
            <!-- END COL -->

        </div>

        <!-- END ROW -->

    </section>
    <!-- end widget grid -->

</div>
<!-- END MAIN CONTENT -->

@section Scripts{
    <script>
        // DO NOT REMOVE : GLOBAL FUNCTIONS!

        $(document).ready(function () {

            /* // DOM Position key index //

            l - Length changing (dropdown)
            f - Filtering input (search)
            t - The Table! (datatable)
            i - Information (records)
            p - Pagination (paging)
            r - pRocessing
            < and > - div elements
            <"#id" and > - div with an id
            <"class" and > - div with a class
            <"#id.class" and > - div with an id and class

            Also see: http://legacy.datatables.net/usage/features
            */

            /* BASIC ;*/
            var responsiveHelper_dt_basic = undefined;
            var responsiveHelper_datatable_fixed_column = undefined;
            var responsiveHelper_datatable_col_reorder = undefined;
            var responsiveHelper_datatable_tabletools = undefined;

            var breakpointDefinition = {
                tablet: 1024,
                phone: 480
            };

            $('#dt_basic').dataTable({
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-12 hidden-xs'l>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_dt_basic) {
                        responsiveHelper_dt_basic = new ResponsiveDatatablesHelper($('#dt_basic'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_dt_basic.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_dt_basic.respond();
                }
            });

            /* END BASIC */

            /* COLUMN FILTER  */
            var otable = $('#datatable_fixed_column').DataTable({
                //"bFilter": false,
                //"bInfo": false,
                //"bLengthChange": false
                //"bAutoWidth": false,
                //"bPaginate": false,
                //"bStateSave": true // saves sort state using localStorage
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6 hidden-xs'f><'col-sm-6 col-xs-12 hidden-xs'<'toolbar'>>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_fixed_column) {
                        responsiveHelper_datatable_fixed_column = new ResponsiveDatatablesHelper($('#datatable_fixed_column'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_datatable_fixed_column.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_datatable_fixed_column.respond();
                }

            });

            // custom toolbar
            $("div.toolbar").html('<div class="text-right"><img src="/Content/img/logo.png" alt="SmartAdmin" style="width: 111px; margin-top: 3px; margin-right: 10px;"></div>');

            // Apply the filter
            $("#datatable_fixed_column thead th input[type=text]").on('keyup change', function () {

                otable
                    .column($(this).parent().index() + ':visible')
                    .search(this.value)
                    .draw();

            });
            /* END COLUMN FILTER */

            /* COLUMN SHOW - HIDE */
            $('#datatable_col_reorder').dataTable({
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'C>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_col_reorder) {
                        responsiveHelper_datatable_col_reorder = new ResponsiveDatatablesHelper($('#datatable_col_reorder'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_datatable_col_reorder.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_datatable_col_reorder.respond();
                }
            });

            /* END COLUMN SHOW - HIDE */

            /* TABLETOOLS */
            $('#datatable_tabletools').dataTable({

                // Tabletools options:
                //   https://datatables.net/extensions/tabletools/button_options
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'T>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
                "oTableTools": {
                    "aButtons": [
                        "copy",
                        "csv",
                        "xls",
                        {
                            "sExtends": "pdf",
                            "sTitle": "SmartAdmin_PDF",
                            "sPdfMessage": "SmartAdmin PDF Export",
                            "sPdfSize": "letter"
                        },
                        {
                            "sExtends": "print",
                            "sMessage": "Generated by SmartAdmin <i>(press Esc to close)</i>"
                        }
                    ],
                    "sSwfPath": "/Scripts/plugin/datatables/swf/copy_csv_xls_pdf.swf"
                },
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_tabletools) {
                        responsiveHelper_datatable_tabletools = new ResponsiveDatatablesHelper($('#datatable_tabletools'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_datatable_tabletools.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_datatable_tabletools.respond();
                }
            });

            /* END TABLETOOLS */

        });

        //function pageLoading(status) {
        //    debugger
        //    if (status == 'true') {
        //        $("#divLoader").css('display', 'block');
        //    }
        //    else {
        //        $("#divLoader").css('display', 'none');
        //    }
        //}

        var deleteBudget = function (FinancialYear, InstitutionCode, Instcode, status) {
            debugger
            var url = '@Url.Action("CancelBudgetApproved", "BudgetSummaries")';
            //var MuseInstitutionCode = InstitutionCode.toString();
            //var MuseInstitutionCode1 = Instcode.toString();
            //var Code = MuseInstitutionCode.slice(2);
            //var Code1 = MuseInstitutionCode1.slice(2);
               
            swal({
                title: 'Cancel',
                text: "Are you sure you want to Cancel this Budget?",
                buttons: [
                    'No',
                    'Yes'
                ],
            }).then(function (isConfirm) {
                if (isConfirm) {
                    //pageLoading("true");
                    $("#divLoader").show();
                    $.ajax(
                    {
                    type: "POST",
                    url: url,
                            data: { InstitutionCode: InstitutionCode, FinancialYear: FinancialYear, Instcode: Instcode, status: status },
                    success: function (response) {
                        //pageLoading("false");
                        $("#divLoader").hide();
                        if (response == "Success") {
                            swal("Cancelled successfully!", { icon: "success" })
                                        .then((value) => {
                                            location.reload();
                                        });
                        }
                        else {
                            swal(response, { icon: "warning" });
                        }
                    },
                    error: function (xhr) {
                        //pageLoading("false");
                        $("#divLoader").hide();
                        console.log('errorResp', xhr.responseText)
                        swal(xhr, { icon: "warning" });
                    },

                });
                } else {
                    swal("Cancelled", "No change was made");
                }
            });
        }

    </script>
}
