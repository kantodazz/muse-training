@model IFMIS.Areas.IFMISTZ.Models.BudgetSummary
<style>
    input[type=number] {
        padding: 8px;
        border: 1px solid #ccc;
        border-radius: 4px;
        resize: vertical;
    }

    input[type=text] {
        padding: 8px;
        border: 1px solid #ccc;
        border-radius: 4px;
        resize: vertical;
    }

    select {
        padding: 8px;
        border: 1px solid #ccc;
        border-radius: 4px;
        resize: vertical;
    }

    .searchContainer {
        display: inline-flex;
        flex: 1 1 300px;
        position: relative;
        border: 1px solid #ccc;
        border-radius: 5px;
        overflow: hidden;
    }

    .searchIcon {
        padding: 0.5rem;
    }

    .searchBox {
        border: 0;
        /*padding: 0.5rem 0.5rem 0.5rem 0;*/
        padding: 8px;
        flex: 1;
    }

    .searchButton {
        background: #538AC5;
        border: 0;
        color: white;
        /*padding: 0.5rem;*/
        padding: 8px;
        border-radius: 0;
    }

    select {
        padding: 8px;
        border: 1px solid #ccc;
        border-radius: 4px;
        resize: vertical;
    }

    .action-btn {
        width: 100px;
        /*background-color:#2196F3;*/
        color: white;
    }

    .action-btn2 {
        border-radius: 10px;
    }

    .swal-button--confirm {
        background-color: #4CAF50 !important;
    }

    .swal-button--cancel {
        background-color: #F44336 !important;
        color: #fff !important;
    }

    .swal-title {
        font-size: 20px !important;
    }

    .swal-text {
        font-size: 15px !important;
    }

    .swal-icon {
        width: 66px !important;
        height: 70px !important;
    }
</style>
<div style="padding:1em;padding-top:4em">
    <section id="widget-grid">
        <div class="row">
            <article class="col-sm-12 col-md-12 col-lg-12">

                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">

                    <header>
                        <span class="widget-icon"> <i class="fa fa-table"></i> </span>
                        <h2>Add New Budget Ceiling</h2>
                    </header>
                    <div>
                        @using (Html.BeginForm())
                        {
                            @Html.AntiForgeryToken()

                            <div class="widget-body " style="padding-top:10px">
                                <div class="row">
                                    <div class="form-group">
                                        @ViewBag.ErrorMsg
                                    </div>
                                </div>
                                <table class="table table-striped">
                                    <tr>
                                        <td colspan="1">

                                            <fieldset>
                                                <div class="well form-horizontal">
                                                    <div class="form-group">
                                                        <label class="col-md-4 control-label">Financial Year</label>
                                                        <div class="col-md-8 inputGroupContainer" style="padding-bottom:15px">
                                                            <div class="input-group">
                                                                @Html.DropDownList("FinancialYear", null, new { htmlAttributes = new { @style = "width:230px" } })
                                                                @Html.ValidationMessageFor(model => model.FinancialYear, "", new { @class = "text-danger" })
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="form-group">
                                                        <label class="col-md-4 control-label">Institution</label>
                                                        <div class="col-md-8 inputGroupContainer" style="padding-bottom:15px">
                                                            <div class="input-group">
                                                                @Html.DropDownList("InstitutionId", null, new { htmlAttributes = new { @style = "width:230px" } })
                                                                @Html.ValidationMessageFor(model => model.InstitutionId, "", new { @class = "text-danger" })
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="form-group">
                                                        <label class="col-md-4 control-label">Budget Type</label>
                                                        <div class="col-md-8 inputGroupContainer">
                                                            <div class="input-group">
                                                                @Html.DropDownList("JournalTypeId", null,new { htmlAttributes = new { @style = "width:230px" } })
                                                                @Html.ValidationMessageFor(model => model.JournalTypeId, "", new { @class = "text-danger" })
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="form-group">
                                                        <label class="col-md-4 control-label">Budget ID</label>
                                                        <div class="col-md-8 inputGroupContainer">
                                                            <div class="input-group">
                                                                @Html.EditorFor(model => model.BudgetID,new { htmlAttributes = new { @style = "width:230px" } })
                                                                @Html.ValidationMessageFor(model => model.BudgetID, "", new { @class = "text-danger" })
                                                            </div>
                                                        </div>
                                                    </div>

                                                    <div class="form-group">
                                                        <label class="col-md-4 control-label">Sub Budget Class</label>
                                                        <div class="col-md-8 inputGroupContainer">
                                                            <div class="input-group">
                                                                @Html.DropDownList("SubBudgetClass", null,new { htmlAttributes = new { @style = "width:230px !important;" } })
                                                                @Html.ValidationMessageFor(model => model.SubBudgetClass, "", new { @class = "text-danger" })
                                                            </div>
                                                        </div>
                                                    </div>


                                                </div>
                                            </fieldset>


                                        </td>
                                        <td colspan="1">

                                            <fieldset>
                                                <div class="well form-horizontal">
                                                    <div class="form-group">
                                                        <label class="col-md-4 control-label">Ceiling Amount</label>
                                                        <div class="col-md-8 inputGroupContainer">
                                                            <div class="input-group">
                                                                @Html.EditorFor(model => model.OperationalAmount, new { htmlAttributes = new { @style = "width:230px" } })
                                                                @Html.ValidationMessageFor(model => model.OperationalAmount, "", new { @class = "text-danger" })
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="form-group">
                                                        <label class="col-md-4 control-label">Book</label>
                                                        <div class="col-md-8 inputGroupContainer">
                                                            <div class="input-group">
                                                                @Html.EditorFor(model => model.Book, new { htmlAttributes = new { @style = "width:230px;", @id = "Book" } })
                                                                @Html.ValidationMessageFor(model => model.Book, "", new { @class = "text-danger" })
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="form-group">
                                                        <label class="col-md-4 control-label">Budget Version</label>
                                                        <div class="col-md-8 inputGroupContainer">
                                                            <div class="input-group">
                                                                @Html.EditorFor(model => model.BudgetVersion, new { htmlAttributes = new { @style = "width:230px;" } })
                                                                @Html.ValidationMessageFor(model => model.BudgetVersion, "", new { @class = "text-danger" })
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="form-group">
                                                        <label class="col-md-4 control-label">Legal Number</label>
                                                        <div class="col-md-8 inputGroupContainer">
                                                            <div class="input-group">
                                                                @Html.EditorFor(model => model.BudgetVersion, new { htmlAttributes = new { @style = "width:230px;" } })
                                                                @Html.ValidationMessageFor(model => model.BudgetVersion, "", new { @class = "text-danger" })
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="form-group">
                                                        <label class="col-md-4 control-label">Currency</label>
                                                        <div class="col-md-8 inputGroupContainer">
                                                            <div class="input-group">
                                                                @Html.DropDownList("OperationalCurrency", null,new { htmlAttributes = new { @style = "width:230px" } })
                                                                @Html.ValidationMessageFor(model => model.OperationalCurrency, "", new { @class = "text-danger" })
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </fieldset>


                                        </td>
                                    </tr>
                                </table>

                                <div style="padding-left:2%;">
                                    <button type="submit" class="btn btn-default" id="form_submision"
                                            style="width:150px;background-color:#2196F3;color:white">
                                        SAVE
                                    </button>
                                </div>
                            </div>
                        }
                    </div>

                </div>
            </article>
        </div>
    </section>



</div>
@section pagespecific {
    <script type="text/javascript">
       
        // DO NOT REMOVE : GLOBAL FUNCTIONS!

        $(document).ready(function () {

            $("#Book").attr('value','BUDGET');
            // PAGE RELATED SCRIPTS

            // switch style change
            $('input[name="checkbox-style"]').change(function () {
                //alert($(this).val())
                var $this = $(this);

                if ($this.attr('value') === "switch-1") {
                    $("#switch-1").show();
                    $("#switch-2").hide();
                } else if ($this.attr('value') === "switch-2") {
                    $("#switch-1").hide();
                    $("#switch-2").show();
                }

            });

            // tab - pills toggle
            $('#show-tabs').click(function () {
                var $this = $(this);
                if ($this.prop('checked')) {
                    $("#widget-tab-1").removeClass("nav-pills").addClass("nav-tabs");
                } else {
                    $("#widget-tab-1").removeClass("nav-tabs").addClass("nav-pills");
                }

            });

        });

    </script>
    <script type="text/javascript">

    // DO NOT REMOVE : GLOBAL FUNCTIONS!

    $(document).ready(function () {

        /* // DOM Position key index //

        l - Length changing (dropdown)
        f - Filtering input (search)
        t - The Table! (datatable)
        i - Information (records)
        p - Pagination (paging)
        r - pRocessing
        < and > - div elements
        <"#id" and > - div with an id
        <"class" and > - div with a class
        <"#id.class" and > - div with an id and class

        Also see: http://legacy.datatables.net/usage/features
        */

        /* BASIC ;*/
        var responsiveHelper_dt_basic = undefined;
        var responsiveHelper_datatable_fixed_column = undefined;
        var responsiveHelper_datatable_col_reorder = undefined;
        var responsiveHelper_datatable_tabletools = undefined;

        var breakpointDefinition = {
            tablet: 1024,
            phone: 480
        };

        $('#dt_basic').dataTable({
            "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-12 hidden-xs'l>r>" +
                "t" +
                "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
            "autoWidth": true,
            "preDrawCallback": function () {
                // Initialize the responsive datatables helper once.
                if (!responsiveHelper_dt_basic) {
                    responsiveHelper_dt_basic = new ResponsiveDatatablesHelper($('#dt_basic'), breakpointDefinition);
                }
            },
            "rowCallback": function (nRow) {
                responsiveHelper_dt_basic.createExpandIcon(nRow);
            },
            "drawCallback": function (oSettings) {
                responsiveHelper_dt_basic.respond();
            }
        });

        /* END BASIC */

        /* COLUMN FILTER  */
        var otable = $('#datatable_fixed_column').DataTable({
            //"bFilter": false,
            //"bInfo": false,
            //"bLengthChange": false
            //"bAutoWidth": false,
            //"bPaginate": false,
            //"bStateSave": true // saves sort state using localStorage
            "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6 hidden-xs'f><'col-sm-6 col-xs-12 hidden-xs'<'toolbar'>>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
            "autoWidth": true,
            "preDrawCallback": function () {
                // Initialize the responsive datatables helper once.
                if (!responsiveHelper_datatable_fixed_column) {
                    responsiveHelper_datatable_fixed_column = new ResponsiveDatatablesHelper($('#datatable_fixed_column'), breakpointDefinition);
                }
            },
            "rowCallback": function (nRow) {
                responsiveHelper_datatable_fixed_column.createExpandIcon(nRow);
            },
            "drawCallback": function (oSettings) {
                responsiveHelper_datatable_fixed_column.respond();
            }

        });

        // custom toolbar
        $("div.toolbar").html('<div class="text-right"><img src="/Content/img/logo.png" alt="SmartAdmin" style="width: 111px; margin-top: 3px; margin-right: 10px;"></div>');

        // Apply the filter
        $("#datatable_fixed_column thead th input[type=text]").on('keyup change', function () {

            otable
                .column($(this).parent().index() + ':visible')
                .search(this.value)
                .draw();

        });
        /* END COLUMN FILTER */

        /* COLUMN SHOW - HIDE */
        $('#datatable_col_reorder').dataTable({
            "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'C>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
            "autoWidth": true,
            "preDrawCallback": function () {
                // Initialize the responsive datatables helper once.
                if (!responsiveHelper_datatable_col_reorder) {
                    responsiveHelper_datatable_col_reorder = new ResponsiveDatatablesHelper($('#datatable_col_reorder'), breakpointDefinition);
                }
            },
            "rowCallback": function (nRow) {
                responsiveHelper_datatable_col_reorder.createExpandIcon(nRow);
            },
            "drawCallback": function (oSettings) {
                responsiveHelper_datatable_col_reorder.respond();
            }
        });

        /* END COLUMN SHOW - HIDE */

        /* TABLETOOLS */
        $('#datatable_tabletools').dataTable({

            // Tabletools options:
            //   https://datatables.net/extensions/tabletools/button_options
            "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'T>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
            "oTableTools": {
                "aButtons": [
                "copy",
                "csv",
                "xls",
                   {
                       "sExtends": "pdf",
                       "sTitle": "SmartAdmin_PDF",
                       "sPdfMessage": "SmartAdmin PDF Export",
                       "sPdfSize": "letter"
                   },
                   {
                       "sExtends": "print",
                       "sMessage": "Generated by SmartAdmin <i>(press Esc to close)</i>"
                   }
                ],
                "sSwfPath": "/Scripts/plugin/datatables/swf/copy_csv_xls_pdf.swf"
            },
            "autoWidth": true,
            "preDrawCallback": function () {
                // Initialize the responsive datatables helper once.
                if (!responsiveHelper_datatable_tabletools) {
                    responsiveHelper_datatable_tabletools = new ResponsiveDatatablesHelper($('#datatable_tabletools'), breakpointDefinition);
                }
            },
            "rowCallback": function (nRow) {
                responsiveHelper_datatable_tabletools.createExpandIcon(nRow);
            },
            "drawCallback": function (oSettings) {
                responsiveHelper_datatable_tabletools.respond();
            }
        });
        var $orderForm = $("#order-form").validate({
            // Rules for form validation
            rules: {
                name: {
                    required: true
                },
                email: {
                    required: true,
                    email: true
                },
                phone: {
                    required: true
                },
                interested: {
                    required: true
                },
                budget: {
                    required: true
                }
            },

            // Messages for form validation
            messages: {
                name: {
                    required: 'Please enter your name'
                },
                email: {
                    required: 'Please enter your email address',
                    email: 'Please enter a VALID email address'
                },
                phone: {
                    required: 'Please enter your phone number'
                },
                interested: {
                    required: 'Please select interested service'
                },
                budget: {
                    required: 'Please select your budget'
                }
            },

            // Do not change code below
            errorPlacement: function (error, element) {
                error.insertAfter(element.parent());
            }
        });

        // START AND FINISH DATE
        $('#startdate').datepicker({
            dateFormat: 'dd.mm.yy',
            prevText: '<i class="fa fa-chevron-left"></i>',
            nextText: '<i class="fa fa-chevron-right"></i>',
            onSelect: function (selectedDate) {
                $('#finishdate').datepicker('option', 'minDate', selectedDate);
            }
        });

        $('#finishdate').datepicker({
            dateFormat: 'dd.mm.yy',
            prevText: '<i class="fa fa-chevron-left"></i>',
            nextText: '<i class="fa fa-chevron-right"></i>',
            onSelect: function (selectedDate) {
                $('#startdate').datepicker('option', 'maxDate', selectedDate);
            }
        });

        /* END TABLETOOLS */

    })

    </script>
}