@model IFMIS.Areas.IFMISTZ.Models.ContractVM
@{
    ViewBag.Title = "Variation By Date";
    var i = 0;
}
<style type="text/css">
    body {
        margin-top: 40px;
    }

    .stepwizard-step p {
        margin-top: 10px;
    }

    .stepwizard-row {
        display: table-row;
    }

    .stepwizard {
        display: table;
        width: 100%;
        position: relative;
    }

    .stepwizard-step button[disabled] {
        opacity: 1 !important;
        filter: alpha(opacity=100) !important;
    }

    .stepwizard-row:before {
        top: 14px;
        bottom: 0;
        position: absolute;
        content: " ";
        width: 100%;
        height: 1px;
        background-color: #ccc;
        z-order: 0;
    }

    .stepwizard-step {
        display: table-cell;
        text-align: center;
        position: relative;
    }

    .loadingImg {
        display: none;
    }

    .search-btn {
        border: 1px solid #ccc;
        border-radius: 4px;
        padding: 5px;
        padding-right: 10px;
    }

    .search-container {
        display: inline-flex;
        flex: 1 1 300px;
        position: relative;
        border: 1px solid #ccc;
        border-radius: 5px;
        overflow: hidden;
        padding-left: 10px;
    }

    .name-input-container {
        display: inline-flex;
        flex: 1 1 300px;
        position: relative;
        overflow: hidden;
    }

    .search-icon {
        padding: 0.5rem;
    }

    .search-button {
        background: #538AC5;
        border: 0;
        color: white;
        padding: 8px;
        border-radius: 0;
    }

    input[type=number] {
        padding: 8px;
        border: 1px solid #ccc;
        width: 205px;
    }

    input[type=text] {
        padding: 5px;
        border: 1px solid #ccc;
    }

    input[type=search] {
        padding: 4px;
        border: hidden;
        border-radius: 4px;
    }

    textarea {
        border: 1px solid #ccc;
    }

    select {
        padding: 8px;
        border: 1px solid #ccc;
        resize: vertical;
        width: 230px;
    }

    .action-btn {
        width: 100px;
        color: white;
    }

    .form-label {
        text-align: right;
    }

    td {
        padding: 5px;
    }

    .info-box {
        padding: 10px;
        background-color: #ECF3F8;
        text-align: center;
        border: 1px solid #ccc;
        border-radius: 5px;
    }
</style>


<div id="content" style="margin: 5px; padding-top: 30px">

    <div class="row">


    </div>


    <!-- widget grid 1 -->
    <section id="widget-grid" class="">


        <!-- START ROW -->

        <div class="row">

            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">

                <!-- Widget ID (each widget will need unique ID start)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">

                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2>  Variation by decreasing amount</h2>

                    </header>


                    <div>
                        <div class="widget-body " style="padding-top:10px;width:100%">

                            <div class="row"> <div class="col-sm-6 col-md-6 col-lg-6"><strong>Contract Number&nbsp;:</strong>&nbsp;@Html.DisplayFor(model => model.ContractNumber)</div><div class="col-sm-6 col-md-6 col-lg-6"><strong>Contract Reg #&nbsp;:</strong>&nbsp;@Html.DisplayFor(model => model.ContractNo)</div></div>
                            <div class="row"> <div class="col-sm-6 col-md-6 col-lg-6"><strong>Contract Name&nbsp;:</strong>&nbsp;@Html.DisplayFor(model => model.ContractName)</div><div class="col-sm-6 col-md-6 col-lg-6"><strong>Contract Amount&nbsp;:</strong>&nbsp;@Html.DisplayFor(model => model.ContractAmount)</div></div>
                            <a href="@Url.Action("AdjustItems", "ContractVariation",new {id=Model.ContractVariationId })" class="btn btn-info btn-xs">
                                <i class="fa fa-edit"></i>  Remove Items
                            </a>
                            <div align="center">
                                <img src="~/Media/Images/ajax_loader.gif" class="loadingImg" />
                            </div>
                            <hr />
                            <!----WIZARD HEADING -->

                            <div class="stepwizard">
                                <div class="stepwizard-row setup-panel">
                                    <div class="stepwizard-step">
                                        <a href="#step-1" type="button" class="btn btn-primary btn-circle">1</a>
                                        <p><strong>Basic Information </strong></p>
                                    </div>
                                    <div class="stepwizard-step">
                                        <a href="#step-2" type="button" class="btn btn-default btn-circle" disabled="disabled">2</a>
                                        <p><strong>Payment Schedules</strong></p>
                                    </div>
                                </div>
                            </div>
                            <br />
                            <br />
                            <!----WIZARD BODY -->
                            <!---- STEP 1 START HERE -->

                            <div class="row setup-content" id="step-1">
                                @using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = "return SubmitSummary(this)" }))
                                {
                                    @Html.AntiForgeryToken()
                                    @Html.HiddenFor(model => model.ContractVariationId)
                                    @Html.HiddenFor(model => model.ContractId)
                                    @Html.HiddenFor(model => model.VariationType)
                                    <div class="form-horizontal">

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.VariationAmount, htmlAttributes: new { @class = "control-label   col-md-2" })
                                            <div class="col-md-3">
                                                <div class="input-group">

                                                    <span class="input-group-addon currencyDisp">@Html.DisplayFor(model => model.OperationalCurrency)</span>
                                                    @Html.EditorFor(model => model.VariationAmount, new { htmlAttributes = new { @class = "form-control", @required = "required", @autocomplete = "off", @placeholder = "Amount to be reduced" } })
                                                    @Html.ValidationMessageFor(model => model.VariationAmount, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            @Html.LabelFor(model => model.VariationReason, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-3">
                                                @Html.EditorFor(model => model.VariationReason, new { htmlAttributes = new { @class = "form-control", @required = "required", rows = "3", maxlength = 250 } })


                                            </div>

                                        </div>
                                    </div>
                                    <div class="col-md-offset-1">
                                        <a href="@Url.Action("PendingVariation", "ContractVariation")" style="margin-right:5px" type="submit" class="btn btn-info pull-left"><i class="glyphicon glyphicon-arrow-left"></i> Back  </a>
                                        <button type="button" class="save_button btn btn-info" style="margin-right:2px;display:none">
                                            <i class="glyphicon glyphicon-floppy-disk"></i> Save
                                        </button>

                                    </div>
                                    <button class="btn btn-info" id="save_summary" style="margin-right:2px">
                                        <i class="glyphicon glyphicon-floppy-disk"></i> Save
                                    </button>
                                    <button class="btn btn-info nextBtn" type="button">Next &nbsp;<span class="glyphicon glyphicon-arrow-right" aria-hidden="true"></span></button>
                                }

                            </div>

                            <!----STEP 2 START HERE -->
                            <div class="row setup-content" id="step-2">
                                <div class="col-xs-12">

                                    <div class="col-md-12">

                                        @if (Model.PaymentSchedules != null)
                                        {

                                            <table align="center" class="table table-bordered table-hover table-condensed" id="paymentSchedule">
                                                <caption style="text-align:center">Contract Payment Schedule(s)</caption>
                                                <thead>
                                                    <tr>
                                                        <th style="text-align: center">#</th>

                                                        <th style="text-align: left">Payment Schedule </th>
                                                        <th style="text-align: right">Amount</th>
                                                        <th style="text-align: right">Received</th>
                                                        <th style="text-align: right">Balance</th>
                                                        <th style="text-align: right">Deduction Amount</th>
                                                        <th style="text-align: center">Action</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @foreach (var item in Model.PaymentSchedules)
                                                    {

                                                        i++;
                                                        <tr>
                                                            <td style="text-align: center">@i</td>
                                                            <td>@Html.DisplayFor(modelItem => item.Description)</td>
                                                            <td style="text-align: right"> @Html.DisplayFor(modelItem => item.Amount) </td>
                                                            <td style="text-align: right"> @Html.DisplayFor(modelItem => item.ConsumedAmount) </td>
                                                            <td style="text-align: right"> @Html.DisplayFor(modelItem => item.Balance) </td>
                                                            <td style="text-align: right">@Html.DisplayFor(modelItem => item.VariationAmount) </td>
                                                            <td style="text-align: center"><div class="btn-group"><button type="button" class="btn  btn-info btn-xs dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><span class="caret"></span><span class="sr-only">Toggle Dropdown</span></button> <ul class="dropdown-menu"> <li><a href="#" onclick="applyVariation(@item.PaymentScheduleId)"><i class="fa fa-edit"></i> Apply Variation</a></li></ul></div></td>

                                                        </tr>

                                                    }
                                                    <tr><td align="right" colspan="5">Total</td><td align="right"><strong>@Convert.ToDecimal(Model.PaymentSchedules.Select(a => a.VariationAmount).DefaultIfEmpty(0).Sum()).ToString("#,##0.00/=")</strong></td><td></td></tr>
                                                </tbody>
                                            </table>


                                        }




                                    </div>


                                    <div class="col-md-offset-2">
                                        <a href="#step-2" style="margin-right:5px" class="btn btn-info pull-left btn-prev"><i class="glyphicon glyphicon-arrow-left"></i> Back  </a>

                                        <button type="button" id="finish" class="btn btn-info" style="margin-right:2px">
                                            <i class="glyphicon glyphicon-floppy-disk"></i> Finish and Exit
                                        </button>
                                    </div>
                                    <br />
                                    <div class="widget-body no-padding">

                                        <br />
                                        <div class="row">

                                            <div class="col-xs-4 col-sm-4 col-md-4 col-lg-3">

                                            </div>

                                            <div class="col-xs-3 col-sm-7 col-md-7 col-lg-7 text-right">
                                                <strong>
                                                    <span>Currency:@Html.DisplayFor(model => model.OperationalCurrency)</span>
                                                    &nbsp;&nbsp;
                                                    <span>Variation Amount:<span class="display_amount">@Html.DisplayFor(model => model.VariationAmount)</span></span>
                                                    &nbsp;&nbsp;
                                                    <span id="variation_items">Balance :<span id="payment_balance">@Html.DisplayFor(model => model.AvailableAmount)</span></span>
                                                    &nbsp;&nbsp;
                                                </strong>
                                            </div>

                                        </div>

                                        <table align="center" class="table table-bordered table-hover table-condensed" id="items" style="width:90%">
                                        </table>





                                    </div>




                                </div>

                            </div>



                        </div>





                    </div>


                </div>
            </article>

        </div>
    </section>

</div>
<div class="modal fade" id="variationEntry" style="left:4%">

    <div class="modal-dialog" style="width:35%;">
        <div class="modal-content panel-info">

            <div class="modal-header panel-heading">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h3 class="modal-title" style="text-align:center">Payment Schedule Variation</h3>
                <h4 class="modal-title" style="text-align:center">Amount to be decreased</h4>
            </div>
            @using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = "return SubmitVariation(this)" }))
            {
                <div class="modal-body form-horizontal">

                    <br />

                    <input type="hidden" name="id" id="id" value="">
                    <input type="hidden" name="variation_id" id="variation_id" value="">
                    <div class="form-group">

                        @Html.Label("Enter Amount", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            <div class="input-group">
                                <span class="input-group-addon currencyDisp">@Html.DisplayFor(model => model.OperationalCurrency)</span>
                                @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                            </div>
                        </div>
                    </div>

                </div>
                <div class="modal-footer">
                    <a href="#" class="btn btn-default" data-dismiss="modal">Cancel</a>
                    <input class="btn btn-info" type="submit" id="btnSubmit" value="Save" />
                    @*<input type="submit" value="Submit" class="btn btn-success" id="btnSubmit" />*@

                </div>

            }
        </div>
    </div>
</div>

@section pagespecific {
    <!-- PAGE RELATED PLUGIN(S) -->

    <script type="text/javascript">
               function SubmitSummary(formData) {
                            $("#save_summary").prop('disabled', true);
                            var url = '@Url.Action("SaveVariation", "ContractVariation")';
                           var ajaxConfig = {
                            type: "post",
                            url: url,
                            data: new FormData(formData),
                            success: function (data) {
                                $("#save_summary").prop('disabled', false);
                                if (data.response == "Success") {
                                    swal("Variation saved successfully", { icon: "success" })
                                        .then((value) => {
                                            $("#ContractVariationId").val(data.id);
                                            $(".display_amount").text(data.amount.toLocaleString('en'));
                                            $('#payment_balance').text(data.balance.toLocaleString('en'));

                                              });
                                }
                                else {
                                    $("#save_summary").prop('disabled', false);
                                     swal(data);
                                }
                            }
                        }
                        $("#save_summary").prop('disabled', true);
                        if ($(formData).attr('enctype') == "multipart/form-data") {
                            ajaxConfig["contentType"] = false;
                            ajaxConfig["processData"] = false;
                        }
                        $.ajax(ajaxConfig);
                        return false;
        }
            function PaymentScheduleTable(arrayData) {
            $('#paymentSchedule').empty();
            var number = arrayData.length;
            if (number > 0) {
                $('<caption style="text-align:center">Contract Payment Schedule(s)</caption>').appendTo('#paymentSchedule');
                $('<thead><tr><th style="text-align: center">#</th><th style="text-align: left">Payment Schedule </th><th style="text-align: right">Amount</th><th style="text-align: right">Received</th><th style="text-align: right">Balance</th><th style="text-align: right">Reduction Amount</th><th style="text-align:center">Action</th></tr></thead>').appendTo('#paymentSchedule');

            }
            var j = 0;
            var sum = 0;
            $('<tbody>').appendTo('#paymentSchedule');
                $.each(arrayData, function (i, d) {
                    var variation = 0;
                    if (parseFloat(d.VariationAmount) > 0) {
                        sum = sum + parseFloat(d.VariationAmount);
                        variation = d.VariationAmount;
                    }

                    j++;
                    $('<tr><td align="center">' + j + '</th><td>' + d.Description + '</td><td align="right">' + d.Amount.toLocaleString('en') + '</td><td align="right">' + d.ConsumedAmount.toLocaleString('en') + '</td><td align="right">' + d.Balance.toLocaleString('en') + '</td><td align="right">' + variation.toLocaleString('en') + '</td><td style="text-align: center"><div class="btn-group"><button type="button" class="btn  btn-info btn-xs dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><span class="caret"></span><span class="sr-only">Toggle Dropdown</span></button> <ul class="dropdown-menu"><li><a href="#" onclick="applyVariation('+d.PaymentScheduleId+')"><i class="fa fa-edit"></i> Apply Variation</a></li> </ul></div></td></tr>').appendTo('#paymentSchedule');

            });
            if (number > 0) {
                $('<tr><td align="right" colspan="5">Total</td><td align="right"><strong>' + sum.toLocaleString('en') + '</strong></td><td></td></tr>').appendTo('#paymentSchedule');
            }
            $('</tbody>').appendTo('#paymentSchedule');

        }


        $(document).ready(function () {

        //MANAGE STEP WIZARD
        var navListItems = $('div.setup-panel div a'),
            allWells = $('.setup-content'),
            allNextBtn = $('.nextBtn');

        allWells.hide();

        navListItems.click(function (e) {
            e.preventDefault();
            var $target = $($(this).attr('href')),
                $item = $(this);

            if (!$item.hasClass('disabled')) {
                navListItems.removeClass('btn-primary').addClass('btn-default');
                $item.addClass('btn-primary');
                allWells.hide();
                $target.show();
                $target.find('input:eq(0)').focus();
            }
        });

        allNextBtn.click(function () {
            var curStep = $(this).closest(".setup-content"),
                curStepBtn = curStep.attr("id"),
                nextStepWizard = $('div.setup-panel div a[href="#' + curStepBtn + '"]').parent().next().children("a"),
                curInputs = curStep.find("input[type='text'],input[type='url']"),
                isValid = true;

            $(".form-group").removeClass("has-error");
            for (var i = 0; i < curInputs.length; i++) {
                if (!curInputs[i].validity.valid) {
                    isValid = false;
                    $(curInputs[i]).closest(".form-group").addClass("has-error");
                }
            }

            if (isValid)
                nextStepWizard.removeAttr('disabled').trigger('click');
        });

        $('div.setup-panel div a.btn-primary').trigger('click');
                            //END MANAGE STEP WIZARD



              //SUBMIT  ITEM

                            //End of Submit  Contract Item
                            //FINISH CONTRACT
                            $("#finish").click(function (e) {
                                var id = $("#ContractVariationId").val();
                                if (id > 0) {

                                    swal("Variation created successfully", { icon: "success" })
                                                  .then((value) => {
                                                      var url = '@Url.Action("PendingVariation", "ContractVariation")';
                                                      window.location.replace(url);
                                                  });
                                } else {
                                    swal("Click Back button");
                                }

                            });





        });

        $(document).ajaxStart(function () {
            $(".loadingImg").show();

        });
        //HIDE LOADER ICON
        $(document).ajaxStop(function () {
            $(".loadingImg").hide();
        });
        $("#VariationAmount").autoNumeric('init');
        $("#Amount").autoNumeric('init');
        var applyVariation = function (id) {

            if (!$("#ContractVariationId").val()) {
                swal("Please first save data on step one(Basic information)");
                return false;
            }
            $(".modal-body #variation_id").val($("#ContractVariationId").val());
            $(".modal-body #id").val(id);
            $('#variationEntry').modal('show');

        };

        function SubmitVariation(formData) {
            $("#btnSubmit").prop('disabled', true);
                            var url = '@Url.Action("SaveDeduction", "ContractVariation")';
                           var ajaxConfig = {
                            type: "post",
                            url: url,
                            data: new FormData(formData),
                            success: function (data) {
                                $("#btnSubmit").prop('disabled', false);
                                if (data.response == "Success") {
                                    $('#variationEntry').modal('hide');
                                    swal("Amount saved successfully", { icon: "success" })
                                        .then((value) => {
                              $('#payment_balance').text(data.variationBalance.toLocaleString('en'));
                               PaymentScheduleTable(data.paymentScheduleList);
                                              });
                                }
                                else {
                                    $("#btnSubmit").prop('disabled', false);
                                     swal(data);
                                }
                            }
                        }

                        if ($(formData).attr('enctype') == "multipart/form-data") {
                            ajaxConfig["contentType"] = false;
                            ajaxConfig["processData"] = false;
                        }
                        $.ajax(ajaxConfig);
                        return false;
        }
    </script>
}


