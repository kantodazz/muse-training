@model IFMIS.Areas.IFMISTZ.Models.ContractVM
@{
    ViewBag.Title = "Preview Contract";
    var i = 0;
    var h = 0;
    decimal? new_contract_amount = 0;
    if (Model.VariationType == "By Increasing Amount")
    {
        new_contract_amount = Model.ContractAmount + Model.VariationAmount;
    }
    else
    {
        new_contract_amount = Model.ContractAmount - Model.VariationAmount;
    }
}

    <style>
        tr:not([data-level='2']) {
            cursor: pointer;
        }

        tr.expanded .sign:after {
            /*content: "-";*/
            content: url(../Content/img/budget/Minus3.png);
        }

        tr.folded .sign:after {
            /*content: "+";*/
            content: url(../Content/img/budget/Collapse2.png);
            /*background:url('../Media/Images/Collapse1.png');*/
            /*background: url('../Media/Images/details_open.png');*/
            cursor: pointer;
        }

        td:first-child {
            padding: inherit;
        }

        /*  */


        td {
            border-bottom: 1px solid #cecfd5;
            border-right: 1px solid #cecfd5;
            width: auto;
        }
    </style>

<div id="content" style="margin: 5px; padding-top: 30px">

    <div class="row">


    </div>


    <!-- widget grid -->
    <section id="widget-grid" class="">


        <!-- START ROW -->

        <div class="row">

            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">

                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">

                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2>Preview Contract Variation</h2>

                    </header>


                    <div>
                        <div class="widget-body " style="padding-top:10px;width:100%">
                            <fieldset class="scheduler-border" id="contract_details">
                                <legend class="scheduler-border">Contract Variation Details</legend>
                                <div id="contract_data">
                                    <div class="row"> <div class="col-sm-6 col-md-6 col-lg-6"><strong>Contract Reg #&nbsp;:</strong>&nbsp;@Html.DisplayFor(model => model.ContractNo)</div><div class="col-sm-6 col-md-6 col-lg-6"><strong>Contract Number&nbsp;:</strong>&nbsp;@Html.DisplayFor(model => model.ContractNumber)</div></div>
                                    <div class="row">  <div class="col-sm-6 col-md-6 col-lg-6"><strong>Contract Name&nbsp;:</strong>&nbsp;@Html.DisplayFor(model => model.ContractName)</div><div class="col-sm-6 col-md-6 col-lg-6"><strong>Variation Type&nbsp;:</strong>&nbsp;@Html.DisplayFor(model => model.VariationType)</div></div>
                                    <div class="row"> <div class="col-sm-6 col-md-6 col-lg-6"><strong>Contract Amount&nbsp;:</strong>&nbsp;@Html.DisplayFor(model => model.ContractAmount) @Html.DisplayFor(model => model.OperationalCurrency)</div><div class="col-sm-6 col-md-6 col-lg-6"><strong>Variation Amount&nbsp;:</strong>&nbsp;@Html.DisplayFor(model => model.VariationAmount) @Html.DisplayFor(model => model.OperationalCurrency)</div></div>
                                    <div class="row">  <div class="col-sm-6 col-md-6 col-lg-6"><strong>New Contract Amount&nbsp;:</strong>&nbsp;@Convert.ToDecimal(new_contract_amount).ToString("#,##0/=") @Html.DisplayFor(model => model.OperationalCurrency)</div><div class="col-sm-6 col-md-6 col-lg-6"><strong>Overall Status&nbsp;:</strong>&nbsp;@Html.DisplayFor(model => model.OverallStatus)</div></div>
                                    @if (Model.SecurityGuarantee != null)
                                    {
                                        <div class="row">  <div class="col-sm-6 col-md-6 col-lg-6"><strong>Security Guarantee&nbsp;:</strong>&nbsp;@Html.DisplayFor(model => model.SecurityGuarantee)</div><div class="col-sm-6 col-md-6 col-lg-6"><strong>Security Guarantee Date&nbsp;:</strong>&nbsp;@Html.DisplayFor(model => model.SecurityGuaranteeDate)</div></div>
                                    }
                                    @if (Model.OverallStatus == "Rejected")
                                    {
                                        if (Model.RejectionReason != null)
                                        {
                                            <div class="row"> <div class="col-sm-6 col-md-6 col-lg-6"><strong>Rejection reason&nbsp;:</strong>&nbsp;@Html.DisplayFor(model => model.RejectionReason)</div></div>

                                        }
                                    }
                                    @if (Model.OverallStatus.ToUpper() == "CONFIRMED")
                                    {

                                        if (Model.RejectionSolution != null)
                                        {
                                            <div class="row">  <div class="col-sm-6 col-md-6 col-lg-6"><strong>Rejection Reason&nbsp;:</strong>&nbsp;@Html.DisplayFor(model => model.RejectionReason)</div><div class="col-sm-6 col-md-6 col-lg-6"><strong>Solution Taken&nbsp;:</strong>&nbsp;@Html.DisplayFor(model => model.RejectionSolution)</div></div>
                                        }

                                    }

                                </div>


                            </fieldset>



                            @if (Model.ContractVariationFunds.Count() > 0)
                            {

                                <table align="center" class="table table-bordered" style="width:97%">

                                    <tbody>

                                        <tr data-level='1'>
                                            <th style="text-align: center">#</th>
                                            <th style="text-align:left">Category Description</th>
                                            <th style="text-align: right"> Amount</th>
                                            @if (Model.OverallStatus == "Pending" || Model.OverallStatus == "Rejected")
                                            {
                                                <th style="text-align: center">Action</th>
                                            }
                                            </tr>
                                        @foreach (var item in Model.ContractVariationFunds)
                                        {
                                            h++;
                                    <tr data-level='1'>
                                        <td style="text-align: center">@h</td>
                                        <td>@Html.DisplayFor(modelItem => item.FundCategoryDescription)</td>
                                        <td style="text-align: right">@Html.DisplayFor(modelItem => item.Amount)</td>
                                        @if (Model.OverallStatus == "Pending" || Model.OverallStatus == "Rejected")
                                        {
                                            <td style="text-align:center">

                                                <div class="btn-group">

                                                    <button type="button" class="btn btn-info btn-xs dropdown-toggle" data-toggle="dropdown" style="width:40px;border-radius:1px;" aria-haspopup="true" aria-expanded="false">
                                                        <span class="caret"></span>
                                                        <span class="sr-only">Toggle Dropdown</span>
                                                    </button>
                                                    <ul class="dropdown-menu">
                                                        <li>
                                                            <a href="#" onclick="cancelFund(@item.ContractVariationId)">
                                                                <i class="fa fa-edit"></i>Cancel
                                                            </a>
                                                        </li>
                                                    </ul>
                                                </div>
                                            </td>

                                        }
                                    </tr>

                                        }




                                    </tbody>
                                    <tr style="background:#f5f5f5; color:#000000">
                                        <td style="text-align: right" colspan="2"><strong>Total:&nbsp;&nbsp;&nbsp;</strong></td>
                                        <td style="text-align:right"><strong>@Convert.ToDecimal(Model.ContractVariationFunds.Select(a => a.Amount).DefaultIfEmpty(0).Sum()).ToString("#,##0.00/=")</strong></td>
                                        @if (Model.OverallStatus == "Pending" || Model.OverallStatus == "Rejected")
                                        {
                                            <td></td>
                                        }
                                        </tr>
                                </table>

                            }


                            <br>

                            <div class="jarviswidget" data-widget-colorbutton="false" data-widget-editbutton="false" data-widget-togglebutton="false" data-widget-deletebutton="false" data-widget-fullscreenbutton="false" data-widget-custombutton="false">

                                <header>
                                    <h2><strong></strong> <i></i></h2>

                                    <ul id="widget-tab-1" class="nav nav-tabs pull-right">

                                        <li class="active">

                                            <a data-toggle="tab" href="#hr1"> <i class="fa fa-lg fa-arrow-circle-o-down"></i> <span class="hidden-mobile hidden-tablet"> Items List<span class="badge inbox-badge margin-right-13" style="background-color:#2196F3">@Model.VariationItems.Count()</span></span> </a>

                                        </li>

                                    </ul>

                                </header>

                                <!-- widget div-->
                                <div>

                                    <!-- widget edit box -->
                                    <div class="jarviswidget-editbox">
                                        <!-- This area used as dropdown edit box -->

                                    </div>
                                    <!-- end widget edit box -->
                                    <!-- widget content -->
                                    <div class="widget-body no-padding">

                                        <!-- widget body text-->

                                        <div class="tab-content padding-10">
                                            <div class="tab-pane fade in active" id="hr1">
                                                <div class="widget-body no-padding">

                                                    <br />

                                                    @if (Model.VariationItems.Count() > 0)
                                                    {
                                                        <table align="center" class="table table-bordered table-hover table-condensed" style="width:97%">
                                                            <tr data-level='1' style="background:#f5f5f5; color:#000000">

                                                                <th style="text-align: center;width:3%">#</th>
                                                                @if (Model.VariationType == "By Increasing Amount")
                                                                {
                                                                    <th colspan="10" style="text-align: left">Variation Payment Schedule &nbsp;&nbsp;&nbsp;<span style="float:right;">Amount</span></th>
                                                                }
                                                                else
                                                                {
                                                                    <th colspan="10" style="text-align: left">Items to be removed &nbsp;&nbsp;&nbsp;<span style="float:right;">Amount</span></th>
                                                                }


                                                            </tr>
                                                            <tbody>
                                                                @foreach (var group in Model.VariationItems.GroupBy(a => a.VariationPayScheduleId))
                                                                {
                                                                    i++;
                                                                    var j = 0;
                                                                    <tr data-level='1' style="background:#f5f5f5; color:#000000">
                                                                        <td align="center" style="width:3%">@i</td>
                                                                        <td colspan="10" style="text-align: left"><span class="sign"></span>&nbsp;&nbsp;&nbsp;@group.Where(a => a.VariationPayScheduleId == group.Key).Select(a => a.PaymentSchedule.Description).FirstOrDefault() <strong><span style="float:right;">@Convert.ToDecimal(group.Where(a => a.VariationPayScheduleId == group.Key).Select(a => a.TotalAmount).DefaultIfEmpty(0).Sum()).ToString("#,##0.00/=")</span></strong></td>

                                                                    </tr>
                                                                    <tr data-level='2'>
                                                                        <th style="text-align: center" colspan="2"></th>
                                                                        <th style="text-align: left">Item </th>
                                                                        <th style="text-align:left">Category</th>
                                                                        <th style="text-align:left">Class</th>
                                                                        <th style="text-align: center">Quantity</th>
                                                                        <th style="text-align: left">UOM</th>
                                                                        <th style="text-align: right">Unit Price</th>
                                                                        <th style="text-align:right">VAT</th>
                                                                        <th style="text-align:right">Overhead</th>
                                                                        <th style="text-align: right">Total Amount</th>

                                                                    </tr>
                                                                    foreach (var item in group)
                                                                    {
                                                                        j++;
                                                                        string percentage = "NA";
                                                                        if (item.OverheadPercentage != null)
                                                                        {
                                                                            percentage = item.OverheadPercentage + "%";
                                                                        }
                                                                        <tr data-level='2'>
                                                                            <td></td>
                                                                            <td style="text-align: center">@j</td>
                                                                            <td>@Html.DisplayFor(modelItem => item.ItemDesc)</td>
                                                                            <td style="text-align:left">
                                                                                @Html.DisplayFor(modelItem => item.ItemClassification.ItemCategory)
                                                                            </td>
                                                                            <td style="text-align:left">
                                                                                @Html.DisplayFor(modelItem => item.ItemClassification.ClassificationDesc)
                                                                            </td>
                                                                            <td style="text-align: center">@Html.DisplayFor(modelItem => item.Quantity)</td>
                                                                            <td>@Html.DisplayFor(modelItem => item.UOM)</td>
                                                                            <td style="text-align: right">@Html.DisplayFor(modelItem => item.UnitPrice) </td>
                                                                            <td style="text-align: right">@Html.DisplayFor(modelItem => item.VAT)</td>
                                                                            <td style="text-align: right">@percentage</td>
                                                                            <td style="text-align: right">@Html.DisplayFor(modelItem => item.TotalAmount)</td>
                                                                        </tr>

                                                                    }
                                                                }




                                                            </tbody>
                                                            <tr style="background:#f5f5f5; color:#000000" data-level='1'><td style="text-align: right" colspan="11"><strong>Total:&nbsp;&nbsp;&nbsp;</strong><strong>@Convert.ToDecimal(Model.VariationItems.Select(a => a.TotalAmount).DefaultIfEmpty(0).Sum()).ToString("#,##0.00/=")</strong></td></tr>
                                                        </table>

                                                    }







                                                </div>

                                            </div>
                                        </div>

                                        <!-- end widget body text-->
                                        <!-- widget footer -->
                                        <div class="widget-footer text-right">

                                            <span class="onoffswitch-title">

                                            </span>


                                        </div>
                                        <!-- end widget footer -->

                                    </div>
                                    <!-- end widget content -->

                                </div>
                                <!-- end widget div -->

                            </div>

                            <div class="col-md-offset-1">

                                @if (Model.OverallStatus == "Pending" || Model.OverallStatus == "Rejected")
                                {
                                    <a href="@Url.Action("PendingVariation","ContractVariation")" style="margin-right:5px" class="btn btn-info pull-left"><i class="glyphicon glyphicon-arrow-left"></i> Back  </a>
                                }
                                else
                                {
                                    <a href="@Url.Action("ApproveVariation","ContractVariation")" style="margin-right:5px" class="btn btn-info pull-left"><i class="glyphicon glyphicon-arrow-left"></i> Back  </a>
                                }
                            </div>
                            <br />
                            <br />
                            <br />







                        </div>





                    </div>


                </div>
            </article>

        </div>
    </section>

</div>

    @section pagespecific {
        <!-- PAGE RELATED PLUGIN(S) -->

        <script type="text/javascript">

            $(document).ready(function () {



                //END GL ITEM CHARGE

                $("tbody > tr:not([data-level='1'])").hide();
                $("tbody > tr:not([data-level='2'])").addClass("expandable sign folded");
                $("tbody > tr")
                    .css("padding-left", function (index) {
                        return 10 * parseInt($(this).data("level"), 10) + "px";
                    });

                function range(lowEnd, highEnd) {
                    // assert lowEnd >= 0 and highEnd < 100
                    var validation = (lowEnd <= highEnd) && (lowEnd >= 0) && (highEnd < 10000);
                    if (!(validation)) {
                        console.assert(validation,
                            'Function "range" received unlikely values: ' +
                            lowEnd + ' and ' + highEnd + "...");
                    } else {
                        var arr = [];
                        while (lowEnd <= highEnd) {
                            arr.push(lowEnd++);
                        }
                        return arr;
                    }
                }

                function name_range(fun, lowEnd, highEnd) {
                    var arr = range(lowEnd, highEnd);
                    jQuery.each(arr, function (index, value) {
                        arr[index] = fun(value);
                    });
                    return arr;
                }

                function create_selector(level) {
                    return "[data-level='" + level + "']";
                }

                $("tr.expandable").click(function () {
                    var this_level = parseInt($(this).data("level"), 10);
                    var this_level_selector = create_selector(this_level);
                    var next_level_selector = create_selector(this_level + 1);
                    var next_or_lower = name_range(create_selector,
                        this_level + 1, 10); // TODO: find last level
                    var this_or_higher = name_range(create_selector, 0, this_level);
                    var node = $(this).nextUntil(this_or_higher.join(","));
                    // different behaviour according to state (expanded / folded):
                    if ($(this).hasClass("expanded")) {
                        $(node).filter(next_or_lower.join(",")).hide();
                        $(node).not("expanded").removeClass("expanded").addClass('folded');
                        $(this).removeClass("expanded").addClass('folded');


                    } else {
                        $(node).filter(next_level_selector).show();
                        $(this).addClass("expanded").removeClass('folded');


                    }
                });



            });

            var cancelFund = function (id) {
             swal({
                        title: 'Confirmation',
                        text: "Do you what to cancel fund ?",
                        buttons: [
                          'No',
                          'Yes'
                        ],
                    }).then(function (isConfirm) {
                        if (isConfirm) {
                            var url = '@Url.Action("CancelFund", "ContractVariation")';
                            $.ajax(
                {
                    type: "POST",
                    url: url,
                    data: { id: id },
                    success: function (response) {
                        if (response == "Success") {
                            swal("Cancelled  successfully!", { icon: "success" })
                                         .then((value) => {
                                            location.reload();
                                         });
                        }
                        else {
                            swal(response)
                        }
                    },
                    error: function (xhr) {
                        //console.log(xhr.responseText);
                        swal("An error has occured, contact system support");

                    },

                });
                        } else {
                            swal("Cancelled", "No change was made");
                        }
                    });

        };


        </script>
    }






