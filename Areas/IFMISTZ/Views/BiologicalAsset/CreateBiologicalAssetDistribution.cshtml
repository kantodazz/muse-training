@model IFMIS.Areas.IFMISTZ.Models.BilogicalAssetVM

<div id="divLoader"></div>
<!-- MAIN CONTENT -->
<div id="content">

    <div class="row">
        @*<div class="col-xs-12 col-sm-9 col-md-9 col-lg-9">
                <h1 class="page-title txt-color-blueDark">

                    <!-- PAGE HEADER -->
                    <!--
                    <i class="fa-fw fa fa-pencil-square-o"></i>
                    Payments
                    <span>
                        >
                        Bills
                    </span>
                        -->
                </h1>
            </div>*@

        <div class="col-xs-12 col-sm-3 col-md-3 col-lg-3">
            <!-- Button trigger modal -->
            <!--<a data-toggle="modal" href="#myModal" class="btn btn-info btn-lg pull-right header-btn hidden-mobile"><i class="fa fa-circle-arrow-up fa-lg"></i> Launch form modal</a>-->
        </div>
    </div>

    <!--
    <div class="alert alert-block alert-info">
        <a class="close" data-dismiss="alert" href="#">×</a>
        <h4 class="alert-heading"><i class="fa fa-check-square-o"></i> Check validation!</h4>
        <p>
            You may also check the form validation by clicking on the form action button. Please try and see the results below!
        </p>
    </div>
        -->
    <!-- widget grid -->
    <section id="widget-grid" class="">


        <!-- START ROW -->

        <div class="row">

            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">

                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">
                    <!-- widget options:
                        usage: <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false">

                        data-widget-colorbutton="false"
                        data-widget-editbutton="false"
                        data-widget-togglebutton="false"
                        data-widget-deletebutton="false"
                        data-widget-fullscreenbutton="false"
                        data-widget-custombutton="false"
                        data-widget-collapsed="true"
                        data-widget-sortable="false"

                    -->
                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2> Create Biological Asset Distribution </h2>
                    </header>

                    <!-- widget div-->
                    <div>

                        <!-- widget edit box -->
                        <div class="jarviswidget-editbox">
                            <!-- This area used as dropdown edit box -->

                        </div>
                        <!-- end widget edit box -->
                        <!-- widget content -->
                        <div class="widget-body">
                            <form class="form-horizontal">
                                <div class="form-group" style="padding-left:9%">
                                    @Html.LabelFor(model => model.GFSCode, htmlAttributes: new { @class = "control-label col-md-1" })
                                    <div class="col-md-3">
                                        @*@Html.TextBoxFor(model => model.GFSCode, new { @class = "form-control" })*@
                                        @Html.DropDownListFor(model => model.GFSCode, Model.GFSCodeList, "Select GFS Code", new { @class = "form-control select2" })
                                    </div>
                                    <div class="col-md-3">
                                        @Html.DropDownListFor(model => model.FinancialYearCode, Model.FinancialYearCodeList, "Select Financial Year", new { @class = "form-control select2" })
                                    </div>
                                    @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-1" })
                                    <div class="col-md-3">
                                        <div class='input-group'>
                                            @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                            <span class="input-group-addon">
                                                <span id="lblOperationalCurrency" aria-hidden="true"></span>
                                            </span>
                                        </div>
                                        @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <hr />

                                <div class="form-group">
                                    <label class="control-label col-md-2" id="lblConsumableAmount">Consumable Amount</label>
                                    <div class="col-md-3">
                                        <input type="text" id="ConsumableAmount" class="form-control" />
                                    </div>
                                    <label class="control-label col-md-2" id="lblBearerAmount">Bearer Amount</label>
                                    <div class="col-md-3">
                                        <input type="text" id="BearerAmount" class="form-control" />
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label class="control-label col-md-2" id="lblMatureAmount">Mature Amount</label>
                                    <div class="col-md-3">
                                        <input type="text" id="MatureAmount" class="form-control" />
                                    </div>
                                    <label class="control-label col-md-2" id="lblInMatureAmount">InMature Amount</label>
                                    <div class="col-md-3">
                                        <input type="text" id="InMatureAmount" class="form-control" />
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label class="control-label col-md-2" id="lblHeldDistributionAmount">Held of Distribution Amount</label>
                                    <div class="col-md-3">
                                        <input type="text" id="HeldDistributionAmount" class="form-control" />
                                    </div>
                                    <label class="control-label col-md-2" id="lblHeldSaleAmount">Held for Sale Amount</label>
                                    <div class="col-md-3">
                                        <input type="text" id="HeldSaleAmount" class="form-control" />
                                    </div>
                                </div>

                                <div class="form-actions">
                                    <div class="row">
                                        <div class="col-md-offset-2 col-md-8">
                                            <button class="btn btn-info" type="button" style="float: left" id="btnSave">
                                                <i class="fa fa-save"></i>
                                                Save
                                            </button>
                                            <a href="@Url.Action("PendingList","BiologicalAsset")" class="btn btn-info" style="float: left; margin-left: 5px">
                                                <i class="fa fa-arrow-left"></i>
                                                Back
                                            </a>
                                        </div>
                                    </div>
                                    <div class="form-group" style="margin-top: 0px; margin-bottom: 0px">
                                        <div class="col-md-offset-2 col-md-7" id="divSaveErrorMsg" style="display: none; color: darkred">
                                            <span style="float: left">In order to save, operational amount must be equal to total expensed amount!</span>
                                        </div>
                                    </div>
                                </div>

                                <div id="searchResults" style="margin-top: 20px; display: none"></div>
                            </form>
                        </div>
                        <!-- end widget content -->
                    </div>
                    <!-- end widget div -->

                </div>
                <!-- end widget -->

            </article>
            <!-- END COL -->

        </div>

        <!-- END ROW -->

    </section>
    <!-- end widget grid -->

</div>
<!-- END MAIN CONTENT -->

@section Scripts{
    <script>
        // DO NOT REMOVE : GLOBAL FUNCTIONS!

        $(document).ready(function () {

            /* // DOM Position key index //

            l - Length changing (dropdown)
            f - Filtering input (search)
            t - The Table! (datatable)
            i - Information (records)
            p - Pagination (paging)
            r - pRocessing
            < and > - div elements
            <"#id" and > - div with an id
            <"class" and > - div with a class
            <"#id.class" and > - div with an id and class

            Also see: http://legacy.datatables.net/usage/features
            */

            /* BASIC ;*/
            var responsiveHelper_dt_basic = undefined;
            var responsiveHelper_datatable_fixed_column = undefined;
            var responsiveHelper_datatable_col_reorder = undefined;
            var responsiveHelper_datatable_tabletools = undefined;

            var breakpointDefinition = {
                tablet: 1024,
                phone: 480
            };

            $('#dt_basic').dataTable({
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-12 hidden-xs'l>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_dt_basic) {
                        responsiveHelper_dt_basic = new ResponsiveDatatablesHelper($('#dt_basic'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_dt_basic.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_dt_basic.respond();
                }
            });

            /* END BASIC */

            /* COLUMN FILTER  */
            var otable = $('#datatable_fixed_column').DataTable({
                //"bFilter": false,
                //"bInfo": false,
                //"bLengthChange": false
                //"bAutoWidth": false,
                //"bPaginate": false,
                //"bStateSave": true // saves sort state using localStorage
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6 hidden-xs'f><'col-sm-6 col-xs-12 hidden-xs'<'toolbar'>>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_fixed_column) {
                        responsiveHelper_datatable_fixed_column = new ResponsiveDatatablesHelper($('#datatable_fixed_column'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_datatable_fixed_column.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_datatable_fixed_column.respond();
                }

            });

            // custom toolbar
            $("div.toolbar").html('<div class="text-right"><img src="/Content/img/logo.png" alt="SmartAdmin" style="width: 111px; margin-top: 3px; margin-right: 10px;"></div>');

            // Apply the filter
            $("#datatable_fixed_column thead th input[type=text]").on('keyup change', function () {

                otable
                    .column($(this).parent().index() + ':visible')
                    .search(this.value)
                    .draw();

            });
            /* END COLUMN FILTER */

            /* COLUMN SHOW - HIDE */
            $('#datatable_col_reorder').dataTable({
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'C>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_col_reorder) {
                        responsiveHelper_datatable_col_reorder = new ResponsiveDatatablesHelper($('#datatable_col_reorder'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_datatable_col_reorder.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_datatable_col_reorder.respond();
                }
            });

            /* END COLUMN SHOW - HIDE */

            /* TABLETOOLS */
            $('#datatable_tabletools').dataTable({

                // Tabletools options:
                //   https://datatables.net/extensions/tabletools/button_options
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'T>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
                "oTableTools": {
                    "aButtons": [
                        "copy",
                        "csv",
                        "xls",
                        {
                            "sExtends": "pdf",
                            "sTitle": "SmartAdmin_PDF",
                            "sPdfMessage": "SmartAdmin PDF Export",
                            "sPdfSize": "letter"
                        },
                        {
                            "sExtends": "print",
                            "sMessage": "Generated by SmartAdmin <i>(press Esc to close)</i>"
                        }
                    ],
                    "sSwfPath": "/Scripts/plugin/datatables/swf/copy_csv_xls_pdf.swf"
                },
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_tabletools) {
                        responsiveHelper_datatable_tabletools = new ResponsiveDatatablesHelper($('#datatable_tabletools'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_datatable_tabletools.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_datatable_tabletools.respond();
                }
            });

            /* END TABLETOOLS */

            $('#Amount').autoNumeric('init');

            $("#btnSave").click(function () {

                debugger;

                $('#btnSave').prop("disabled", true);
                $("#divLoader").show();

                //if (!$("#dummyPaymentForm").valid()) {

                //    $('#btnSave').prop("disabled", false);
                //    $("#divLoader").hide();
                //    return false;
                //}

            
                var consumableAmount = $("#ConsumableAmount").val().trim();
                if (consumableAmount == "") {
                    consumableAmount = 0;
                }
                var bearerAmount = $("#BearerAmount").val().trim();
                if (bearerAmount == "") {
                    bearerAmount = 0;
                }
                var matureAmount = $("#MatureAmount").val().trim();
                if (matureAmount == "") {
                    matureAmount = 0;
                }
                var inMatureAmount = $("#InMatureAmount").val().trim();
                if (inMatureAmount == "") {
                    inMatureAmount = 0;
                }
                var heldDistributionAmount = $("#HeldDistributionAmount").val().trim();
                if (heldDistributionAmount == "") {
                    heldDistributionAmount = 0;
                }
                var heldSaleAmount = $("#HeldSaleAmount").val().trim();
                if (heldSaleAmount == "") {
                    heldSaleAmount = 0;
                }

                var token = $("[name='__RequestVerificationToken']").val();
                var data = {
                    __RequestVerificationToken: token,

                    GFSCode: $('#GFSCode').val().trim(),
                    FinancialYear: $('#FinancialYearCode').val().trim(),
                    TotalAmount: $('#Amount').val().trim(),
                    ConsumableAmount: consumableAmount,
                    BearerAmount: bearerAmount,
                    MatureAmount: matureAmount,
                    InMatureAmount: inMatureAmount,
                    HeldDistributionAmount: heldDistributionAmount,
                    HeldSaleAmount: heldSaleAmount

                }

                var url = '@Url.Action("CreateBiologicalAssetDistribution", "BiologicalAsset")';
                $.ajax({
                    url: url,
                    type: "POST",
                    //data: JSON.stringify(data),
                    data: data,
                    dataType: "JSON",
                    //contentType: "application/json",
                    contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                    success: function (response) {
                        //check is successfully save to database
                        if (response == "Success") {
                            //will send status from server side
                            swal({
                                text: "Successfully saved.",
                                icon: "success",
                                button: "OK",
                            }).then(function () {
                                window.location = '@Url.Action("PendingBiological", "BiologicalAsset")';
                            });
                        }
                        else {
                            swal({
                                text: response,
                                icon: "warning",
                                button: "OK",
                            })
                        }
                    },
                    error: function () {
                        swal({
                            text: "Error. Please try again..",
                            icon: "error",
                            button: "OK",
                        })
                    },
                    complete: function () {
                        $('#btnSave').prop("disabled", false);
                        $("#divLoader").hide();
                    }
                });
            });

            // End of dynamic table
        });

        $("#FinancialYearCode").on("change", function () {

            $("#divLoader").show();
            var url = '@Url.Action("GetBiologicalAmount", "BiologicalAsset")';
            var gfsCode = $("#GFSCode").val();
            var financialyear = $("#FinancialYearCode").val();

            $.ajax({
                type: "get",
                url: url,
                data: { gfsCode: gfsCode, financialyear: financialyear },
                success: function (response) {
                    $("#lblOperationalCurrency").text(response.BaseCurrency);
                    $("#Amount").val(response.Amount);
                },
                error: function () {
                    swal({
                        text: "An error occurred while processing your request, try again/ contact system support",
                        icon: "error",
                        button: "OK",
                    });
                },
                complete: function () {
                    $("#divLoader").hide();
                }
            });
            });
    </script>
}
