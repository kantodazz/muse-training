<style>
    .search-btn {
        border: 1px solid #ccc;
        border-bottom-right-radius: 4px;
        border-top-right-radius: 4px;
        padding: 5px;
        padding-right: 10px;
    }

    .search-container {
        display: inline-flex;
        position: relative;
        border: 1px solid #ccc;
        border-radius: 5px;
        overflow: hidden;
        padding-left: 10px;
    }


    .name-input-container {
        display: inline-flex;
        flex: 1 1 300px;
        position: relative;
        overflow: hidden;
    }

    .search-icon {
        padding: 0.5rem;
    }

    .search-button {
        background: #538AC5;
        border: 0;
        color: white;
        padding: 8px;
        border-radius: 0;
    }

    input[type=number] {
        padding: 8px;
        border: 1px solid #ccc;
        width: 205px;
    }

    input[type=text] {
        padding: 5px;
        border: 1px solid #ccc;
    }

    input[type=search] {
        padding: 4px;
        border: hidden;
        border-radius: 4px;
    }

    textarea {
        border: 1px solid #ccc;
    }

    select {
        padding: 8px;
        border: 1px solid #ccc;
        resize: vertical;
        width: 230px;
    }

    .action-btn {
        width: 100px;
        color: white;
    }

    .form-label {
        text-align: right;
    }

    td {
        padding: 5px;
    }

    .info-box {
        padding: 10px;
        background-color: #ECF3F8;
        text-align: center;
        border: 1px solid #ccc;
        border-radius: 5px;
    }

    .row-align {
        display: flex;
        flex-direction: row;
        flex-wrap: wrap;
        justify-content: space-between;
    }

    .input-group-addon {
        width: 30px
    }

    input[type=date] {
        resize: none
    }
</style>

<div style="padding:1em;padding-top:4em">
    <section id="widget-grid">
        <article class="col-sm-12 col-md-12 col-lg-12">

            <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">

                <header>
                    <span class="widget-icon"> <i class="fa fa-table"></i> </span>
                    <h2>Create Payment Voucher</h2>
                </header>
                <div class="widget-body">
                    <div class="row">
                        <div class="col-md-6 col-lg-6 col-sm-12">
                            <table>
                                <tr style="background-color: #FBFBFB" id="approvalTypeDropDown">
                                    <td class="form-label">
                                        AO Approval Type
                                        <i class="fa fa-times" style="color:white" id="AOApprovalRef_1"></i>
                                    </td>
                                    <td>
                                        <div class="input-group">
                                            <select id="AOApprovalType" style="width:300px" onchange="toggleAOFields()">
                                                <option value="0">Manual</option>
                                                <option value="1">Electronic</option>
                                            </select>
                                        </div>
                                    </td>
                                </tr>
                                <tr style="background-color: #FBFBFB" class="ao-fields">
                                    <td class="form-label">
                                        AO Approval Ref
                                        <i class="fa fa-times" style="color:white" id="AOApprovalRef_1"></i>
                                    </td>
                                    <td>
                                        <div class="name-input-container">
                                            <input type="text" name="AOApprovalId" id="AOApprovalId" class="form-control" placeholder="Select Approval Reference"
                                                   style="width:300px" />
                                        </div>
                                    </td>
                                </tr>
                                <tr style="background-color: #FBFBFB" class="ao-fields">
                                    <td class="form-label">
                                        AO Balance
                                    </td>
                                    <td>
                                        <div class="input-group">
                                            <span class="input-group-addon">
                                                <strong class="ao-currency">TZS</strong>
                                            </span>
                                            <input type="text" disabled id="AOBalance" style="width: 250px" />
                                        </div>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="form-label">
                                        Account Name
                                        <i class="fa fa-times" style="color:white" id="AccountName_1"></i>
                                    </td>
                                    <td>
                                        <div class="name-input-container">
                                            <input type="text" readonly id="AccountName" placeholder="No Payee Selected" style="width:260px" />
                                            <a class="search-btn" onclick="SearchPayee()"
                                               href="#" style="float:right;">
                                                <i class="fa fa-search search-icon"></i>
                                            </a>
                                        </div>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="form-label">
                                        Payee Acc No
                                    </td>
                                    <td>
                                        <div class="input-group">
                                            <input type="text" disabled id="PayeeAccountNumber" style="width:300px" />
                                        </div>
                                    </td>
                                </tr>
                                <tr class="IsStPayment">
                                    <td class="form-label">
                                        Parent Institution
                                        <i class="fa fa-times" style="color:white" id="ParentInstitution_1"></i>
                                    </td>
                                    <td>
                                        <select id="ParentInstitution" style="width:300px" class="subwarant-holder"></select>
                                    </td>

                                </tr>
                                <tr class="IsStPayment">
                                    <td class="form-label">
                                        SubWarrant
                                        <i class="fa fa-times" style="color:white" id="SubWarrant_1"></i>
                                    </td>
                                    <td>
                                        <select id="SubWarrant" style="width:300px" class="subwarant-holder"></select>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="form-label">
                                        Sub Budget Class
                                        <i class="fa fa-times" style="color:white" id="SubBudgetClass_1"></i>
                                    </td>
                                    <td>
                                        <select id="SubBudgetClass" style="width:300px">
                                            <option value="Please choose sub budget class" selected="selected">Please choose sub budget class</option>
                                            @foreach (var subBudgetClass in ViewBag.subBudgetClassList)
                                            {
                                                <option value='@subBudgetClass.SubBudgetClass;
                                                               @subBudgetClass.OperationalCurrencyCode;
                                                               @subBudgetClass.OperationalExchangeRate;
                                                               @subBudgetClass.BaseCurrencyCode'>
                                                    @subBudgetClass.SubBudgetClassSubBudgetClassDesc
                                                </option>
                                            }
                                        </select>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="form-label">
                                        Total Fund Balance
                                    </td>
                                    <td>
                                        <div class="input-group">
                                            <span class="input-group-addon">
                                                <strong class="currency">TZS</strong>
                                            </span>
                                            <input type="text" disabled id="FundBalance" style="width:250px" />
                                        </div>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="form-label">
                                        Payer Account
                                        <i class="fa fa-times" style="color:white" id="PayerAccount_1"></i>
                                    </td>
                                    <td>
                                        <select id="PayerAccount" style="width:300px"></select>
                                    </td>
                                </tr>

                                <tr>
                                    <td class="form-label">
                                        Amount
                                        <i class="fa fa-times" style="color:white" id="_total_voucher_amount_1"></i>
                                    </td>
                                    <td>
                                        <div class="input-group">
                                            <span class="input-group-addon" style="padding: 0">
                                                <select style="width:70px; height:34px; font-size: 10px;font-weight: bold"
                                                        id="currencyDropDown">
                                                    <option class="payee-currency" value="TransactionAmount">TZS</option>
                                                    <option class="currency" value="OperationalAmount">TZS</option>
                                                </select>
                                            </span>
                                            <amount-input id="trxOrOpAmount" onkeyup="clearVochaDetailsTable()" style="width:230px; height:35px" />
                                        </div>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="form-label">
                                        Transaction Amount
                                        <i class="fa fa-times" style="color:white" id="_total_voucher_amount_1"></i>
                                    </td>
                                    <td>
                                        <div class="input-group">
                                            <span class="input-group-addon">
                                                <strong class="payee-currency">TZS</strong>
                                            </span>
                                            <amount-input id="total_voucher_amount" onkeyup="clearVochaDetailsTable()" style="width:252px" disabled />
                                        </div>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="form-label">
                                        Operational Amount
                                        <i class="fa fa-times" style="color:white" id="transactionAmount_1"></i>
                                    </td>
                                    <td>
                                        <div class="input-group">
                                            <span class="input-group-addon">
                                                <strong class="currency">TZS</strong>
                                            </span>
                                            <amount-input id="operationalAmount" onkeyup="clearVochaDetailsTable()" style="width:252px" disabled />
                                        </div>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="form-label">
                                        Payment in Respect Of
                                        <i class="fa fa-times" style="color:white;" id="Comments_1"></i>
                                    </td>
                                    <td>
                                        <textarea style="width:300px" rows="2" id="Comments" maxlength="250"></textarea><br />
                                        (Remained characters: <i id="maxchars_c">250</i>)
                                    </td>
                                </tr>
                                <tr>
                                    <td class="form-label">
                                        Short Description
                                        <i class="fa fa-times" style="color:white" id="PaymentDescription_1"></i>
                                    </td>
                                    <td>
                                        <textarea rows="2" id="PaymentDescription" style="width:300px;" maxlength="80"></textarea><br />
                                        (Remained characters: <i id="maxchars">80</i>)
                                    </td>
                                </tr>
                                <tr>
                                    <td class="form-label">
                                        Voucher Reference
                                        <i class="fa fa-times" style="color:white" id="InvoiceNo_1"></i>
                                    </td>
                                    <td>
                                        <input style="width:300px" type="text" id="InvoiceNo" placeholder="Optional">
                                    </td>
                                </tr>
                                <tr>
                                    <td class="form-label">
                                        Control Number
                                        <i class="fa fa-times" style="color:white" id="ControlNumber_1"></i>
                                    </td>
                                    <td>
                                        <input type="checkbox" style="width:30px" id="contolNumberCheckbox">
                                        <input id="ControlNumber"
                                               style="width:265px;"
                                               type="number">
                                    </td>
                                </tr>
                            </table>
                        </div>

                        <div class="col-md-6 col-lg-6 col-sm-12">
                            <table>
                                <tr style="background-color: #FBFBFB" class="ao-fields">
                                    <td class="form-label">
                                        AO Approval Desc
                                    </td>
                                    <td>
                                        <div class="input-group">
                                            <textarea id="AODesc" readonly="readonly"
                                                      class="form-control" style="width:300px" name="AODesc" rows="3"></textarea>
                                        </div>
                                        <i style="font-size: 9px">(AO - Accounting Officer)</i>
                                    </td>
                                </tr>
                                <tr class="IsForceAccount">
                                    <td class="form-label">
                                        F.A Available Amount
                                    </td>
                                    <td>
                                        <input id="AvailableAmount" style="width: 265px; font-weight: bold;margin-left:35px" type="text" disabled>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="form-label">
                                        Is Accrual Voucher?
                                    </td>
                                    <td>
                                        <input type="checkbox" style="width:30px;" id="IsAccrualVoucher">
                                        <input id="_IsAccrualVoucher" style="width:265px;font-weight:bold" type="text" disabled value="NO">
                                    </td>
                                </tr>
                                <tr class="InvoiceNumber">
                                    <td class="form-label">
                                        Invoice Number
                                    </td>
                                    <td style="display: flex; justify-content: flex-end;">
                                        <div>
                                            <div class="name-input-container">
                                                <input type="text" name="InvoiceNumber" id="InvoiceNumber" class="form-control" placeholder="Search Invoice"
                                                       style="width:270px" />
                                            </div>
                                        </div>
                                    </td>
                                </tr>
                                <tr class="InvoiceNumber">
                                    <td class="form-label">
                                        Invoice Balance
                                    </td>
                                    <td style="display: flex; justify-content: flex-end;">
                                        <input id="InvoiceBalance" style="width:270px;font-weight:bold" type="text" disabled>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="form-label">
                                        Is Force Account?
                                    </td>
                                    <td>
                                        <input type="checkbox" style="width:30px" id="IsForceAccount">
                                        <input id="_IsForceAccount" style="width:265px;font-weight:bold" type="text" disabled value="NO">
                                    </td>
                                </tr>
                                <tr class="IsForceAccount">
                                    <td class="form-label">F.A Project Number </td>
                                    <td>
                                        <div class="name-input-container" style="margin-left:35px">
                                            <input type="text" readonly id="ProjectNumber" placeholder="Search Force Account Project" style="width:228px" />
                                            <a class="search-btn" onclick="SearchProject()"
                                               href="#" style="float:right">
                                                <i class="fa fa-search search-icon"></i>
                                            </a>
                                        </div>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="form-label">
                                        Misc Deduction Amount
                                        <i class="fa fa-times" style="color:white" id="MiscDeduction_1"></i>
                                    </td>
                                    <td>
                                        <input type="checkbox" style="width:30px" id="MiscDeductionCheckbox">
                                        <div class="input-group MiscDeduction">
                                            <span class="input-group-addon">
                                                <strong class="currency">TZS</strong>
                                            </span>
                                            <amount-input type="text" id="MiscDeduction" style="width:255px" />
                                        </div>
                                    </td>
                                </tr>
                                <tr class="MiscDeduction">
                                    <td class="form-label">
                                        Misc Ded. Description
                                        <i class="fa fa-times" style="color:white" id="MiscDeductionDescription_1"></i>
                                    </td>
                                    <td>
                                        <textarea rows="2" id="MiscDeductionDescription" style="width:300px;" maxlength="80"></textarea>
                                    </td>
                                </tr>
                                <tr class="MiscDeduction">
                                    <td class="form-label">
                                        Misc Ded. Payee
                                        <i class="fa fa-times" style="color:white" id="MiscDeductionPayee_1"></i>
                                    </td>
                                    <td>
                                        <div class="name-input-container">
                                            <input type="text" readonly id="MiscDeductionPayee" placeholder="No Payee Selected" style="width:260px" />
                                            <a class="search-btn" onclick="SearchPayee('MiscDeduction')"
                                               href="#" style="float:right">
                                                <i class="fa fa-search search-icon"></i>
                                            </a>
                                        </div>
                                    </td>
                                </tr>
                                <tr class="is-dfund" style="background-color: #FBFBFB">
                                    <td class="form-label">
                                        Dfund Approval Ref
                                        <i class="fa fa-times" style="color:white" id="DfundApprovalRef_1"></i>
                                    </td>
                                    <td>
                                        <div class="name-input-container">
                                            <input type="text" name="DfundApprovalId"
                                                   id="DfundApprovalId" class="form-control"
                                                   placeholder="Select Approval Reference"
                                                   style="width:300px" />
                                        </div>
                                    </td>
                                </tr>
                                <tr class="is-dfund" style="background-color: #FBFBFB">
                                    <td class="form-label">
                                        Dfund Balance
                                    </td>
                                    <td>
                                        <div class="input-group">
                                            <span class="input-group-addon">
                                                <strong class="dfund-currency">TZS</strong>
                                            </span>
                                            <input type="text" disabled id="DfundBalance" style="width:250px" />
                                        </div>
                                    </td>
                                </tr>
                                <tr class="is-dfund" style="background-color: #FBFBFB">
                                    <td class="form-label">
                                        Dfund Amount
                                    </td>
                                    <td>
                                        <div class="input-group">
                                            <span class="input-group-addon">
                                                <strong class="dfund-currency">TZS</strong>
                                            </span>
                                            <input type="text" disabled id="DFundAmount" style="width:250px" />
                                        </div>
                                    </td>
                                </tr>
                                <tr class="is-dfund" style="background-color: #FBFBFB">
                                    <td class="form-label">
                                        Dfund Approval Desc
                                    </td>
                                    <td>
                                        <div class="input-group" style="padding-bottom: 10px">
                                            <textarea id="dfundDesc" readonly="readonly" class="form-control" style="width:300px;" name="dfundDesc" rows="2"> </textarea>
                                        </div>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="form-label">
                                        Transaction Exchange Rate
                                    </td>
                                    <td>
                                        <div class="input-group">
                                            @*  <div><input type="text" disabled id="trxExchangeRate" style="width:300px" /></div>*@
                                            <div style="display: flex">
                                                <div><input type="text" disabled id="trxExchangeRate" style="width:240px" /></div>
                                                <div><input type="text" disabled id="trxExchangeRateType" style="width: 60px" class="trxExchangeRateType" /></div>
                                            </div>
                                        </div>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="form-label">
                                        Operational Exchange Rate
                                    </td>
                                    <td>
                                        <div class="input-group">
                                            @*<input type="text" disabled id="oprExchangeRate" style="width:300px" />*@
                                            <div style="display: flex">
                                                <div><input type="text" disabled id="oprExchangeRate" style="width:240px" /></div>
                                                <div><input type="text" disabled style="width: 60px" class="trxExchangeRateType" /></div>
                                            </div>
                                        </div>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="form-label">
                                        Payment Method
                                        <i class="fa fa-times" style="color:white" id="PaymentMethod_1"></i>
                                    </td>
                                    <td>
                                        <div class="input-group">
                                            <select id="PaymentMethod" style="width:300px">
                                                @if (ViewBag.isEmbassy)
                                                {
                                                    <option value="Cheque">Cheque</option>
                                                }
                                                else
                                                {
                                                    <option value="EFT">EFT</option>
                                                    <option value="IBAN">IBAN</option>
                                                }
                                            </select>
                                        </div>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="form-label">
                                        Invoice Date
                                        <i class="fa fa-times" style="color:white" id="InvoiceDate_1"></i>
                                    </td>
                                    <td>
                                        <input type="date" class="form-control" id="InvoiceDate" value="@DateTime.Now.ToString("yyyy-MM-dd")" style="width:300px" />
                                    </td>
                                </tr>
                                <tr>
                                    <td class="form-label">
                                        With holding
                                        <i class="fa fa-times" style="color:white" id="WithHolding_1"></i>
                                    </td>
                                    <td>
                                        <input type="checkbox" style="width:30px" id="WithHoldingCheckbox">
                                    </td>
                                </tr>
                                <tr class="with-holding">
                                    <td class="form-label">
                                        Withholding Amount
                                    </td>
                                    <td>
                                        <pre id="WithHoldingAmount">0</pre>
                                        (Service)x5% + (Goods)x2% <span id="other_w"></span>
                                    </td>
                                </tr>
                                <tr class="with-holding">
                                    <td class="form-label">
                                        Non-Rechargeable Amount(eg. VAT)
                                        <i class="fa fa-times" style="color:white" id="VATOnService_1"></i>
                                    </td>
                                    <td>
                                        <div class="input-group">
                                            @*<span class="input-group-addon">
                                                <strong class="currency">TZS</strong>
                                            </span>*@
                                            <amount-input type="text" style="width:250px" id="VATOnService" onkeyup="computeWithHoldTotal()" />
                                        </div>
                                    </td>
                                </tr>
                                <tr class="with-holding">
                                    <td class="form-label">
                                        Service
                                        <i class="fa fa-times" style="color:white" id="ServiceAmount_1"></i>
                                    </td>
                                    <td>
                                        <div class="input-group">
                                            @*<span class="input-group-addon">
                                                <strong class="currency">TZS</strong>
                                            </span>*@
                                            <amount-input type="text" style="width:250px" id="ServiceAmount" onkeyup="computeWithHoldTotal()" />

                                        </div>
                                    </td>
                                </tr>

                                <tr class="with-holding">
                                    <td class="form-label">
                                        Goods
                                        <i class="fa fa-times" style="color:white" id="GoodsAmount_1"></i>
                                    </td>
                                    <td>
                                        <div class="input-group">
                                            @*<span class="input-group-addon">
                                                <strong class="currency">TZS</strong>
                                            </span>*@
                                            <amount-input type="text" style="width:250px" id="GoodsAmount" onkeyup="computeWithHoldTotal()" />
                                        </div>
                                    </td>
                                </tr>
                                <tr class="with-holding">
                                    <td class="form-label">
                                        Other
                                        <i class="fa fa-times" style="color:white" id="Other_1"></i>
                                    </td>
                                    <td>
                                        <div class="input-group">
                                            <input type="checkbox" id="Other" />
                                        </div>
                                    </td>
                                </tr>
                                <tr class="other">
                                    <td class="form-label">
                                        Amount
                                        <i class="fa fa-times" style="color:white" id="OtherWithholdingAmount_1"></i>
                                    </td>
                                    <td>
                                        <div class="input-group">
                                            @*<span class="input-group-addon">
                                                <strong class="payee-currency">TZS</strong>
                                            </span>*@
                                            <amount-input type="text" style="width:250px" id="OtherWithholdingAmount" onkeyup="computeWithHoldTotal()" />
                                        </div>
                                    </td>
                                </tr>
                                <tr class="other">
                                    <td class="form-label">
                                        Percent
                                        <i class="fa fa-times" style="color:white" id="OtherWithholdingPercent_1"></i>
                                    </td>
                                    <td>
                                        <div class="input-group">
                                            <span class="input-group-addon">
                                                <strong>(%)</strong>
                                            </span>
                                            <percent-input type="text" style="width:250px" id="OtherWithholdingPercent" onkeyup="computeWithHoldTotal()" />
                                        </div>
                                    </td>
                                </tr>
                                <tr class="with-holding">
                                    <td class="form-label">
                                        Total Amount
                                    </td>
                                    <td><input class="with-holding" value="0" type="text" style="width:300px" id="WithHoldingTotalAmount" disabled></td>
                                </tr>
                                <tr id="applydateContaner">
                                    <td class="form-label">
                                        Apply Date
                                        <i class="fa fa-times" style="color:white" id="ApplyDate_1"></i>
                                    </td>
                                    <td>
                                        <input type="date" style="width:300px;" id="ApplyDate">
                                    </td>
                                </tr>
                                <tr>
                                    <td class="form-label">GL Items</td>
                                    <td>
                                        <a class="search-btn" onclick="SearchGl()" href="#" style="display:block;width:300px">
                                            <i class="fa fa-search search-icon"></i>
                                            Search...
                                        </a>
                                    </td>
                                </tr>
                            </table>
                        </div>
                    </div>
                    <div style="padding-top:5px">

                        <table id="dt_voucher_detail" class="table table-striped table-bordered
                                       table-hover table-condensed" width="100%"></table>
                        <div style="padding-bottom:10px" id="infoPanel">
                            <div class="info-box">No GL Items Selected</div>
                        </div>
                    </div>
                    <!-- end widget content -->
                    <div style="float:right;padding-bottom:10px">
                        <strong>BALANCE (<strong class="currency">TZS</strong>): </strong>
                        <strong id="total_amount">0.00</strong>
                    </div>
                    <div class="row">
                        <div class="col-md-2"></div>
                        <div class="col-md-6">
                            <button class="btn btn-info" href='@Url.Action("pendingvoucher", "PaymentVoucher")' style="margin-right:5px">
                                <i class="glyphicon glyphicon-arrow-left"></i>Back
                            </button>
                            <button type="submit" class="btn btn-info" id="form_submision">
                                <i class="fa fa-save"></i>Save
                                <img src="~/Content/img/loading.gif" id="saveLoader" />
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </article>

    </section>
</div>

<!----------- Search Payee ----------------->
<div class="modal fade" id="payeeModal" style="left:4%">
    <div class="modal-dialog" style="width:80%;">
        <div class="modal-content panel-info">
            <div class="modal-header panel-heading">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h3 class="modal-title"> Search Payee</h3>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-6">
                    </div>
                    <div class="col-md-6">
                        <div class="search-container" style="float:right">
                            <i class="fa fa-search search-icon"></i>
                            <input type="search" name="search" placeholder="Search..." id="searchbox">
                        </div>
                    </div>
                </div>
                <table class="table" id="dt_search_payee">
                    <thead>
                        <tr>
                            <th>#</th>
                            <th>PaymentId</th>
                            <th>BIC</th>
                            <th>CtrlNum</th>
                            <th>Payee Name</th>
                            <th>Account Name</th>
                            <th>Payee Code</th>
                            <th>Bank Name</th>
                            <th>Bank Account No</th>
                            <th>Payee Type</th>
                            <th>Currency</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>

            </div>
            <div class="modal-footer">
                <button class="btn btn-info" data-dismiss="modal">
                    <i class="fa  fa-times"></i>Close
                </button>
            </div>
        </div>
    </div>
</div>

<!----------- Search GL Items ----------------->
<div class="modal fade" id="glItemsModal" style="left:4%">

    <div class="modal-dialog" style="width:80%;">
        <div class="modal-content panel-info">
            <div class="modal-header panel-heading">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h3 class="modal-title"> Search Gl Item(s)</h3>
            </div>
            <div class="modal-body">
                <table>
                    <tr>
                        <td style="padding:5px">Total Voucher Amount</td>
                        <td style="padding:5px">
                            <input type="text" disabled id="total_voucher_amount2">
                        </td>

                        <td style="padding:5px">Total Line Amount</td>
                        <td style="padding:5px">
                            <input value="0" type="text" disabled id="total_line_amount">
                        </td>

                        <td style="padding:5px">Difference</td>
                        <td style="padding:5px">
                            <input value="0" type="text" disabled id="difference">
                        </td>
                    </tr>
                </table>
                <div>
                    <div class="row-align" style="padding-top:1%;padding-bottom:1%">
                        <div>
                            Currency: <strong class="currency"></strong>
                        </div>
                        <div class="search-container " style="float:right">
                            <i class="fa fa-search search-icon"></i>
                            <input type="search" name="search" placeholder="Search..." id="searchbox2">
                        </div>
                    </div>
                    <table id="dt_search_gl_item" class="table table-striped table-bordered table-hover table-condensed" width="100%">
                        <thead>
                            <tr>
                                <th>#</th>
                                <th>Expenditure Line Item</th>
                                <th>Item Description</th>
                                <th id="BalanceTitle">Fund Balance</th>
                                <th id="FundingRef">Funding Reference</th>
                                <th>SubLevelCode</th>
                                <th>Expense Amount</th>
                            </tr>
                        </thead>
                    </table>

                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-info" id="btn_save_gl_items">
                        <i class="fa fa-save"></i>Save
                    </button>
                    <button class="btn btn-info" data-dismiss="modal">
                        <i class="fa  fa-times"></i>Cancel
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

<!--- HIDDEN SECTION -->
<table id="dt_selected_payee" class="table" style="visibility:hidden"></table>
<!----------- Search Project ----------------->
<div class="modal fade" id="projectModal" style="left:4%">
    <div class="modal-dialog" style="width:80%;">
        <div class="modal-content panel-info">
            <div class="modal-header panel-heading">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h3 class="modal-title"> Search Project</h3>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-6">
                    </div>
                    <div class="col-md-6">
                        <div class="search-container" style="float:right">
                            <i class="fa fa-search search-icon"></i>
                            <input type="search" name="search" placeholder="Search..." id="searchbox_project">
                        </div>
                    </div>
                </div>
                <table class="table" id="dt_search_project">
                    <thead>
                        <tr>
                            <th>#</th>
                            <th>Project Number</th>
                            <th>Project Description</th>
                            <th>Project Manager</th>
                            <th>Total Amount</th>
                            <th>Commited Amount</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
            <div class="modal-footer">
                <button class="btn btn-info" data-dismiss="modal">
                    <i class="fa  fa-times"></i>Close
                </button>
            </div>
        </div>
    </div>
</div>

@section pagespecific{
    <script>

        function toggleAOFields() {
            $(".ao-fields").toggle($("#AOApprovalType").val() == 1)
        }

        toggleAOFields()
        var AOBalance = Number.MAX_SAFE_INTEGER;
        var DfundBalance = Number.MAX_SAFE_INTEGER;

        $(function () {

            if ('@ViewBag.SHOW_APPROVAL_TYPE' !== "YES") {
                $("#approvalTypeDropDown").css({ "display": 'none' })
            }

            if ($("#DfundApprovalId")[0]) {
                DfundBalance = 0
            }
            if ($("#DfundBalance1")[0]) {
                AOBalance = 0
            }

            $("#DfundApprovalId").select2({
                minimumInputLength: 2,
                width: 'resolve',
                ajax: {
                    url: '@Url.Action("GetApprovalByApprovalCategory", "DfundApprovals")',
                    type: "GET",
                    dataType: 'json',
                    data: function (term) {
                        return { term: term, approvalCategory: "DFund" };
                    },
                    results: function (data, page) {
                        return { results: data.approvals };
                    }
                }
            });

            $("#AOApprovalId").select2({
                minimumInputLength: 2,
                width: 'resolve',
                ajax: {
                    url: '@Url.Action("GetApprovalByApprovalCategory", "DfundApprovals")',
                    type: "GET",
                    dataType: 'json',
                    data: function (term) {
                        return { term, approvalCategory: "AO" };
                    },
                    results: function (data, page) {
                        return { results: data.approvals };
                    }
                }
            });

            $("#InvoiceNumber").select2({
                minimumInputLength: 2,
                width: 'resolve',
                ajax: {
                    url: '@Url.Action("GetInvoiceSummary", "PaymentVoucher")',
                    type: "GET",
                    dataType: 'json',
                    data: function (term) {
                        var selectedPayee = dt_selected_payee.DataTable().rows().data();
                        var row = selectedPayee.rows(0).data()[0];
                        if (!row) {
                            swal("Please search payee first")
                            return;
                        }
                        return { term, payeeCode: row[5] || 'NA' };
                    },
                    results: function (response, page) {
                        return { results: response.data };
                    }
                }
            });
        });

        $("#InvoiceNumber").change(function () {
            var invoiceNumber = $("#InvoiceNumber").val();
            GetInvoiceBalance(invoiceNumber)
        })

        $(".DfundBalance1").toggle(false);
        $("#DfundApprovalId").change(function () {
            $.ajax({
                type: "GET",
                url: '@Url.Action("GetApprovalByApprovalId", "DfundApprovals")',
                data: { id: $("#DfundApprovalId").val()},
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {
                    $("#DfundBalance").val(0)
                    DfundBalance = 0
                    if (response.balanceAmount) {
                        DfundBalance = response.balanceAmount;
                        $("#DfundBalance").val(toLabel(DfundBalance));
                        $("#dfundDesc").val(toLabel(response.description));
                        $(".dfund-currency").text(response.currency);
                        GetDFundEquivalentAmount();
                    }
                },
                failure: function (error) {
                    swal(error);
                }
            });
        });

        $("#AOApprovalId").change(function () {
            $.ajax({
                type: "GET",
                url: '@Url.Action("GetApprovalByApprovalId", "DfundApprovals")',
                data: { id: $("#AOApprovalId").val()},
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {
                    $("#AOBalance").val(0)
                    AOBalance = 0
                    if (response.balanceAmount) {
                        AOBalance = response.balanceAmount;
                        $("#AOBalance").val(toLabel(AOBalance));
                        $("#AODesc").val(toLabel(response.description));
                        $(".ao-currency").text(response.currency);
                        //GetTransactionExchangeRate(response.currency);
                    }
                },
                failure: function (error) {
                    swal(error);
                }
            });
        });


        $("#trxOrOpAmount").on("keyup", function () {
            updateTransactionOperationalAmount();
        });

        $("#currencyDropDown").on("change", function () {
            updateTransactionOperationalAmount();
        });

        function updateTransactionOperationalAmount() {
            var amount = $("#trxOrOpAmount").val();
            if ($("#currencyDropDown").val() === "TransactionAmount") {
                $("#_total_voucher_amount").val(toLabel(amount))
                $("#_total_voucher_amount").trigger('keyup');
            } else {
                $("#_operationalAmount").val(toLabel(amount));
                $("#_operationalAmount").trigger('keyup')
            }
        }

        $("#_total_voucher_amount").on("keyup", function () {

            if ($("#AOBalance")[0]) {
                GetAOEquivalentAmount()
            }

            if ($("#DfundBalance")[0]) {
                GetDFundEquivalentAmount();
            }
           // GetEquivalentAmount();
            GetOperationalAmount();
        })


        $("#_operationalAmount").on("keyup", function () {

            if ($("#AOBalance")[0]) {
                GetAOEquivalentAmount()
            }

            if ($("#DfundBalance")[0]) {
                GetDFundEquivalentAmount();
            }

           GetTransactionAmount()
        })

        function currencyConverter(exchangeRates, query) {
            const [fromCurrency, fromAmount] = Object.entries(query)[0];
            const toCurrency = Object.keys(exchangeRates).find(key => key !== fromCurrency);

            if (!exchangeRates[fromCurrency] || !exchangeRates[toCurrency]) {
                throw new Error(`Invalid currencies in exchange rates or query.`);
            }

            // Perform conversion
            const rate = exchangeRates[toCurrency] / exchangeRates[fromCurrency];
            const convertedAmount = fromAmount * rate;

            return convertedAmount;
        }

        $(document).ready(function () {
            $("#dt_search_gl_item_wrapper .dt-toolbar").remove();
            //$("#dt_search_gl_item_wrapper .dt-toolbar-footer").remove();
            $("#dt_selected_payee_wrapper .dt-toolbar").remove();
            $("#dt_selected_payee_wrapper .dt-toolbar-footer").remove();
            $("#dt_search_payee_wrapper .dt-toolbar").remove();
            $("#dt_voucher_detail_wrapper .dt-toolbar").remove();
            $("#dt_voucher_detail_wrapper .dt-toolbar-footer").remove();
            $("#dt_search_project_wrapper .dt-toolbar").remove();
            $(".with-holding").toggle(false);
            $(".other").toggle(false);
            $(".IsStPayment").toggle(false)

            if ('@ViewBag.isSubTreasuary' === 'True') {
                $(".IsStPayment").toggle(true)
                $("#applydateContaner").toggle(true)
                GetParentInstitutions();
            } else {
                $(".IsStPayment").toggle(false)
                $("#applydateContaner").toggle(false)
            }

        });

        OtherIsProvided = false;
        $("#Other").change(function () {
            $(".other").toggle(this.checked);
            $("#_OtherWithholdingAmount").val(0)
            $("#_OtherWithholdingPercent").trigger('keyup')
            $("#_OtherWithholdingAmount").trigger('keyup')
            $("#_OtherWithholdingPercent").val(0)

            if (this.checked) {
                $("#other_w").text("+ 0x0%");
            }
            OtherIsProvided = this.checked;
        });

        WithHoldingIsProvided = false;
        $("#WithHoldingCheckbox").change(function () {
            $(".with-holding").toggle(this.checked);
            if (!this.checked) {
                //$(".other").toggle(this.checked);
                //$("#")
             }
            WithHoldingIsProvided = this.checked;
        });


        var dt_selected_payee = $('#dt_selected_payee').dataTable({
            "data": [],
            "columnDefs": [{
                "targets": [0, 1],
                "visible": false
            }],
            "columns": [
                { title: "Payee DetailId" },
                { title: "Payee BIC" },
                { title: "Payee Name" },
                { title: "Account Name" },
                { title: "Payee Code" },
                { title: "Bank Name" },
                { title: "Payee Type" },
                { title: "Bank Account No" },
                { title: "Currency" }
            ]
        });

        var dt_search_payee = $('#dt_search_payee').dataTable({
            "aoColumnDefs": [{ "bVisible": false, "aTargets": [1, 2, 3] }],
        });

        $("#searchbox").on("keyup search input paste cut", function () {
            if (!this.value) {
                dt_search_payee.fnClearTable();
            } else {
                searchPayeeTableUpdate(this.value);
            }
        });

        function searchPayeeTableUpdate(search) {
            var url = '@Url.Action("GetPayee", "PaymentVoucher")';
            $.ajax({
                type: "get",
                url: url + "/?search=" + search + "&&sourcemodule=PV",//Added sourcemodule to filter imprest acc.
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {

                    data = response.data;
                    dt_search_payee.fnClearTable();
                    for (var i = 0; i < data.length; i++) {

                        dt_search_payee.fnAddData([i + 1,
                        data[i]["PayeeDetailId"],
                        data[i]["BIC"],
                        data[i]["RequireControlNum"],
                        data[i]["PayeeName"],
                        data[i]["AccountName"],
                        data[i]["PayeeCode"],
                        data[i]["BankName"],
                        data[i]["Accountnumber"],
                        data[i]["PayeeType"],
                        data[i]["Currency"],
                        '<a href="#" onclick="payeeClicked(' + i + ')"><i class="glyphicon glyphicon-plus-sign"></i></a>'
                        ]);
                    }
                },
                failure: function (error) {
                    swal(error);
                }
            });
        }

        var miscDedeductionPayeeId = 0;
        var payeeType = "";
        function payeeClicked(rowId) {
            var data = dt_search_payee.DataTable().rows().data();
            var row = data[rowId];

            if (payeeSearchMod == "MiscDeduction") {
                miscDedeductionPayeeId = row[1]
                $("#MiscDeductionPayee").val(row[5]);
            } else {
                dt_selected_payee.fnClearTable();
                dt_selected_payee.fnAddData([row[1], row[2], row[4], row[5], row[7], row[6], row[8], row[9], row[10]]);
                $("#AccountName").val(row[5]);
                $("#PayeeAccountNumber").val(`${row[10]} - ${row[8]}`);
                $(".payee-currency").text(row[10]);
                $('#PayeeType option')
                .filter(function () {
                    $(this).removeAttr("selected");
                });
                payeeType = row[9].trim().toLowerCase();
                $('#PayeeType option')
                .filter(function () {
                    return $.trim($(this).text().trim().toLowerCase()) == row[9].trim().toLowerCase();
                }).attr('selected', 'selected');
                toggleInvoiceNumber()
            }

            $("#payeeModal").modal("hide");
            GetExchangeRates();
        }

        var dt_voucher_detail = $('#dt_voucher_detail').dataTable({
            "data": [],
            "paging": false,
            "columns": [
                { title: "Expenditure Line Item" },
                { title: "Item Description" },
                { title: "Funding Reference" },
                { title: "SubLevelCode" },
                { title: "Expense Amount" }
            ]
        });

        var payeeSearchMod = ''
        function SearchPayee(mode) {
            payeeSearchMod = mode
            $('#payeeModal').modal('show');
        }

        var dt_search_gl_item = $('#dt_search_gl_item').dataTable({
            "language": {
                "emptyTable": '<strong id="loader" style="color:green">No matching records found</strong>',
                "zeroRecords": "No matching records found"
            },
        });

        let prevSearch = ""
        $("#searchbox2").on("keyup search input paste cut", function () {
            setTimeout(() => {
                if (prevSearch != this.value) {
                    updateSearchGITable()
                    prevSearch = this.value
                }
            }, 2000);
        });


        var SubBudgetClassOld = $("#SubBudgetClass").val();


        $("#SubBudgetClass").change(function () {
            var _data = dt_voucher_detail.DataTable().rows().data();
            if (_data.length > 0) {
                confirmSubBudgetClassChange(SubBudgetClassOld, $(this).val());
            }
            SubBudgetClassOld = $(this).val();
            var subBudgetClassList = SubBudgetClassOld.split(";");
            var subBudgetClass = subBudgetClassList[0].trim();
            $(".currency").text(subBudgetClassList[1].trim());
            $("#_total_voucher_amount").val(0)
             $("#total_voucher_amount").val(0)
            GetExchangeRates();
            fetchPayerAccounts(subBudgetClass)
            GetFundBalanceSum()
        });

        $(".subwarant-holder").change(function () {
            var _data = dt_voucher_detail.DataTable().rows().data();
            if (_data.length > 0) {
                dt_voucher_detail.fnClearTable();
                $("#total_amount").load(location.href + " #total_amount");
                $("#total_line_amount").val(0);
                computeTotalAmount();
            }
        });

        let data = []

        function updateSearchGITable() {
            dt_search_gl_item.fnClearTable();
            $("#loader").text("Loading Please Wait...")
            var subBudgetClassList = $("#SubBudgetClass").val();
            subBudgetClassList = subBudgetClassList.split(";");
            var subBudgetClass = subBudgetClassList[0].trim();
            var url = '@Url.Action("GetFundbalance", "PaymentVoucher")';

            var fundBalanceParams = {
                subBudgetClass,
                instCode: '@ViewBag.isSubTreasuary' === 'True' ? $("#ParentInstitution").val().split("-")[0].trim() : "UNKNOWN",
                subWarrantCode: '@ViewBag.isSubTreasuary' === 'True' ? $("#SubWarrant").val().split("-")[0].trim() : "UNKNOWN",
                applyDate: $("#ApplyDate").val(),
                JournalTypeCode: $("#IsEmbassyPayment").is(":checked") ? "PVE" : "UNKNOWN",
                IsAccrualVoucher: $("#IsAccrualVoucher").is(":checked")
            };

            $(".currency").text(subBudgetClassList[1].trim());

            $.ajax({
                type: "post",
                url: url,
                data: fundBalanceParams,
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {
                    data = response.data;
                    updateGLSearchTable(data)
                },
                failure: function (error) {
                    swal(error);
                }
            });
        }

        $('#dt_search_gl_item').on('draw.dt', function () {
            Object.keys(selectedItems).forEach(Id=>{
                $("#_Id-"+Id+"").val(toLabel(selectedItems[Id].Amount))
                $("#Id-"+Id+"").val(toLabel(selectedItems[Id].Amount))
            })
        });

        function updateGLSearchTable(data) {
            dt_search_gl_item.fnClearTable();
            for (var i = 0; i < data.length; i++) {
                var Id = data[i].FundBalanceViewId
                if ($("#IsAccrualVoucher").is(":checked")) {
                    dt_search_gl_item
                        .fnAddData([i + 1,
                                    data[i]["GlAccount"].split("|").join("-"),
                                    data[i]["GlAccountDesc"],
                                    toLabel(data[i]["BudgetBalance"]|| 0),
                                    'NA',
                                    data[i]["SublevelCode"],
                                    '<amount-input placeholder="Amount" id="Id-' + Id + '" onkeyup="amountChanged(' + Id + ')" />'
                    ]);
                } else {
                    dt_search_gl_item
                        .fnAddData([i + 1,
                                    data[i]["GlAccount"].split("|").join("-"),
                                    data[i]["GlAccountDesc"],
                                    toLabel(data[i]["FundBalance"]),
                                    data[i]["FundingRefNo"],
                                    data[i]["SublevelCode"],
                                    '<amount-input placeholder="Amount" id="Id-' + Id + '" onkeyup="amountChanged(' + Id + ')" />'
                    ]);
                }

            }

            if (data.length == 0) {
                $("#loader").text("No Matching Record Found")
            } else {
                $("#loader").text("")
            }
        }

        var TotalAmountOld = toNumber($("#_total_voucher_amount").val());
        function clearVochaDetailsTable() {
            var _data = dt_voucher_detail.DataTable().rows().data();

            if (_data.length > 0) {
                confirmTotalAmountChange(TotalAmountOld, toNumber($("#_total_voucher_amount").val()));
            }
            TotalAmountOld = $("#_total_voucher_amount").val();
        }


        function resetVochaDetailsTable() {
            $("#total_amount").text("0.00");
            dt_voucher_detail.fnClearTable();
        }


        let prevSBC = null;
        function SearchGl() {
            if (voucherSummaryFormValidation()) {
                if (prevSBC !== $("#SubBudgetClass").val()) {
                    selectedItems = {}
                }
                prevSBC = $("#SubBudgetClass").val()
                $('#total_voucher_amount2').val(toLabel($('#_operationalAmount').val()));
                computeTotalAmount();
                updateSearchGITable();
                $('#glItemsModal').modal('show');
            }
        }

        function remove(array, val) {
            var found = array.indexOf(val);
            while (found !== -1) {
                array.splice(found, 1);
                found = array.indexOf(val);
            }
        }

        var form_data_status = [];
        var all_amounts = {};
        var selectedItems = {}
        function amountChanged(Id) {
            var Amount = toNumber($("#_Id-" + Id).val() || "0");
            
            var row = data.filter(a => a.FundBalanceViewId == Id)[0]
            if (Amount > 0) {
                selectedItems[Id] = { ...row, Amount };
                var fundBalance = row.FundBalance
                if ($("#IsAccrualVoucher").is(":checked")) {
                    fundBalance = row.BudgetBalance
                }

                if (toNumber(fundBalance) >= Amount) {
                    $("#_Id-" + Id).css({ 'color': 'black' });
                    remove(form_data_status, Id);
                    computeTotalAmount();
                } else {
                    form_data_status.push(Id);
                    $("#_Id-" + Id).css({ 'color': 'red' });
                }
            } else {
                delete selectedItems[Id]
            }
            computeTotalAmount();
        }

        function computeTotalAmount() {
            var total_amount = 0;
            var difference = 0;
            $("#difference").val($('#_operationalAmount').val());
            Object.keys(selectedItems).forEach(Id => {
                total_amount += (selectedItems[Id].Amount || 0)
            })
            try {
                difference = toNumber($('#_operationalAmount').val()).toFixed(2) - toNumber(total_amount).toFixed(2);
                $("#difference").val(toLabel(difference));

                if (difference < 0) {
                    $("#difference").css({ 'color': 'red' });
                } else {
                    $("#difference").css({ 'color': 'black' });
                }
            } catch (e) {
                console.log(e)
            }
            $("#total_line_amount").val(toLabel(total_amount));
        }

        $("#btn_save_gl_items").click(function () {
            var total_amount = 0;
            var difference = 0;

            if (form_data_status.length == 0) {
                dt_voucher_detail.fnClearTable();
                $("#total_amount").text("0.00");
                Object.keys(selectedItems).forEach(Id => {
                    if (selectedItems[Id].GlAccount) {
                        total_amount += selectedItems[Id].Amount
                        dt_voucher_detail.fnAddData([
                            selectedItems[Id].GlAccount,
                            selectedItems[Id].GlAccountDesc,
                            selectedItems[Id].FundingRefNo,
                            selectedItems[Id].SublevelCode,
                            toLabel(selectedItems[Id].Amount)
                        ]);
                    }
                })
                $("#total_amount").text(toLabel(total_amount));
                difference = toNumber($('#_operationalAmount').val()).toFixed(2) - toNumber(total_amount).toFixed(2);

                if (difference < 0) {
                    swal("Difference Cannot be negative..");
                    dt_voucher_detail.fnClearTable();
                } else {
                    $('#glItemsModal').modal('hide');
                }
            } else {
                swal("Item has insufficient fund balance....");
            }
            toggleTableInfo();
        });


        toggleTableInfo();
        function toggleTableInfo() {
            var data = dt_voucher_detail.DataTable().rows().data();
            if (data.length > 0) {
                $("#dt_voucher_detail").toggle(true);
                $("#infoPanel").toggle(false);
            } else {
                $("#dt_voucher_detail").toggle(false);
                $("#infoPanel").toggle(true);
            }
        }


        $("#saveLoader").toggle(false);
        var isSubmitted = false
        $("#form_submision").click(function () {

            var subBudgetClassList1 = $("#SubBudgetClass").val().split(";");
            var subBudgetClass1 = subBudgetClassList1[0].trim();

            if (!$("#IsAccrualVoucher").is(":checked")) {

                if (toNumber($("#FundBalance").val()) <= 0 && subBudgetClass1 != "301") {
                    swal("Sorry, You have insufficient balance you cannot proceed with payment.")
                    return;
                }

            }


            var difference = toNumber($("#_total_voucher_amount").val()) - toNumber($("#WithHoldingTotalAmount").val());

            if (toNumber($("#difference").val()) != 0) {
                swal("Difference Must be Zero.");
            } else if (WithHoldingIsProvided && difference != 0) {
                swal("'Withholding Total' must be equal to 'Total Amount'")
            } else {
                if (voucherSummaryFormValidation()) {
                    if (controlNumberIsProvided && '@ViewBag.ValidateControlNumber' == 'TRUE'){
                      //  validateContolNumber()
                    }else{
                      //  saveVoucherInformation()
                    }
                    saveVoucherInformation()
                }
            }
        });

        function validateContolNumber() {
            var url = '@Url.Action("CheckControlNumber", "PaymentVoucher")';
            var ControlNumber = $("#ControlNumber").val();
            var OperationalAmount = toNumber($("#_total_voucher_amount").val())
            var data = dt_selected_payee.DataTable().rows().data();
            var row = data.rows(0).data()[0];
            var PayeeBankAccount = row[6].toLocaleLowerCase()

            $.ajax({
                type: "GET",
                url: url,
                data: { ControlNumber, OperationalAmount, PayeeBankAccount },
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {
                    if (response != "Valid") {
                        swal(response);
                        return
                    }
                    saveVoucherInformation()
                },
                failure: function (error) {
                    swal(error);
                }
            });
        }
        var FixPayerAmount = false
        function saveVoucherInformation(){
            try {

                if (form_data_status.length) {
                    swal("Item has insufficient fund balance....");
                    return;
                }

                if (toNumber($("#difference").val())<0) {
                    swal("Total gl amount exceeds available balance");
                    return;
                }

                if (toNumber($("#difference").val()) != 0) {
                    swal("Total gl amount is not equal to total voucher amount");
                    return;
                }

                var data = dt_selected_payee.DataTable().rows().data();

                var subBudgetClassList = $("#SubBudgetClass").val().split(";");
                var subBudgetClass = subBudgetClassList[0].trim();
                var exchangeRate = subBudgetClassList[2].trim();
                var baseCurrencyCode = subBudgetClassList[3].trim();
                var operationalCurrencyCode = subBudgetClassList[1].trim();
                var baseAmount = toNumber($("#_total_voucher_amount").val()) * toNumber(exchangeRate);

                var voucherDetails = []

                Object.keys(selectedItems).forEach(key => {
                    let row = selectedItems[key]
                    var baseAmountDetail = toNumber(row.Amount) * toNumber(exchangeRate);
                    if (baseAmountDetail > 0 && toNumber(row.Amount)>0) {
                        voucherDetails.push({
                            "ExpenditureLineItem": row.GlAccount.split("-").join("|"),
                            "ItemDescription": row.GlAccountDesc,
                            "FundingReference": row.FundingRefNo,
                            "ExpenseAmount": row.Amount,
                            "baseAmountDetail": baseAmountDetail,
                            SublevelCode: row.SublevelCode
                        })
                    }
                })

                var row = data.rows(0).data()[0];
                var form_data = {
                    "PayeeDetailId": row[0],
                    "PayeeName": row[2],
                    "PayeeAccountName": row[3],
                    "PayeeCode": row[5],
                    "PayeeBIC": row[1],
                    "BankName": row[4],
                    "PayeeType": row[7],
                    "BankAccountNo": row[6],
                    "Address": row[8],
                    "PaymentDescription": $("#PaymentDescription").val(),
                    "InvoiceNo": $("#InvoiceNumber").val() || $("#InvoiceNo").val(),
                    "Comments": $("#Comments").val(),
                    "SubBudgetClass": subBudgetClass,
                    "OperationalAmount": toNumber($("#_operationalAmount").val()),
                    "BaseAmount": baseAmount,
                    "ExchangeRate": exchangeRate,
                    "OperationalCurrencyCode": operationalCurrencyCode,
                    "BaseCurrencyCode": baseCurrencyCode,
                    "ApplyDate": $("#ApplyDate").val(),
                    "InvoiceDate": $("#InvoiceDate").val(),
                    "PaymentMethod": $("#PaymentMethod").val(),
                    "VoucherDetails": voucherDetails,
                    IsAccrualVoucher: $("#IsAccrualVoucher").is(":checked"),
                    hasWithHolding: WithHoldingIsProvided,
                    ServiceAmount: $("#_ServiceAmount").val() ? $("#_ServiceAmount").val() : 0,
                    VATOnService: $("#_VATOnService").val() ? $("#_VATOnService").val() : 0,
                    GoodsAmount: $("#_GoodsAmount").val() ? $("#_GoodsAmount").val() : 0,
                    OtherWithholdingAmount: $("#_OtherWithholdingAmount").val() ? $("#_OtherWithholdingAmount").val() : 0,
                    OtherWithholdingPercent: $("#_OtherWithholdingPercent").val() ? $("#_OtherWithholdingPercent").val() : 0,
                    VATOnGoods: 0,
                    TransactionWithHoldingAmount: $("#WithHoldingAmount").text() ? toNumber($("#WithHoldingAmount").text()) : 0,
                    BaseWithHoldingAmount: $("#WithHoldingAmount").text() ? toNumber($("#WithHoldingAmount").text()) * exchangeRate : 0,
                    IsStPayment:  '@ViewBag.isSubTreasuary' === 'True',
                    ParentInstitutionCode: $("#ParentInstitution").val() ? $("#ParentInstitution").val().split("-")[0].trim() : '',
                    ParentInstitutionName: $("#ParentInstitution").val() ? $("#ParentInstitution").val().split("-")[1].trim() : '',
                    SubWarrantCode: $("#SubWarrant").val() ? $("#SubWarrant").val().split("-")[0].trim() : '',
                    SubWarrantDescription: $("#SubWarrant").val() ? $("#SubWarrant").val().split("-")[1].trim() : '',
                    ControlNumber: $("#ControlNumber").val(),
                    ForceAccountProjectId: selectedProjectId,
                    IsForceAccount: $("#IsForceAccount").is(":checked"),

                    DfundApprovalId: $("#DfundApprovalId").val() || 0,
                    DfundApprovalRef: $("#DfundApprovalId").select2('data')?.text.split("-")[0].trim(),
                    DfundTitle: $("#DfundApprovalId").select2('data')?.text.split("-")[1].trim(),
                    AOApprovalRef: $("#AOApprovalId").select2('data')?.text.split("-")[0].trim() || 'NA',
                    AOApprovalTitle: $("#AOApprovalId").select2('data')?.text.split("-")[1].trim() || 'NA',
                    AOApprovalId: $("#AOApprovalId").val() || 0,

                    TransactionAmount: toNumber($("#_total_voucher_amount").val()),
                    TransactionExchangeRate: $("#trxExchangeRate").val(),
                    TransactionExchangeRateDate: $("#trxExchangeRateDate").val(),
                    TransactionCurrency: $(".payee-currency").first().text(),
                    OperationalExchangeRate: $("#oprExchangeRate").val(),
                    DFundAmount: $("#DFundAmount").val(),
                    DfundCurrency: $(".dfund-currency").first().text(),
                    OperationalCurrency: $("#currency").text(),
                    ExchangeRateType: $("#trxExchangeRateType").val(),
                    FixPayerAmount
                }

                if(MiscDeductionIsProvided){
                    form_data.MiscDeduction = $("#MiscDeduction").val()
                    form_data.MiscDeductionDescription = $("#MiscDeductionDescription").val()
                    form_data.MiscDeductionPayeeDetailsId = miscDedeductionPayeeId
                    form_data.MiscDeductionPayeeName = $("#MiscDeductionPayee").val()
                }

                if (voucherDetails.length == 0) {
                    swal("No GL Items Selected")
                } else {
                    var url = '@Url.Action("CreateVoucher", "PaymentVoucher")';
                    var urlList = '@Url.Action("PendingVoucher", "PaymentVoucher")';
                    $("#form_submision").prop('disabled', true);
                    $("#saveLoader").toggle(true);
                    if (!isSubmitted) {
                        isSubmitted = true
                        $.ajax({
                            type: "post",
                            url: url,
                            data: form_data,
                            contenttype: "application/json; charset=utf-8",
                            datatype: "json",
                            success: function (response) {
                                isSubmitted = false
                                $("#form_submision").prop('disabled', false);
                                $("#saveLoader").toggle(false);
                                if (response == "Success") {
                                    swal("Saved Successfully!", { icon: "success" })
                                        .then((value) => {
                                            window.location.href = urlList;
                                        });
                                }
                                else {
                                    $("#form_submision").prop('disabled', false);
                                    $("#saveLoader").toggle(false);
                                    swal(response);
                                }
                            },
                            failure: function (error) {
                                $("#form_submision").prop('disabled', false);
                                $("#saveLoader").toggle(false);
                                swal(error);
                            }
                        });
                    }
                }
            } catch (e) {
                console.log(e)
                swal("Error submitting Voucher Entry. Please consult system administrator!");
            }
        }

        var controlNumberIsProvided = false;
        function voucherSummaryFormValidation() {
            $("#SubBudgetClass_1").attr("style", "color: white;");
            $("#ControlNumber_1").attr("style", "color: white;");
            $("#MiscDeduction_1").attr("style", "color: white;");
            $("#MiscDeductionDescription_1").attr("style", "color: white;");
            $("#MiscDeductionPayee_1").attr("style", "color: white;");

            if ($("#InvoiceNumber").val()) {
                if (toNumber($("#_total_voucher_amount").val()) > toNumber($("#InvoiceBalance").val())) {
                    swal("Total voucher amount exceeds available invoice balance")
                    return false;
                }
            }

            if (controlNumberIsProvided) {
                var reg = new RegExp(/^[0-9]*$/);
                if ($("#ControlNumber").val().trim() == "" || !reg.test($("#ControlNumber").val())) {
                    $("#ControlNumber_1").attr("style", "color: red;");
                    return false
                }
            }

            if (MiscDeductionIsProvided) {
                if (!$("#_MiscDeduction").val()) {
                    $("#MiscDeduction_1").attr("style", "color: red;");
                    return false
                }

                if (!$("#MiscDeductionDescription").val()) {
                    $("#MiscDeductionDescription_1").attr("style", "color: red;");
                    return false
                }
                if (!$("#MiscDeductionPayee").val()) {
                    $("#MiscDeductionPayee_1").attr("style", "color: red;");
                    return false
                }

                if (toNumber($("#_MiscDeduction").val()) > toNumber($("#_total_voucher_amount").val())) {
                    swal("Misc Deduction exceeds voucher amount.")
                    return false
                }

                if ('@ViewBag.INFORCE_INVOICE_NUMBER' == "YES" && !$("#InvoiceNumber").val()) {
                    swal("Invoice Number is required")
                    return false;
                }

                //var amount = toNumber($("#_total_voucher_amount").val()) - toNumber($("#_MiscDeduction").val()) - WITHHOLDING_AMOUNT;
                //if (amount < 10000) {
                //    swal("[Voucher Amount - Misc Deduction Amount] should not be less than 10,000")
                //    return false
                //}
            }



            var isNotValid = validateInputsParameters([
                "#AccountName",
                "#Comments",
                "#PaymentDescription",
                "#_total_voucher_amount"
            ]);

            if (isNotValid) {
                $(isNotValid + "_1").attr("style", "color: red;");
                return false
            }


            if ($("#SubBudgetClass").val().trim() == "Please choose sub budget class") {
                $("#SubBudgetClass_1").attr("style", "color: red;");
                return false
            }


            if (OtherIsProvided) {
                if (!$("#_OtherWithholdingAmount").val()) {
                    $("#OtherWithholdingAmount_1").attr("style", "color: red;");
                    return false
                }
                if (!$("#_OtherWithholdingPercent").val()) {
                    $("#OtherWithholdingPercent_1").attr("style", "color: red;");
                    return false
                }
            }

            if ($("#IsForceAccount").is(":checked")) {
                if (!selectedProjectId) {
                    swal("No force account project selected!")
                    return false
                }

                if (toNumber($("#_operationalAmount").val()) > toNumber($("#AvailableAmount").val())) {
                    swal("Total voucher amount cannot exceed Force Account available Amount.")
                    return false
                }

            }

            if (toNumber($("#_operationalAmount").val()) > AOBalance) {
                $("#AOApprovalRef_1").attr("style", "color: red;");
                swal("Operational amount exceeds AO balance!")
                return false
            }

            if (isDfundInstitutionAcc) {
                if (toNumber($("#DFundAmount").val()) > DfundBalance) {
                    swal("DfundAmount amount exceeds DFund balance!")
                    return false
                }
            }

            if ('@ViewBag.isSubTreasuary' === 'True' && $("#ParentInstitution").val() == 0) {
                swal("Please select parent institution first!")
                return false
            }

            return true
        }

        function validateInputsParameters(parameterList) {
            var resetStyle = function (parameterList) {
                for (var i = 0; i < parameterList.length; i++) {
                    $(parameterList[i] + "_1").attr("style", "color: white;");
                }
            }

            resetStyle(parameterList);
            for (var i = 0; i < parameterList.length; i++) {
                if (!$(parameterList[i]).val()) {
                    return parameterList[i];
                }
            }
            return null;
        }

        $("#contolNumberCheckbox").change(function () {
            $('#ControlNumber').toggle(this.checked);
            controlNumberIsProvided = this.checked;
        });
        $('#ControlNumber').toggle(false);

        MiscDeductionIsProvided = false;
        $("#MiscDeductionCheckbox").change(function () {
            $('#MiscDeduction').toggle(this.checked);
            $('.MiscDeduction').toggle(this.checked);
            MiscDeductionIsProvided = this.checked;
        });

        $('#MiscDeduction').toggle(false);
        $('.MiscDeduction').toggle(false);
        function confirmTotalAmountChange(oldVal, newVal) {
            swal({
                title: 'Change Total Amount?',
                text: "All the GL Items will be Cleared",
                buttons: [
                  'Cancel',
                  'Proceed'
                ],
            }).then(function (isConfirm) {
                if (isConfirm) {
                    $("#_total_voucher_amount").val(newVal);
                    dt_voucher_detail.fnClearTable();
                    $("#total_amount").load(location.href + " #total_amount");
                    $("#total_line_amount").val(0);
                    computeTotalAmount();
                    swal({
                        title: 'Success',
                        icon: 'success'
                    });
                } else {
                    $("#_total_voucher_amount").val(toLabel(oldVal));
                    TotalAmountOld = oldVal;
                    swal("Cancelled", "No change was made");
                }
            });

        }

        function confirmSubBudgetClassChange(oldVal, newVal) {
            swal({
                title: 'Change Sub Budget Class?',
                text: "All the GL Items will be Cleared",
                buttons: [
                  'Cancel',
                  'Proceed'
                ],
            }).then(function (isConfirm) {
                if (isConfirm) {
                    dt_voucher_detail.fnClearTable();
                    $("#total_amount").load(location.href + " #total_amount");
                    $("#total_line_amount").val(0);
                    computeTotalAmount();
                    swal({
                        title: 'Success',
                        icon: 'success'
                    });
                } else {
                    $("#SubBudgetClass").val(oldVal).prop('selected', true);
                    SubBudgetClassOld = $("#SubBudgetClass").val();
                    swal("Cancelled", "No change was made");
                }
            });
        }

        var WITHHOLDING_AMOUNT = 0
        function computeWithHoldTotal() {
            var ServiceAmount = $("#_ServiceAmount").val() ? $("#_ServiceAmount").val() : 0;
            var VATOnService = $("#_VATOnService").val() ? $("#_VATOnService").val() : 0;
            var GoodsAmount = $("#_GoodsAmount").val() ? $("#_GoodsAmount").val() : 0;
            var OtherWithholdingAmount = $("#_OtherWithholdingAmount").val() ? $("#_OtherWithholdingAmount").val() : 0;
            var OtherWithholdingPercent = $("#_OtherWithholdingPercent").val() ? $("#_OtherWithholdingPercent").val() : 0;

            var VATOnGoods =  0;

            var total = toNumber(ServiceAmount)
                + toNumber(VATOnGoods)
                + toNumber(VATOnService)
                + toNumber(GoodsAmount)
                + toNumber(OtherWithholdingAmount);

            var withHoldingAmount = toNumber(ServiceAmount) * 0.05
                + toNumber(GoodsAmount) * 0.02 + toNumber(OtherWithholdingAmount) * toNumber(OtherWithholdingPercent)/100;
            WITHHOLDING_AMOUNT = withHoldingAmount
            $("#WithHoldingAmount").text(toLabel(withHoldingAmount))
            $("#WithHoldingTotalAmount").val(toLabel(total))
            totalAmount = toNumber($("#_total_voucher_amount").val());
            totalAmount = totalAmount ? totalAmount : 0;

            if (toNumber(total.toFixed(2)) > toNumber(totalAmount.toFixed(2))) {
                $("#WithHoldingTotalAmount").attr("style", "color: red;width:300px");
            } else {
                $("#WithHoldingTotalAmount").attr("style", "color: black;width:300px");
            }

            $("#other_w").text("+ " + OtherWithholdingAmount + "x" + OtherWithholdingPercent + "%");
        }

        var OldDescVal = ""
        $("#PaymentDescription").on("keyup", function (e) {

            $("#maxchars").text(80 - this.value.length)
            if(this.value){
                var reg = new RegExp(/[0-9a-zA-Z ]/);
                if (!reg.test(this.value.substr(-1))) {
                    $("#PaymentDescription").val(OldDescVal)
                } else {
                    OldDescVal = this.value
                }
            }
        });

        $("#Comments").on("keyup", function (e) {
            $("#maxchars_c").text(250 - this.value.length)
        });

        $('#PaymentDescription').bind('copy paste cut', function (e) {
            e.preventDefault();
            swal('Paste option is disabled !!');
        });
        function toLabel(number) {
            number = number || 0
            return number.toLocaleString(undefined, {
                minimumFractionDigits: 2,
                maximumFractionDigits: 2
            })
        }

        function toNumber(number) {
            number = number || 0
            return parseFloat(number.toString().split(",").join(""))
        }

        $("#applydateContaner").toggle(false);
        $(".InvoiceNumber").toggle(false);

        $("#IsAccrualVoucher").change((e) => {
            $("#_IsAccrualVoucher").val(e.target.checked ? "YES" : "NO")
            $("#BalanceTitle").text(e.target.checked ? "Budget Balance" : "Fund Balance")

            $("#FundingRef").text(e.target.checked?"-":"Funding Reference")
            if (e.target.checked) {
                $("#applydateContaner").toggle(true)
                $(".InvoiceNumber").toggle(true)
            } else {
                $("#applydateContaner").toggle(false)
                $(".InvoiceNumber").toggle(false)
            }
            toggleInvoiceNumber()
        })

        function toggleInvoiceNumber() {
            if ($("#_IsAccrualVoucher").val() == "YES"
                && payeeType.toLowerCase() == "Supplier".toLowerCase()
                && '@ViewBag.INFORCE_INVOICE_NUMBER' == "YES"
            ) {
                $(".InvoiceNumber").toggle(true)
            } else {
                $(".InvoiceNumber").toggle(false)
            }
        }

        $(".IsForceAccount").toggle(false)
        $("#IsForceAccount").change((e) => {
            $("#_IsForceAccount").val(e.target.checked ? "YES" : "NO")
            if (e.target.checked) {
                $(".IsForceAccount").toggle(true)
            } else {
                $(".IsForceAccount").toggle(false)
                //$("#applydateContaner").toggle(false)
            }
        })

        function GetParentInstitutions() {
            $.ajax({
                type: "GET",
                url: "@Url.Action("GetParentInstitutions", "PaymentVoucher")",
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {
                if (response.data) {
                    let dropDown = document.getElementById("ParentInstitution")
                    dropDown.innerHTML = '<option value="0">Please choose parent institution</option>'
                    response.data.forEach(v=> {
                        let option = document.createElement('option')
                        option.value = `${v.ParentInstitutionCode}-${v.ParentInstitutionName}`
                        option.innerHTML = `${v.ParentInstitutionCode}-${v.ParentInstitutionName}`
                        dropDown.appendChild(option)
                    })
                    $("#ParentInstitution").trigger("change")
                }
            },
            failure: function (error) {
                swal(error);
            }
        });
        }

        $("#ParentInstitution").change(function () {
            GetSubWarrants(this.value.split("-")[0].trim())
        });

        function GetSubWarrants(institutionCode) {
            $.ajax({
                type: "GET",
                url: "@Url.Action("GetSubWarrants", "PaymentVoucher")",
                data: { institutionCode },
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {
                if (response.data) {
                    let dropDown = document.getElementById("SubWarrant")
                    dropDown.innerHTML = ''
                    response.data.forEach(v=> {
                        let option = document.createElement('option')
                        option.value = `${v.SubWarrantCode}-${v.SubWarrantDescription}`
                        option.innerHTML = `${v.SubWarrantCode}-${v.SubWarrantDescription}`
                        dropDown.appendChild(option)
                    })
                }
            },
            failure: function (error) {
                swal(error);
            }
        });
        }

        function SearchProject() {
            $('#projectModal').modal('show');
        }

        var dt_search_project = $('#dt_search_project').dataTable();

        $("#searchbox_project").on("keyup search input paste cut", function () {
            if (!this.value) {
                dt_search_project.fnClearTable();
            } else {
                searchProjectTableUpdate(this.value);
            }
        });

        var projects = []
        function searchProjectTableUpdate(search) {
            $.ajax({
                type: "GET",
                url:'@Url.Action("SearchProject", "ForceAccountPayment")/?query='+search,
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {
                    projects = response.data;
                    dt_search_project.fnClearTable();
                    for (var i = 0; i < projects.length; i++) {
                        dt_search_project.fnAddData([i + 1,
                            projects[i]["ProjectNumber"],
                            projects[i]["ProjectDescription"],
                            projects[i]["ProjectManager"],
                            toLabel(projects[i]["EstimatedProjectAmount"]),
                            toLabel(projects[i]["AmountCommitted"]),
                            '<a href="#" onclick="projectClicked(' + projects[i]["ForceAccountPaymentRegistrationId"] + ')"><i class="glyphicon glyphicon-plus-sign"></i></a>'
                      ]);
                    }
                },
                failure: function (error) {
                    swal(error);
                }
            });
        }

        var selectedProjectId = 0
        function projectClicked(projectId) {
            selectedProjectId = projectId
            var project = projects.filter(p => p.ForceAccountPaymentRegistrationId == projectId)[0]
            $("#ProjectNumber").val(project.ProjectNumber);
            $("#AvailableAmount").val(toLabel(project.EstimatedProjectAmount - project.AmountCommitted));
            $("#projectModal").modal("hide");
        }


       function fetchPayerAccounts(sbc) {
            $.ajax({
                type: "GET",
                url: "@Url.Action("GetAccountsBySBC", "PaymentVoucher")",
                data: { sbc },
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {
                    createBankAccounts(response.data)
                },
                failure: function (error) {
                    swal(error);
                }
            });
        }

        function createBankAccounts(items) {
            var select = document.getElementById("PayerAccount")
            select.innerHTML = ''
            let opt = document.createElement('option')
            opt.text = "Select Payer Account"
            select.appendChild(opt);
            items.forEach(item => {
                let option = document.createElement('option')
                option.value = item.AccountNumber
                option.text = `${item.OperationalCurrencyCode} - ${item.AccountNumber}`
                select.appendChild(option);
            });
        }


        $("#PayerAccount").change(function () {
            isDfundInstitution(this.value);
        });

        $(".is-dfund").toggle(false);
        var isDfundInstitutionAcc = false;
        function isDfundInstitution(account) {
            isDfundInstitutionAcc = false;
            $.ajax({
                type: "GET",
                url: "@Url.Action("IsDfundInstitution", "PaymentVoucher")",
                data: { account },
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {

                    DfundBalance = AOBalance;
                    if (response.isDfund) {
                        DfundBalance = 0
                        isDfundInstitutionAcc = true
                    }

                    $(".is-dfund").toggle(response.isDfund === 1)
                },
                failure: function (error) {
                    swal(error);
                }
            });
        }

        function GetExchangeRates() {
            $("#_operationalAmount").val(0)
            $("#_total_voucher_amount").val(0)
            $.ajax({
                type: "GET",
                url: "@Url.Action("GetExchangeRate", "PaymentVoucher")",
                data: {
                    transactionCurrency: $(".payee-currency").first().text(),
                    operationCurrency: $(".currency").first().text(),
                    //applyDate: $("#InvoiceDate").val()
                },
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {
                    var {
                        TransactionExchangeRate,
                        ExchangeRateType,
                        OperationExchangeRate,
                        OverallStatus,
                        IsValid
                    } = response.data
                    if (IsValid) {
                        $(".trxExchangeRateType").val(ExchangeRateType);
                        $("#trxExchangeRate").val(thSeparetor(TransactionExchangeRate?.toFixed(4)));
                        $("#oprExchangeRate").val(thSeparetor(OperationExchangeRate?.toFixed(4)));
                    } else {
                        swal(OverallStatus)
                    }
                },
                failure: function (error) {
                    swal(error);
                }
            });
        }

        function thSeparetor(num){
            if(!num) return 0
            var [integerPart, decimalPart] = num.toString().split('.'); // Split by the decimal point
            var formattedInteger = integerPart.replace(/\B(?=(\d{3})+(?!\d))/g, ','); // Add commas
            return decimalPart ? `${formattedInteger}.${decimalPart}` : formattedInteger;
        }

        function GetInvoiceBalance(invoiceNumber) {
            $.ajax({
                type: "GET",
                url: "@Url.Action("GetInvoiceBalance", "PaymentVoucher")",
                data: { invoiceNumber },
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {
                    var { balance } = response
                    $("#InvoiceBalance").val(toLabel(balance));
        },
        failure: function (error) {
            swal(error);
                }
            });
        }

        function GetDfundExchangeRate(currencyCode, baseCurrency) {
            $.ajax({
                type: "GET",
                url: "@Url.Action("GetExchangeRate", "PaymentVoucher")",
                data: { currencyCode, baseCurrency },
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {
                    var { ExchangeRate } = response.data
                    $("#dfundExchangeRate").val(toLabel(ExchangeRate));
                    $("#DfundEquivalentAmount").val(toLabel(ExchangeRate * toNumber($("#DfundBalance").val())));
                },
                failure: function (error) {
                    swal(error);
                }
            });
        }

        function GetOperationalAmount() {
            FixPayerAmount = false;
            var transactionAmount = toNumber($("#_total_voucher_amount").val());
            var operationExchangeRate = $("#oprExchangeRate").val().replace(/,/g, "");
            var transactionExchangeRate = $("#trxExchangeRate").val().replace(/,/g, "");

            var operationalAmount = transactionAmount * (transactionExchangeRate / operationExchangeRate);
            if (payingSameCurrency()) {
                operationalAmount = transactionAmount;
            }
            $("#_operationalAmount").val(truncateToTwoDecimals(operationalAmount))
        }

        function GetTransactionAmount() {
            FixPayerAmount = true;
            var operationalAmount = toNumber($("#_operationalAmount").val());
            var operationExchangeRate = $("#oprExchangeRate").val().replace(/,/g, "");
            var transactionExchangeRate = $("#trxExchangeRate").val().replace(/,/g, "");
            var transactionAmount = operationalAmount * (operationExchangeRate / transactionExchangeRate);
            if (payingSameCurrency()) {
                transactionAmount = operationalAmount;
            }
            $("#_total_voucher_amount").val(truncateToTwoDecimals(transactionAmount))
        }

        function truncateToTwoDecimals(num) {
            const parts = num.toString().split(".");
            if (parts.length === 1) return toLabel(num); // no decimals
            return toLabel(parseFloat(parts[0] + "." + (parts[1].slice(0, 2).padEnd(2, "0"))));
        }

        function payingSameCurrency() {
            const dropdown = document.getElementById("currencyDropDown");
            if (!dropdown) return false;

            const options = Array.from(dropdown.options).map(option => option.value);
            return options.every(value => value === options[0]);
        }

        function GetEquivalentAmount1() {
           var amount = toNumber($("#_total_voucher_amount").val());
           var subBudgetClassList = SubBudgetClassOld.split(";");
           var toCurrency = subBudgetClassList[1].trim();
           var fromCurrency = $(".payee-currency").first().text();
           var applyDate = $("#InvoiceDate").val();

            $.ajax({
                type: "GET",
                url: "@Url.Action("GetEquivalentAmount", "PaymentVoucher")",
                data: { fromCurrency, toCurrency, operationCurrency: toCurrency, amount, applyDate },
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {
                    var { EquivalentAmount, IsValid, OverallStatus } = response.data;
                    if (IsValid) {
                        $("#_operationalAmount").val(toLabel(EquivalentAmount || 0))
                    } else {
                        $("#_operationalAmount").val(OverallStatus)
                    }
                },
                failure: function (error) {
                    swal(error);
                }
            });
        }

       function GetDFundEquivalentAmount() {
           var amount = toNumber($("#_total_voucher_amount").val());
            var toCurrency = $(".dfund-currency").first().text();
           var fromCurrency = $(".payee-currency").first().text();
           var subBudgetClassList = SubBudgetClassOld.split(";");
           var operationCurrency = subBudgetClassList[1].trim();

            $.ajax({
                type: "GET",
                url: "@Url.Action("GetEquivalentAmount", "PaymentVoucher")",
                data: { fromCurrency, toCurrency, operationCurrency, amount },
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {
                    var { EquivalentAmount, IsValid, OverallStatus } = response.data;
                    if (IsValid) {
                        $("#DFundAmount").val(toLabel(EquivalentAmount || 0))
                    } else {
                        $("#DFundAmount").val(OverallStatus)
                    }
                },
                failure: function (error) {
                    swal(error);
                }
            });
        }

        function GetAOEquivalentAmount() {
            var amount = toNumber($("#_total_voucher_amount").val());
            var toCurrency = $(".ao-currency").first().text();
            var fromCurrency = $(".payee-currency").first().text();
            var subBudgetClassList = SubBudgetClassOld.split(";");
            var operationCurrency = subBudgetClassList[1].trim();

            $.ajax({
                type: "GET",
                url: "@Url.Action("GetEquivalentAmount", "PaymentVoucher")",
                data: { fromCurrency, toCurrency, operationCurrency, amount },
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {
                    var { EquivalentAmount, IsValid, OverallStatus } = response.data;
                    if (IsValid) {
                        var bal = AOBalance - (EquivalentAmount || 0);
                        $("#AOBalance").val(toLabel(bal))
                    }
                },
                failure: function (error) {
                    swal(error);
                }
            });
        }

        function GetFundBalanceSum() {

            var subBudgetClassList = $("#SubBudgetClass").val()
            subBudgetClassList = subBudgetClassList.split(";");
            var subBudgetClass = subBudgetClassList[0].trim();

            var fundBalanceParams = {
                subBudgetClass,
                instCode: '@ViewBag.isSubTreasuary' === 'True' ? $("#ParentInstitution").val().split("-")[0].trim() : "UNKNOWN",
                subWarrantCode:  '@ViewBag.isSubTreasuary' === 'True' ? $("#SubWarrant").val().split("-")[0].trim() : "UNKNOWN",
                applyDate: $("#ApplyDate").val(),
                JournalTypeCode: '@ViewBag.isEmbassy' === "True"? "PVE" : "UNKNOWN",
                IsAccrualVoucher: $("#IsAccrualVoucher").is(":checked")
            };

            $.ajax({
                type: "GET",
                url: "@Url.Action("GetFundBalanceSum", "PaymentVoucher")",
                data: fundBalanceParams,
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {
                    $("#FundBalance").val(toLabel(response.data || 0))
                },
                failure: function (error) {
                    swal(error);
                }
            });
        }
    </script>
}


