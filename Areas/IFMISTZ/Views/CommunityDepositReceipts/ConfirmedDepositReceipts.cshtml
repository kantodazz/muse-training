@model IEnumerable<IFMIS.Areas.IFMISTZ.Models.Receipt>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- MAIN CONTENT -->
<div id="content" style="margin: 5px; padding-top: 30px">

    <div class="row">
       
        <div class="col-xs-12 col-sm-3 col-md-3 col-lg-3">
        </div>
    </div>

    <!-- widget grid -->
    <section id="widget-grid" class="">
        <!-- START ROW -->
        <div class="row">
            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">
                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">
                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2> Confirmed Receipts </h2>
                    </header>
                    <!-- widget div-->
                    <div>
                        <!-- widget edit box -->
                        <div class="jarviswidget-editbox">
                            <!-- This area used as dropdown edit box -->
                        </div>
                        <!-- end widget edit box -->
                        <!-- widget content -->
                        <div class="widget-body">
                            <table id="dt_basic" class="table table-striped table-bordered table-hover table-condensed" width="100%">
                                <thead>
                                    <tr style="background-color: #f5f5f5; color:black">
                                        <th>#</th>
                                        <th>
                                            @Html.DisplayNameFor(model => model.ReferenceNo)
                                        </th>
                                        <th>
                                            @Html.DisplayNameFor(model => model.LegalNo)
                                        </th>
                                        <th>
                                            @Html.DisplayNameFor(model => model.ReceiptDate)
                                        </th>
                                        <th>
                                            @Html.DisplayNameFor(model => model.ReceivingBankAccountNo)
                                        </th>
                                        <th>
                                            @Html.DisplayNameFor(model => model.OperationalAmount)
                                        </th>
                                        <th></th>
                                    </tr>
                                </thead>
                                @{int i = 0;}
                                @foreach (var item in Model)
            {
                i++;
                                    <tr>
                                        <td>@i</td>
                                        <td>
                                            @if (item.TransactionType == "Unapplied")
                                            {
                                                <a href="@Url.Action("UnappliedReceiptDetails", "Unapplieds", new { receiptRef = item.ReferenceNo })">
                                                    @Html.DisplayFor(modelItem => item.ReferenceNo)
                                                </a>
                                            }
                                            else
                                            {
                                                @Html.DisplayFor(modelItem => item.ReferenceNo)
                                            }
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.LegalNo)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.ReceiptDate, "_ShortDateTime")
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.ReceivingBankAccountNo)
                                        </td>
                                        <td style="text-align: right">
                                            @Html.DisplayFor(modelItem => item.OperationalAmount)
                                        </td>
                                        <td style="text-align: center">
                                            <!-- Split button -->
                                            <div class="btn-group">
                                                <button type="button" class="btn btn-info btn-xs">Action</button>
                                                <button type="button" class="btn btn-info btn-xs dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                    <span class="caret"></span>
                                                    <span class="sr-only">Toggle Dropdown</span>
                                                </button>
                                                <ul class="dropdown-menu">
                                                    <li><a href="#" onclick="receiptDetails(@item.ReceiptId)">Details</a></li>
                                                    @if (User.IsInRole("Community Deposit Receipts Approval"))
                                                    {
                                                        <li><a href="#" onclick="rejetcReceipt(@item.ReceiptId)">Reject Receipt</a></li>
                                                        <li><a href="#" onclick="approveReceipt(@item.ReceiptId)">Approve Receipt</a></li>
                                                    }
                                                </ul>
                                            </div>
                                        </td>
                                    </tr>
                                }

                            </table>
                        </div>
                        <!-- end widget content -->
                    </div>
                    <!-- end widget div -->

                </div>
                <!-- end widget -->

            </article>
            <!-- END COL -->

        </div>

        <!-- END ROW -->

    </section>
    <!-- end widget grid -->

</div>
<!-- END MAIN CONTENT -->
<!--Start of delete confirmation modal section-->
<div class="modal fade" id="modal" tabindex="-1" role="dialog" aria-labelledby="lblmodal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header alert alert-info" style="font:bold 16px Trebuchet MS, Lucida Sans Unicode, Lucida Grande, Lucida Sans, Arial, sans-serif">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>

                <h4 class="modal-title" id="lblmodal">Approve Dialog</h4>
            </div>
            <div class="modal-body" id="modal-body">
                <p class="success-message">Are you sure you want to approve this receipt ? </p>
            </div>
            <div class="modal-footer">
                <button class="btn btn-success approve-confirm">Yes</button>
                <button class="btn btn-default delete-cancel" data-dismiss="modal">No</button>
            </div>
        </div>
    </div>
</div>
<!--End of delete confirmation modal section-->
<!--Start of details modal section-->
<div class="modal fade" id="modal-details" tabindex="-1" role="dialog" aria-labelledby="lbl-modal">
    <div class="modal-dialog" style="width: 80%">
        <div class="modal-content">
            <div class="modal-header alert alert-info" style="font:bold 16px Trebuchet MS, Lucida Sans Unicode, Lucida Grande, Lucida Sans, Arial, sans-serif">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>

                <h4 class="modal-title" id="lbl-modal-details">Receipt Details</h4>
            </div>
            <div class="modal-body" id="modal-details-body" style="padding: 0px">
            </div>
            <div class="modal-footer">
                <button class="btn btn-default delete-cancel" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
<!--End of details modal section-->

@section Scripts{
    <script>
        // DO NOT REMOVE : GLOBAL FUNCTIONS!

        $(document).ready(function () {

            /* BASIC ;*/
            var responsiveHelper_dt_basic = undefined;
            var responsiveHelper_datatable_fixed_column = undefined;
            var responsiveHelper_datatable_col_reorder = undefined;
            var responsiveHelper_datatable_tabletools = undefined;

            var breakpointDefinition = {
                tablet: 1024,
                phone: 480
            };

            $('#dt_basic').dataTable({
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-12 hidden-xs'l>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_dt_basic) {
                        responsiveHelper_dt_basic = new ResponsiveDatatablesHelper($('#dt_basic'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_dt_basic.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_dt_basic.respond();
                }
            });

            /* END BASIC */

            /* COLUMN FILTER  */
            var otable = $('#datatable_fixed_column').DataTable({

                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6 hidden-xs'f><'col-sm-6 col-xs-12 hidden-xs'<'toolbar'>>r>" +
                        "t" +
                        "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_fixed_column) {
                        responsiveHelper_datatable_fixed_column = new ResponsiveDatatablesHelper($('#datatable_fixed_column'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_datatable_fixed_column.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_datatable_fixed_column.respond();
                }

            });

            // custom toolbar
            $("div.toolbar").html('<div class="text-right"><img src="/Content/img/logo.png" alt="SmartAdmin" style="width: 111px; margin-top: 3px; margin-right: 10px;"></div>');

            // Apply the filter
            $("#datatable_fixed_column thead th input[type=text]").on('keyup change', function () {

                otable
                    .column($(this).parent().index() + ':visible')
                    .search(this.value)
                    .draw();

            });
            /* END COLUMN FILTER */

            /* COLUMN SHOW - HIDE */
            $('#datatable_col_reorder').dataTable({
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'C>r>" +
                        "t" +
                        "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_col_reorder) {
                        responsiveHelper_datatable_col_reorder = new ResponsiveDatatablesHelper($('#datatable_col_reorder'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_datatable_col_reorder.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_datatable_col_reorder.respond();
                }
            });

            /* END COLUMN SHOW - HIDE */

            /* TABLETOOLS */
            $('#datatable_tabletools').dataTable({

                // Tabletools options:
                //   https://datatables.net/extensions/tabletools/button_options
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'T>r>" +
                        "t" +
                        "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
                "oTableTools": {
                    "aButtons": [
                    "copy",
                    "csv",
                    "xls",
                       {
                           "sExtends": "pdf",
                           "sTitle": "SmartAdmin_PDF",
                           "sPdfMessage": "SmartAdmin PDF Export",
                           "sPdfSize": "letter"
                       },
                       {
                           "sExtends": "print",
                           "sMessage": "Generated by SmartAdmin <i>(press Esc to close)</i>"
                       }
                    ],
                    "sSwfPath": "/Scripts/plugin/datatables/swf/copy_csv_xls_pdf.swf"
                },
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_tabletools) {
                        responsiveHelper_datatable_tabletools = new ResponsiveDatatablesHelper($('#datatable_tabletools'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_datatable_tabletools.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_datatable_tabletools.respond();
                }
            });

            /* END TABLETOOLS */

        });

        var approveReceipt = function (id) {
            swal({
                title: 'Approval Dialog',
                text: "Are you sure you want to approve this receipt ?",
                buttons: [
                'No',
                'Yes'
                ],
            }).then(function (isConfirm) {
                if (isConfirm) {
                $("#divLoader").show();
                if (id != "") {
                    var url = '@Url.Action("ApproveReceipt", "CommunityDepositReceipts")';
                    $.ajax({
                        url: url,
                        data: { id: id },
                        type: "POST",
                        success: function (response) {
                            $("#divLoader").hide();
                            if (response == "Success") {
                                swal({
                                    text: "Receipt approved successfully.",
                                    icon: "success",
                                    button: "OK",
                                }).then(function () {
                                    location.reload();
                                });
                            }
                            else {
                                swal({
                                    text: response,
                                    icon: "warning",
                                    button: "OK",
                                })
                            }
                        },
                        error: function () {
                            swal({
                                text: "An error occured. Please try again..",
                                icon: "error",
                                button: "OK",
                            })
                        },
                        complete: function () {
                            $('#btnSave').prop("disabled", false);
                            $("#divLoader").hide();
                        }
                    });
                }
                }
            });
        };

        var receiptDetails = function (id) {
            var url = '@Url.Action("DepositReceiptDetails", "CommunityDepositReceipts")/' + id;

            $("#modal-details-body").load(url, function () {
                $("#modal-details").modal({
                    backdrop: "static",
                    keyboard: false
                });
            });
        };

        var rejetcReceipt = function (id) {
            const textarea = document.createElement("textarea");
            textarea.placeholder = "Enter reason...";
            textarea.style.width = "100%";
            textarea.style.height = "100px";
            textarea.style.padding = "10px";

            swal({
                title: 'Rejection Reason',
                content: textarea,
                button: {
                    text: "SAVE",
                    closeModal: true,
                },
            }).then(remark => {
                if (!textarea.value.trim()) {
                    swal("No reason was provided", { icon: "info" });
                } else {
                    confirmRejection(id, textarea.value.trim());
                };
            });
        }

        function confirmRejection(id, remark) {
            var url = '@Url.Action("RejectDepositReceipt", "CommunityDepositReceipts")';
            $.ajax({
                type: "post",
                url: url,
                data: { "id": id, "remark": remark},
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {
                    if (response == "Success") {
                        swal("Receipt Rejected Successfully!", { icon: "success" })
                        .then((e) => {
                            window.location.reload();
                        });
                    }
                    else {
                        swal(response, { icon: "warning" });
                    }
                },
                failure: function (error) {
                    swal(error, { icon: "error" });
                }
            });
        }
    </script>
}
