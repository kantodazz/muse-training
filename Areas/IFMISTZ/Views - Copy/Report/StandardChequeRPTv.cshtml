@model IFMIS.Areas.IFMISTZ.Models.InstitutionListVm

@{
    ViewBag.Title = "Check Printing Parameters";

}

<style>
    .input {
        border-width: 1px 0 1px 1px;
        border-color: #ccc;
        border-style: solid;
        width: 110px;
        height: 32px;
    }

    span {
        cursor: pointer;
    }
</style>

<!-- MAIN CONTENT -->
<div id="content">

    <div class="row">


        <div class="col-xs-12 col-sm-3 col-md-3 col-lg-3">

        </div>
    </div>


    <!-- widget grid -->
    <section id="widget-grid" class="">


        <!-- START ROW -->

        <div class="row">

            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">

                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">

                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2>@ViewBag.Title</h2>

                    </header>

                    <!-- widget div-->
                    <div>

                        <!-- widget edit box -->
                        <div class="jarviswidget-editbox">
                            <!-- This area used as dropdown edit box -->

                        </div>
                        <!-- end widget edit box -->
                        <!-- widget content -->
                        <div class="widget-body">
                            <div class="form-horizontal">
                                <div class="form-group">
                                    <div class="control-label col-md-2">
                                        Institution Code
                                    </div>
                                    <div class="col-md-5">
                                        @Html.DropDownListFor(model => model.InstitutionCode, Model.InstitutionCodeList, "-- Select Institution --", new { @class = "select2 form-control padding-left-10" })
                                        @Html.ValidationMessageFor(model => model.InstitutionCode, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                @*<div class="form-group">
                                    <div class="control-label col-md-2">
                                        Bank Account
                                    </div>
                                    <div class="col-md-5">
                                        <select id="InstitutionAccountList" name="InstitutionAccountList" class="form-control padding-left-10">
                                            <option value="000">ALL</option>
                                        </select>
                                    </div>
                                </div>*@
                                <div class="form-group">
                                    <div class="control-label col-md-2">
                                        Bank Account
                                    </div>
                                    <div class="col-md-5">
                                        <select id="InstitutionAccountList" name="InstitutionAccountList" class="select2 form-control padding-left-10">
                                            <option value="">-- Select Bank Account --</option>
                                        </select>
                                    </div>
                                </div>
                                @*<div class="form-group">
                                    <div class="control-label col-md-2">
                                        Bank Account
                                    </div>
                                    <div class="col-md-5">
                                        @Html.DropDownListFor(model => model.InstitutionAccountList, Model.InstitutionAccountList, "-- Select Bank Account --", new { @class = "select2 form-control padding-left-10 select2" })
                                        @Html.ValidationMessageFor(model => model.InstitutionAccountList, "", new { @class = "text-danger"})
                                    </div>
                                </div>*@
                                <div class="form-group">
                                    <div class="control-label col-md-2">
                                        Account Category
                                    </div>
                                    <div class="col-md-5">
                                        <select id="AccountCategoryList" name="AccountCategoryList" class="select2 form-control padding-left-10">
                                            <option value="">-- Select Account Category --</option>
                                        </select>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="control-label col-md-2">
                                        Start Voucher Number
                                    </div>
                                    <div class="col-md-3">
                                        <select id="StartVoucherNum" name="StartVoucherNum" class="select2 form-control padding-left-10 select2">
                                            <option value="">-- Start Voucher Number --</option>
                                        </select>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="control-label col-md-2">
                                        End Voucher Number
                                    </div>
                                    <div class="col-md-3">
                                        <select id="EndVoucherNum" name="EndVoucherNum" class="select2 form-control padding-left-10 select2">
                                            <option value="">-- End Voucher Number --</option>
                                        </select>
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="control-label col-md-2">
                                        Next Check Number
                                    </div>
                                    <div class="col-md-3">
                                        <input type="text" name="StartCheckNo" placeholder="Format: 00200" id="StartCheckNo" class="form-control padding-left-10" />
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="control-label col-md-2">
                                        Override Document Date
                                    </div>
                                    <div class="col-md-5 inputGroupContainer">
                                        <div class="input-group">
                                            <div class="input-group flatpickr">
                                                <input name="OverrideDate" id="OverrideDate" placeholder="Pick Date" class="input padding-left-10" autocomplete="off" data-input />
                                                <span class="input-group-addon" data-toggle><i class="fa fa-calendar"></i></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <hr class="simple" />
                                <div class="form-group">
                                    <div class="control-label col-md-2">
                                    </div>
                                    <div class="col-md-5">
                                        <button type="submit" class="btn action-btn btn btn-info" onclick="StandardChequeWH()">
                                            Process Check
                                        </button>
                                    </div>
                                </div>

                            </div>
                        </div>
                        <!-- end widget content -->
                    </div>
                    <!-- end widget div -->

                </div>
                <!-- end widget -->
            </article>
            <!-- END COL -->

        </div>

        <!-- END ROW -->

    </section>
    <!-- end widget grid -->

</div>
<!-- END MAIN CONTENT -->
@section scripts
{
    <script>

        function StandardChequeWH() {
            var entityCode = $("#InstitutionCode").val().trim(),
                bankCode = $("#InstitutionAccountList").val().trim(),
                accountCateg = $("#AccountCategoryList").val().trim(),
                startVoucherNum = $("#StartVoucherNum").val().trim(),
                endVoucherNum = $("#EndVoucherNum").val().trim(),
                startCheckNo = $("#StartCheckNo").val().trim(),
                overrideDate = $("#OverrideDate").val().trim(),
                defaultUrl = "@Model.UrlName" + "StandardChequeWH.aspx",
                specificUrl = "@Model.UrlName" + entityCode + "ChequeRPT.aspx";

            // Embassy list for special cheque priting
            var embassyList = ["E2430000", "E2500000", "E2540000", "E2560000", "E2570000", "E2580000", "E2650000", "E0200000", "E2510000", "E2130000", "E2600000", "E2690000", "E2340000", "E5500000","E6000000","E1330000","E0453500","E2011000","E2024000" ,"E9650000","E9710000","E1613000","E2003700"];

            var isNotSupplied = validateReportParameters(["#InstitutionCode", "#InstitutionAccountList", "#AccountCategoryList", "#StartVoucherNum", "#EndVoucherNum", "#StartCheckNo", "#OverrideDate"]),
                queryString = "instcode=" + entityCode + "&bkcode=" + bankCode + "&acctCateg=" + accountCateg + "&startvoucher=" + startVoucherNum + "&endvoucher=" + endVoucherNum + "&startCheck=" + startCheckNo + "&date=" + overrideDate;

            if (isNotSupplied)
                $(isNotSupplied).attr("style", "border: 1px solid red");
            else {
                swal({
                    text: 'You are going to print a Cheque for Voucher Number ' + startVoucherNum + ' to ' + endVoucherNum + ' from ' + $("#AccountCategoryList option:selected").text().trim() + ' and Start Leaf Number ' + startCheckNo + ' Do you want to continue?',
                    buttons: [
                        'NO',
                        'YES'
                    ],
                    dangerMode: true
                }).then(isConfirmed => {
                    if (!isConfirmed) {
                        swal("No Cheque Printed!");
                    } else {
                        if (embassyList.indexOf(entityCode) !== -1) {
                            $.ajax({
                                type: "GET",
                                url: '@Url.Action("ParameterEncryption", "Report")',
                                contentType: "application/json; charset=utf-8",
                                datatype: "json",
                                data: { "query": queryString },
                                success: function (response) {
                                    window.open(specificUrl + response);
                                }
                            });
                        }
                        else {
                            $.ajax({
                                type: "GET",
                                url: '@Url.Action("ParameterEncryption", "Report")',
                                contentType: "application/json; charset=utf-8",
                                datatype: "json",
                                data: { "query": queryString },
                                success: function (response) {
                                    window.open(defaultUrl + response);
                                }
                            });
                        }
                    };
                });
                
            }
        }

        function validateReportParameters(parameterList) {
            var resetStyle = function (parameterList) {
                for (var i = 0; i < parameterList.length; i++) {
                    $(parameterList[i]).attr("style", "border: 1px solid #ccc");
                }
            }
            resetStyle(parameterList);

            for (var i = 0; i < parameterList.length; i++) {
                if (!$(parameterList[i]).val().trim()) {
                    return parameterList[i];
                }
            }
            return null;
        }

        $("#InstitutionAccountList").change(function () {

            //var accountNo = $(this).val();

            var accountNo = $(this).val(),
                entityCode = $("#InstitutionCode").val().trim();

            //var url = "GetCheckAccountCategories/?accountNo=" + accountNo;

            var url = "GetInstitutionAccountCategories/?accountNo=" + accountNo + "&entityCode=" + entityCode;

            $.ajax({
                type: "GET",
                url: url,
                contentType: "html",
                success: function (response) {
                    $("#AccountCategoryList").empty();
                    $("#AccountCategoryList").append(response);
                }
            });
        });

        $("#AccountCategoryList").change(function () {

            var subBudgetClass = $(this).val(),
                entityCode = $("#InstitutionCode").val().trim(),
                bankCode = $("#InstitutionAccountList").val().trim();

            var url = "GetCheckGeneratedVoucher/?institutionCode=" + entityCode + "&&accountNo=" + bankCode + "&&subBudgetClass=" + subBudgetClass;

            $.ajax({
                type: "GET",
                url: url,
                contentType: "html",
                success: function (response) {
                    $("#StartVoucherNum").empty();
                    $("#StartVoucherNum").append(response);
                    $("#EndVoucherNum").empty();
                    $("#EndVoucherNum").append(response);
                }
            });
        });

        $("#InstitutionCode").change(function () {

            var entityCode = $(this).val();

            var url = "GetInstitutionAccountList/?entityCode=" + entityCode;

            $.ajax({
                type: "GET",
                url: url,
                contentType: "html",
                success: function (response) {
                    $("#InstitutionAccountList").empty();
                    $("#InstitutionAccountList").append(response);
                }
            });
        });

    </script>
}
