@model IFMIS.Areas.IFMISTZ.Models.VariationItemVM
@{
    ViewBag.Title = "Adjust Items";
}
<div align="center">
    <img src="~/Media/Images/ajax_loader.gif" class="loadingImg" style="display:none" />
</div>

@using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = "return SubmitVariation(this)" }))
{
    <div class="modal-body form-horizontal">
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.ContractDetailId)
        @Html.HiddenFor(model => model.VariationItemId)
        @Html.HiddenFor(model => model.VariationPayScheduleId)
        <div class="form-group">

            @Html.LabelFor(model => model.ItemDesc, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-3">

                @Html.EditorFor(model => model.ItemDesc, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", @readonly = "readonly" } })

            </div>
        </div>
        <div class="form-group">

            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-3">

                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", @readonly = "readonly" } })

            </div>
            @if (Model.Quantity != 1)
            {
                @Html.LabelFor(model => model.QuantityVariation, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-3">

                    @Html.EditorFor(model => model.QuantityVariation, new { htmlAttributes = new { @class = "form-control", @required = "required", @autocomplete = "off", @placeholder = "Ënter here quantity to be removed", @onkeyup = "calculateVariation(this)" } })
                </div>

            }
            else
            {
                @Html.Label("Amount", htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-3">
                    <div class="input-group">
                        <span class="input-group-addon currencyDisp">@Html.DisplayFor(model => model.OperationalCurrency)</span>
                        @Html.EditorFor(model => model.TotalAmountVariation, new { htmlAttributes = new { @class = "form-control", @required = "required", @autocomplete = "off", @placeholder = "Enter amount to be decreased" } })
                    </div>


                </div>
            }
        </div>

        <div class="form-group">

            @Html.LabelFor(model => model.UnitPrice, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-3">
                <div class="input-group">
                    <span class="input-group-addon currencyDisp">@Html.DisplayFor(model => model.OperationalCurrency)</span>
                    @Html.EditorFor(model => model.UnitPrice, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", @readonly = "readonly" } })
                </div>
            </div>
            @if (Model.Quantity != 1)
            {
                @Html.LabelFor(model => model.UnitPrice, htmlAttributes: new { @class = "control-label col-md-3" })

                <div class="col-md-3">
                    <div class="input-group">
                        <span class="input-group-addon currencyDisp">@Html.DisplayFor(model => model.OperationalCurrency)</span>
                        @Html.EditorFor(model => model.UnitPrice, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", @readonly = "readonly" } })
                    </div>
                </div>
            }
        </div>
        <div class="form-group">

            @Html.LabelFor(model => model.VAT, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-3">

                @Html.EditorFor(model => model.VAT, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", @readonly = "readonly" } })

            </div>
            @if (Model.Quantity != 1)
            {
                @Html.LabelFor(model => model.VATVariation, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-3">

                    @Html.EditorFor(model => model.VATVariation, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", @readonly = "readonly" } })

                </div>
            }
        </div>
        <div class="form-group">

            @Html.LabelFor(model => model.Overhead, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-3">

                @Html.EditorFor(model => model.Overhead, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", @readonly = "readonly" } })

            </div>
            @if (Model.Quantity != 1)
            {
                @Html.LabelFor(model => model.OverheadVariation, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-3">

                    @Html.EditorFor(model => model.OverheadVariation, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", @readonly = "readonly" } })

                </div>
            }
        </div>
        <div class="form-group">

            @Html.LabelFor(model => model.TotalAmount, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-3">

                @Html.EditorFor(model => model.TotalAmount, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", @readonly = "readonly" } })

            </div>
            @if (Model.Quantity != 1)
            {
                @Html.LabelFor(model => model.TotalAmountVariation, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-3">

                    @Html.EditorFor(model => model.TotalAmountVariation, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", @readonly = "readonly" } })

                </div>
            }
        </div>

    </div>
    <div class="modal-footer">
        <a href="#" class="btn btn-default" data-dismiss="modal">Cancel</a>
        <input class="btn btn-info" type="submit" id="btnSubmit" value="Save" />
        @*<input type="submit" value="Submit" class="btn btn-success" id="btnSubmit" />*@

    </div>

}
















