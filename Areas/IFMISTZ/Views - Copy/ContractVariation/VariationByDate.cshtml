@model IFMIS.Areas.IFMISTZ.Models.ContractVM
@{
    ViewBag.Title = "Variation By Date";
}



<div id="content" style="margin: 5px; padding-top: 30px">

    <div class="row">


    </div>


    <!-- widget grid 1 -->
    <section id="widget-grid" class="">


        <!-- START ROW -->

        <div class="row">

            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">

                <!-- Widget ID (each widget will need unique ID start)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">

                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2>  Variation by change date</h2>

                    </header>


                    <div>
                        <div class="widget-body " style="padding-top:10px;width:100%">

                            <div class="row"> <div class="col-sm-6 col-md-6 col-lg-6"><strong>Contract Number&nbsp;:</strong>&nbsp;@Html.DisplayFor(model => model.ContractNumber)</div><div class="col-sm-6 col-md-6 col-lg-6"><strong>Contract Reg #&nbsp;:</strong>&nbsp;@Html.DisplayFor(model => model.ContractNo)</div></div>
                            <div class="row"> <div class="col-sm-6 col-md-6 col-lg-6"><strong>Contract Name&nbsp;:</strong>&nbsp;@Html.DisplayFor(model => model.ContractName)</div><div class="col-sm-6 col-md-6 col-lg-6"><strong>Contract Amount&nbsp;:</strong>&nbsp;@Html.DisplayFor(model => model.ContractAmount)</div></div>
                            <div class="row">       
                                    <div class="col-sm-6 col-md-6 col-lg-6"><strong>Contract Start Date&nbsp;:</strong>&nbsp;@Convert.ToDateTime(Model.ContractStartDate).ToString("dd/MM/yyyy")</div>                           
                                    <div class="col-sm-6 col-md-6 col-lg-6"><strong>Contract End Date&nbsp;:</strong>&nbsp;@Convert.ToDateTime(Model.ContractEndDate).ToString("dd/MM/yyyy")</div>                            
                            </div>
                            <hr />
                            @using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = "return SubmitSummary(this)" }))
                            {
                                @Html.AntiForgeryToken()
                                @Html.HiddenFor(model => model.ContractId)
                                @Html.HiddenFor(model => model.VariationType)
                                <div class="form-horizontal">


                                    <div class="form-group">
                                        @Html.Label("New Start Date", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-3">

                                            @*@Html.EditorFor(model => model.ContractStartDate, new { htmlAttributes = new { @class = "form-control", @required = "required", autocomplete = "off" } })
                        @Html.ValidationMessageFor(model => model.ContractStartDate, "", new { @class = "text-danger" })*@
                                            <div class="input-group">
                                                <div class="flatpickr3 date-group">
                                                    <input type="text" placeholder="Select Date.."
                                                           data-input
                                                           class="form-control"
                                                           style="width:140px;padding-left:10px;border:none"
                                                           autocomplete="off" name="ContractStartDate" id="ContractStartDate">
                                                    <a class="input-button" title="open" data-toggle href="#">
                                                        <span class="input-group-addon" style="height:32px"><i class="fa fa-calendar"></i></span>
                                                    </a>
                                                </div>
                                            </div>
                                            @Html.ValidationMessageFor(model => model.ContractStartDate, "", new { @class = "text-danger" })


                                        </div>


                                        @Html.Label("New End Date", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-3">


                                            <div class="input-group">
                                                <div class="flatpickr3 date-group">
                                                    <input type="text" placeholder="Select Date.."
                                                           data-input
                                                           class="form-control"
                                                           style="width:140px;padding-left:10px;border:none"
                                                           autocomplete="off" name="ContractEndDate" id="ContractEndDate">
                                                    <a class="input-button" title="open" data-toggle href="#">
                                                        <span class="input-group-addon" style="height:32px"><i class="fa fa-calendar"></i></span>
                                                    </a>
                                                </div>
                                            </div>
                                            @Html.ValidationMessageFor(model => model.ContractEndDate, "", new { @class = "text-danger" })
                                        </div>

                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.VariationReason, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-3">
                                            @Html.EditorFor(model => model.VariationReason, new { htmlAttributes = new { @class = "form-control", @required = "required", rows = "4", maxlength = 250 } })


                                        </div>

                                    </div>
                                </div>

                                <hr />
                                <div class="col-md-offset-1">
                                    <a href="@Url.Action("PendingVariation", "ContractVariation")" style="margin-right:5px" type="submit" class="btn btn-info pull-left"><i class="glyphicon glyphicon-arrow-left"></i> Back  </a>
                                    <button type="button" class="save_button btn btn-info" style="margin-right:2px;display:none">
                                        <i class="glyphicon glyphicon-floppy-disk"></i> Save
                                    </button>

                                </div>
                                <button class="btn btn-info" id="save_summary" style="margin-right:2px">
                                    <i class="glyphicon glyphicon-floppy-disk"></i> Save
                                </button>
                            }
                            <br />
                            <br />


                        </div>





                    </div>


                </div>
            </article>

        </div>
    </section>

</div>


@section pagespecific {
    <!-- PAGE RELATED PLUGIN(S) -->

    <script type="text/javascript">
               function SubmitSummary(formData) {
                            $("#save_summary").prop('disabled', true);
                            var url = '@Url.Action("SaveVariation", "ContractVariation")';
                           var ajaxConfig = {
                            type: "post",
                            url: url,
                            data: new FormData(formData),
                            success: function (response) {
                                $("#save_summary").prop('disabled', false);
                                 if (response == "Success") {
                                    swal("Variation saved successfully", { icon: "success" })
                                        .then((value) => {
                                            debugger
                                        var url = '@Url.Action("PendingVariation", "ContractVariation")';
                                        window.location.replace(url);
                                              });
                                }
                                else {
                                     swal(response);
                                }
                            }
                        }
                        $("#save_summary").prop('disabled', true);
                        if ($(formData).attr('enctype') == "multipart/form-data") {
                            ajaxConfig["contentType"] = false;
                            ajaxConfig["processData"] = false;
                        }
                        $.ajax(ajaxConfig);
                        return false;
                         }
        $(document).ajaxStart(function () {
            $(".loadingImg").show();

        });
        //HIDE LOADER ICON
        $(document).ajaxStop(function () {
            $(".loadingImg").hide();
        });

    </script>
}


