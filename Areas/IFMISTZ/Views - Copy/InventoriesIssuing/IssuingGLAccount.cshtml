@model IFMIS.Areas.IFMISTZ.Models.InventoryIssuingVM
@{
    ViewBag.Title = "Issuing Tracker";
}
<style>
    .search-btn {
        border: 1px solid #ccc;
        border-radius: 4px;
        padding: 5px;
        padding-right: 10px;
    }

    .search-container {
        background-color: white;
        color: black;
        border: 1px solid #ccc;
        border-radius: 4px;
        padding: 3px;
        padding-right: 10px;
        padding-left: 10px;
    }

    .name-input-container {
        display: inline-flex;
        flex: 1 1 300px;
        position: relative;
        overflow: hidden;
    }

    .search-icon {
        padding: 0.5rem;
    }

    .search-button {
        background: #538AC5;
        border: 0;
        color: white;
        padding: 8px;
        border-radius: 0;
    }

    input[type=number] {
        padding: 8px;
        border: 1px solid #ccc;
        width: 205px;
    }

    input[type=text] {
        padding: 5px;
        border: 1px solid #ccc;
    }

    input[type=search] {
        padding: 4px;
        border: hidden;
        border-radius: 4px;
    }

    textarea {
        border: 1px solid #ccc;
    }

    select {
        padding: 8px;
        border: 1px solid #ccc;
        resize: vertical;
        width: 230px;
    }

    .action-btn {
        width: 100px;
        color: white;
    }

    .form-label {
        text-align: right;
    }

    td {
        padding: 5px;
    }

    .info-box {
        padding: 10px;
        background-color: #ECF3F8;
        text-align: center;
        border: 1px solid #ccc;
        border-radius: 5px;
    }

    .row-align {
        display: flex;
        flex-direction: row;
        flex-wrap: wrap;
        justify-content: space-between;
    }
</style>
<div id="content" style="margin: 5px; padding-top: 30px">

    <div class="row">


    </div>


    <!-- widget grid -->
    <section id="widget-grid" class="">


        <!-- START ROW -->

        <div class="row">

            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">

                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">

                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2>Assigning GL Account </h2>

                    </header>


                    <div>
                        <div class="widget-body " style="padding-top:10px;width:100%">

                            <div align="center">
                                <img src="~/Media/Images/ajax_loader.gif" class="loadingImg" style="display:none" />
                            </div>
                            <fieldset class="scheduler-border">
                                <legend class="scheduler-border">Inventory Issuing Details</legend>
                                <div class="row"> <div class="col-sm-6 col-md-6 col-lg-6"><strong>Legal Number&nbsp;:</strong>@Html.DisplayFor(model => model.LegalNumber)</div><div class="col-sm-6 col-md-6 col-lg-6"><strong>Inventory Code&nbsp;:</strong>@Html.DisplayFor(model => model.InventoryCode)</div></div>
                                <div class="row"> <div class="col-sm-6 col-md-6 col-lg-6"><strong> Item Name&nbsp;:</strong>@Html.DisplayFor(model => model.ItemName)</div><div class="col-sm-6 col-md-6 col-lg-6"><strong>Issuing to Department/Cost Center&nbsp;:</strong>@Html.DisplayFor(model => model.SubVote)-@Html.DisplayFor(model => model.SubVoteName)</div></div>
                                <div class="row">  <div class="col-sm-6 col-md-6 col-lg-6"><strong>Quantity&nbsp;:</strong>@Html.DisplayFor(model => model.IssuedQuantity) @Html.DisplayFor(model => model.UOM)</div></div>
                                <div class="row">  <div class="col-sm-6 col-md-6 col-lg-6"><strong>Total Value&nbsp;:</strong>@Html.DisplayFor(model => model.InventoryValue) @Html.DisplayFor(model => model.Currency)</div></div>
                            </fieldset>
                            @if (!Model.AssignNonCashGl)
                            {
                                <table>
                                    <tr>
                                        <td style="padding:5px">Total Items Amount</td>
                                        <td style="padding:5px">
                                            <input type="text" disabled id="total_items_amount">
                                        </td>

                                        <td style="padding:5px">Total Line Amount</td>
                                        <td style="padding:5px">
                                            <input value="0" type="text" disabled id="total_line_amount">
                                        </td>

                                        <td style="padding:5px">Difference</td>
                                        <td style="padding:5px">
                                            <input value="0" type="text" disabled id="difference" style="width:250px">
                                        </td>
                                    </tr>
                                </table>
                                using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = "return SubmitCharge(this)" }))
                                {
                                    @Html.AntiForgeryToken()
                                    @Html.HiddenFor(model => model.InventoryIssuingId)
                                    if (Model.InventoryCoas != null)
                                    {
                                        @Html.HiddenFor(model => model.InventoryValue)
                                        <table class="table table-bordered table-hover table-condensed" id="items_charge" style="width:70%">
                                            <thead>
                                                <tr style="width:5%">
                                                    <th>#</th>
                                                    <th style="text-align:left">GL Account</th>
                                                    <th style="text-align:left">GL Desc</th>
                                                    <th style="text-align:left">Funding Ref</th>
                                                    <th style="text-align:left">GL Amount</th>
                                                    <th style="text-align:left"> Amount</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @for (var i = 0; i < Model.InventoryCoas.Count(); i++)
                                                {
                                                    var j = i + 1;
                                                    <tr>
                                                        <td style="text-align:center">@j</td>
                                                        <td>
                                                            @Html.DisplayFor(modelItem => Model.InventoryCoas[i].GLAccount)
                                                        </td>
                                                        <td>
                                                            @Html.DisplayFor(modelItem => Model.InventoryCoas[i].GLAccountDesc)
                                                        </td>
                                                        <td>
                                                            @Html.DisplayFor(modelItem => Model.InventoryCoas[i].FundingReference)
                                                        </td>
                                                        <td style="text-align:right">
                                                            @Html.DisplayFor(modelItem => Model.InventoryCoas[i].BaseAmount)
                                                        </td>
                                                        <td style="text-align:center">
                                                            @Html.EditorFor(modelItem => Model.InventoryCoas[i].OperationalAmount, new { htmlAttributes = new { @class = "form-control", style = "width:80px", @autocomplete = "off", @max = @Model.InventoryCoas[i].BaseAmount, @onkeyup = "amountChanged(this)" } })
                                                            @Html.HiddenFor(modelItem => Model.InventoryCoas[i].CoaSourceId)
                                                            @Html.HiddenFor(modelItem => Model.InventoryCoas[i].ExchangeRate)
                                                        </td>
                                                    </tr>
                                                }
                                                <tr>
                                                    <td colspan="5"></td>
                                                    <td>
                                                        <button type="submit" id="save_gls_data" class="btn btn-info" style="margin-right:2px">
                                                            <i class="glyphicon glyphicon-floppy-disk"></i> Save
                                                        </button>
                                                    </td>
                                                </tr>
                                            </tbody>
                                        </table>

                                    }

                                }




                            }
                            else
                            {

                                <div class="col-md-3 col-md-offset-1">
                                    <a class="search-btn" onclick="SearchGL()" href="#" style="display:block;width:230px">
                                        <i class="fa fa-search search-icon"></i>
                                        Search GL Items...
                                    </a>
                                </div>
                                <br />
                                <br />
                                if (Model.IssuingCoas.Count() > 0)
                                {
                        <table id="selected_gls" border="1" class="table table-bordered
                                                       table-hover table-condensed" width="100%">
                            <tr style="background:#f5f5f5; color:#000000"><th>GL Account</th><th>GL Account Desc</th><th>SBC</th><th>GFS Code</th></tr>
                            @foreach (var item in Model.IssuingCoas)
                            {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.GLAccount)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.GLAccountDesc)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.SubBudgetClass)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.GfsCode)
                            </td>
                        </tr>
                            }
                        </table>
                                     
                                        }
                                        else
                                        {
                                        <div>

                                            <table id="selected_gls" border="1" class="table table-bordered
                                       table-hover table-condensed" width="100%"></table>
                                            <div style="padding-bottom:10px" id="infoPanel">
                                                <div class="info-box">No GL Items Selected</div>
                                            </div>
                                        </div>
                                        }
                                        }

                                        <div class="form-actions">
                                            <div class="row">
                                                <div class="col-md-8 col-md-offset-1">
                                                    <a href="@Url.Action("PendingIssuing","InventoriesIssuing")" style="margin-right:5px" class="btn btn-info pull-left"><i class="glyphicon glyphicon-arrow-left"></i> Back  </a>

                                                    @*<button type="submit" class="btn btn-info" id="save_button" style="float: left; margin-left: 5px">
                                    <i class="glyphicon glyphicon-floppy-disk"></i> Save
                                </button>*@
                                                </div>
                                            </div>
                                        </div>
                                </div>


                    </div>


                </div>
            </article>

        </div>
    </section>
</div>
<div class="modal fade" id="divModal" tabindex="-1" role="dialog" aria-labelledby="lblmodal">
    <div class="modal-dialog modal-lg" style="width:80%;">
        <div width="90%" class="modal-content">
            <div class="modal-header alert alert-info" style="font:bold 16px Trebuchet MS, Lucida Sans Unicode, Lucida Grande, Lucida Sans, Arial, sans-serif">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title" id="lblmodal">
                    Preview
                </h4>
            </div>
            <div class="modal-body" id="divModalBody">

            </div>

            <div id="divPaymentStatusLoader" style="text-align:center; display:none">
                <img src="~/assets/img/avatars/ajax_loader.gif" />
            </div>
        </div>
    </div>

</div>

<!----------- Search  GL----------------->
<div class="modal fade" id="glItemsModal" style="left:4%">

    <div class="modal-dialog" style="width:80%;">
        <div class="modal-content panel-info">
            <div class="modal-header panel-heading">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h3 class="modal-title"> Search Gl Item(s)</h3>
            </div>
            <div class="modal-body">
                <div>
                    <div class="row" style="padding-top:1%;padding-bottom:1%">
                        <div class="col-md-6">
                        </div>
                        <div class="col-md-6">
                            <div class="search-container " style="float:right">
                                <i class="fa fa-search search-icon"></i>
                                <input type="search" name="search" placeholder="Search..." id="search_gl">
                            </div>
                        </div>
                    </div>
                    <div align="center">
                        <img src="/Media/Images/ajax_loader.gif" class="loadingImg" />
                    </div>
                    <table id="dt_search_gl_item" class="table table-striped table-bordered table-hover table-condensed">
                        <thead>
                            <tr>
                                <th>#</th>
                                <th>CoaId</th>
                                <th>GlAccount</th>
                                <th>GlAccount Desc</th>
                                <th>SBC</th>
                                <th>GfsCode</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                    </table>

                </div>
                <div class="modal-footer">
                    <button class="btn btn-info" data-dismiss="modal">
                        <i class="fa  fa-times"></i>Cancel
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

@section pagespecific {
    <!-- PAGE RELATED PLUGIN(S) -->

    <script type="text/javascript">

        var dt_search_gl_item = $('#dt_search_gl_item').dataTable(
            {
                "aoColumnDefs": [{ "bVisible": false, "aTargets": [1] }],
            });
        $("#dt_search_gl_item_wrapper .dt-toolbar").remove();
        $("#search_gl").on("keyup search input paste cut", function () {
            $("#search_exp_line").val("");
            dt_search_gl_item.DataTable().search(this.value).draw();
        });

        var sum = $("#InventoryValue").val();
        $("#total_items_amount").val(sum.toLocaleString('en'));
        $("#difference").val(sum.toLocaleString('en'));
        $("#save_gls_data").prop('disabled', true);
            $(document).ready(function () {
                /* // DOM Position key index //
l - Length changing (dropdown)
f - Filtering input (search)
t - The Table! (datatable)
i - Information (records)
p - Pagination (paging)
r - pRocessing
< and > - div elements
<"#id" and > - div with an id
<"class" and > - div with a class
<"#id.class" and > - div with an id and class
Also see: http://legacy.datatables.net/usage/features
*/
                /* BASIC ;*/
                var responsiveHelper_dt_inventories = undefined;
                var responsiveHelper_datatable_fixed_column = undefined;
                var responsiveHelper_datatable_col_reorder = undefined;
                var responsiveHelper_datatable_tabletools = undefined;

                var breakpointDefinition = {
                    tablet: 1024,
                    phone: 480
                };

                $('#dt_inventories').dataTable({
                    "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-12 hidden-xs'l>r>" +
                        "t" +
                        "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                    "autoWidth": true,
                    "preDrawCallback": function () {
                        // Initialize the responsive datatables helper once.
                        if (!responsiveHelper_dt_inventories) {
                            responsiveHelper_dt_inventories = new ResponsiveDatatablesHelper($('#dt_inventories'), breakpointDefinition);
                        }
                    },
                    "rowCallback": function (nRow) {
                        responsiveHelper_dt_inventories.createExpandIcon(nRow);
                    },
                    "drawCallback": function (oSettings) {
                        responsiveHelper_dt_inventories.respond();
                    }
                });

                /* END BASIC */

                /* COLUMN FILTER  */
                var otable = $('#datatable_fixed_column').DataTable({
                    //"bFilter": false,
                    //"bInfo": false,
                    //"bLengthChange": false
                    //"bAutoWidth": false,
                    //"bPaginate": false,
                    //"bStateSave": true // saves sort state using localStorage
                    "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6 hidden-xs'f><'col-sm-6 col-xs-12 hidden-xs'<'toolbar'>>r>" +
                            "t" +
                            "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                    "autoWidth": true,
                    "preDrawCallback": function () {
                        // Initialize the responsive datatables helper once.
                        if (!responsiveHelper_datatable_fixed_column) {
                            responsiveHelper_datatable_fixed_column = new ResponsiveDatatablesHelper($('#datatable_fixed_column'), breakpointDefinition);
                        }
                    },
                    "rowCallback": function (nRow) {
                        responsiveHelper_datatable_fixed_column.createExpandIcon(nRow);
                    },
                    "drawCallback": function (oSettings) {
                        responsiveHelper_datatable_fixed_column.respond();
                    }
                });

                // custom toolbar
                $("div.toolbar").html('<div class="text-right"><img src="/Content/img/logo.png" alt="SmartAdmin" style="width: 111px; margin-top: 3px; margin-right: 10px;"></div>');

                // Apply the filter
                $("#datatable_fixed_column thead th input[type=text]").on('keyup change', function () {
                    otable
                        .column($(this).parent().index() + ':visible')
                        .search(this.value)
                        .draw();
                });
                /* END COLUMN FILTER */

                /* COLUMN SHOW - HIDE */
                $('#datatable_col_reorder').dataTable({
                    "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'C>r>" +
                            "t" +
                            "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
                    "autoWidth": true,
                    "preDrawCallback": function () {
                        // Initialize the responsive datatables helper once.
                        if (!responsiveHelper_datatable_col_reorder) {
                            responsiveHelper_datatable_col_reorder = new ResponsiveDatatablesHelper($('#datatable_col_reorder'), breakpointDefinition);
                        }
                    },
                    "rowCallback": function (nRow) {
                        responsiveHelper_datatable_col_reorder.createExpandIcon(nRow);
                    },
                    "drawCallback": function (oSettings) {
                        responsiveHelper_datatable_col_reorder.respond();
                    }
                });

                /* END COLUMN SHOW - HIDE */

                /* TABLETOOLS */
                $('#datatable_tabletools').dataTable({

                    // Tabletools options:
                    //   https://datatables.net/extensions/tabletools/button_options
                    "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'T>r>" +
                            "t" +
                            "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
                    "oTableTools": {
                        "aButtons": [
                        "copy",
                        "csv",
                        "xls",
                           {
                               "sExtends": "pdf",
                               "sTitle": "SmartAdmin_PDF",
                               "sPdfMessage": "SmartAdmin PDF Export",
                               "sPdfSize": "letter"
                           },
                           {
                               "sExtends": "print",
                               "sMessage": "Generated by SmartAdmin <i>(press Esc to close)</i>"
                           }
                        ],
                        "sSwfPath": "/Scripts/plugin/datatables/swf/copy_csv_xls_pdf.swf"
                    },
                    "autoWidth": true,
                    "preDrawCallback": function () {
                        // Initialize the responsive datatables helper once.
                        if (!responsiveHelper_datatable_tabletools) {
                            responsiveHelper_datatable_tabletools = new ResponsiveDatatablesHelper($('#datatable_tabletools'), breakpointDefinition);
                        }
                    },
                    "rowCallback": function (nRow) {
                        responsiveHelper_datatable_tabletools.createExpandIcon(nRow);
                    },
                    "drawCallback": function (oSettings) {
                        responsiveHelper_datatable_tabletools.respond();
                    }
                });
                /* END TABLETOOLS */
                var result = '@(ViewBag.Message)';
                if (result == "NoMatching") {

                    swal("No any matching entry");

                }
                        });

        //SHOW LOADER ICON
        $(document).ajaxStart(function () {
            $(".loadingImg").show();

        });
        //HIDE LOADER ICON
        $(document).ajaxStop(function () {
            $(".loadingImg").hide();
        });



     var previewIssuing = function (id) {
            debugger;
            var url = '@Url.Action("PreviewEntry", "InventoriesIssuing")';
            $("#divModalBody").load(url, { id: id }, function (response, status, xhr) {
                if (status == "error") {
                    $("#divModalBody").html("Error on accessing this details, contact system support.");
                }
                $("#divModal").modal("show");
            });
        };
        $("#OperationalAmount").autoNumeric('init');
        function amountChanged(e) {
            $("#save_gls_data").prop('disabled', true);
            var max_value = parseFloat(e.max);
            var entered_value = parseFloat(e.value.split(",").join(""));
            var items_charge = parseFloat($("#InventoryValue").val());
            var difference = 0;
            var rowCount = $('#items_charge tr').length -1;
            if (entered_value <= max_value) {
                var i = 0;
                var total = 0;
                $("#items_charge tr").each(function () {


                    if (i > 0 && i < rowCount) {
                        var value = $(this).children().eq(5).find("input").val().trim().split(",").join("");
                        if (value != "") {

                            //var expense_amount = parseFloat($(this).children().eq(3).text().split(",").join(""));

                            var amount = parseFloat(value);
                            total = total + amount;

                        }
                    }


                    i++;
                });

                $("#total_line_amount").val(total.toLocaleString('en'));
                difference = items_charge - total;
                $("#difference").val(difference.toLocaleString('en'));

                if (total > items_charge) {
                    $("#save_gls_data").prop('disabled', true);
                    swal("Total entered amount can not exeed received amount i.e " + items_charge);
                    e.value = "";
                    var i = 0;
                    var total = 0;
                    $("#items_charge tr").each(function () {


                        if (i > 0 && i < rowCount) {
                            var value = $(this).children().eq(5).find("input").val().trim().split(",").join("");
                            if (value != "") {

                                //var expense_amount = parseFloat($(this).children().eq(3).text().split(",").join(""));

                                var amount = parseFloat(value);
                                total = total + amount;

                            }
                        }


                        i++;
                    });
                    $("#total_line_amount").val(total.toLocaleString('en'));
                    difference = items_charge - total;
                    $("#difference").val(difference.toLocaleString('en'));

                }

                difference = difference.toFixed(2);
                total = total.toFixed(2);
                items_charge = items_charge.toFixed(2);
                if (difference == 0) {
                    $("#save_gls_data").prop('disabled', false);
                }
                if (total < items_charge) {

                    $("#save_gls_data").prop('disabled', true);
                }
            } else {
                swal("Amount can not exceed " + max_value);
                e.value = "";
                var i = 0;
                var total = 0;
                $("#items_charge tr").each(function () {


                    if (i > 0) {
                        var value = $(this).children().eq(5).find("input").val().trim().split(",").join("");
                        if (value != "") {

                            //var expense_amount = parseFloat($(this).children().eq(3).text().split(",").join(""));

                            var amount = parseFloat(value);
                            total = total + amount;

                        }
                    }


                    i++;
                });
                $("#total_line_amount").val(total.toLocaleString('en'));
                difference = items_charge - total;
                $("#difference").val(difference.toLocaleString('en'));

            }

        }


          function SubmitCharge(formData) {
                $("#save_gls_data").prop('disabled', true);
            var url = '@Url.Action("SaveItemsCharge", "InventoriesIssuing")';
            var ajaxConfig = {
                type: "post",
                url: url,
                data: new FormData(formData),
                success: function (response) {
                  $("#save_gls_data").prop('disabled', false);
                    if (response == "Success") {
                        swal("Data saved successfully", { icon: "Success" })
                                                                   .then((value) => {
                                                                       var url = '@Url.Action("PendingIssuing", "InventoriesIssuing")';
                                                                       window.location.replace(url);
                                                                   });
                    }
                    else {
                        swal(response);
                    }
                }
            }

            if ($(formData).attr('enctype') == "multipart/form-data") {
                ajaxConfig["contentType"] = false;
                ajaxConfig["processData"] = false;
            }
            $.ajax(ajaxConfig);
            return false;
        }
        // =========== End Save Items Charges ====================

            function SearchGL() {
                var id = @Model.ItemClassificationId;
                if (id) {
                    $('#glItemsModal').modal('show');
                     var params = { "id": id };
            var url = '@Url.Action("GetCoas", "Inventories")';
            $.ajax({
                type: "get",
                url: url,
                data: params,
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {
                    //=== UPDATE SEARCH GI TABLE ====
                    $(".loadingImg").hide();
                    data = response.data;
                    dt_search_gl_item.fnClearTable();
                    for (var i = 0; i < data.length; i++) {

                        dt_search_gl_item.fnAddData([i + 1,
                           data[i]["CoaId"],
                           data[i]["GlAccount"].split("|").join("-"),
                            data[i]["GlAccountDesc"],
                            data[i]["SubBudgetClass"],
                            data[i]["GfsCode"],
                           '<a href="#" onclick="CoaSelected(' + i + ')"><i class="glyphicon glyphicon-plus-sign"></i></a>'
                        ]);
                    }
                },
                failure: function (error) {
                    swal(error);
                }
            });
                }

        }

        function CoaSelected(rowId) {
            $('#selected_gls').empty();
            var data = dt_search_gl_item.DataTable().rows().data();
            var row = data[rowId];
            $("#glItemsModal").modal("hide");
            $("#infoPanel").hide();
            $('<tr style="background:#f5f5f5; color:#000000"><th>GL Account</th><th>GL Account Desc</th><th>SBC</th><th>GFS Code</th></tr>').appendTo('#selected_gls');
            $('<tr><td>' + row[2].split("|").join("-") + '</td><td>' + row[3] + '<td>' + row[4] + '</td><td>' + row[5] + '</td></tr>').appendTo('#selected_gls');
            SaveNonCashCoa(row[1]);
        }
        function SaveNonCashCoa(id) {
            var issuing_id = @Model.InventoryIssuingId;
                  var url = '@Url.Action("SaveNonCashCoa", "InventoriesIssuing")';
                            $.ajax(
                {
                    type: "POST",
                    url: url,
                    data: { id: issuing_id, coaId: id },
                    success: function (response) {
                        if (response == "Success") {

                            swal("Coa Saved successfully", { icon: "success" })
                                      .then((value) => {
                                      });


                        }
                        else {

                            swal(response);
                        }
                    },
                    error: function (xhr) {
                        swal(error);
                    },

                });
        }
    </script>
}






