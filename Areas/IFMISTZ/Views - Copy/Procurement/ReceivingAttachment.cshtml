@model IFMIS.Areas.IFMISTZ.Models.ReceivingSummaryVM
@{
    ViewBag.Title = "Receiving Attachment";
}



<div id="content" style="margin: 5px; padding-top: 30px">

    <div class="row">


    </div>


    <!-- widget grid -->
    <section id="widget-grid" class="">


        <!-- START ROW -->

        <div class="row">

            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">

                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">

                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2>Receiving Attachments</h2>

                    </header>


                    <div>
                        <div class="widget-body " style="padding-top:10px;width:100%">
                            <div align="center">
                                <img src="~/Media/Images/ajax_loader.gif" class="loadingImg" style="display:none" />
                            </div>
                            <fieldset class="scheduler-border">
                                <legend class="scheduler-border">Receiving Details</legend>
                                <div class="row"> <div class="col-sm-6 col-md-6 col-lg-6"><strong>Receiving Number&nbsp;:</strong>&nbsp;@Html.DisplayFor(model => model.ReceivingNumber)</div><div class="col-sm-6 col-md-6 col-lg-6"><strong>Payee Code&nbsp;:</strong>&nbsp;@Html.DisplayFor(model => model.PayeeCode)</div></div>
                                <div class="row"> <div class="col-sm-6 col-md-6 col-lg-6"><strong>LPO Number&nbsp;:</strong>&nbsp;@Html.DisplayFor(model => model.PurchaseOrderNo) </div><div class="col-sm-6 col-md-6 col-lg-6"><strong>Payee Name&nbsp;:</strong>&nbsp;@Html.DisplayFor(model => model.SupplierName)</div></div>
                                <div class="row">  <div class="col-sm-6 col-md-6 col-lg-6"><strong>Receiving Amount&nbsp;:</strong>&nbsp;@Html.DisplayFor(model => model.ReceivingItemsValue) @Html.DisplayFor(model => model.Currency)</div><div class="col-sm-6 col-md-6 col-lg-6"><strong>Status&nbsp;:</strong>&nbsp;@Html.DisplayFor(model => model.OverallStatus)</div></div>
                                <div class="row"> <div class="col-sm-6 col-md-6 col-lg-6"><strong>Order Date&nbsp;:</strong>&nbsp;@Convert.ToDateTime(Model.OrderDate).ToString("dd/MM/yyyy")</div><div class="col-sm-6 col-md-6 col-lg-6"><strong>Deliver Date&nbsp;:</strong>&nbsp;@Convert.ToDateTime(Model.ExceptedDeliveryDate).ToString("dd/MM/yyyy")</div></div>
                            </fieldset>
                            <div class="list-group" style="width:40%">
                                @if (Model.InvoiceNumber == null)
                                {
                                    <a href="#" data-toggle="modal" data-target="#attachment" class="list-group-item attachment" data-type="Invoice"><i class="fa fa-plus"></i>Add Invoice Attachment </a>


                                }
                                @if (Model.DeliveryNote == null)
                                {
                                    <a href="#" data-toggle="modal" data-target="#attachment" class="list-group-item attachment" data-type="Delivery Note"><i class="fa fa-plus"></i>Add Delivery Note Attachment</a>

                                }
                                @if (Model.InspectionReportNo == null)
                                {
                                    <a href="#" data-toggle="modal" data-target="#attachment" class="list-group-item attachment" data-type="Inspection Report"><i class="fa fa-plus"></i>Add Inspection Report Attachment</a>

                                }
                            </div>
                            @if (Model.InvoiceNumber != null || Model.DeliveryNote != null || Model.InspectionReportNo != null)
                            {
                                <table class="table table-bordered table-hover table-condensed" style="width:80%">
                                    <thead>
                                        <tr>
                                            <th></th>
                                            <th style="text-align:center">Ref/No</th>
                                            <th style="text-align:center">Date</th>
                                            <th style="text-align:center">Attachment</th>
                                            <th style="text-align:center">Edit</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @if (Model.InvoiceNumber != null)
                                        {
                                            <tr>
                                                <td style="width:18%">
                                                    Invoice
                                                </td>
                                                <td align="center">
                                                    @Html.DisplayFor(model => model.InvoiceNumber)
                                                </td>
                                                <td align="center">
                                                    @Convert.ToDateTime(Model.InvoiceDate).ToString("dd/MM/yyyy")
                                                </td>
                                                <td align="center">
                                                    <strong>
                                                        <a href="@Url.Action("InvoiceAttachment","Procurement",new {Filename=Model.InvoiceFileName})"><i class="fa fa-download"></i></a>
                                                    </strong>
                                                </td>
                                                <td align="center">
                                                    <a href="#" data-toggle="modal" data-target="#attachment2" class="attachment2" data-type="Invoice" data-cnumber='@Model.InvoiceNumber' data-cdate='@Convert.ToDateTime(Model.InvoiceDate).ToString("yyyy-MM-dd")'><i class="fa fa-pencil"></i></a>

                                                </td>
                                            </tr>
                                        }
                                        @if (Model.DeliveryNote != null)
                                        {
                                            <tr>
                                                <td style="width:18%">
                                                    Delivery Note
                                                </td>
                                                <td align="center">
                                                    @Html.DisplayFor(model => model.DeliveryNote)
                                                </td>
                                                <td align="center">
                                                    @Convert.ToDateTime(Model.DeliveryDate).ToString("dd/MM/yyyy")
                                                </td>
                                                <td align="center">
                                                    <strong>
                                                        <a href="@Url.Action("DeliveryAttachment","Procurement",new {Filename=Model.DeliveryFileName })"><i class="fa fa-download"></i></a>
                                                    </strong>
                                                </td>
                                                <td align="center">
                                                    <a href="#" data-toggle="modal" data-target="#attachment2" class="attachment2" data-type="Delivery Note" data-cnumber='@Model.DeliveryNote' data-cdate='@Convert.ToDateTime(Model.DeliveryDate).ToString("yyyy-MM-dd")'><i class="fa fa-pencil"></i></a>

                                                </td>
                                            </tr>
                                        }
                                        @if (Model.InspectionReportNo != null)
                                        {
                                            <tr>
                                                <td style="width:18%">
                                                    Inspection Report
                                                </td>
                                                <td align="center">
                                                    @Html.DisplayFor(model => model.InspectionReportNo)
                                                </td>
                                                <td align="center">
                                                    @Convert.ToDateTime(Model.InspectionReportDate).ToString("dd/MM/yyyy")
                                                </td>
                                                <td align="center">
                                                    <strong>
                                                        <a href="@Url.Action("InspectionAttachment","Procurement",new {Filename=Model.InspReportFileName })"><i class="fa fa-download"></i></a>
                                                    </strong>
                                                </td>
                                                <td align="center">
                                                    <a href="#" data-toggle="modal" data-target="#attachment2" class="attachment2" data-type="Inspection Report" data-cnumber='@Model.InspectionReportNo' data-cdate='@Convert.ToDateTime(Model.InspectionReportDate).ToString("yyyy-MM-dd")'><i class="fa fa-pencil"></i></a>

                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            }
                            <br />
                            @using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = "return SubmitCharge(this)" }))
                            {
                                @Html.AntiForgeryToken()
                                @Html.HiddenFor(model => model.ReceivingSummaryId)
                                if (Model.ReceivingCoas != null)
                                {
                                    @Html.HiddenFor(model => model.ReceivingItemsValue)
                                    <table class="table table-bordered table-hover table-condensed" id="items_charge" style="width:100%">
                                        <thead>
                                            <tr style="width:5%">
                                                <th>#</th>
                                                <th style="text-align:left">GL Account</th>
                                                <th style="text-align:left">GL Account Desc</th>
                                                <th style="text-align:left">Funding Reference</th>
                                                <th style="text-align:left">GL Amount</th>
                                                <th style="text-align:left">Partial Chargeble GL Amount</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @for (var i = 0; i < Model.ReceivingCoas.Count(); i++)
                                            {
                                                var j = i + 1;
                                                <tr>
                                                    <td style="text-align:center">@j</td>
                                                    <td>
                                                        @Html.DisplayFor(modelItem => Model.ReceivingCoas[i].GLAccount)
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(modelItem => Model.ReceivingCoas[i].GLAccountDesc)
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(modelItem => Model.ReceivingCoas[i].FundingReference)
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(modelItem => Model.ReceivingCoas[i].Balance)
                                                    </td>
                                                    <td style="text-align:center">
                                                        @Html.EditorFor(modelItem => Model.ReceivingCoas[i].ExpenseAmount, new { htmlAttributes = new { @class = "form-control", style = "width:160px", @autocomplete = "off", @max = @Model.ReceivingCoas[i].Balance, @onkeyup = "amountChanged(this)" } })
                                                        @Html.HiddenFor(modelItem => Model.ReceivingCoas[i].PurchaseOrderCoaId)
                                                        @Html.HiddenFor(modelItem => Model.ReceivingCoas[i].GLAccount)
                                                        @Html.HiddenFor(modelItem => Model.ReceivingCoas[i].GLAccountDesc)
                                                        @Html.HiddenFor(modelItem => Model.ReceivingCoas[i].FundingReference)
                                                        @Html.HiddenFor(modelItem => Model.ReceivingCoas[i].Balance)
                                                    </td>
                                                </tr>
                                            }

                                        </tbody>
                                    </table>
                                    <p align="right"><strong><span id="entered_amount"></span></strong></p>
                                }
                                else
                                {
                                    @Html.HiddenFor(model => model.PurchaseOrderAmount)
                                }
                                <br />
                                <div class="col-md-offset-1">
                                    <a href="@Url.Action("ReceivingList","Procurement")" style="margin-right:5px" class="btn btn-info pull-left"><i class="glyphicon glyphicon-arrow-left"></i> Back  </a>
                                    @if (Model.InvoiceNumber != null && Model.DeliveryNote != null && Model.InspectionReportNo != null)
                                    {
                                        <button type="submit" id="save_attachment" class="btn btn-info" style="margin-right:2px">
                                            <i class="glyphicon glyphicon-floppy-disk"></i> Save
                                        </button>
                                    }
                                    else
                                    {
                                        <button type="submit" id="save_attachment" disabled class="btn btn-info" style="margin-right:2px">
                                            <i class="glyphicon glyphicon-floppy-disk"></i> Save
                                        </button>
                                    }

                                </div>
                            }
                        </div>               <br />
                        <br />


                    </div>


                </div>
            </article>

        </div>
    </section>

</div>

<div class="modal fade" id="attachment" style="left:4%">

    <div class="modal-dialog" style="width:35%;">
        <div class="modal-content panel-info">

            <div class="modal-header panel-heading">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h3 class="modal-title" style="text-align:center" id="title"> </h3>
            </div>
            @using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = "return SubmitAttachment(this)" }))
            {
                @Html.AntiForgeryToken()
                <div class="modal-body form-horizontal">

                    <br />
                    @Html.HiddenFor(model => model.ReceivingSummaryId)
                    <input type="hidden" name="DocumentType" id="DocumentType" value="">
                    <div class="form-group">
                        @Html.Label("Ref/No", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-7">
                            @Html.EditorFor(modelItem => Model.CertificateNumber, new { htmlAttributes = new { @class = "form-control", @required = "required", autocomplete = "off" } })

                        </div>

                    </div>
                    <div class="form-group">
                        @Html.Label("Date", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-7">
                            <div class="input-group">
                                <div class="flatpickr3 date-group">
                                    <input type="text" placeholder="Select Date.."
                                           data-input
                                           class="form-control"
                                           style="width:140px;padding-left:10px;border:none"
                                           autocomplete="off" name="AttachmentDate" id="AttachmentDate">
                                    <a class="input-button" title="open" data-toggle href="#">
                                        <span class="input-group-addon" style="height:32px"><i class="fa fa-calendar"></i></span>
                                    </a>
                                </div>
                            </div>
                        </div>

                    </div>
                    <div class="form-group">
                        @Html.Label("Attachment", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-7">
                            <input type="file" class="form-control btn btn-default" id="AttachentFile" name="AttachentFile" required="required">

                        </div>

                    </div>

                </div>
                <div class="modal-footer">
                    <a href="#" class="btn btn-default" data-dismiss="modal">Cancel</a>
                    <button id="save_attach" class="btn btn-info" style="margin-right:2px">
                        <i class="glyphicon glyphicon-floppy-disk"></i> Save
                    </button>
                    @*<input class="btn btn-info" type="submit" id="btnSubmit" value="Save" />*@
                    @*<input type="submit" value="Submit" class="btn btn-success" id="btnSubmit" />*@

                </div>

            }
        </div>
    </div>
</div>

<div class="modal fade" id="attachment2" style="left:4%">

    <div class="modal-dialog" style="width:35%;">
        <div class="modal-content panel-info">

            <div class="modal-header panel-heading">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h3 class="modal-title" style="text-align:center" id="title2"> </h3>
            </div>
            @using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = "return EditSubmitAttachment(this)" }))
            {
                @Html.AntiForgeryToken()
                <div class="modal-body2 form-horizontal">

                    <br />
                    @Html.HiddenFor(model => model.ReceivingSummaryId)
                    <input type="hidden" name="DocumentType" id="DocumentType" value="">
                    <div class="form-group">
                        @Html.Label("Ref/No", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-7">
                            @Html.EditorFor(modelItem => Model.CertificateNumber, new { htmlAttributes = new { @class = "form-control", @required = "required", autocomplete = "off" } })

                        </div>

                    </div>
                    <div class="form-group">
                        @Html.Label("Date", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-7">
                            <div class="input-group">
                                <div class="flatpickr3 date-group">
                                    <input type="text" placeholder="Select Date.."
                                           data-input
                                           class="form-control"
                                           style="width:140px;padding-left:10px;border:none"
                                           autocomplete="off" name="AttachmentDate" id="AttachmentDate">
                                    <a class="input-button" title="open" data-toggle href="#">
                                        <span class="input-group-addon" style="height:32px"><i class="fa fa-calendar"></i></span>
                                    </a>

                                </div>
                            </div>

                        </div>

                    </div>
                    <div class="form-group">
                        @Html.Label("Attachment", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-7">
                            <input type="file" class="form-control btn btn-default" id="AttachentFile" name="AttachentFile">

                        </div>

                    </div>

                </div>
                <div class="modal-footer">
                    <a href="#" class="btn btn-default" data-dismiss="modal">Cancel</a>
                    <button id="save_attach" class="btn btn-info" style="margin-right:2px">
                        <i class="glyphicon glyphicon-floppy-disk"></i> Save
                    </button>
                    @*<input class="btn btn-info" type="submit" id="btnSubmit" value="Save" />*@
                    @*<input type="submit" value="Submit" class="btn btn-success" id="btnSubmit" />*@

                </div>

            }
        </div>
    </div>
</div>
@section pagespecific {
    <!-- PAGE RELATED PLUGIN(S) -->

    <script type="text/javascript">
        function SubmitCharge(formData) {
                $("#save_attachment").prop('disabled', true);
            var url = '@Url.Action("SaveItemsCharge", "Procurement")';
            var ajaxConfig = {
                type: "post",
                url: url,
                data: new FormData(formData),
                success: function (result) {
                  $("#save_attachment").prop('disabled', false);
                    if (result == "Success") {
                        swal("Data saved successfully", { icon: "Success" })
                                                                   .then((value) => {
                                                                       var url = '@Url.Action("ReceivingList", "Procurement")';
                                                                       window.location.replace(url);
                                                                   });
                    }
                    else if (result == "NotCharged") {
                        swal("Failed, no item to charge in recieving Table");
                    }
                    else if (result == "Charged") {
                        swal("Failed, this LPO was received previously");
                    }
                    else {
                        swal("Failed  due to DbException");
                    }
                }
            }

            if ($(formData).attr('enctype') == "multipart/form-data") {
                ajaxConfig["contentType"] = false;
                ajaxConfig["processData"] = false;
            }
            $.ajax(ajaxConfig);
            return false;
        }
        // =========== End Save Items Charges ====================

        function SubmitAttachment(formData) {
            var attachment_date = $(".modal-body #AttachmentDate").val();
            if (!attachment_date) {
                swal("Please Select Date");
                return false;
            }
            $('#attachment').modal('hide');
            var url = '@Url.Action("SaveAttachments", "Procurement")';
            var ajaxConfig = {
                type: "post",
                url: url,
                data: new FormData(formData),
                success: function (result) {
                    if (result == "Success") {
                        swal("Data saved successfully", { icon: "success" })
                                                                   .then((value) => {
                                                                       location.reload();
                                                                   });
                    }
                   else {
                        swal("Failed  due to DbException");
                    }
                }
            }

            if ($(formData).attr('enctype') == "multipart/form-data") {
                ajaxConfig["contentType"] = false;
                ajaxConfig["processData"] = false;
            }
            $.ajax(ajaxConfig);
            return false;
        }
        // =========== End Save Atttachment ====================

        function EditSubmitAttachment(formData) {
            var attachment_date = $(".modal-body2 #AttachmentDate").val();
            if (!attachment_date) {
                swal("Please Select Date");
                return false;
            }
            $('#attachment2').modal('hide');
            var url = '@Url.Action("EditAttachments", "Procurement")';
            var ajaxConfig = {
                type: "post",
                url: url,
                data: new FormData(formData),
                success: function (result) {
                    if (result == "Success") {
                        swal("Data saved successfully", { icon: "success" })
                                                                   .then((value) => {
                                                                       location.reload();
                                                                   });
                    }
                    else {
                        swal("Failed  due to DbException");
                    }
                }
            }

            if ($(formData).attr('enctype') == "multipart/form-data") {
                ajaxConfig["contentType"] = false;
                ajaxConfig["processData"] = false;
            }
            $.ajax(ajaxConfig);
            return false;
        }
        // =========== End Save Atttachment ====================
            $(document).ready(function () {
                var lpo_amount = $("#PurchaseOrderAmount").val();
                //if (!lpo_amount) {
                //    $(':input[type="submit"]').prop('disabled', true);
                //}
                if (!lpo_amount) {
                    $("#save_attachment").prop('disabled', true);
                }

                $(".attachment").on('click', function () {
                    var type = $(this).data('type');
                    $("#title").text(type);
                    $(".modal-body #DocumentType").val(type);
                    $(".modal-body #AttachmentDate").val("");
                    $(".modal-body #CertificateNumber").val("");
                    $(".modal-body #AttachentFile").val("");

                });

                $(".attachment2").on('click', function () {
                    var type = $(this).data('type');
                    var certificate_number = $(this).data('cnumber');
                    var cdate = $(this).data('cdate');
                    $("#title2").text(type);
                    $(".modal-body2 #DocumentType").val(type);
                    $(".modal-body2 #CertificateNumber").val(certificate_number);
                    $(".modal-body2 #AttachmentDate").val(cdate);
                    $(".modal-body2 #AttachentFile").val("");


                });


                        });

            function amountChanged(e) {
                $("#save_attachment").prop('disabled', true);
                var max_value = parseFloat(e.max);
                var entered_value = parseFloat(e.value.split(",").join(""));
                if (entered_value <= max_value) {
                    var i = 0;
                    var total = 0;
                    $("#items_charge tr").each(function () {


                        if (i > 0) {
                            var value = $(this).children().eq(5).find("input").val().trim().split(",").join("");
                            if (value != "") {

                                //var expense_amount = parseFloat($(this).children().eq(3).text().split(",").join(""));

                                var amount = parseFloat(value);
                                total = total + amount;

                            }
                        }


                        i++;
                    });

                    $("#entered_amount").text("Total "+total.toLocaleString('en'));
                    var items_charge = parseFloat($("#ReceivingItemsValue").val());
                    if (total > items_charge) {
                        $("#save_attachment").prop('disabled', true);
                        swal("Total entered amount can not exeed received amount i.e " + items_charge);
                        e.value = "";
                        var i = 0;
                        var total = 0;
                        $("#items_charge tr").each(function () {


                            if (i > 0) {
                                var value = $(this).children().eq(5).find("input").val().trim().split(",").join("");
                                if (value != "") {

                                    //var expense_amount = parseFloat($(this).children().eq(3).text().split(",").join(""));

                                    var amount = parseFloat(value);
                                    total = total + amount;

                                }
                            }


                            i++;
                        });
                        $("#entered_amount").text("Total " + total.toLocaleString('en'));

                    }
                    if (total == items_charge) {
                        $("#save_attachment").prop('disabled', false);
                    }
                    if (total < items_charge) {
                        $("#save_attachment").prop('disabled', true);
                    }
                } else {
                    swal("Amount can not exceed " + max_value);
                    e.value = "";
                    var i = 0;
                    var total = 0;
                    $("#items_charge tr").each(function () {


                        if (i > 0) {
                            var value = $(this).children().eq(5).find("input").val().trim().split(",").join("");
                            if (value != "") {

                                //var expense_amount = parseFloat($(this).children().eq(3).text().split(",").join(""));

                                var amount = parseFloat(value);
                                total = total + amount;

                            }
                        }


                        i++;
                    });
                    $("#entered_amount").text("Total " + total.toLocaleString('en'));

                }

            }

            //SHOW LOADER ICON
            $(document).ajaxStart(function () {
                $(".loadingImg").show();

            });
            //HIDE LOADER ICON
            $(document).ajaxStop(function () {
                $(".loadingImg").hide();
            });

    </script>
}






