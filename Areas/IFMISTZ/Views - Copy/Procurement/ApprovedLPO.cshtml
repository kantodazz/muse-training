@model IEnumerable<IFMIS.Areas.IFMISTZ.Models.PurchaseOrderVM>
@{
    ViewBag.Title = "Purchase Orders";
}



<div id="content" style="margin: 5px; padding-top: 30px">

    <div class="row">


    </div>


    <!-- widget grid -->
    <section id="widget-grid" class="">


        <!-- START ROW -->

        <div class="row">

            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">

                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">

                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2>Approved  Local Purchase Order(LPO) </h2>

                    </header>


                    <div>
                        <div class="widget-body " style="padding-top:10px;width:100%">

                            <div align="center">
                                <img src="~/Media/Images/ajax_loader.gif" class="loadingImg" style="display:none" />
                            </div>

                            <table align="center" class="table  table-bordered table-hover table-condensed" id="dt_lpo" style="width:96%">
                                <thead>
                                    <tr>
                                        <th style="text-align:right"></th>
                                        <th style="text-align:left;width:10%">LPO Number</th>
                                        <th style="text-align:left">Description</th>
                                        <th style="text-align:left">Currency</th>
                                        <th style="text-align:right">Purchase Order Amount</th>
                                        <th style="text-align:left">Status</th>
                                        <th style="text-align:center"></th>

                                    </tr>
                                </thead>

                                <tbody>
                                    @{var i = 0;}
                                    @foreach (var item in Model)
                                    {
                                        i++;
                                        decimal balance = Convert.ToDecimal(item.PurchaseOrderAmount) - Convert.ToDecimal(item.TotalAmount);
                                        <tr>
                                            <td style="text-align:right">
                                                @i
                                            </td>
                                            <td style="text-align:left">
                                                @Html.DisplayFor(modelItem => item.PurchaseOrderNo)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.PurchaseOrderDesc)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.Currency)
                                            </td>
                                            <td style="text-align:right">

                                                @Html.DisplayFor(modelItem => item.PurchaseOrderAmount)

                                            </td>

                                            <td>
                                                @Html.DisplayFor(modelItem => item.OverallStatus)
                                            </td>

                                            <td style="text-align:center">

                                                <div class="btn-group">
                                                    <button type="button" class="btn btn-info btn-xs dropdown-toggle" data-toggle="dropdown" style="width:40px;border-radius:1px;" aria-haspopup="true" aria-expanded="false">
                                                        <span class="caret"></span>
                                                        <span class="sr-only">Toggle Dropdown</span>
                                                    </button>
                                                    <ul class="dropdown-menu">


                                                        <li>

                                                            <a href="#" onclick="showDetails(@item.PurchaseOrderId)"> <i class="fa fa-search-minus"></i>  Preview</a>

                                                        <li>
                                                        <li>
                                                            <a href="@Url.Action("AttachmentView", "PaymentVoucherAttachments",new {groupId=item.PurchaseOrderId,sourceModule="LPO" })" class="btn-xs edit">
                                                                <i class="fa fa-search-minus"></i>  Attachments
                                                            </a>
                                                        </li>

                                                        <li><a href="#" onclick="printLPO('@item.PurchaseOrderNo')" class="btn-xs edit"><i class="fa fa-print"></i>Print LPO</a></li>
                                                        @if (item.PrintedLPONo != null)
                                                        {
                                                            <li><a href="#" data-toggle="modal" data-target="#ResetLPO" data-id=@item.PurchaseOrderId data-lpo='@item.PurchaseOrderNo' class="ResetLPO  btn-xs edit"><i class="fa fa-edit"></i> Reset Printing</a></li>
                                                        }
                                                    </ul>
                                                </div>
                                            </td>

                                        </tr>
                                    }
                                </tbody>
                            </table>

                        </div>





                    </div>


                </div>
            </article>

        </div>
    </section>




    <div class="modal fade" id="ResetLPO" style="left:4%">

        <div class="modal-dialog" style="width:35%;">
            <div class="modal-content panel-info">

                <div class="modal-header panel-heading">
                    <a href="#" class="close" data-dismiss="modal">&times;</a>
                    <h5 class="modal-title" style="text-align:center"> Reset LPO Printing</h5>
                    <h5 align="center">Number <span id="lpo_number2"></span></h5>
                </div>
                @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "reset_lpo" }))
                {
                    <div class="modal-body form-horizontal">

                        <br />

                        <input type="hidden" name="PId" id="PId" value="">
                        <div class="form-group">

                            <div class="col-md-12">
                                <textarea name="ResetReason" id="ResetReason" placeholder="Enter short explanation why do you reset printing to this LPO" required rows="4" class="form-control"></textarea>
                            </div>
                        </div>

                    </div>
                    <div class="modal-footer">
                        <a href="#" class="btn btn-default" data-dismiss="modal">Cancel</a>
                        <input class="btn btn-info" type="submit" id="btnSubmit" value="Save" />
                        @*<input type="submit" value="Submit" class="btn btn-success" id="btnSubmit" />*@

                    </div>

                }
            </div>
        </div>
    </div>
    <div class="modal fade" id="divModal" tabindex="-1" role="dialog" aria-labelledby="lblmodal">
        <div class="modal-dialog modal-lg" style="width:80%;">
            <div width="90%" class="modal-content">
                <div class="modal-header alert alert-info" style="font:bold 16px Trebuchet MS, Lucida Sans Unicode, Lucida Grande, Lucida Sans, Arial, sans-serif">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                    <h4 class="modal-title" id="lblmodal">
                        Preview
                    </h4>
                </div>
                <div class="modal-body" id="divModalBody">

                </div>

                <div id="divPaymentStatusLoader" style="text-align:center; display:none">
                    <img src="~/assets/img/avatars/ajax_loader.gif" />
                </div>
            </div>
        </div>

    </div>
    @section pagespecific {
        <!-- PAGE RELATED PLUGIN(S) -->

        <script type="text/javascript">

            $(document).ready(function () {
                /* // DOM Position key index //
l - Length changing (dropdown)
f - Filtering input (search)
t - The Table! (datatable)
i - Information (records)
p - Pagination (paging)
r - pRocessing
< and > - div elements
<"#id" and > - div with an id
<"class" and > - div with a class
<"#id.class" and > - div with an id and class
Also see: http://legacy.datatables.net/usage/features
*/
                /* BASIC ;*/
                var responsiveHelper_dt_lpo = undefined;
                var responsiveHelper_datatable_fixed_column = undefined;
                var responsiveHelper_datatable_col_reorder = undefined;
                var responsiveHelper_datatable_tabletools = undefined;

                var breakpointDefinition = {
                    tablet: 1024,
                    phone: 480
                };

                $('#dt_lpo').dataTable({
                    "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-12 hidden-xs'l>r>" +
                        "t" +
                        "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                    "autoWidth": true,
                    "preDrawCallback": function () {
                        // Initialize the responsive datatables helper once.
                        if (!responsiveHelper_dt_lpo) {
                            responsiveHelper_dt_lpo = new ResponsiveDatatablesHelper($('#dt_lpo'), breakpointDefinition);
                        }
                    },
                    "rowCallback": function (nRow) {
                        responsiveHelper_dt_lpo.createExpandIcon(nRow);
                    },
                    "drawCallback": function (oSettings) {
                        responsiveHelper_dt_lpo.respond();
                    }
                });

                /* END BASIC */

                /* COLUMN FILTER  */
                var otable = $('#datatable_fixed_column').DataTable({
                    //"bFilter": false,
                    //"bInfo": false,
                    //"bLengthChange": false
                    //"bAutoWidth": false,
                    //"bPaginate": false,
                    //"bStateSave": true // saves sort state using localStorage
                    "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6 hidden-xs'f><'col-sm-6 col-xs-12 hidden-xs'<'toolbar'>>r>" +
                            "t" +
                            "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                    "autoWidth": true,
                    "preDrawCallback": function () {
                        // Initialize the responsive datatables helper once.
                        if (!responsiveHelper_datatable_fixed_column) {
                            responsiveHelper_datatable_fixed_column = new ResponsiveDatatablesHelper($('#datatable_fixed_column'), breakpointDefinition);
                        }
                    },
                    "rowCallback": function (nRow) {
                        responsiveHelper_datatable_fixed_column.createExpandIcon(nRow);
                    },
                    "drawCallback": function (oSettings) {
                        responsiveHelper_datatable_fixed_column.respond();
                    }
                });

                // custom toolbar
                $("div.toolbar").html('<div class="text-right"><img src="/Content/img/logo.png" alt="SmartAdmin" style="width: 111px; margin-top: 3px; margin-right: 10px;"></div>');

                // Apply the filter
                $("#datatable_fixed_column thead th input[type=text]").on('keyup change', function () {
                    otable
                        .column($(this).parent().index() + ':visible')
                        .search(this.value)
                        .draw();
                });
                /* END COLUMN FILTER */

                /* COLUMN SHOW - HIDE */
                $('#datatable_col_reorder').dataTable({
                    "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'C>r>" +
                            "t" +
                            "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
                    "autoWidth": true,
                    "preDrawCallback": function () {
                        // Initialize the responsive datatables helper once.
                        if (!responsiveHelper_datatable_col_reorder) {
                            responsiveHelper_datatable_col_reorder = new ResponsiveDatatablesHelper($('#datatable_col_reorder'), breakpointDefinition);
                        }
                    },
                    "rowCallback": function (nRow) {
                        responsiveHelper_datatable_col_reorder.createExpandIcon(nRow);
                    },
                    "drawCallback": function (oSettings) {
                        responsiveHelper_datatable_col_reorder.respond();
                    }
                });

                /* END COLUMN SHOW - HIDE */

                /* TABLETOOLS */
                $('#datatable_tabletools').dataTable({

                    // Tabletools options:
                    //   https://datatables.net/extensions/tabletools/button_options
                    "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'T>r>" +
                            "t" +
                            "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
                    "oTableTools": {
                        "aButtons": [
                        "copy",
                        "csv",
                        "xls",
                           {
                               "sExtends": "pdf",
                               "sTitle": "SmartAdmin_PDF",
                               "sPdfMessage": "SmartAdmin PDF Export",
                               "sPdfSize": "letter"
                           },
                           {
                               "sExtends": "print",
                               "sMessage": "Generated by SmartAdmin <i>(press Esc to close)</i>"
                           }
                        ],
                        "sSwfPath": "/Scripts/plugin/datatables/swf/copy_csv_xls_pdf.swf"
                    },
                    "autoWidth": true,
                    "preDrawCallback": function () {
                        // Initialize the responsive datatables helper once.
                        if (!responsiveHelper_datatable_tabletools) {
                            responsiveHelper_datatable_tabletools = new ResponsiveDatatablesHelper($('#datatable_tabletools'), breakpointDefinition);
                        }
                    },
                    "rowCallback": function (nRow) {
                        responsiveHelper_datatable_tabletools.createExpandIcon(nRow);
                    },
                    "drawCallback": function (oSettings) {
                        responsiveHelper_datatable_tabletools.respond();
                    }
                });
                /* END TABLETOOLS */
                var result = '@(ViewBag.Message)';
                if (result == "NoMatching") {

                    swal("No any matching Local purchase Order(LPO)");

                }
                $(".reset_lpo").on('click', function () {
                    var id = $(this).data('id');
                    var lpo = $(this).data('lpo');
                    swal({
                        title: 'Confirmation',
                        text: "Do you what to reset printing to LPO   " + lpo + " ?",
                        buttons: [
                          'No',
                          'Yes'
                        ],
                    }).then(function (isConfirm) {
                        if (isConfirm) {
                            var url = '@Url.Action("ResetPrinting", "Procurement")';
                            $.ajax(
                {
                    type: "POST",
                    url: url,
                    data: { id: id },
                    success: function (response) {
                        if (response == "Success") {

                            swal("Reseted successfully!", { icon: "success" })
                                      .then((value) => {
                                          location.reload();
                                      });


                        }
                        else {

                            swal(response);
                        }
                    },
                    error: function (xhr) {
                        swal(error);

                    },

                });
                        } else {
                            swal("Cancelled", "No change was made");
                        }
                    });

                });

                $(".ResetLPO").on('click', function () {
                    var id = $(this).data('id');
                    var lpo = $(this).data('lpo');
                    $("#lpo_number2").text(lpo);
                    $("#ResetLPO #PId").val(id);

                });


                $("#reset_lpo").on('submit', function (e) {
                    e.preventDefault();

                    swal({
                        title: 'Confirmation',
                        text: "Do you reset printing to this  LPO ?",
                        buttons: [
                          'No',
                          'Yes'
                        ],
                    }).then(function (isConfirm) {
                        if (isConfirm) {
                            var url = '@Url.Action("ResetPrinting", "Procurement")';
                            var id = $("#PId").val();
                            var reason = $("#ResetReason").val();
                            var formData = {
                                "Id": id,
                                "Reason": reason
                            }
                            $('#ResetLPO').modal('hide');
                            $.ajax(
                        {
                            type: "POST",
                            url: url,
                            data: formData,
                            success: function (response) {
                                if (response == "Success") {

                                    swal("Reset  successfully!", { icon: "success" })
                                              .then((value) => {
                                                  location.reload();
                                              });


                                }
                                else {

                                    swal(response);
                                }
                            },
                            error: function (xhr) {
                                swal(error);

                            },

                        });
                        } else {
                            swal("Cancelled", "No change was made");
                        }
                    });
                });
                            $(".lpoCancel").on('click', function () {
                                var id = $(this).data('id');
                                var lpo = $(this).data('lpo');
                                var r = confirm("Do you what to cancel Local Purchase Order   " + lpo + " ?");
                                if (!r) {
                                    return;
                                }
                                var url = '@Url.Action("CancelLPO", "Procurement")';
                                $.ajax(
                    {
                        type: "POST",
                        url: url,
                        data: { id: id },
                        success: function (response) {
                            if (response == "Success") {
                                alert("Cancelled successfully");
                                location.reload();
                            }
                            else {
                                alert("Failed to cancel ,DbException");
                            }
                        },
                        error: function (xhr) {
                            //console.log(xhr.responseText);
                            alert("An error has occured, contact system support");
                            $("#divLoader").hide();
                        },

                    });
                            });
            });
            //SHOW LOADER ICON
            $(document).ajaxStart(function () {
                $(".loadingImg").show();

            });
            //HIDE LOADER ICON
            $(document).ajaxStop(function () {
                $(".loadingImg").hide();
            });
        var showDetails = function (id) {
            debugger;
            var url = '@Url.Action("PurchaseOrderDetails", "Procurement")';
            $("#divModalBody").load(url, { id: id }, function (response, status, xhr) {
                if (status == "error") {
                    $("#divModalBody").html("Error on accessing this details, contact system support.");
                }
                $("#divModal").modal("show");
            });
                };

                //Url.Action("PurchaseOrderModuleRpTv", "Report",new {id=item.PurchaseOrderNo,area = "IFMISTZ"})
                function printLPO(lpoNo) {
                    reportUrl = "@ViewBag.reportUrlName" + "PurchaseOrderModule.aspx";
                    queryString = "lpo-number=" + lpoNo;
                    $.ajax({
                            type: "GET",
                            url: '@Url.Action("ParameterEncryption", "Report", new {area = "IFMISTZ"})',
                            contentType: "application/json; charset=utf-8",
                            datatype: "json",
                            data: { "query": queryString },
                            success: function (response) {
                                window.open(reportUrl + response);
                            }
                    });
                }
        </script>
    }
