@model IFMIS.Areas.IFMISTZ.Models.PurchaseOrderVM
@{
    ViewBag.Title = "Create Purchase Order";
}
<style type="text/css">
    body {
        margin-top: 40px;
    }

    .stepwizard-step p {
        margin-top: 10px;
    }

    .stepwizard-row {
        display: table-row;
    }

    .stepwizard {
        display: table;
        width: 100%;
        position: relative;
    }

    .stepwizard-step button[disabled] {
        opacity: 1 !important;
        filter: alpha(opacity=100) !important;
    }

    .stepwizard-row:before {
        top: 14px;
        bottom: 0;
        position: absolute;
        content: " ";
        width: 100%;
        height: 1px;
        background-color: #ccc;
        z-order: 0;
    }

    .stepwizard-step {
        display: table-cell;
        text-align: center;
        position: relative;
    }

    .loadingImg {
        display: none;
    }

    .search-btn {
        border: 1px solid #ccc;
        border-radius: 4px;
        padding: 5px;
        padding-right: 10px;
    }

    .search-container {
        display: inline-flex;
        flex: 1 1 300px;
        position: relative;
        border: 1px solid #ccc;
        border-radius: 5px;
        overflow: hidden;
        padding-left: 10px;
    }

    .name-input-container {
        display: inline-flex;
        flex: 1 1 300px;
        position: relative;
        overflow: hidden;
    }

    .search-icon {
        padding: 0.5rem;
    }

    .search-button {
        background: #538AC5;
        border: 0;
        color: white;
        padding: 8px;
        border-radius: 0;
    }

    input[type=number] {
        padding: 8px;
        border: 1px solid #ccc;
        width: 205px;
    }

    input[type=text] {
        padding: 5px;
        border: 1px solid #ccc;
    }

    input[type=search] {
        padding: 4px;
        border: hidden;
        border-radius: 4px;
    }

    textarea {
        border: 1px solid #ccc;
    }

    select {
        padding: 8px;
        border: 1px solid #ccc;
        resize: vertical;
        width: 230px;
    }

    .action-btn {
        width: 100px;
        color: white;
    }

    .form-label {
        text-align: right;
    }

    td {
        padding: 5px;
    }

    .info-box {
        padding: 10px;
        background-color: #ECF3F8;
        text-align: center;
        border: 1px solid #ccc;
        border-radius: 5px;
    }
</style>

<div id="content" style="margin: 5px; padding-top: 30px">
    <div class="row">


    </div>
    <!-- widget grid -->
    <section id="widget-grid" class="">


        <!-- START ROW -->

        <div class="row">

            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">

                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">

                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2> Create Local Purchase Order </h2>

                    </header>


                    <div>
                        <div class="widget-body " style="padding-top:10px;width:100%">

                            <!----WIZARD HEADING -->

                            <div class="stepwizard">
                                <div class="stepwizard-row setup-panel">
                                    <div class="stepwizard-step">
                                        <a href="#step-1" type="button" class="btn btn-primary btn-circle">1</a>
                                        <p><strong>Basic Information </strong></p>
                                    </div>

                                    <div class="stepwizard-step">
                                        <a href="#step-2" type="button" class="btn btn-default btn-circle" disabled="disabled">2</a>
                                        <p><strong>Items</strong></p>
                                    </div>
                                    <div class="stepwizard-step">
                                        <a href="#step-3" type="button" class="btn btn-default btn-circle" disabled="disabled">3</a>
                                        <p><strong>GL Accounts</strong></p>
                                    </div>
                                </div>
                            </div>
                            <br />
                            <br />
                            @Html.HiddenFor(model => model.VatPercentage)
                            @Html.HiddenFor(model => model.CountItems)
                            @Html.HiddenFor(model => model.CountGLAccounts)
                            @Html.HiddenFor(model => model.ItemsValues)
                            @Html.HiddenFor(model => model.ItemCharge)
                            @Html.HiddenFor(model => model.ItemsValueBalance)
                            @Html.HiddenFor(model => model.ItemsChargeBalance)
                            @Html.HiddenFor(model => model.CurrentExchangeRate)
                            <!----WIZARD BODY -->
                            @using (Html.BeginForm("CreatePurchaseOrder", "Procurement", FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = "return SubmitSummary(this)" }))
                            {
                                @Html.AntiForgeryToken()

                                <div class="form-horizontal">


                                    <!---- STEP 1 START HERE -->
                                    <div class="row setup-content" id="step-1">

                                        <div class="col-xs-12">


                                            <div class="col-md-12">

                                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                                @Html.HiddenFor(model => model.PurchaseOrderId)

                                                @Html.HiddenFor(model => model.PayeeDetailId)
                                                <div class="form-group">
                                                    <label class="col-md-2 control-label">Supplier</label>
                                                    <div class="col-md-3">

                                                        <div class="input-group">

                                                            <span class="input-group-addon" onclick="SearchPayee()"><i class="fa fa-search"></i></span>
                                                            @Html.EditorFor(model => model.Payeename, new { htmlAttributes = new { @class = "form-control", @required = "required", autocomplete = "off", @placeholder = "Search", @onclick = "SearchPayee()" } })
                                                            @Html.ValidationMessageFor(model => model.Payeename, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                    @Html.LabelFor(model => model.PayeeType, htmlAttributes: new { @class = "control-label   col-md-2" })
                                                    <div class="col-md-3">
                                                        @Html.EditorFor(model => model.PayeeType, new { htmlAttributes = new { @class = "form-control", @required = "required", @autocomplete = "off", @readonly = "readonly" } })
                                                        @Html.ValidationMessageFor(model => model.PayeeType, "", new { @class = "text-danger" })
                                                    </div>

                                                </div>
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.SubBudgetClass, htmlAttributes: new { @class = "control-label   col-md-2" })
                                                    <div class="col-md-3">
                                                        @Html.DropDownList("SubBudgetClass", Model.SubBudgetClassList, "Select ---", new { @class = "form-control", @required = "required" })
                                                        @Html.ValidationMessageFor(model => model.SubBudgetClass, "", new { @class = "text-danger" })
                                                    </div>
                                                    @Html.Label("Type", htmlAttributes: new { @class = "control-label   col-md-2" })
                                                    <div class="col-md-3">
                                                        @Html.DropDownList("ShortDesc", new List<SelectListItem>{
                                                new SelectListItem{ Text="--Select ---", Value = "" },
                                                new SelectListItem{ Text="GOODS", Value = "GOODS" },
                                                 new SelectListItem{ Text="SERVICE", Value = "SERVICE" },
                                                new SelectListItem{ Text="WORKS", Value = "WORKS" },
                                                 }, new { @class = "form-control", @required = "required" })
                                                        @Html.ValidationMessageFor(model => model.ShortDesc, "", new { @class = "text-danger" })

                                                    </div>

                                                </div>
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.PurchaseOrderDesc, htmlAttributes: new { @class = "control-label   col-md-2" })
                                                    <div class="col-md-3">

                                                        @Html.EditorFor(model => model.PurchaseOrderDesc, new { htmlAttributes = new { @class = "form-control", @required = "required", rows = "2", maxlength = 250 } })

                                                        @Html.ValidationMessageFor(model => model.PurchaseOrderDesc, "", new { @class = "text-danger" })
                                                    </div>
                                                    @Html.LabelFor(model => model.PurchaseOrderAmount, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-3">
                                                        <div class="input-group">

                                                            <span class="input-group-addon" id="currencyDisp">@Html.DisplayFor(model => model.OperationalCurrency)</span>
                                                            @Html.EditorFor(model => model.PurchaseOrderAmount, new { htmlAttributes = new { @class = "form-control", @required = "required", @autocomplete = "off" } })
                                                            @Html.ValidationMessageFor(model => model.PurchaseOrderAmount, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.OrderDate, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-3">
                                                        @Html.EditorFor(model => model.OrderDate, new { htmlAttributes = new { @class = "form-control", @required = "required", @autocomplete = "off" } })
                                                        @Html.ValidationMessageFor(model => model.OrderDate, "", new { @class = "text-danger" })

                                                    </div>


                                                    @Html.LabelFor(model => model.DeliveryDate, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-3">

                                                        @Html.EditorFor(model => model.DeliveryDate, new { htmlAttributes = new { @class = "form-control", @required = "required", @autocomplete = "off" } })
                                                        @Html.ValidationMessageFor(model => model.DeliveryDate, "", new { @class = "text-danger" })

                                                    </div>

                                                </div>
                                                @if (ViewBag.STPayments != null)
                                                {
                                                    <div class="form-group">
                                                        @Html.Label("Is ST Payment ?", htmlAttributes: new { @class = "control-label   col-md-2" })
                                                        <div class="col-md-3">

                                                            <input type="checkbox" style="width:30px" id="IsStPayment">
                                                            <input id="StPayment" name="StPayment" style="width:40px;font-weight:bold" type="text" readonly value="NO">

                                                        </div>
                                                        <div class="IsStPayment">
                                                            @Html.LabelFor(model => model.ParentInstitutionCode, htmlAttributes: new { @class = "control-label col-md-2" })
                                                            <div class="col-md-3">
                                                                @Html.DropDownListFor(model => model.ParentInstitutionCode, Model.ParentInstitutionsList, "Select ---", new { @class = "form-control", @required = "required" })

                                                                @Html.ValidationMessageFor(model => model.ParentInstitutionCode, "", new { @class = "text-danger" })
                                                            </div>
                                                        </div>
                                                    </div>
                                                }

                                                <div class="form-group">
                                                    @if (ViewBag.AccrualLPO != null)
                                                    {
                                                        @Html.Label("Is Accrual ?", htmlAttributes: new { @class = "control-label   col-md-2" })
                                                        <div class="col-md-3">

                                                            <input type="checkbox" style="width:30px" id="IsAccrualLpo">
                                                            <input id="Accrual" name="Accrual" style="width:40px;font-weight:bold" type="text" readonly value='@Model.Accrual'>

                                                        </div>
                                                    }
                                                    @if (ViewBag.STPayments != null)
                                                    {
                                                        if (Model.IsStPayment)
                                                        {
                                                            <div class="IsStPayment">
                                                                @Html.LabelFor(model => model.SubWarrantCode, htmlAttributes: new { @class = "control-label col-md-2" })
                                                                <div class="col-md-3">
                                                                    @Html.DropDownListFor(model => model.SubWarrantCode, Model.SubWarrantsList, "Select ---", new { @class = "form-control", @required = "required" })

                                                                    @Html.ValidationMessageFor(model => model.SubWarrantCode, "", new { @class = "text-danger" })
                                                                </div>
                                                            </div>
                                                        }
                                                        else
                                                        {
                                                            <div class="IsStPayment">
                                                                @Html.LabelFor(model => model.SubWarrantCode, htmlAttributes: new { @class = "control-label col-md-2" })
                                                                <div class="col-md-3">
                                                                    <select name="SubWarrantCode" id="SubWarrantCode" class="form-control"></select>
                                                                    @Html.ValidationMessageFor(model => model.SubWarrantCode, "", new { @class = "text-danger" })
                                                                </div>
                                                            </div>
                                                        }
                                                    }
                                                </div>

                                            </div>
                                            <div class="col-md-offset-2">
                                                <a href="@Url.Action("PurchaseOrders","Procurement")" style="margin-right:5px" type="submit" class="btn btn-info pull-left"><i class="glyphicon glyphicon-arrow-left"></i> Back  </a>
                                                @*<button type="submit" id="summary" class="btn btn-info" style="margin-right:2px">
                                                        <i class="glyphicon glyphicon-floppy-disk"></i> Save
                                                    </button>*@

                                                <button class="btn btn-info" style="margin-right:2px">
                                                    <i class="glyphicon glyphicon-floppy-disk"></i> Save
                                                </button>

                                                <button class="btn btn-info nextBtn" type="button">Next &nbsp;<span class="glyphicon glyphicon-arrow-right" aria-hidden="true"></span></button>
                                            </div>
                                            <div align="center">
                                                <img src="~/Media/Images/ajax_loader.gif" class="loadingImg" />
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }

                            <!----STEP 2 START HERE -->
                            <div class="row setup-content" id="step-2">
                                <form id="lpo">
                                    <div class="form-horizontal">
                                        <div class="col-xs-12">
                                            <div class="col-md-12">



                                                <div class="form-group">

                                                    @Html.LabelFor(model => model.ItemCategory, htmlAttributes: new { @class = "control-label   col-md-2" })
                                                    <div class="col-md-3">
                                                        @Html.DropDownListFor(model => model.ItemCategory, Model.ItemCategoriesList, "Select ", new { @class = "form-control" })
                                                        @Html.ValidationMessageFor(model => model.ItemCategory, "", new { @class = "text-danger" })
                                                    </div>
                                                    @Html.Label("Class", htmlAttributes: new { @class = "control-label   col-md-2" })
                                                    <div class="col-md-3">
                                                        <select name="ItemClassificationId" id="ItemClassificationId" class="form-control"></select>
                                                        @Html.ValidationMessageFor(model => model.ItemClassificationId, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                                <div class="form-group">

                                                    @Html.LabelFor(model => model.ItemDesc, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-3">
                                                        <div id="itemDiv">
                                                            @Html.EditorFor(model => model.ItemDesc, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", maxlength = 50 } })
                                                        </div>
                                                        @Html.ValidationMessageFor(model => model.ItemDesc, "", new { @class = "text-danger" })
                                                    </div>
                                                    @Html.Label("Quantity", htmlAttributes: new { @class = "control-label   col-md-2" })
                                                    <div class="col-md-3">
                                                        <input type="text" name="Quantity" id="Quantity" value="" class="form-control" autocomplete="off">
                                                        @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.UOM, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-3">
                                                        @Html.DropDownListFor(model => model.UOM, Model.UOMList, "Select ", new { @class = "form-control" })
                                                        @Html.ValidationMessageFor(model => model.UOM, "", new { @class = "text-danger" })
                                                    </div>
                                                    @Html.Label("Unit Price", htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-3">
                                                        @*<amount-input name="UnitPrice" id="UnitPrice" style="width:100%;">*@
                                                        @Html.EditorFor(model => model.UnitPrice, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                                                        @Html.ValidationMessageFor(model => model.UnitPrice, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.VatStatus, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-3" style="padding-top:8px">
                                                        @*@Html.CheckBoxFor(model => model.VatStatus)*@
                                                        <input type="checkbox" name="VatStatus" value="Applicable" id="VatStatus">
                                                        <input id="VatApplicable" name="VatApplicable" style="width:40px;font-weight:bold" type="text" readonly value="NO">

                                                    </div>
                                                    @Html.Label("Total Amount", htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-3">
                                                        @Html.EditorFor(model => model.TotalAmount, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                                        @Html.ValidationMessageFor(model => model.TotalAmount, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>



                                            </div>


                                            <div class="col-md-offset-2">
                                                <a href="#step-1" style="margin-right:5px" type="submit" class="btn btn-info pull-left"><i class="glyphicon glyphicon-arrow-left"></i> Back  </a>

                                                <button type="button" id="purchaseDetails" class="btn btn-info" style="margin-right:2px">
                                                    <i class="glyphicon glyphicon-floppy-disk"></i> Save
                                                </button>

                                                <button class="btn btn-info nextBtn" type="button">Next &nbsp;<span class="glyphicon glyphicon-arrow-right" aria-hidden="true"></span></button>
                                            </div>
                                            <p align="right" id="basic_info">Purchase Order Amount :<strong> @Html.DisplayFor(model => model.PurchaseOrderAmount)<span id="display_amount"></span></strong> @Html.DisplayFor(model => model.OperationalCurrency) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
                                            <div align="center">
                                                <img src="~/Media/Images/ajax_loader.gif" class="loadingImg" />
                                            </div>
                                            <br />

                                            <div class="widget-body no-padding">

                                                <br />
                                                <div class="row" id="items_top">

                                                    <div class="col-xs-9 col-sm-3 col-md-3 col-lg-3">

                                                    </div>
                                                    <div class="col-xs-3 col-sm-2 col-md-2 col-lg-2 text-right">



                                                    </div>
                                                    <div class="col-xs-3 col-sm-7 col-md-7 col-lg-7 text-right">
                                                        <strong>
                                                            <span>Currency:<span id="currency"></span></span>
                                                            &nbsp;&nbsp;
                                                            <span>Total LPO:<span id="lpo_amount"></span></span>
                                                            &nbsp;&nbsp;
                                                            <span>Balance:<span id="items_balance"></span></span>
                                                            &nbsp;&nbsp;
                                                        </strong>
                                                    </div>

                                                </div>


                                                <div class="custom-scroll" style="height:210px; overflow-y: scroll;">


                                                    <table align="center" class="table table-bordered table-hover table-condensed" id="items" style="width:97%">
                                                    </table>

                                                </div>



                                            </div>




                                        </div>
                                    </div>
                                </form>
                            </div>


                            <!----STEP 3 START HERE -->
                            <div class="row setup-content" id="step-3">
                                <div class="col-xs-12">

                                    <div class="col-md-12">

                                        <div class="jarviswidget" data-widget-colorbutton="false" data-widget-colorbutton="false" data-widget-editbutton="false" data-widget-togglebutton="false" data-widget-deletebutton="false" data-widget-fullscreenbutton="false" data-widget-custombutton="false">

                                            <header>
                                                <h2><strong></strong> <i></i></h2>

                                                <ul id="widget-tab-1" class="nav nav-tabs pull-right">
                                                    <li class="active">

                                                        <a data-toggle="tab" href="#hr1"> <i class="fa fa-lg fa-arrow-circle-o-down"></i> <span class="hidden-mobile hidden-tablet">Inventory Items List<span class="badge inbox-badge margin-right-13 inv_items_count" style="background-color:#2196F3"></span></span> </a>

                                                    </li>
                                                    <li>

                                                        <a data-toggle="tab" href="#hr2"> <i class="fa fa-lg fa-arrow-circle-o-down"></i> <span class="hidden-mobile hidden-tablet">Non Inventory Items List<span class="badge inbox-badge margin-right-13 noinv_items_count" style="background-color:#2196F3"></span></span> </a>

                                                    </li>

                                                    <li>
                                                        <a data-toggle="tab" href="#hr3"> <i class="fa fa-lg fa-arrow-circle-o-up"></i> <span class="hidden-mobile hidden-tablet"> GL Accounts List <span class="badge inbox-badge margin-right-13 gl_count" style="background-color:#2196F3"></span></span></a>
                                                    </li>

                                                </ul>

                                            </header>

                                            <!-- widget div-->
                                            <div>

                                                <!-- widget edit box -->
                                                <div class="jarviswidget-editbox">
                                                    <!-- This area used as dropdown edit box -->

                                                </div>
                                                <!-- end widget edit box -->
                                                <!-- widget content -->
                                                <div class="widget-body no-padding">

                                                    <!-- widget body text-->

                                                    <div class="tab-content padding-10">
                                                        <div class="tab-pane fade in active" id="hr1">
                                                            <div class="widget-body no-padding">

                                                                <br />
                                                                <div class="row">

                                                                    <div class="col-xs-1 col-sm-1 col-md-1 col-lg-1">
                                                                    </div>

                                                                    <div class="col-xs-8 col-sm-4 col-md-4 col-lg-4">

                                                                    </div>
                                                                    <div class="col-xs-3 col-sm-7 col-md-7 col-lg-7 text-right">
                                                                        <span id="bind_inv_gl">
                                                                            <button type="button" class="btn btn-info" id="gl_inv_items_charge">
                                                                                <i class="fa fa-plus"></i> <span class="hidden-mobile">Add GL Account</span>
                                                                            </button>
                                                                        </span>

                                                                    </div>

                                                                </div>

                                                                <br />



                                                                <div class="custom-scroll inventoryData" style="height:170px; overflow-y: scroll;">


                                                                    <table align="center" class="table table-bordered table-hover table-condensed" id="itemsCharge" style="width:97%">
                                                                    </table>

                                                                </div>



                                                            </div>

                                                        </div>
                                                        <div class="tab-pane fade in" id="hr2">
                                                            <div class="widget-body no-padding">

                                                                <br />
                                                                <div class="row">

                                                                    <div class="col-xs-1 col-sm-1 col-md-1 col-lg-1">
                                                                    </div>

                                                                    <div class="col-xs-8 col-sm-4 col-md-4 col-lg-4">

                                                                    </div>
                                                                    <div class="col-xs-3 col-sm-7 col-md-7 col-lg-7 text-right">
                                                                        <span id="bind_noinv_gl">
                                                                            <button type="button" class="btn btn-info" id="gl_noinv_items_charge">
                                                                                <i class="fa fa-plus"></i> <span class="hidden-mobile">Add GL Account</span>
                                                                            </button>
                                                                        </span>
                                                                    </div>

                                                                </div>

                                                                <br />



                                                                <div class="custom-scroll nonInventoryData" style="height:170px; overflow-y: scroll;">


                                                                    <table align="center" class="table table-bordered table-hover table-condensed" id="itemsCharge" style="width:97%">
                                                                    </table>

                                                                </div>



                                                            </div>

                                                        </div>
                                                        <div class="tab-pane fade" id="hr3">
                                                            <div class="widget-body no-padding">

                                                                <br />
                                                                <div class="row" id="gl_search">

                                                                    <div class="col-xs-9 col-sm-3 col-md-3 col-lg-3">
                                                                        <div class="input-group">

                                                                        </div>
                                                                    </div>


                                                                </div>


                                                                <div class="custom-scroll" style="height:170px; overflow-y: scroll;">


                                                                    <table align="center" class="table table-bordered table-hover table-condensed" id="gl_Accounts" style="width:93%">
                                                                    </table>


                                                                </div>



                                                            </div>

                                                        </div>
                                                    </div>

                                                    <!-- end widget body text-->
                                                    <!-- widget footer -->
                                                    <div class="widget-footer text-right">

                                                        <span class="onoffswitch-title">

                                                        </span>


                                                    </div>
                                                    <!-- end widget footer -->

                                                </div>
                                                <!-- end widget content -->

                                            </div>
                                            <!-- end widget div -->

                                        </div>

                                        <div class="col-md-offset-2">
                                            <a href="@Request.UrlReferrer" style="margin-right:5px" type="submit" class="btn btn-info pull-left"><i class="glyphicon glyphicon-arrow-left"></i> Back  </a>
                                            <button type="button" class="btn btn-info cancel_lpo" style="margin-right:2px;display:none">
                                                <i class="glyphicon revicon-cancel"></i> Cancel
                                            </button>
                                            <button type="button" id="complete" class="btn btn-info" style="margin-right:2px">
                                                <i class="glyphicon glyphicon-floppy-disk"></i> Finish
                                            </button>

                                        </div>
                                        <div align="center">
                                            <img src="~/Media/Images/ajax_loader.gif" class="loadingImg" />
                                        </div>
                                    </div>

                                </div>



                            </div>







                        </div>



                    </div>


                </div>
            </article>

        </div>
    </section>

</div>

<!----------- Edit Item ----------------->
<div class="modal fade" id="editItemModal" style="left:4%">

    <div class="modal-dialog" style="width:70%;">
        <div class="modal-content panel-info">


            <div class="modal-header panel-heading">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h3 class="modal-title"> Edit Item</h3>

            </div>

            @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "EditItem" }))
            {
                <div class="modal-body">
                    <div class="form-horizontal">
                        @Html.HiddenFor(model => model.PurchaseOrderDetailId)
                        <div class="form-group">
                            @Html.LabelFor(model => model.ItemCategory, htmlAttributes: new { @class = "control-label   col-md-2" })
                            <div class="col-md-3">
                                @Html.DropDownListFor(model => model.ItemCategory, Model.ItemCategoriesList, "Select ", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ItemCategory, "", new { @class = "text-danger" })
                            </div>
                            @Html.Label("Class", htmlAttributes: new { @class = "control-label   col-md-2" })
                            <div class="col-md-3">
                                @Html.DropDownList("ItemClassificationId", Model.ItemClassificationsList, "Select ", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ItemClassificationId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.ItemDesc, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-3">
                                @Html.EditorFor(model => model.ItemDesc, new { htmlAttributes = new { @class = "form-control", maxlength = 50 } })
                                @Html.ValidationMessageFor(model => model.ItemDesc, "", new { @class = "text-danger" })
                            </div>
                            @Html.Label("Quantity", htmlAttributes: new { @class = "control-label   col-md-2" })
                            <div class="col-md-3">
                                <input type="text" name="Quantity" id="Quantity" value="" class="form-control" autocomplete="off">
                                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.UOM, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-3">
                                @Html.DropDownListFor(model => model.UOM, Model.UOMList, "Select ", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.UOM, "", new { @class = "text-danger" })
                            </div>
                            @Html.Label("Unit Price", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-3">
                                @*<amount-input name="UnitPrice" id="UnitPrice" style="width:100%;">*@

                                @Html.EditorFor(model => model.UnitPrice, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                                @Html.ValidationMessageFor(model => model.UnitPrice, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.VatStatus, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-3" style="padding-top:8px">
                                @*@Html.CheckBoxFor(model => model.VatStatus)*@
                                <input type="checkbox" name="VatStatus" value="Applicable" id="VatStatus">
                            </div>
                            @Html.Label("Total Amount", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-3">
                                @Html.EditorFor(model => model.TotalAmount, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.TotalAmount, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-info" id="btn_save_edit_item">
                        <i class="fa fa-save"></i>Save
                    </button>
                    <button class="btn btn-info" data-dismiss="modal">
                        <i class="fa  fa-times"></i>Cancel
                    </button>
                </div>
            }
        </div>
    </div>
</div>

<!----------- Search Payee ----------------->
<div class="modal fade" id="payeeModal" style="left:4%">

    <div class="modal-dialog" style="width:80%;">
        <div class="modal-content panel-info">


            <div class="modal-header panel-heading">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h3 class="modal-title"> Search Payee</h3>

            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-6">
                    </div>
                    <div class="col-md-6">
                        <div class="search-container submit-btn" style="float:right">
                            <i class="fa fa-search search-icon"></i>
                            <input type="search" name="search" placeholder="Search..." autocomplete="off" id="searchbox">
                        </div>
                    </div>
                </div>
                <div align="center">
                    <img src="/Media/Images/ajax_loader.gif" class="loadingImg" />
                </div>
                <table class="table" id="dt_search_payee">
                    <thead>
                        <tr>
                            <th>#</th>
                            <th>PaymentId</th>
                            <th>BIC</th>
                            <th>Payee Name</th>
                            <th>Payee Code</th>
                            <th>Bank Name</th>
                            <th>Bank Account No</th>
                            <th>Payee Type</th>
                            <th>Address</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>

            </div>
            <div class="modal-footer">
                <button class="btn btn-info" data-dismiss="modal">
                    <i class="fa  fa-times"></i>Close
                </button>
            </div>
        </div>
    </div>
</div>
<!----------- End Search Payee----------------->
<!----------- Search Items ----------------->
<div class="modal fade" id="itemsModal" style="left:4%">

    <div class="modal-dialog" style="width:60%;">
        <div class="modal-content panel-info">


            <div class="modal-header panel-heading">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h3 class="modal-title"> Search Item</h3>

            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-6">
                    </div>
                    <div class="col-md-6">
                        <div class="search-container submit-btn" style="float:right">
                            <i class="fa fa-search search-icon"></i>
                            <input type="search" name="search" placeholder="Search..." id="searchItem">
                        </div>
                    </div>
                </div>
                <table class="table" id="dt_search_item">
                    <thead>
                        <tr>
                            <th style="width:5%">#</th>
                            <th>Item Name</th>
                            <th style="width:15%">Action</th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>

            </div>
            <div class="modal-footer">
                <button class="btn btn-info" data-dismiss="modal">
                    <i class="fa  fa-times"></i>Close
                </button>
            </div>
        </div>
    </div>
</div>

<!----------- Search  GL----------------->
<div class="modal fade" id="glItemsModal" style="left:4%">

    <div class="modal-dialog" style="width:80%;">
        <div class="modal-content panel-info">
            <div class="modal-header panel-heading">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h3 class="modal-title"> Search Gl Item(s)</h3>
            </div>
            <div class="modal-body">
                <table>
                    <tr>
                        <td style="padding:5px">Total Items Amount</td>
                        <td style="padding:5px">
                            <input type="text" disabled id="total_items_amount">
                        </td>

                        <td style="padding:5px">Total Line Amount</td>
                        <td style="padding:5px">
                            <input value="0" type="text" disabled id="total_line_amount">
                        </td>

                        <td style="padding:5px">Difference</td>
                        <td style="padding:5px">
                            <input value="0" type="text" disabled id="difference" style="width:250px">
                        </td>
                    </tr>
                </table>
                <div>
                    <div class="row" style="padding-top:1%;padding-bottom:1%">
                        <div class="col-md-6">
                        </div>
                        <div class="col-md-6">
                            <div class="search-container " style="float:right">
                                <i class="fa fa-search search-icon"></i>
                                <input type="search" name="search" placeholder="Search..." id="search_gl">
                            </div>
                        </div>
                    </div>
                    <div align="center">
                        <img src="/Media/Images/ajax_loader.gif" class="loadingImg" />
                    </div>
                    <table id="dt_search_gl_item" class="table table-striped table-bordered table-hover table-condensed">
                        <thead>
                            <tr>
                                <th>#</th>
                                <th>Expenditure Line Item</th>
                                <th>Item Description</th>
                                <th id="BalanceTitle">Fund Balance</th>
                                <th>Funding Reference</th>
                                <th>Expense Amount</th>
                            </tr>
                        </thead>
                    </table>

                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-info" id="btn_save_items_charge">
                        <i class="fa fa-save"></i>Save
                    </button>
                    <button class="btn btn-info" data-dismiss="modal">
                        <i class="fa  fa-times"></i>Cancel
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>


@section pagespecific {
    <!-- PAGE RELATED PLUGIN(S) -->
    <script type="text/javascript">
            var itemCategory = null;
       		   function SubmitSummary(formData) {
            var payee = $("#Payeename").val();
            if (!payee) {
                swal("Please select Supplier !");
                return
            }
            var payeeType = $("#PayeeType").val();
            if (!payeeType) {
                swal("Please select Payee Type !");
                return
            }
            var sbc = $("#SubBudgetClass").val();
            if (!sbc) {
                swal("Please select Sub Budget Class !");
                return
            }
            var shortDesc = $("#ShortDesc").val();
            if (!shortDesc) {
                swal("Please select LPO Type !");
                return
            }
            var lpoDesc = $("#PurchaseOrderDesc").val();
            if (!lpoDesc) {
                swal("Please enter LPO Description !");
                return
            }
            var lpoAmount = $("#PurchaseOrderAmount").val();
            if (!lpoAmount) {
                swal("Please enter lpo Amount !");
                return
            }

            var start_date = $("#OrderDate").val();
            if (!start_date) {
                swal("Please Select Order Date");
                return false;
            }
            var end_date = $("#DeliveryDate").val();
            if (!end_date) {
                swal("Please Select Delivery Date");
                return false;
            }
            $("#save_summary").prop('disabled', true);
            var url = '@Url.Action("SavePurchaseOrder", "Procurement")';
            var ajaxConfig = {
                type: "post",
                url: url,
                data: new FormData(formData),
                success: function (result) {
                    $("#save_summary").prop('disabled', false);
                   if (result.response == "Success") {
                        swal("Basic information saved successfully", { icon: "success" })
                                                                   .then((value) => {
                                                                       @*var url = '@Url.Action("CreatePurchaseOrder", "Procurement")';
                                                                       var new_url = url + "?id=" + result.id;
                                                                       window.location.replace(new_url);*@
                                                                       $("#PurchaseOrderId").val(result.id);
                                                                       $("#PurchaseOrderNo").val(result.lpo);
                                                                       $("#currency").text(result.currency);
                                                                       $("#display_amount").text($("#PurchaseOrderAmount").val());
                                                                       $("#lpo_amount").text($("#PurchaseOrderAmount").val());
                                                                   });
                    }
                    else if (result.response == "Updated") {
                        if (result.realesed == "No") {
                                 swal("Basic information updated successfully", { icon: "success" })
                                                                  .then((value) => {
                                                                       $("#currency").text(result.currency);
                                                                       $("#display_amount").text($("#PurchaseOrderAmount").val());
                                                                       $("#lpo_amount").text($("#PurchaseOrderAmount").val());
                                                                       $("#items_balance").text(result.balance.toLocaleString('en'));
                                                                  });
                        } else {
                                 swal("Basic information updated successfully and all GLs assigned previous released", { icon: "success" })
                                                                  .then((value) => {
                                                                       $("#currency").text(result.currency);
                                                                       $("#display_amount").text($("#PurchaseOrderAmount").val());
                                                                       $("#lpo_amount").text($("#PurchaseOrderAmount").val());
                                                                       $("#items_balance").text(result.balance.toLocaleString('en'));

                                                                  });
                        }
                        if (result.notChagedList !=null) {
                            UpdateChargingTable(result.notChagedList);
                        }
                          if (result.coaList !=null) {
                            UpdateCoasTable(result.coaList);
                        }

                    } else {
                       swal(result.response);
                    }
                }
            }
            $("#save_summary").prop('disabled', false);
            if ($(formData).attr('enctype') == "multipart/form-data") {
                ajaxConfig["contentType"] = false;
                ajaxConfig["processData"] = false;
            }
            $.ajax(ajaxConfig);
            return false;
        }

        function UpdateItemsTable(arrayData) {
                     $('#items').empty();
                    $("#VatApplicable").val("NO");
                                var number = arrayData.length;
                                if (number > 0) {
                                    $('#basic_info').hide();
                                    $('#items_top').show();

                                    $('<thead><tr><th style="text-align: center">#</th><th style="text-align: left">Item </th><th>Class</th><th style="text-align: center">Quantity</th><th style="text-align: center">UOM</th><th style="text-align: right">Unit Price</th><th style="text-align:right">VAT</th><th style="text-align: right">Total Amount</th><th  style="text-align:center;width:8%">Action</th></tr></thead>').appendTo('#items');
                                }
                            var j = 0;
                                var sum = 0;
                                var vat_sum = 0;
                                $('<tbody>').appendTo('#items');

                                $.each(arrayData, function (i, d) {

                                    var VAT = 0;
                                    if (d.VAT != null) {
                                        VAT = d.VAT;
                                    }
                                    sum = sum + parseFloat(d.TotalAmount);
                                    vat_sum = vat_sum + parseFloat(VAT);
                                    j++;
                                    $('<tr><td align="center">' + j + '</td><td>' + d.ItemDescription + '</td><td>' + d.ItemCategory + '</td><td align="center">' + d.Quantity + '</td><td align="center">' + d.UOM + '</td><td align="right">' + d.UnitPrice.toLocaleString('en') + '</td><td align="right">' + VAT.toLocaleString('en') + '</td><td align="right">' + d.TotalAmount.toLocaleString('en') + '</td><td style="text-align: center"><div class="btn-group"><button type="button" class="btn  btn-info btn-xs dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><span class="caret"></span><span class="sr-only">Toggle Dropdown</span></button> <ul class="dropdown-menu"> <li>  <a href="#" data-toggle="modal" data-target="#editItemModal" data-id="' + d.PurchaseOrderDetailId + '" data-category="' + d.ItemCategory + '" data-classid="' + d.ItemClassificationId + '" data-quantity="' + d.Quantity + '" data-item="' + d.ItemDescription + '" data-unitprice="' + d.UnitPrice + '" data-uom="' + d.UOM + '" data-totalamount="' + d.TotalAmount + '" class="editItemModal edit"><i class="fa fa-edit"></i> Edit</a></li><li><a href="#" onclick="cancelItem(' + d.PurchaseOrderDetailId + ')"><i class="fa fa-trash-o"></i> Cancel</a></li></ul></div></td></tr>').appendTo('#items');

                                });
                                if (number > 0) {

                                    $('<tr><td align="right" colspan="6"><strong>Grand Total</strong></td><td align="right"><strong>' + vat_sum + '</strong></td><td align="right"><strong>' + sum.toLocaleString('en') + '</strong></td><td></td></tr>').appendTo('#items');
                                }
                                $("#ItemsValues").val(sum);
                                var lpo_amount = parseFloat($("#PurchaseOrderAmount").val().split(",").join(""));
                                var balance = lpo_amount - sum;
                                $("#items_balance").text(balance.toLocaleString('en'));
                                $('</tbody>').appendTo('#items');
        }
        function UpdateChargingTable(arrayData, itemCategory) {

            if (itemCategory == "Inventory") {
                //start of inventory table

                $('.inventoryData #itemsCharge').empty();
                var number = arrayData.length;
                $(".inv_items_count").text(number);
                $("#gl_inv_items_charge2").hide();
                if (number > 0) {
                    $('#bind_inv_gl').show();
                    $('<thead><tr><th style="text-align: right" colspan="7"><input type="checkbox" class="cbCheckAllItems"  /></th></tr></thead>').appendTo('.inventoryData #itemsCharge');
                    $('<thead><tr><th style="text-align: center">#</th><th style="text-align: left">Item </th><th>Class</th><th style="text-align: center">Quantity</th><th style="text-align: center">UOM</th><th style="text-align: right">Total Amount</th><th style="text-align:center;width:10%">Select</th></tr></thead>').appendTo('.inventoryData #itemsCharge');

                }
                var k = 0;
                var sum = 0;
                var vat_sum = 0;
                $('<tbody>').appendTo('.inventoryData #itemsCharge');

                $.each(arrayData, function (i, d) {
                    var VAT = 0;
                    if (d.VAT != null) {
                        VAT = d.VAT;
                    }
                    sum = sum + parseFloat(d.TotalAmount);
                    vat_sum = vat_sum + parseFloat(VAT);
                    k++;

                    $('<tr><td align="center">' + k + '</td><td>' + d.ItemDescription + '</td><td>' + d.ItemCategory + '</td><td align="center">' + d.Quantity + '</td><td align="center">' + d.UOM + '</td><td align="right">' + d.TotalAmount.toLocaleString('en') + '</td><td style="text-align: center" class="inventory"><input type="checkbox" value="' + d.TotalAmount + '" class="checkItem" id="' + d.PurchaseOrderDetailId + '"></td></tr>').appendTo('.inventoryData #itemsCharge');

                });
                if (number > 0) {
                    $('<tr><td align="right" colspan="5"><strong>Grand Total</strong></td><td align="right"><strong>' + sum.toLocaleString('en') + '</strong></td><td></td></tr>').appendTo('.inventoryData #itemsCharge');
                }

                $('</tbody>').appendTo('.inventoryData #itemsCharge');

                //End of inventory table

            } else {
                //Start of non inventory table
                $('.nonInventoryData #itemsCharge').empty();
                var number = arrayData.length;
                $(".noinv_items_count").text(number);
                $("#gl_noinv_items_charge2").hide();
                if (number > 0) {
                    $('#bind_noinv_gl').show();
                    $('<thead><tr><th style="text-align: right" colspan="7"><input type="checkbox" class="cbCheckAllItems"  /></th></tr></thead>').appendTo('.nonInventoryData #itemsCharge');
                    $('<thead><tr><th style="text-align: center">#</th><th style="text-align: left">Item </th><th>Class</th><th style="text-align: center">Quantity</th><th style="text-align: center">UOM</th><th style="text-align: right">Total Amount</th><th style="text-align:center;width:10%">Select</th></tr></thead>').appendTo('.nonInventoryData #itemsCharge');

                }
                var k = 0;
                var sum = 0;
                var vat_sum = 0;
                $('<tbody>').appendTo('.nonInventoryData #itemsCharge');

                $.each(arrayData, function (i, d) {
                    var VAT = 0;
                    if (d.VAT != null) {
                        VAT = d.VAT;
                    }
                    sum = sum + parseFloat(d.TotalAmount);
                    vat_sum = vat_sum + parseFloat(VAT);
                    k++;

                    $('<tr><td align="center">' + k + '</td><td>' + d.ItemDescription + '</td><td>' + d.ItemCategory + '</td><td align="center">' + d.Quantity + '</td><td align="center">' + d.UOM + '</td><td align="right">' + d.TotalAmount.toLocaleString('en') + '</td><td style="text-align: center" class="nonInventory"><input type="checkbox" value="' + d.TotalAmount + '" class="checkItem" id="' + d.PurchaseOrderDetailId + '"></td></tr>').appendTo('.nonInventoryData #itemsCharge');

                });
                if (number > 0) {
                    $('<tr><td align="right" colspan="5"><strong>Grand Total</strong></td><td align="right"><strong>' + sum.toLocaleString('en') + '</strong></td><td></td></tr>').appendTo('.nonInventoryData #itemsCharge');
                }

                $('</tbody>').appendTo('.nonInventoryData #itemsCharge');
                //End of non inventory table
            }

        }
        function UpdateCoasTable(arrayData) {
            $('#gl_Accounts').empty();

                    var number = arrayData.length;
                   $(".gl_count").text(number);
                    if (number > 0) {
                        $('#gl_search').show();
                        $('<thead><tr><th style="text-align: center">#</th><th style="text-align: left">Item Description</th><th>Expenditure Line Item</th><th style="text-align: left">Funding Reference</th><th style="text-align: right">Amount</th><th style="text-align: center">Action</th></tr></thead>').appendTo('#gl_Accounts');

                                }
                    var p = 0;
                    var sum = 0;
                    $('<tbody>').appendTo('#gl_Accounts');
                    $.each(arrayData, function (i, d) {
                        sum = sum + parseFloat(d.OperationalAmount);
                        p++;

                        $('<tr><td align="center">' + p + '</td><td>' + d.GlAccount.split("|").join("-") + '</td><td>' + d.GlAccountDesc + '</td><td>' + d.FundingReference + '</td><td align="right">' + d.OperationalAmount.toLocaleString('en') + '</td><td style="text-align: center"><div class="btn-group"><button type="button" class="btn  btn-info btn-xs dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><span class="caret"></span><span class="sr-only">Toggle Dropdown</span></button> <ul class="dropdown-menu"> <li><a href="#" onclick= "deselectGL(' + d.PurchaseOrderCoaId + ')"><i class="fa fa-edit"></i>Deselect</a></li></ul></div></td></tr>').appendTo('#gl_Accounts');

                    });
                    if (number > 0) {
                        $('<tr><td align="right" colspan="4"><strong>Total</strong></td><td align="right"><strong>' + sum.toLocaleString('en') + '</strong></td><td></td></tr>').appendTo('#gl_Accounts');
                    }
                    $('</tbody>').appendTo('#gl_Accounts');
        }
    // =========== END Save Purchase Order summary ====================
    $("#dt_search_payee_wrapper .dt-toolbar").remove();
    function SearchPayee() {
        $('#payeeModal').modal('show');
    }
    // ============= SHOW PAYEE===============

    var dt_selected_payee = $('#dt_selected_payee').dataTable({
        "data": [],
        "columnDefs": [{
            "targets": [0, 1],
            "visible": false
        }],
        "columns": [
            { title: "Payee DetailId" },
            { title: "Payee BIC" },
            { title: "Payee Name" },
            { title: "Payee Code" },
            { title: "Bank Name" },
            { title: "Payee Type" },
            { title: "Bank Account No" },
            { title: "Address" }
        ]
    });


    // ============= SEARCH PAYEEE ===========

    var dt_search_payee = $('#dt_search_payee').dataTable({
        "aoColumnDefs": [{ "bVisible": false, "aTargets": [1, 2] }],
    });

    $("#searchbox").on("keyup search input paste cut", function () {
        if (!this.value) {
            dt_search_payee.fnClearTable();
        } else {
            searchPayeeTableUpdate(this.value);
        }
    });

    var dt_search_gl_item = $('#dt_search_gl_item').dataTable();

    function payeeClicked(rowId) {
        var data = dt_search_payee.DataTable().rows().data();
        var row = data[rowId];
        $("#PayeeDetailId").val(row[1]);
        $("#Payeename").val(row[3]);
        $("#PayeeType").val(row[7]);
        $("#payeeModal").modal("hide");
    }

        // =========== END SEARCH PAYEE ====================
    function searchPayeeTableUpdate(search) {
        var url = '@Url.Action("GetPayee", "Procurement")';
        $.ajax({
            type: "get",
            url: url + "/?search=" + search + "",
            contenttype: "application/json; charset=utf-8",
            datatype: "json",
            success: function (response) {
                data = response.data;
                dt_search_payee.fnClearTable();
                for (var i = 0; i < data.length; i++) {
                    dt_search_payee.fnAddData([i + 1,
                       data[i]["PayeeDetailId"],
                       data[i]["BIC"],
                       data[i]["AccountName"],
                       data[i]["PayeeCode"],
                       data[i]["PayeeName"],
                       data[i]["Accountnumber"],
                       data[i]["PayeeType"],
                       data[i]["Address1"],
                       '<a href="#" onclick="payeeClicked(' + i + ')"><i class="glyphicon glyphicon-plus-sign"></i></a>'
                    ]);
                }
            },
            failure: function (error) {
                swal(error);
            }
        });
    }



        function get_items(query, item_id) {
            var item_id = parseFloat(item_id);
            var form_data = {
                "id": item_id,
                "Prefix": query
            }
            var url = '@Url.Action("SearchItems", "Procurement")';
            $.ajax({
                type: "POST",
                url: url,
                data: form_data,
                success: function (data) {
                    if (data.response == "Success") {
                        var items_array = [];
                       $.each(data.Items, function (i, d) {
                           items_array.push(d.ItemDescription);
                        });


                       $('#ItemDesc').autocomplete({
                           source: items_array
                           });
                    }
                    else {

                    }

                }
            });
        }

        // =========== END SEARCH ITEM ====================
        //=============SEARCH GL ACCOUNTS ==================
    function searchGLTableUpdate() {
            var subBudgetClass = $("#SubBudgetClass").val();

             var url = '@Url.Action("GetFundbalance", "PaymentVoucher")';

             var instCode="UNKNOWN";
            var subWarrantCode= "UNKNOWN";
            if ($("#IsStPayment").val()) {
             instCode= $("#IsStPayment").is(":checked") ? $("#ParentInstitutionCode").val() : "UNKNOWN";
             subWarrantCode= $("#IsStPayment").is(":checked") ? $("#SubWarrantCode").val() : "UNKNOWN";
            }
                var fundBalanceParams = {
                subBudgetClass,
                instCode,
                subWarrantCode,
                IsAccrualVoucher: $("#IsAccrualLpo").is(":checked")
                   };
            $.ajax({
                type: "get",
                url: url,
                data: fundBalanceParams,
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {
                    //=== UPDATE SEARCH GI TABLE ====
                    data = response.data;
                    dt_search_gl_item.fnClearTable();

                             for (var i = 0; i < data.length; i++) {
                        if ($("#IsAccrualLpo").is(":checked")) {
                            var amount = 0;
                            if (data[i]["BudgetBalance"] > 0) {
                                amount = data[i]["BudgetBalance"];
                            }
                          dt_search_gl_item.fnAddData([i + 1,
                           data[i]["GlAccount"].split("|").join("-"),
                           data[i]["GlAccountDesc"],
                          toLabel(data[i]["BudgetBalance"] || 0),
                           'NA',
                           '<amount-input placeholder="Amount" max="' + amount + '"  onkeyup="amountChanged(this)" />'
                        ]);

                      } else {
                        dt_search_gl_item.fnAddData([i + 1,
                           data[i]["GlAccount"].split("|").join("-"),
                           data[i]["GlAccountDesc"],
                           toLabel(data[i]["FundBalance"]),
                           data[i]["FundingRefNo"],
                           '<amount-input placeholder="Amount" max="' + data[i]["FundBalance"] + '"  onkeyup="amountChanged(this)" />'
                        ]);

                       }
                                      }

                },
                failure: function (error) {
                    swal(error);
                }
            });
        }
        //==============END SEARCH GL ACCOUNT====================


    $(document).ready(function () {
        $("#dt_search_gl_item_wrapper .dt-toolbar").remove();
        $("#dt_search_payee_wrapper .dt-toolbar").remove();
        var lpo_amount = $("#PurchaseOrderAmount").val();
        if (lpo_amount) {
            $("#PurchaseOrderAmount").val(inputThousandSeparator(lpo_amount))
        }

        $("#gl_inv_items_charge").on('click', function () {
             glItemsCharges = [];
             sum_total = 0;
            var itemIds = [];
            var sum = 0;
            itemCategory = "Inventory";
            $(".inventory input:checkbox.checkItem").each(function () {
                if ($(this).prop("checked")) {
                    itemIds.push($(this).val());
                    sum = sum + parseFloat($(this).val());
                    //swal($(this).attr('id'));
                    //$(this).hide();
                }

            });

            if (itemIds.length == 0) {

                swal("No Item Selected!");
                return;
            } else {
                $("#search_gl").val("");
                $("#total_line_amount").val("");
                $("#total_items_amount").val(sum.toLocaleString('en'));
                $("#difference").val(sum.toLocaleString('en'));
                dt_search_gl_item.fnClearTable();
                $("#glItemsModal").modal();
                searchGLTableUpdate();

            }

        });
        $("#gl_inv_items_charge2").on('click', function () {
             glItemsCharges = [];
             sum_total = 0;
            var itemIds = [];
            var sum = 0;
            itemCategory = "Inventory";
                $(".inventory input:checkbox.checkItem").each(function () {
                if ($(this).prop("checked")) {
                    itemIds.push($(this).val());
                    sum = sum + parseFloat($(this).val());
                    //swal($(this).attr('id'));
                    //$(this).hide();
                }

            });

            if (itemIds.length == 0) {

                swal("No Item Selected!");
                return;
            } else {
                $("#search_gl").val("");
                $("#total_line_amount").val("");
                $("#total_items_amount").val(sum.toLocaleString('en'));
                $("#difference").val(sum.toLocaleString('en'));
                dt_search_gl_item.fnClearTable();
                $("#glItemsModal").modal();
                searchGLTableUpdate();

            }

        });
        $("#gl_noinv_items_charge").on('click', function () {
            glItemsCharges = [];
            sum_total = 0;
            var itemIds = [];
            var sum = 0;
            itemCategory = "NonInventory";
            $(".nonInventory input:checkbox.checkItem").each(function () {
                if ($(this).prop("checked")) {
                    itemIds.push($(this).val());
                    sum = sum + parseFloat($(this).val());
                    //swal($(this).attr('id'));
                    //$(this).hide();
                }

            });

            if (itemIds.length == 0) {

                swal("No Item Selected!");
                return;
            } else {
                $("#search_gl").val("");
                $("#total_line_amount").val("");
                $("#total_items_amount").val(sum.toLocaleString('en'));
                $("#difference").val(sum.toLocaleString('en'));
                dt_search_gl_item.fnClearTable();
                $("#glItemsModal").modal();
                searchGLTableUpdate();

            }

        });
        $("#gl_noinv_items_charge2").on('click', function () {
            glItemsCharges = [];
            sum_total = 0;
            var itemIds = [];
            var sum = 0;
            itemCategory = "NonInventory";
            $(".nonInventory input:checkbox.checkItem").each(function () {
                if ($(this).prop("checked")) {
                    itemIds.push($(this).val());
                    sum = sum + parseFloat($(this).val());
                    //swal($(this).attr('id'));
                    //$(this).hide();
                }

            });

            if (itemIds.length == 0) {

                swal("No Item Selected!");
                return;
            } else {
                $("#search_gl").val("");
                $("#total_line_amount").val("");
                $("#total_items_amount").val(sum.toLocaleString('en'));
                $("#difference").val(sum.toLocaleString('en'));
                dt_search_gl_item.fnClearTable();
                $("#glItemsModal").modal();
                searchGLTableUpdate();

            }

        });
        //=============SEARCH GL ACCOUNTS ==================
        $("#search_gl").on("keyup search input paste cut", function () {
            var itemIds = [];
            var sum = 0;
            $("input:checkbox.checkItem").each(function () {
                if ($(this).prop("checked")) {
                    itemIds.push($(this).val());
                    sum = sum + parseFloat($(this).val());

                }

            });

            dt_search_gl_item.DataTable().search(this.value).draw();
        });
                        // ON SUB BUDGET CLASS SELECTED
                        $("#SubBudgetClass").change(function () {
                            var sbc = $(this).val();
                            var url = '@Url.Action("GetCurrency", "Procurement")';
                            $.ajax({
                                type: "POST",
                                url: url,
                                data: {sbc:sbc },
                                success: function (data) {
                                          if (data == "SetupProblem") {
                                            swal("Currency Rate Setup is Incomplete");
                                            } else  if (data == "DbException") {
                                            swal("Failed to select currency due to DbException,Contact technical supporter");
                                            }
                                           else {
                                              $("#currencyDisp").text(data.currency);
                                            }


                                }
                            })
                        });



        //MANAGE STEP WIZARD
        var navListItems = $('div.setup-panel div a'),
               allWells = $('.setup-content'),
               allNextBtn = $('.nextBtn');

        allWells.hide();

        navListItems.click(function (e) {
            e.preventDefault();
            var $target = $($(this).attr('href')),
                    $item = $(this);

            if (!$item.hasClass('disabled')) {
                navListItems.removeClass('btn-primary').addClass('btn-default');
                $item.addClass('btn-primary');
                allWells.hide();
                $target.show();
                $target.find('input:eq(0)').focus();
            }
        });

        allNextBtn.click(function () {
            var curStep = $(this).closest(".setup-content"),
                curStepBtn = curStep.attr("id"),
                nextStepWizard = $('div.setup-panel div a[href="#' + curStepBtn + '"]').parent().next().children("a"),
                curInputs = curStep.find("input[type='text'],input[type='url']"),
                isValid = true;

            $(".form-group").removeClass("has-error");
            for (var i = 0; i < curInputs.length; i++) {
                if (!curInputs[i].validity.valid) {
                    isValid = false;
                    $(curInputs[i]).closest(".form-group").addClass("has-error");
                }
            }

            if (isValid)
                nextStepWizard.removeAttr('disabled').trigger('click');
        });

        $('div.setup-panel div a.btn-primary').trigger('click');
        //END MANAGE STEP WIZARD

        function SearchPayee() {
            $('#payeeModal').modal('show');
        }
        //LOAD PREVIOUS INSERTED DATA
        var lpo_amount = parseFloat($("#PurchaseOrderAmount").val().split(",").join(""));
        if (lpo_amount>=0) {
            $("#lpo_amount").text(lpo_amount.toLocaleString('en'));

        }
        var ItemsValues = parseFloat($("#ItemsValues").val());
        if (ItemsValues >= 0) {
        }
        var ItemsValueBalance = parseFloat($("#ItemsValueBalance").val());
        $("#items_balance").text(ItemsValueBalance.toLocaleString('en'));
        if (ItemsValueBalance >= 0) {
            $("#items_balance").text(ItemsValueBalance.toLocaleString('en'));
        }
        var ItemsChargeBalance = parseFloat($("#ItemsChargeBalance").val());
        if (ItemsChargeBalance >= 0) {
        }
        var currency = $("#OperationalCurrency").val();
        $("#currency").text(currency);


        $('#gl_search').hide();
        $('#bind_inv_gl').hide();
        $('#bind_noinv_gl').hide();
        $('#items_top').hide();

        $("#complete").click(function (e) {

                var url = '@Url.Action("PurchaseOrders", "Procurement")';
                 window.location.replace(url);


        });
        //END FINISH LPO CREATION

        //SUBMIT LPO ITEM
        $(function () {
            $("#purchaseDetails").click(function (e) {
                e.preventDefault();
                var lpoId = $("#PurchaseOrderId").val();
                if (lpoId) {
                    var item_class = $("#ItemClassificationId").val();
                    if (!item_class) {
                        swal("Please select Item Class !");
                        return
                    }
                    var itemDesc = $("#ItemDesc").val();
                    if (!itemDesc) {
                        swal("Please enter item !");
                        return
                    }
                    var uom = $("#UOM").val();
                    if (!uom) {
                        swal("Please select Unit of measure !");
                        return
                    }

                    var quantity = $("#Quantity").val().split(",").join("");
                    if (!quantity) {
                        swal("Please enter quantity of items !");
                        return
                    }
                    if (quantity==0) {
                        swal("Please quantity can not be zero !");
                        return
                    }

                    var unitPrice = parseFloat($("#UnitPrice").val().split(",").join(""));
                    if (!unitPrice) {
                        swal("Please enter unit price !");
                        return
                    }
                    if (unitPrice==0) {
                        swal("Please Unit price can not be zero !");
                        return
                    }
                    if (unitPrice < 0) {
                        swal("Please Unit price can not be negative !");
                        return
                    }
                    var vatStatus ="";
                    var checkedValue = $("#VatStatus:checked").val();
                    if (checkedValue == "Applicable") {
                        vatStatus = "Applicable";
                    } else {
                        vatStatus = "Excempted";
                    }

                    var totalAmount = parseFloat($("#TotalAmount").val().split(",").join(""));
                    if (totalAmount == 0) {
                        swal("Please Total Amount can not be zero !");
                        return
                    }
                    if (totalAmount < 0) {
                        swal("Please Total Amount can not be negative !");
                        return
                    }
                    if (totalAmount > 0) {
                    var formData = { "PurchaseOrderId": lpoId, "ItemClassificationId": item_class, "Quantity": quantity, "UnitPrice": unitPrice, "UOM": uom, "ItemDesc": itemDesc, "VatStatus": vatStatus, "TotalAmount": totalAmount };

                    $("#purchaseDetails").prop('disabled', true);
                    var url = '@Url.Action("SaveLPOItem", "Procurement")';
                    $.ajax(
                    {
                        type: "POST", //HTTP POST Method
                        url: url, // Controller/View
                        data: formData,
                        success: function (data) {
                            $("#purchaseDetails").prop('disabled', false);
                            if (data == "DbException") {
                                swal(" An error has occured DbException, contact system support");

                            }
                            else if (data == "Exceed") {

                                swal("Not saved, Total Items Amount can not exeed LPO Amount ");
                                return;
                            }
                            else if (data == "Noquantity") {

                                swal("Not saved, Quantity can not be zero also must be an integer number ");
                                return;
                            }
                            else {

                                swal("Item added successfully", { icon: "success" })
                                                .then((value) => {
                                $('#ItemDesc').val("");
                                $('#Quantity').val("");
                                $('#UnitPrice').val("");
                                $('#UnitPrice').val("");
                                $('#ItemsValue').val("");
                                $('#VAT').val("");
                                $('#TotalAmount').val("");
                                $("#VatStatus").prop("checked", false);
                                 UpdateItemsTable(data.itemsList);
                                 UpdateChargingTable(data.notChagedList, data.itemCategory);

                                                });

                            }
                        },
                        error: function (xhr) {
                            $("#purchaseDetails").prop('disabled', false);
                            swal("An error has occured, contact system support");

                        },

                    });
                     } else {
                    swal("Please Total Amount must be money");
                   }
                } else {
                    swal("Please Insert and save LPO Basic Information on step one");
                }
            });
        });
                //END SUBMIT LPO ITEM


  //MANAGE SELECTED DATE
        $(function () {
               $("#DeliveryDate").change(function () {
                   var deliver_date = $(this).val();
                   var order_date = $("#OrderDate").val();
                   if (order_date) {
                       if (deliver_date) {
                           if (order_date > deliver_date) {
                               swal("Please select date which is greater than the order date");
                               $("#DeliveryDate").val("");
                           }

                       }
                   }


            });
        });
        $(function () {
            $("#OrderDate").change(function () {
                var order_date = $(this).val();
                var deliver_date = $("#DeliveryDate").val();
                if (deliver_date) {
                    if (order_date) {
                        if (order_date > deliver_date) {
                            swal("Please select date which is less than the delivery date");
                            $("#OrderDate").val("");
                        }

                    }
                }


            });
        });
        $(function () {
            $("#ItemCategory").change(function () {
                var category = $(this).val();
                if (category) {
                  var url = '@Url.Action("GetItemClasses", "Procurement")';
                $.ajax({
                    type: "GET",
                    url: url,
                    data: { category : category },
                    success: function (data) {
                        if (data.response == "Success") {
                           $('#ItemClassificationId').empty();
                            $('<option value="">Select...</option>').appendTo('#ItemClassificationId');
                            $.each(data.itemClasses, function (i, d) {
                                $('<option value="' + d.ItemClassificationId + '">' + d.ClassificationDesc + '</option>').appendTo('#ItemClassificationId');
                            });
                        }
                        else {
                           swal("Failed to fetch data due to DB Exception.Contact Technical supporter");
                        }
                    }
                });
                }

            });
        });
        $(function () { // this will be called when the DOM is ready
            $("#ItemDesc").keyup(function () {
                var query = $(this).val();
                var item_id = $("#ItemClassificationId").val();
                if (!item_id) {
                    swal("Please select class first");
                    $(this).val("");
                    return false;

                }
                var length = query.length;
                if (length >1 ){
                    get_items(query, item_id);
                }

            });
        });

        $(function () { // this will be called when the DOM is ready
            $("#search_item").keyup(function () {
                var search_item = $("#search_item").val();
                var class_id = $("#ItemClassificationId").val();
                var formParam = { "id": class_id, "Search": search_item };
                var url = '@Url.Action("GetItems", "Procurement")';

                //Feed Datatable
                $.ajax({
                    type: "post",
                    url: url,
                    data: formParam,
                    contenttype: "application/json; charset=utf-8",
                    datatype: "json",
                    success: function (data) {
                        $("#items_list").empty();
                        var j = 0;
                        var number = data.length;
                        if (number > 0) {

                            $('<thead><tr><th style="text-align: center;width:5%">#</th><th>Item Description</th><th style="text-align: center;width:5%">Select</th></tr></thead>').appendTo('#items_list');

                        }
                        $('<tbody>').appendTo('#items_list');
                        $.each(data, function (i, d) {
                            j++;
                            $('<tr><td>' + j + '</td><td align="left">' + d.ItemDescription + '</td><td><a href="#" data-toggle="modal" class="pick_item"  data-item="' + d.ItemDescription + '" ><i class="glyphicon glyphicon-plus-sign"></i></a></td></tr>').appendTo('#items_list');
                        });
                        $('</tbody>').appendTo('#items_list');
                        if (search_item) {
                            if (data.length == 0) {
                                swal("No Matching Item");
                            }
                        }

                    },
                    failure: function (errmsg) {
                        swal(errmsg);
                    }
                });


            });
        });
        //End Select Item

        // swal for withholding
        $("#ShortDesc").change(function (e) {
            if ($(this).val() == "WORKS") {
                   swal("If you use this option withholding tax wil be deducted automatically.Otherwise select GOODS or SERVICE.");
            }

        });
        //End swal for with Holding

        //Manage VAT
        $(function () { // this will be called when the DOM is ready
            $("#UnitPrice").keyup(function () {
                var unit_price = parseFloat($("#UnitPrice").val().split(",").join(""));
                var quantity = parseFloat($("#Quantity").val().split(",").join(""));

                var total = unit_price * quantity;
                var checkedValue = $("#lpo #VatStatus:checked").val();

                if (checkedValue=="Applicable") {
                    var vat = parseFloat($("#VatPercentage").val());
                      var total_vat = total * vat / 100;
                      var grand_total = total_vat + unit_price * quantity;
                      var total_amount = grand_total.toFixed(2);
                      $("#TotalAmount").val(total_amount.toLocaleString('en'));

                } else {

                    $("#TotalAmount").val(total.toLocaleString('en'));

                     }



            });

        });
        $(function () { // this will be called when the DOM is ready
            $("#Quantity").keyup(function () {

                var unit_price = parseFloat($("#UnitPrice").val().split(",").join(""));
                if (unit_price > 0) {
                    var quantity = parseFloat($("#Quantity").val().split(",").join(""));
                    var total = unit_price * quantity;

                    var checkedValue = $("#lpo #VatStatus:checked").val();

                    if (checkedValue == "Applicable") {
                        var vat = parseFloat($("#VatPercentage").val());
                        var total_vat = total * vat / 100;
                        var grand_total = total_vat + unit_price * quantity;
                        var total_amount = grand_total.toFixed(2);
                        $("#TotalAmount").val(total_amount.toLocaleString('en'));

                    } else {
                        $("#TotalAmount").val(total.toLocaleString('en'));

                    }
                }

            });

        });

        $("#VatStatus").change(function (e) {
             $("#VatApplicable").val(e.target.checked ? "YES" : "NO");
            var unit_price = parseFloat($("#UnitPrice").val().split(",").join(""));
            var quantity = parseFloat($("#Quantity").val().split(",").join(""));
            if ($(this).is(":checked")) {
                if (unit_price >= 0 && quantity >= 0) {
                    var total = unit_price * quantity;
                    var vat = parseFloat($("#VatPercentage").val());
                    var total_vat = total * vat / 100;
                    var grand_total = total_vat + unit_price * quantity;
                    var total_amount = grand_total.toFixed(2);
                    $("#TotalAmount").val(total_amount.toLocaleString('en'));

                }

            } else {
                if (unit_price >= 0 && quantity >= 0) {
                    var total = unit_price * quantity;
                    $("#TotalAmount").val(total.toLocaleString('en'));

                }
            }
        });
            $(function () {
            $("#EditItem #ItemCategory").change(function () {
                var category = $(this).val();
                if (category) {
                  var url = '@Url.Action("GetItemClasses", "Procurement")';
                $.ajax({
                    type: "GET",
                    url: url,
                    data: { category : category },
                    success: function (data) {
                        if (data.response == "Success") {
                           $('#EditItem #ItemClassificationId').empty();
                            $('<option value="">Select...</option>').appendTo('#EditItem #ItemClassificationId');
                            $.each(data.itemClasses, function (i, d) {
                                $('<option value="' + d.ItemClassificationId + '">' + d.ClassificationDesc + '</option>').appendTo('#EditItem #ItemClassificationId');
                            });
                        }
                        else {
                           swal("Failed to fetch data due to DB Exception.Contact Technical supporter");
                        }
                    }
                });
                }

            });
        });

        $(function () { // this will be called when the DOM is ready
            $("#EditItem #UnitPrice").keyup(function () {
                var unit_price = parseFloat($("#EditItem #UnitPrice").val().split(",").join(""));
                var quantity = parseFloat($("#EditItem #Quantity").val().split(",").join(""));
                var total = unit_price * quantity;
                var checkedValue = $("#EditItem #VatStatus:checked").val();

                if (checkedValue == "Applicable") {
                    var vat = parseFloat($("#VatPercentage").val());
                    var total_vat = total * vat / 100;
                    var grand_total = total_vat + unit_price * quantity;
                    var total_amount = grand_total.toFixed(2);
                    $("#EditItem #TotalAmount").val(total_amount.toLocaleString('en'));



                } else {

                    $("#EditItem #TotalAmount").val(total.toLocaleString('en'));

                }



            });

        });
        $(function () { // this will be called when the DOM is ready
            $("#EditItem #Quantity").keyup(function () {

                var unit_price = parseFloat($("#EditItem #UnitPrice").val().split(",").join(""));
                if (unit_price > 0) {
                    var quantity = parseFloat($("#EditItem #Quantity").val().split(",").join(""));
                     var total = unit_price * quantity;

                     var checkedValue = $("#EditItem #VatStatus:checked").val();

                    if (checkedValue == "Applicable") {
                        var vat = parseFloat($("#VatPercentage").val());
                        var total_vat = total * vat / 100;
                        var grand_total = total_vat + unit_price * quantity;

                        var total_amount = grand_total.toFixed(2);
                        $("#EditItem #TotalAmount").val(total_amount.toLocaleString('en'));

                    } else {
                        $("#EditItem #TotalAmount").val(total.toLocaleString('en'));
                    }
                }

            });

        });
        $("#EditItem #VatStatus").change(function (e) {
            var unit_price = parseFloat($("#EditItem #UnitPrice").val().split(",").join(""));
            var quantity = parseFloat($("#EditItem #Quantity").val().split(",").join(""));
            if ($(this).is(":checked")) {
                if (unit_price >= 0 && quantity >= 0) {
                    var total = unit_price * quantity;
                    var vat = parseFloat($("#VatPercentage").val());
                    var total_vat = total * vat / 100;
                    var grand_total = total_vat + unit_price * quantity;

                    var total_amount = grand_total.toFixed(2);
                    $("#EditItem #TotalAmount").val(total_amount.toLocaleString('en'));

                }

            } else {
                if (unit_price >= 0 && quantity >= 0) {
                    var total = unit_price * quantity;
                    $("#EditItem #TotalAmount").val(total.toLocaleString('en'));

                }
            }
        });
        //End Manage VAT


        $("#gl_inv_items_charge").on('click', function () {
            var itemIds = [];
            var sum = 0;
            $(".inventory input:checkbox.checkItem").each(function () {
                if ($(this).prop("checked")) {
                    itemIds.push($(this).val());
                    sum = sum + parseFloat($(this).val());
                    //swal($(this).attr('id'));
                    //$(this).hide();
                }

            });

            if (itemIds.length == 0) {

                swal("No Item Selected!");
                return;
            } else {
                $("#search_gl").val("");
                $("#total_line_amount").val("");
                $("#total_items_amount").val(sum.toLocaleString('en'));
                $("#difference").val(sum.toLocaleString('en'));
                dt_search_gl_item.fnClearTable();
                $("#glItemsModal").modal();


            }


        });


        var CountGLs = parseInt($("#CountGLAccounts").val());
        if (CountGLs >= 0) {
            $(".gl_count").text(CountGLs);
        }
        $("#EditItem").on('submit', function (e) {
            e.preventDefault();
            var item_class = $("#EditItem #ItemClassificationId").val();
            if (!item_class) {
                swal("Please select Item Class !");
                return
            }
            var itemDesc = $("#EditItem #ItemDesc").val();
            if (!itemDesc) {
                swal("Please enter item !");
                return
            }
            var uom = $("#EditItem #UOM").val();
            if (!uom) {
                swal("Please select Unit of measure !");
                return
            }

            var quantity = $("#EditItem #Quantity").val().split(",").join("");
            if (!quantity) {
                swal("Please enter quantity of items !");
                return
            }
            if (quantity == 0) {
                swal("Please quantity can not be zero !");
                return
            }

            var unitPrice = parseFloat($("#EditItem #UnitPrice").val().split(",").join(""));
            if (!unitPrice) {
                swal("Please enter unit price !");
                return
            }
            if (unitPrice == 0) {
                swal("Please Unit price can not be zero !");
                return
            }
            if (unitPrice < 0) {
                swal("Please Unit price can not be negative !");
                return
            }
            var id = $("#EditItem #PurchaseOrderDetailId").val();
            var totalAmount = parseFloat($("#EditItem #TotalAmount").val().split(",").join(""));
            if (totalAmount == 0) {
                swal("Please Total Amount can not be zero !");
                return
            }
            if (totalAmount < 0) {
                swal("Please Total Amount can not be negative !");
                return
            }
            var vatStatus = "";
            var checkedValue = $("#EditItem #VatStatus:checked").val();
            if (checkedValue == "Applicable") {
                vatStatus = "Applicable";
            } else {
                vatStatus = "Excempted";
            }
            if (totalAmount > 0) {
            var formData = { "PurchaseOrderDetailId":id, "ItemClassificationId": item_class, "Quantity": quantity, "UnitPrice": unitPrice, "UOM": uom, "ItemDesc": itemDesc, "VatStatus": vatStatus, "TotalAmount": totalAmount };
            $("#btn_save_edit_item").prop('disabled', true);
            var url = '@Url.Action("UpdateItem", "Procurement")';
            $.ajax(
{
    type: "POST",
    url: url,
    data: formData,
    success: function (data) {
        $("#btn_save_edit_item").prop('disabled', false);
        if (data.response == "Success") {
            $("#EditItem #VatStatus:checked").prop("checked", false);

              swal("Updated successfully!", { icon: "success" })
                              .then((value) => {

            $('#editItemModal').modal('hide');
             UpdateItemsTable(data.itemsList);
             UpdateChargingTable(data.notChagedList, data.itemCategory);
             UpdateCoasTable(data.coaList);
                                              });


        }
        else if (data == "Exceed") {

            swal("Not saved, Total Items Amount can not exeed LPO Amount ");
            return;
        }
        else if (data == "Noquantity") {

            swal("Not saved, Quantity can not be zero also must be an integer number ");
            return;
        }
    else {

            swal(data);
            return;
    }
    },
    error: function (xhr) {
        $("#btn_save_edit_item").prop('disabled', false);
        swal(error);

    },

});
        } else {
                    swal("Please Total Amount must be money");
    }
        });


    });



        //SHOW LOADER ICON
        $(document).ajaxStart(function () {
            $(".loadingImg").show();

        });
        //HIDE LOADER ICON
        $(document).ajaxStop(function () {
            $(".loadingImg").hide();
        });
        //CHECK ALL ITEMS
        $(document).on('click', '.cbCheckAllItems', function () {
            $(".inventory .checkItem").prop('checked',
                $(this).prop('checked'));
        });
        $(document).on('click', '.cbCheckAllItems2', function () {
            $(".nonInventory .checkItem").prop('checked',
                $(this).prop('checked'));
        });
        //COMMA SEPARATOR ON INSERTING ITEM CHARGE
        $(document).on('keyup', '.charge', function () {
            $(this).val(inputThousandSeparator(this.value))
        });
        //Select Item
        $(document).on('click', '.pick_item', function () {
            var item = $(this).data('item');
            $("#ItemDesc").val(item);
            $('#itemsModal').modal('hide');
        });
        $(document).on('click', '.editItemModal', function () {
            var id = $(this).data('id');
            $("#EditItem #PurchaseOrderDetailId").val(id);
            var classid = $(this).data('classid');
            $("#EditItem #ItemClassificationId").val(classid);
            var category = $(this).data('category');
            $("#EditItem #ItemCategory").val(category);
            var item = $(this).data('item');
            $("#EditItem #ItemDesc").val(item);
            var uom = $(this).data('uom');
            $("#EditItem #UOM").val(uom);
            var quantity = $(this).data('quantity');
            $("#EditItem #Quantity").val(quantity);
            var unitprice = $(this).data('unitprice');
            $("#EditItem #UnitPrice").val(unitprice.toLocaleString('en'));
            var totalamount = $(this).data('totalamount');
            $("#EditItem #TotalAmount").val(totalamount.toLocaleString('en'));
            var total=quantity * unitprice;
            if (total == totalamount) {
                 $("#EditItem #VatStatus").prop('checked',false)
            }else{
         $("#EditItem #VatStatus").prop('checked',true)
        }

        });


    //MANAGE ITEMS CHARGE

    var form_data_status = [];
    var all_amounts = {};
    var total_balance = 0;
    var glItemsCharges = [];
    var sum_total = 0;

    function amountChanged(e) {

        var max_value = parseFloat(e.max);
        var entered_value = parseFloat(e.value.split(",").join(""));
        if (entered_value >= 0){
            if (max_value >= entered_value) {

                sum_total = 0;

                var i = 0;

                $("#dt_search_gl_item tr").each(function () {


                    if (i > 0) {
                        var value = $(this).children().eq(5).find("input").val().trim().split(",").join("");
                        if (value != "") {

                            var expense_amount = parseFloat($(this).children().eq(3).text().split(",").join(""));

                            var amount = parseFloat(value);

                            //INSERT INTO ARRAY
                            var line = "";
                            line = $(this).children().eq(1).text().split("-").join("|");
                            var item_description = $(this).children().eq(2).text();
                            var expense_amount = parseFloat($(this).children().eq(3).text().split(",").join(""));
                            var funding_ref = $(this).children().eq(4).text();

                            if (glItemsCharges.length > 0) {

                                //CHECK IF EXIST IN THE ARRAY
                                var found = false;
                                for (var j = 0; j < glItemsCharges.length; j++) {
                                    if (glItemsCharges[j].ExpenditureLineItem == line && glItemsCharges[j].FundingReference == funding_ref) {
                                        glItemsCharges[j].BaseAmountDetail = amount;
                                        found = true;
                                    }

                                }

                                if (!found) {

                                        glItemsCharges.push({
                                            "ExpenditureLineItem": line,
                                            "ItemDescription": item_description,
                                            "ExpenseAmount": expense_amount,
                                            "FundingReference": funding_ref,
                                            "BaseAmountDetail": amount
                                        });


                                }


                            } else {

                                    glItemsCharges.push({
                                        "ExpenditureLineItem": line,
                                        "ItemDescription": item_description,
                                        "ExpenseAmount": expense_amount,
                                        "FundingReference": funding_ref,
                                        "BaseAmountDetail": amount
                                    });


                            }




                        }
                    }


                    i++;
                });

                for (var j = 0; j < glItemsCharges.length; j++) {

                    sum_total = sum_total + glItemsCharges[j].BaseAmountDetail;
                    console.log("length" + glItemsCharges[j].ExpenditureLineItem + ":" + glItemsCharges[j].BaseAmountDetail);

                }

                var total_items_value = parseFloat($("#total_items_amount").val().split(",").join(""));
                var balance = total_items_value - sum_total;
                if (balance >= 0) {
                    $("#total_line_amount").val(sum_total.toLocaleString('en'));
                    $("#difference").val(balance.toLocaleString('en'));
                }
                else {
                    swal("Total Line Amount can not exceed " + total_items_value.toLocaleString('en'));
                    e.value = "";


                }
            } else {
                swal("Expense Amount can not exceed " + max_value.toLocaleString('en'));
                e.value = "";


            }
        }
    }


    $("#btn_save_items_charge").click(function () {
        var total_items_value = parseFloat($("#total_items_amount").val().split(",").join(""));
            sum_total = sum_total.toFixed(2);
        if (glItemsCharges.length == 0) {
            swal("Please Enter Amount !");
        }
        else if (total_items_value != sum_total) {
            swal("Please Total Line Amount must be equal to " + total_items_value.toLocaleString('en') + " !");
        }
        else {
            $('#glItemsModal').modal('hide');
            var itemIds = [];

            if (itemCategory == "Inventory") {

                $(".inventory input:checkbox.checkItem").each(function () {
                    if ($(this).prop("checked")) {
                        itemIds.push($(this).attr('id'));
                    }
                });

            } else {

                $(".nonInventory input:checkbox.checkItem").each(function () {
                    if ($(this).prop("checked")) {
                        itemIds.push($(this).attr('id'));
                    }
                });

            }

            var lpoId = $("#PurchaseOrderId").val();
            var accrual = $("#Accrual").val();
            var subBudgetClass = $("#SubBudgetClass").val();

            var instCode="UNKNOWN";
            var subWarrantCode= "UNKNOWN";
            if ($("#IsStPayment").val()) {
             instCode= $("#IsStPayment").is(":checked") ? $("#ParentInstitutionCode").val() : "UNKNOWN";
             subWarrantCode= $("#IsStPayment").is(":checked") ? $("#SubWarrantCode").val() : "UNKNOWN";
            }

            var form_data = {
                "PurchaseOrderId": lpoId,
                "Accrual": accrual,
                "SubBudgetClass": subBudgetClass,
                "ParentInstitutionCode": instCode,
                "SubWarrantCode": subWarrantCode,
                "PurchaseOrderIds": itemIds,
                "VoucherDetails": glItemsCharges
            }
            $('#bind_inv_gl').hide();
            $("#btn_save_items_charge").prop('disabled', true);
            var url = '@Url.Action("ItemsCharge", "Procurement")';
            $.ajax(
{
    type: "POST",
    url: url,
    data: form_data,
    success: function (response) {
        $("#btn_save_items_charge").prop('disabled', false);
            if (response.response == "Success") {
                 swal("GL Account(s) assigned successfully", { icon: "success" })
                            .then((value) => {
                                UpdateCoasTable(response.coaList);
                                UpdateChargingTable(response.notChagedList, response.itemCategory);
                            });
                                        }
           else {
               swal(response);
            }
    },
    error: function (xhr) {
        $("#btn_save_items_charge").prop('disabled', false);
        //console.log(xhr.responseText);
        swal("An error has occured, contact system support");
        $("#divLoader").hide();
    },

});

        }

    });
    //END MANAGE ITEMS CHARGE

    //$("#PurchaseOrderAmount").on("keyup input paste", function () {
    //    $("#PurchaseOrderAmount").val(inputThousandSeparator(this.value))
    //});
    var OldVal = 0
    function inputThousandSeparator(NewVal) {
        if (NewVal) {
            try {
                NewVal = parseFloat(NewVal.split(",").join(""))
                if (typeof NewVal == 'number' && !Number.isNaN(NewVal)) {
                    OldVal = NewVal;
                    return NewVal.toLocaleString()
                } else {
                    return OldVal
                }
            } catch (e) {
                console.log(e)
            }
        }
    }
    //function numberWithCommas(number) {
    //    var parts = number.toString().split(".");
    //    parts[0] = parts[0].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    //    return parts.join(".");
    //}
    function numberWithCommas(x) {
        return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    }
    function numberWithCommas(x) {
        return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    }
    function isNumber(n) {
        'use strict';
        n = n.replace(/\./g, '').replace(',', '.');
        return !isNaN(parseFloat(n)) && isFinite(n)
        }

    $("#PurchaseOrderAmount").autoNumeric('init');
    $("#UnitPrice").autoNumeric('init');
    $("#EditItem #UnitPrice").autoNumeric('init');
    $("#Quantity").autoNumeric('init');
    $("#EditItem #Quantity").autoNumeric('init');
    $("#PurchaseOrderDesc").on('keypress', function (event) {
        var regex = new RegExp("^[0-9a-zA-Z \b]+$");
        var key = String.fromCharCode(!event.charCode ? event.which : event.charCode);
        if (!regex.test(key)) {
            event.preventDefault();
            return false;
        }
    });

    $("#ItemDesc").on('keypress', function (event) {
        var regex = new RegExp("^[0-9a-zA-Z \b]+$");
        var key = String.fromCharCode(!event.charCode ? event.which : event.charCode);
        if (!regex.test(key)) {
            event.preventDefault();
            return false;
        }
    });
    $("#EditItem #ItemDesc").on('keypress', function (event) {
        var regex = new RegExp("^[0-9a-zA-Z \b]+$");
        var key = String.fromCharCode(!event.charCode ? event.which : event.charCode);
        if (!regex.test(key)) {
            event.preventDefault();
            return false;
        }
    });
       $('#PurchaseOrderDesc').bind('copy paste cut', function (e) {
            e.preventDefault();
            swal('Paste option is disabled !!');
       });
        $("#IsAccrualLpo").change((e) => {
            $("#Accrual").val(e.target.checked ? "YES" : "NO");
            $("#BalanceTitle").text(e.target.checked ? "Budget Balance" : "Fund Balance");
        });
        var accrual = '@(Model.Accrual)';
        if (accrual=="YES") {
            $("#IsAccrualLpo").prop("checked", true);
            $("#BalanceTitle").text("Budget Balance");
        }

        var isStPayment = '@(Model.IsStPayment)';
        if (isStPayment=="True") {
            $("#IsStPayment").prop("checked", true);
            $("#StPayment").val("YES");
        }
        else {
            $("#StPayment").val("NO");
             $(".IsStPayment").toggle(false);
        }

        $("#IsStPayment").change((e) => {
            $("#StPayment").val(e.target.checked ? "YES" : "NO")
            if (e.target.checked) {
                $(".IsStPayment").toggle(true)
                GetParentInstitutions();
            } else {
                $(".IsStPayment").toggle(false)
            }
        });

        function GetParentInstitutions() {
            $.ajax({
                type: "GET",
                url: "@Url.Action("GetParentInstitutions", "PaymentVoucher")",
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {
                if (response.data) {
                      $('#ParentInstitutionCode').empty();
                      $('<option value="">Select...</option>').appendTo('#ParentInstitutionCode');
                      $.each(response.data, function (i, d) {
                       $('<option value="' + d.ParentInstitutionCode + '">' + d.ParentInstitutionCode+'-'+d.ParentInstitutionName+ '</option>').appendTo('#ParentInstitutionCode');
                        });
                }
            },
            failure: function (error) {
                swal(error);
            }
        });
        }

        $("#ParentInstitutionCode").change(function () {
            var institutionCode = $(this).val();
            if (institutionCode) {
                GetSubWarrants(institutionCode);
            }

        });

        function GetSubWarrants(institutionCode) {
            $.ajax({
                type: "GET",
                url: "@Url.Action("GetSubWarrants", "PaymentVoucher")",
                data: { institutionCode },
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {
                if (response.data) {
                       $('#SubWarrantCode').empty();
                      $('<option value="">Select...</option>').appendTo('#SubWarrantCode');
                      $.each(response.data, function (i, d) {
                       $('<option value="' + d.SubWarrantCode + '">' + d.SubWarrantCode+'-'+d.SubWarrantDescription+ '</option>').appendTo('#SubWarrantCode');
                        });
                }
            },
            failure: function (error) {
                swal(error);
            }
        });
        }
         //DESELECT GL ACCOUNTS
        var deselectGL = function (id) {
                swal({
                title: 'Confirmation',
                text: "Do you what to deselect Note:All item(s) charged by this GL will be uncharged !",
                buttons: [
                  'No',
                  'Yes'
                ],
            }).then(function (isConfirm) {
                if (isConfirm) {
                    var url = '@Url.Action("DeselectGLAccount", "Procurement")';
                    $.ajax(
        {
            type: "POST",
            url: url,
            data: { id: id },
            success: function (data) {
                if (data.response == "Success") {
                       swal("GL Account successfully deselected!", { icon: "success" })
                                              .then((value) => {
                                UpdateItemsTable(data.itemsList);
                                UpdateChargingTable(data.notChagedList, data.itemCategory);
                                UpdateCoasTable(data.coaList);
                          });

                }
                else {

                    swal(data);
                }
            },
            error: function (xhr) {
                swal(error);
            },

        });
                } else {
                    swal("Cancelled", "No change was made");
                }
            });
        }

        //CANCEL iTEM
        var cancelItem = function (id) {
            swal({
                title: 'Confirmation',
                text: "Do you what to cancel this item  ?",
                buttons: [
                  'No',
                  'Yes'
                ],
            }).then(function (isConfirm) {
                if (isConfirm) {
                    var url = '@Url.Action("DeleteItem", "Procurement")';
                    $.ajax(
        {
            type: "POST",
            url: url,
            data: { id: id },
            success: function (data) {
                if (data.response == "Success") {
                     swal("Deleted  successfully!", { icon: "success" })
                         .then((value) => {
                     $('#bind_inv_gl').hide();
                     UpdateItemsTable(data.itemsList);
                     UpdateChargingTable(data.notChagedList, data.itemCategory);
                     UpdateCoasTable(data.coaList);
                                              });


                }
                else {

                    swal(data);
                }
            },
            error: function (xhr) {
                swal(error);
                $("#divLoader").hide();
            },

        });
                } else {
                    swal("Cancelled", "No change was made");
                }
            });

            }
    </script>
}

