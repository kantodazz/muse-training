@model IFMIS.Areas.IFMISTZ.Models.ReceivingSummaryVM
@{
    ViewBag.Title = "Receiving Attachment";
    var i = 0;
    var j = 0;
    var k = 0;
}



<div id="content" style="margin: 5px; padding-top: 30px">

    <div class="row">


    </div>


    <!-- widget grid -->
    <section id="widget-grid" class="">


        <!-- START ROW -->

        <div class="row">

            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">

                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">

                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2>Receiving Attachments</h2>

                    </header>


                    <div>
                        <div class="widget-body " style="padding-top:10px;width:100%">                    
                            <fieldset class="scheduler-border">
                                <legend class="scheduler-border">Receiving Details</legend>
                                <div class="row"> <div class="col-sm-6 col-md-6 col-lg-6"><strong>Receiving Number&nbsp;:</strong>&nbsp;@Html.DisplayFor(model => model.ReceivingNumber)</div><div class="col-sm-6 col-md-6 col-lg-6"><strong>LPO Number&nbsp;:</strong>&nbsp;@Html.DisplayFor(model => model.PurchaseOrderNo) </div></div>
                                <div class="row"> <div class="col-sm-6 col-md-6 col-lg-6"><strong>LPO Description&nbsp;:</strong>&nbsp;@Html.DisplayFor(model => model.PurchaseOrderDesc) </div><div class="col-sm-6 col-md-6 col-lg-6"><strong>Payee Name&nbsp;:</strong>&nbsp;@Html.DisplayFor(model => model.SupplierName)</div></div>
                                <div class="row">  <div class="col-sm-6 col-md-6 col-lg-6"><strong>Receiving Amount&nbsp;:</strong>&nbsp;@Html.DisplayFor(model => model.ReceivedAmount) @Html.DisplayFor(model => model.Currency)</div><div class="col-sm-6 col-md-6 col-lg-6"><strong>SBC&nbsp;:</strong>&nbsp;@Html.DisplayFor(model => model.SubBudgetClass)</div></div>
                                @if (Model.ParentInstitutionCode != null)
                                {
                                    <div class="row">  <div class="col-sm-6 col-md-6 col-lg-6"><strong>Parent Institution:</strong>&nbsp;@Html.DisplayFor(model => model.ParentInstitutionCode) - @Html.DisplayFor(model => model.ParentInstitutionName)</div><div class="col-sm-6 col-md-6 col-lg-6"><strong>SubWarant:</strong>&nbsp;@Html.DisplayFor(model => model.SubWarrantCode) - @Html.DisplayFor(model => model.SubWarrantDescription)</div></div>
                                }
                                <div class="row"> <div class="col-sm-6 col-md-6 col-lg-6"><strong>Status&nbsp;:</strong>&nbsp;@Html.DisplayFor(model => model.OverallStatus)</div><div class="col-sm-6 col-md-6 col-lg-6"></div></div>
                            </fieldset>
                            @Html.HiddenFor(model => model.ParentInstitutionCode)
                            @Html.HiddenFor(model => model.SubWarrantCode)
                            <div align="center">
                                <img src="~/Media/Images/ajax_loader.gif" class="loadingImg" style="display:none" />
                            </div>

                            <div class="jarviswidget" data-widget-colorbutton="false" data-widget-colorbutton="false" data-widget-editbutton="false" data-widget-togglebutton="false" data-widget-deletebutton="false" data-widget-fullscreenbutton="false" data-widget-custombutton="false">

                                <header>
                                    <h2><strong></strong> <i></i></h2>

                                    <ul id="widget-tab-1" class="nav nav-tabs pull-right">
                                        <li class="active">

                                            <a data-toggle="tab" href="#hr1"> <i class="fa fa-lg fa-arrow-circle-o-down"></i> <span class="hidden-mobile hidden-tablet">Inventory Items List<span class="badge inbox-badge margin-right-13 inv_items_count" style="background-color:#2196F3">@Model.ReceivingList.Where(a => a.ItemClassification.ItemCategory == "Inventory" && a.ItemCharged !="Yes").Count()</span></span> </a>

                                        </li>
                                        <li>

                                            <a data-toggle="tab" href="#hr2"> <i class="fa fa-lg fa-arrow-circle-o-down"></i> <span class="hidden-mobile hidden-tablet">Non Inventory Items List<span class="badge inbox-badge margin-right-13 noinv_items_count" style="background-color:#2196F3">@Model.ReceivingList.Where(a => a.ItemClassification.ItemCategory != "Inventory" && a.ItemCharged != "Yes").Count()</span></span> </a>

                                        </li>

                                        <li>
                                            <a data-toggle="tab" href="#hr3"> <i class="fa fa-lg fa-arrow-circle-o-up"></i> <span class="hidden-mobile hidden-tablet"> GL Accounts List <span class="badge inbox-badge margin-right-13" style="background-color:#2196F3">@Model.ReceivingCoas.Count()</span></span></a>
                                        </li>

                                    </ul>

                                </header>

                                <!-- widget div-->
                                <div>

                                    <!-- widget edit box -->
                                    <div class="jarviswidget-editbox">
                                        <!-- This area used as dropdown edit box -->

                                    </div>
                                    <!-- end widget edit box -->
                                    <!-- widget content -->
                                    <div class="widget-body no-padding">

                                        <!-- widget body text-->

                                        <div class="tab-content padding-10">
                                            <div class="tab-pane fade in active" id="hr1">
                                                <div class="widget-body no-padding">

                                                    <br />
                                                    <div class="row">

                                                        <div class="col-xs-1 col-sm-1 col-md-1 col-lg-1">
                                                        </div>

                                                        <div class="col-xs-8 col-sm-4 col-md-4 col-lg-4">

                                                        </div>
                                                        <div class="col-xs-3 col-sm-7 col-md-7 col-lg-7 text-right">

                                                            @if (Model.ReceivingList.Where(a => a.ItemClassification.ItemCategory == "Inventory" && a.ItemCharged != "Yes").Count() > 0)
                                                            {
                                                                <button type="button" class="btn btn-info" id="gl_inv_items_charge">
                                                                    <i class="fa fa-plus"></i> <span class="hidden-mobile">Add GL Account</span>
                                                                </button>
                                                            }
                                                        </div>

                                                    </div>

                                                    <br />



                                                    <div class="custom-scroll" style="height:170px; overflow-y: scroll;">


                                                        <table align="center" class="table table-bordered table-hover table-condensed" id="itemsCharge" style="width:97%">
                                                            @if (Model.ReceivingList.Where(a => a.ItemClassification.ItemCategory == "Inventory" && a.ItemCharged != "Yes").Count() > 0)
                                                            {
                                                                <thead><tr><th style="text-align: right" colspan="7"><input type="checkbox" class="cbCheckAllItems" /></th></tr></thead>

                                                                <thead><tr><th style="text-align: center">#</th><th style="text-align: left">Item </th><th>Class</th><th style="text-align: center">Quantity</th><th style="text-align: center">UOM</th><th style="text-align: right">Total Amount</th><th style="text-align:center;width:10%">Select</th></tr></thead>
                                                                <tbody>
                                                                    @foreach (var item in Model.ReceivingList.Where(a => a.ItemClassification.ItemCategory == "Inventory" && a.ItemCharged != "Yes"))
                                                                    {
                                                                        j++;

                                                                        <tr><td align="center">@j</td><td>@Html.DisplayFor(modelItem => item.ItemDesc)</td><td>  @Html.DisplayFor(modelItem => item.ItemClassification.ItemCategory)</td><td align="center">@Html.DisplayFor(modelItem => item.ReceivedQuantity)</td><td align="center">@Html.DisplayFor(modelItem => item.UOM)</td><td align="right">@Html.DisplayFor(modelItem => item.Amount)</td>   <td style="text-align: center" class="inventory"><input type="checkbox" value=@item.Amount class="checkItem" id=@item.ReceivingId></td></tr>

                                                                    }
                                                                    <tr><td align="right" colspan="5"><strong>Grand Total</strong></td><td align="right"><strong> @Convert.ToDecimal(Model.ReceivingList.Where(a => a.ItemClassification.ItemCategory == "Inventory").Select(a => a.Amount).DefaultIfEmpty(0).Sum()).ToString("#,##0.00/=")</strong></td><td></td></tr>

                                                                </tbody>
                                                            }
                                                        </table>

                                                    </div>



                                                </div>

                                            </div>
                                            <div class="tab-pane fade in" id="hr2">
                                                <div class="widget-body no-padding">

                                                    <br />
                                                    <div class="row">

                                                        <div class="col-xs-1 col-sm-1 col-md-1 col-lg-1">
                                                        </div>

                                                        <div class="col-xs-8 col-sm-4 col-md-4 col-lg-4">

                                                        </div>
                                                        <div class="col-xs-3 col-sm-7 col-md-7 col-lg-7 text-right">
                                                            @if (Model.ReceivingList.Where(a => a.ItemClassification.ItemCategory != "Inventory" && a.ItemCharged != "Yes").Count() > 0)
                                                            {
                                                                <button type="button" class="btn btn-info" id="gl_noinv_items_charge">
                                                                    <i class="fa fa-plus"></i> <span class="hidden-mobile">Add GL Account</span>
                                                                </button>
                                                            }
                                                        </div>

                                                    </div>

                                                    <br />



                                                    <div class="custom-scroll" style="height:170px; overflow-y: scroll;">


                                                        <table align="center" class="table table-bordered table-hover table-condensed" id="itemsCharge" style="width:97%">
                                                            @if (Model.ReceivingList.Where(a => a.ItemClassification.ItemCategory != "Inventory" && a.ItemCharged != "Yes").Count() > 0)
                                                            {
                                                                <thead><tr><th style="text-align: right" colspan="7"><input type="checkbox" class="cbCheckAllItems2" /></th></tr></thead>

                                                                <thead><tr><th style="text-align: center">#</th><th style="text-align: left">Item </th><th>Class</th><th style="text-align: center">Quantity</th><th style="text-align: center">UOM</th><th style="text-align: right">Total Amount</th><th style="text-align:center;width:10%">Select</th></tr></thead>
                                                                <tbody>
                                                                    @foreach (var item in Model.ReceivingList.Where(a => a.ItemClassification.ItemCategory != "Inventory" && a.ItemCharged != "Yes"))
                                                                    {
                                                                        j++;

                                                                        <tr><td align="center">@j</td><td>@Html.DisplayFor(modelItem => item.ItemDesc)</td><td>  @Html.DisplayFor(modelItem => item.ItemClassification.ItemCategory)</td><td align="center">@Html.DisplayFor(modelItem => item.ReceivedQuantity)</td><td align="center">@Html.DisplayFor(modelItem => item.UOM)</td><td align="right">@Html.DisplayFor(modelItem => item.Amount)</td>   <td style="text-align: center" class="nonInventory"><input type="checkbox" value=@item.Amount class="checkItem" id=@item.ReceivingId></td></tr>

                                                                    }
                                                                    <tr><td align="right" colspan="5"><strong>Grand Total</strong></td><td align="right"><strong> @Convert.ToDecimal(Model.ReceivingList.Where(a => a.ItemClassification.ItemCategory != "Inventory").Select(a => a.Amount).DefaultIfEmpty(0).Sum()).ToString("#,##0.00/=")</strong></td><td></td></tr>

                                                                </tbody>
                                                            }
                                                        </table>

                                                    </div>



                                                </div>

                                            </div>
                                            <div class="tab-pane fade" id="hr3">
                                                <div class="widget-body no-padding">

                                                    <br />
                                                    <div class="row" id="gl_search">

                                                        <div class="col-xs-9 col-sm-3 col-md-3 col-lg-3">
                                                            <div class="input-group">

                                                            </div>
                                                        </div>


                                                    </div>


                                                    <div class="custom-scroll" style="height:170px; overflow-y: scroll;">


                                                        <table align="center" class="table table-bordered table-hover table-condensed" id="gl_Accounts" style="width:93%">
                                                            @if (Model.ReceivingCoas.Count() > 0)
                                                            {
                                                                <thead><tr><th style="text-align: center">#</th><th style="text-align: left">Item Description</th><th>Expenditure Line Item</th><th style="text-align: left">Funding Reference</th><th style="text-align: right">Amount</th><th style="text-align: center">Action</th></tr></thead>
                                                                <tbody>
                                                                    @foreach (var item in Model.ReceivingCoas)
                                                                    {
                                                                        k++;
                                                                        <tr><td align="center">@k</td><td>@Html.DisplayFor(modelItem => item.GLAccount)</td><td>@Html.DisplayFor(modelItem => item.GLAccountDesc)</td><td>@Html.DisplayFor(modelItem => item.FundingReference)</td><td align="right">@Html.DisplayFor(modelItem => item.ExpenseAmount)</td><td style="text-align: center"><div class="btn-group"><button type="button" class="btn  btn-info btn-xs dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><span class="caret"></span><span class="sr-only">Toggle Dropdown</span></button> <ul class="dropdown-menu"> <li><a href="#" onclick="deselectGL(@item.ReceivingCoaId)"><i class="fa fa-edit"></i>Deselect</a></li></ul></div></td></tr>


                                                                    }
                                                                    <tr><td align="right" colspan="4"><strong>Total</strong></td><td align="right"><strong>@Convert.ToDecimal(Model.ReceivingCoas.Select(a => a.ExpenseAmount).DefaultIfEmpty(0).Sum()).ToString("#,##0.00/=")</strong></td><td></td></tr>
                                                                </tbody>
                                                            }
                                                        </table>


                                                    </div>



                                                </div>

                                            </div>
                                        </div>

                                        <!-- end widget body text-->
                                        <!-- widget footer -->
                                        <div class="widget-footer text-right">

                                            <span class="onoffswitch-title">

                                            </span>


                                        </div>
                                        <!-- end widget footer -->

                                    </div>
                                    <!-- end widget content -->

                                </div>
                                <!-- end widget div -->

                            </div>
                           
                            <div class="col-md-offset-1">
                                <a href="@Url.Action("ReceivingList","Procurement")" style="margin-right:5px" class="btn btn-info pull-left"><i class="glyphicon glyphicon-arrow-left"></i> Back  </a>

                            </div>

                        </div>               <br />
                        <br />


                    </div>


                </div>
            </article>

        </div>
    </section>

</div>

<!----------- Search  GL----------------->
<div class="modal fade" id="glItemsModal" style="left:4%">

    <div class="modal-dialog" style="width:80%;">
        <div class="modal-content panel-info">
            <div class="modal-header panel-heading">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h3 class="modal-title"> Search Gl Item(s)</h3>
            </div>
            <div class="modal-body">
                <table>
                    <tr>
                        <td style="padding:5px">Total Items Amount</td>
                        <td style="padding:5px">
                            <input type="text" disabled id="total_items_amount">
                        </td>

                        <td style="padding:5px">Total Line Amount</td>
                        <td style="padding:5px">
                            <input value="0" type="text" disabled id="total_line_amount">
                        </td>

                        <td style="padding:5px">Difference</td>
                        <td style="padding:5px">
                            <input value="0" type="text" disabled id="difference" style="width:250px">
                        </td>
                    </tr>
                </table>
                <div>
                    <div class="row" style="padding-top:1%;padding-bottom:1%">
                        <div class="col-md-6">
                        </div>
                        <div class="col-md-6">
                            <div class="search-container " style="float:right">
                                <i class="fa fa-search search-icon"></i>
                                <input type="search" name="search" placeholder="Search..." id="search_gl">
                            </div>
                        </div>
                    </div>
                    <div align="center">
                        <img src="/Media/Images/ajax_loader.gif" class="loadingImg" />
                    </div>
                    <table id="dt_search_gl_item" class="table table-striped table-bordered table-hover table-condensed">
                        <thead>
                            <tr>
                                <th>#</th>
                                <th>Expenditure Line Item</th>
                                <th>Item Description</th>
                                <th id="BalanceTitle">Fund Balance</th>
                                <th>Funding Reference</th>
                                <th>SubLevelCode</th>
                                <th>Expense Amount</th>
                            </tr>
                        </thead>
                    </table>

                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-info" id="btn_save_items_charge">
                        <i class="fa fa-save"></i>Save
                    </button>
                    <button class="btn btn-info" data-dismiss="modal">
                        <i class="fa  fa-times"></i>Cancel
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>



@section pagespecific {
    <!-- PAGE RELATED PLUGIN(S) -->

    <script type="text/javascript">
        var itemCategory = null;
        var all_amounts = {};
        var total_balance = 0;
        var glItemsCharges = [];
        var sum_total = 0;

        $("#gl_inv_items_charge").on('click', function () {
            glItemsCharges = [];
            sum_total = 0;
            var itemIds = [];
            var sum = 0;
            itemCategory = "Inventory";
            $(".inventory input:checkbox.checkItem").each(function () {
                if ($(this).prop("checked")) {
                    itemIds.push($(this).val());
                    sum = sum + parseFloat($(this).val());
                    //swal($(this).attr('id'));
                    //$(this).hide();
                }

            });

            if (itemIds.length == 0) {

                swal("No Item Selected!");
                return;
            } else {
                $("#search_gl").val("");
                $("#total_line_amount").val("");
                $("#total_items_amount").val(sum.toLocaleString('en'));
                $("#difference").val(sum.toLocaleString('en'));
                dt_search_gl_item.fnClearTable();
                $("#glItemsModal").modal();
                searchGLTableUpdate();

            }


        });

        $("#gl_noinv_items_charge").on('click', function () {
            glItemsCharges = [];
            sum_total = 0;
            var itemIds = [];
            var sum = 0;
            itemCategory = "NonInventory";
            $(".nonInventory input:checkbox.checkItem").each(function () {
                if ($(this).prop("checked")) {
                    itemIds.push($(this).val());
                    sum = sum + parseFloat($(this).val());
                    //swal($(this).attr('id'));
                    //$(this).hide();
                }

            });

            if (itemIds.length == 0) {

                swal("No Item Selected!");
                return;
            } else {
                $("#search_gl").val("");
                $("#total_line_amount").val("");
                $("#total_items_amount").val(sum.toLocaleString('en'));
                $("#difference").val(sum.toLocaleString('en'));
                dt_search_gl_item.fnClearTable();
                $("#glItemsModal").modal();
                searchGLTableUpdate();

            }

        });

        var dt_search_gl_item = $('#dt_search_gl_item').dataTable();

        function SubmitCharge(formData) {
                $("#save_attachment").prop('disabled', true);
            var url = '@Url.Action("SaveItemsCharge", "Procurement")';
            var ajaxConfig = {
                type: "post",
                url: url,
                data: new FormData(formData),
                success: function (result) {
                  $("#save_attachment").prop('disabled', false);
                    if (result == "Success") {
                        swal("Data saved successfully", { icon: "Success" })
                                                                   .then((value) => {
                                                                       var url = '@Url.Action("ReceivingList", "Procurement")';
                                                                       window.location.replace(url);
                                                                   });
                    }
                    else if (result == "NotCharged") {
                        swal("Failed, no item to charge in recieving Table");
                    }
                    else if (result == "Charged") {
                        swal("Failed, this LPO was received previously");
                    }
                    else {
                        swal("Failed  due to DbException");
                    }
                }
            }

            if ($(formData).attr('enctype') == "multipart/form-data") {
                ajaxConfig["contentType"] = false;
                ajaxConfig["processData"] = false;
            }
            $.ajax(ajaxConfig);
            return false;
        }

        function amountChanged(e) {

            var max_value = parseFloat(e.max);
            var entered_value = parseFloat(e.value.split(",").join(""));
            if (entered_value >= 0) {
                if (max_value >= entered_value) {

                    sum_total = 0;

                    var i = 0;

                    $("#dt_search_gl_item tr").each(function () {


                        if (i > 0) {
                            var value = $(this).children().eq(6).find("input").val().trim().split(",").join("");
                            if (value != "") {

                                var expense_amount = parseFloat($(this).children().eq(3).text().split(",").join(""));

                                var amount = parseFloat(value);

                                //INSERT INTO ARRAY
                                var line = "";
                                line = $(this).children().eq(1).text().split("-").join("|");
                                var item_description = $(this).children().eq(2).text();
                                var expense_amount = parseFloat($(this).children().eq(3).text().split(",").join(""));
                                var funding_ref = $(this).children().eq(4).text();
                                var sub_level_code = $(this).children().eq(5).text();
                                if (glItemsCharges.length > 0) {

                                    //CHECK IF EXIST IN THE ARRAY
                                    var found = false;
                                    for (var j = 0; j < glItemsCharges.length; j++) {
                                        if (glItemsCharges[j].ExpenditureLineItem == line && glItemsCharges[j].FundingReference == funding_ref) {
                                            glItemsCharges[j].BaseAmountDetail = amount;
                                            found = true;
                                        }

                                    }

                                    if (!found) {

                                        glItemsCharges.push({
                                            "ExpenditureLineItem": line,
                                            "ItemDescription": item_description,
                                            "ExpenseAmount": expense_amount,
                                            "FundingReference": funding_ref,
                                            "BaseAmountDetail": amount,
                                            "SublevelCode": sub_level_code
                                        });


                                    }


                                } else {

                                    glItemsCharges.push({
                                        "ExpenditureLineItem": line,
                                        "ItemDescription": item_description,
                                        "ExpenseAmount": expense_amount,
                                        "FundingReference": funding_ref,
                                        "BaseAmountDetail": amount,
                                        "SublevelCode": sub_level_code
                                    });


                                }




                            }
                        }


                        i++;
                    });

                    for (var j = 0; j < glItemsCharges.length; j++) {

                        sum_total = sum_total + glItemsCharges[j].BaseAmountDetail;
                        console.log("length" + glItemsCharges[j].ExpenditureLineItem + ":" + glItemsCharges[j].BaseAmountDetail);

                    }

                    var total_items_value = parseFloat($("#total_items_amount").val().split(",").join(""));
                    var balance = total_items_value - sum_total;
                    if (balance >= 0) {
                        $("#total_line_amount").val(sum_total.toLocaleString('en'));
                        $("#difference").val(balance.toLocaleString('en'));
                    }
                    else {
                        swal("Total Line Amount can not exceed " + total_items_value.toLocaleString('en'));
                        e.value = "";


                    }
                } else {
                    swal("Expense Amount can not exceed " + max_value.toLocaleString('en'));
                    e.value = "";


                }
            }
        }
             //=============SEARCH GL ACCOUNTS ==================
         function searchGLTableUpdate() {

             var accrual = '@(Model.Accrual)';
            var accuralReceiving = false;

            if (accrual == "YES") {
                accuralReceiving = true;
            }
             var url = '@Url.Action("GetFundbalance", "PaymentVoucher")';

            var parent_code = "UNKNOWN";
            if ($("#ParentInstitutionCode").val() !="") {
                parent_code = $("#ParentInstitutionCode").val();
            }
            var sub_warant_code = "UNKNOWN";
            if ($("#SubWarrantCode").val() !="") {
                sub_warant_code = $("#SubWarrantCode").val();
            }
             var subBudgetClass = '@(Model.SubBudgetClass)';
               var fundBalanceParams = {
                subBudgetClass,
                instCode: parent_code,
                subWarrantCode: sub_warant_code,
                IsAccrualVoucher: accuralReceiving
            };
            $.ajax({
                type: "get",
                url: url,
                data: fundBalanceParams,
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {
                    //=== UPDATE SEARCH GI TABLE ====
                    data = response.data;
                    dt_search_gl_item.fnClearTable();
                    if (accrual == "YES") {
                        for (var i = 0; i < data.length; i++) {
                                   var amount = 0;
                            if (data[i]["BudgetBalance"] > 0) {
                                amount = data[i]["BudgetBalance"];
                            }
                           dt_search_gl_item.fnAddData([i + 1,
                           data[i]["GlAccount"].split("|").join("-"),
                           data[i]["GlAccountDesc"],
                            toLabel(data[i]["BudgetBalance"] || 0),
                            'NA',
                            data[i]["SublevelCode"],
                           '<amount-input placeholder="Amount" max="' + amount + '"  onkeyup="amountChanged(this)" />'
                        ]);
                    }
                    } else {

                          for (var i = 0; i < data.length; i++) {
                           dt_search_gl_item.fnAddData([i + 1,
                           data[i]["GlAccount"].split("|").join("-"),
                           data[i]["GlAccountDesc"],
                           toLabel(data[i]["FundBalance"]),
                           data[i]["FundingRefNo"],
                           data[i]["SublevelCode"],
                           '<amount-input placeholder="Amount" max="' + data[i]["FundBalance"] + '"  onkeyup="amountChanged(this)" />'
                        ]);
                                          }

                    }

                },
                failure: function (error) {
                    swal(error);
                }
            });
        }
        //==============END SEARCH GL ACCOUNT====================

         $("#btn_save_items_charge").click(function () {
        var total_items_value = parseFloat($("#total_items_amount").val().split(",").join(""));
            sum_total = sum_total.toFixed(2);
        if (glItemsCharges.length == 0) {
            swal("Please Enter Amount !");
        }
        else if (total_items_value != sum_total) {
            swal("Please Total Line Amount must be equal to " + total_items_value.toLocaleString('en') + " !");
        }
        else {
            $('#glItemsModal').modal('hide');
            var itemIds = [];

            if (itemCategory == "Inventory") {

                $(".inventory input:checkbox.checkItem").each(function () {
                    if ($(this).prop("checked")) {
                        itemIds.push($(this).attr('id'));
                    }
                });

            } else {

                $(".nonInventory input:checkbox.checkItem").each(function () {
                    if ($(this).prop("checked")) {
                        itemIds.push($(this).attr('id'));
                    }
                });

            }

            var receivingId =@(Model.ReceivingSummaryId);
            var form_data = {
                "ReceivingSummaryId": receivingId,
                "ReceivingIds": itemIds,
                "VoucherDetails": glItemsCharges
            }

            $("#btn_save_items_charge").prop('disabled', true);
            var url = '@Url.Action("ItemsReceivedCharge", "Procurement")';
            $.ajax(
{
    type: "POST",
    url: url,
    data: form_data,
    success: function (response) {
        $("#btn_save_items_charge").prop('disabled', false);
            if (response == "Success") {
                 swal("GL Account(s) assigned successfully", { icon: "success" })
                            .then((value) => {
                                location.reload();
                            });
                                        }
           else {
               swal(response);
            }
    },
    error: function (xhr) {
        $("#btn_save_items_charge").prop('disabled', false);
        swal("An error has occured, contact system support");
    },

});

        }

    });
    //END MANAGE ITEMS CHARGE

        //CHECK ALL ITEMS
        $(document).on('click', '.cbCheckAllItems', function () {
            $(".inventory .checkItem").prop('checked',
                $(this).prop('checked'));
        });
        $(document).on('click', '.cbCheckAllItems2', function () {
            $(".nonInventory .checkItem").prop('checked',
                $(this).prop('checked'));
        });

          //DESELECT GL ACCOUNTS
        var deselectGL = function (id) {
                swal({
                title: 'Confirmation',
                text: "Do you what to deselect Note:All item(s) charged by this GL will be uncharged !",
                buttons: [
                  'No',
                  'Yes'
                ],
            }).then(function (isConfirm) {
                if (isConfirm) {
                    var url = '@Url.Action("CancelReceivingCoa", "Procurement")';
                    $.ajax(
        {
            type: "POST",
            url: url,
            data: { id: id },
            success: function (response) {
                if (response == "Success") {
                       swal("GL Account successfully deselected!", { icon: "success" })
                                              .then((value) => {
                                   location.reload();
                          });

                }
                else {

                    swal(response);
                }
            },
            error: function (xhr) {
                swal(error);
            },

        });
                } else {
                    swal("Cancelled", "No change was made");
                }
            });
        }


            //SHOW LOADER ICON
            $(document).ajaxStart(function () {
                $(".loadingImg").show();

            });
            //HIDE LOADER ICON
            $(document).ajaxStop(function () {
                $(".loadingImg").hide();
            });

    </script>
}






