
@model IEnumerable<IFMIS.Areas.IFMISTZ.Models.PaylistCurrentDepartment>
@{
    ViewBag.Title = "Pending";
    var i = 0;
}


<div id="content" style="margin: 5px; padding-top: 30px">

    <div class="row">


    </div>


    <!-- widget grid -->
    <section id="widget-grid" class="">


        <!-- START ROW -->

        <div class="row">

            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">

                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">

                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2>Net Pay Salaries Assign GLs </h2>

                    </header>


                    <div>
                        <div class="widget-body " style="padding-top:10px;width:100%">

                            <div align="center">
                                <img src="~/Media/Images/ajax_loader.gif" class="loadingImg" style="display:none" />
                            </div>

                            <table align="center" class="table table-bordered table-hover table-condensed" id="paymentSchedule" style="width:100%">
                                <caption><H4><strong>Vote Code:@Model.FirstOrDefault().VOTE_CODE <br />Vote Name:@Model.FirstOrDefault().VOTE_DESC</strong></H4></caption>
                                <thead>
                                    <tr>
                                        <th style="text-align: center;width:5%">#</th>
                                        <th style="text-align: left;width:7%">DeptCode </th>
                                        <th style="text-align: left">Department Name</th>
                                        <th style="text-align: right">Basic Salary</th>
                                        <th style="text-align: right">Net Amount</th>
                                        <th style="text-align: center">GL Accounts</th>
                                        <th style="text-align: center">Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model)
                                    {

                                        i++;
                                        string gl = "gl"+i;
                                        <tr>
                                            <td style="text-align: center">@i</td>
                                            <td> @Html.DisplayFor(modelItem => item.DeptCode)</td>
                                            <td> @Html.DisplayFor(modelItem => item.DeptName)</td>
                                            <td style="text-align: right"> @Html.DisplayFor(modelItem => item.BasicSalary) </td>
                                            <td style="text-align: right"> @Html.DisplayFor(modelItem => item.NetAmount)</td>
                                            <td style="text-align: center">

                                                @if (item.SalaryCoas.Count() > 0)
                                                {

                                                    <a data-toggle="collapse" data-parent="#accordion" href="#@gl">
                                                        <span>@Convert.ToDecimal(item.SalaryCoas.Select(a => a.OperationalAmount).DefaultIfEmpty(0).Sum()).ToString("#,##0.00")</span>
                                                    </a>
                                                    <div id="@gl" class="panel-collapse collapse">
                                                        <table class="table table-bordered table-hover table-condensed" id="items_charge" style="width:100%">
                                                            <thead>
                                                                <tr>
                                                                    <th style="text-align:left">GL Account</th>
                                                                    <th style="text-align:left">GL Account Desc</th>
                                                                    <th style="text-align:left">Funding Reference</th>
                                                                    <th style="text-align:right">Amount</th>
                                                                </tr>
                                                            </thead>
                                                            <tbody>
                                                                @foreach (var coa in item.SalaryCoas)
                                                                {

                                                                   
                                                                        <tr>
                                                                         
                                                                            <td>
                                                                                @Html.DisplayFor(modelItem => coa.GlAccount)
                                                                            </td>
                                                                            <td>
                                                                                @Html.DisplayFor(modelItem => coa.GlAccountDesc)
                                                                            </td>
                                                                            <td>
                                                                                @Html.DisplayFor(modelItem => coa.FundingReference)
                                                                            </td>
                                                                            <td style="text-align:right">
                                                                                @Html.DisplayFor(modelItem =>coa.OperationalAmount)
                                                                            </td>

                                                                        </tr>
                                                                 
                                                                }
                                                            </tbody>
                                                        </table>
                                                    </div>
                                                }
                                                else
                                                {
                                                <em>Not Assigned</em>
                                                }
                                            </td>
                                            <td style="text-align: center"><div class="btn-group"><button type="button" class="btn  btn-info btn-xs dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><span class="caret"></span><span class="sr-only">Toggle Dropdown</span></button> <ul class="dropdown-menu"> <li><a href="#" data-toggle="modal" onclick="assignGLAccount(@item.PaylistCurrentDepartmentId,@item.NetAmount,'@item.DeptCode','103')"><i class="fa fa-edit"></i> Assign GL Accounts</a></li></ul></div></td>

                                        </tr>

                                    }
                                    <tr><td align="right" colspan="3">Total</td><td align="right"><strong>@Convert.ToDecimal(Model.Select(a => a.BasicSalary).DefaultIfEmpty(0).Sum()).ToString("#,##0.00")</strong></td><td align="right"><strong>@Convert.ToDecimal(Model.Select(a => a.NetAmountAdjusted).DefaultIfEmpty(0).Sum()).ToString("#,##0.00")</strong></td><td colspan="2"></td></tr>
                                </tbody>
                            </table>


                            <br />
                            <br />
                            <div class="col-md-offset-1">
                                <a href="@Url.Action("PendingNetPayments","NetPayments")" class="btn btn-info pull-left"><i class="glyphicon glyphicon-arrow-left"></i> Back  </a>
                            </div>
                            <br>
                            <br />
                        </div>


                    </div>


                </div>
            </article>

        </div>
    </section>

</div>


<div class="modal fade" id="divModal" tabindex="-1" role="dialog" aria-labelledby="lblmodal">
    <div class="modal-dialog modal-lg" style="width:80%;">
        <div width="90%" class="modal-content">
            <div class="modal-header alert alert-info" style="font:bold 16px Trebuchet MS, Lucida Sans Unicode, Lucida Grande, Lucida Sans, Arial, sans-serif">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title" id="lblmodal">
                    Preview
                </h4>
            </div>
            <div class="modal-body" id="divModalBody">

            </div>

            <div id="divPaymentStatusLoader" style="text-align:center; display:none">
                <img src="~/assets/img/avatars/ajax_loader.gif" />
            </div>
        </div>
    </div>

</div>
<!----------- Search  GL----------------->
<div class="modal fade" id="glItemsModal" style="left:4%">

    <div class="modal-dialog" style="width:80%;">
        <div class="modal-content panel-info">
            <div class="modal-header panel-heading">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h3 class="modal-title"> Search Gl Item(s)-DeptCode:<span id="deptcode"></span>-SBC:<span id="sbc"></span></h3>
            </div>
            <div class="modal-body">
                <table>
                    <tr>
                        <td style="padding:5px">Total Items Amount</td>
                        <td style="padding:5px">
                            <input type="text" disabled id="total_items_amount">
                        </td>

                        <td style="padding:5px">Total Line Amount</td>
                        <td style="padding:5px">
                            <input value="0" type="text" disabled id="total_line_amount">
                        </td>

                        <td style="padding:5px">Difference</td>
                        <td style="padding:5px">
                            <input value="0" type="text" disabled id="difference" style="width:250px">
                        </td>
                    </tr>
                </table>
                <div>
                    <div class="row" style="padding-top:1%;padding-bottom:1%">
                        <div class="col-md-6">
                        </div>
                        <div class="col-md-6">
                            <div class="search-container " style="float:right">
                                <i class="fa fa-search search-icon"></i>
                                <input type="search" name="search" placeholder="Search..." id="search_gl">
                            </div>
                        </div>
                    </div>
                    <div align="center">
                        <img src="/Media/Images/ajax_loader.gif" class="loadingImg" />
                    </div>
                    <table id="dt_search_gl_item" class="table table-striped table-bordered table-hover table-condensed">
                        <thead>
                            <tr>
                                <th>#</th>
                                <th>Expenditure Line Item</th>
                                <th>Item Description</th>
                                <th>Fund Balance</th>
                                <th>Funding Reference</th>
                                <th>Expense Amount</th>
                            </tr>
                        </thead>
                    </table>

                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-info" id="btn_save_gl_accounts">
                        <i class="fa fa-save"></i>Save
                    </button>
                    <button class="btn btn-info" data-dismiss="modal">
                        <i class="fa  fa-times"></i>Cancel
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>
@section pagespecific {
    <!-- PAGE RELATED PLUGIN(S) -->

    <script type="text/javascript">
        var glItemsCharges = [];
        var form_data = {};
        var sum_total = 0;
        var department_amount = 0;
        var department_id = 0;

    var dt_search_gl_item = $('#dt_search_gl_item').dataTable();
            $("#dt_search_gl_item_wrapper .dt-toolbar").remove();
        $("#search_gl").on("keyup search input paste cut", function () {
            $("#search_exp_line").val("");
            dt_search_gl_item.DataTable().search(this.value).draw();
        });
            $(document).ready(function () {
                /* // DOM Position key index //
         l - Length changing (dropdown)
         f - Filtering input (search)
         t - The Table! (datatable)
         i - Information (records)
         p - Pagination (paging)
         r - pRocessing
         < and > - div elements
         <"#id" and > - div with an id
         <"class" and > - div with a class
         <"#id.class" and > - div with an id and class
         Also see: http://legacy.datatables.net/usage/features
         */
                /* BASIC ;*/
                var responsiveHelper_dt_salaries = undefined;
                var responsiveHelper_datatable_fixed_column = undefined;
                var responsiveHelper_datatable_col_reorder = undefined;
                var responsiveHelper_datatable_tabletools = undefined;

                var breakpointDefinition = {
                    tablet: 1024,
                    phone: 480
                };

                 var dt_search_change_account = $('#dt_salaries').dataTable({
                    "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-12 hidden-xs'l>r>" +
                        "t" +
                        "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                    "autoWidth": true,
                    "preDrawCallback": function () {
                        // Initialize the responsive datatables helper once.
                        if (!responsiveHelper_dt_salaries) {
                            responsiveHelper_dt_salaries = new ResponsiveDatatablesHelper($('#dt_salaries'), breakpointDefinition);
                        }
                    },
                    "rowCallback": function (nRow) {
                        responsiveHelper_dt_salaries.createExpandIcon(nRow);
                    },
                    "drawCallback": function (oSettings) {
                        responsiveHelper_dt_salaries.respond();
                    }
                });

                /* END BASIC */

                /* COLUMN FILTER  */
                var otable = $('#datatable_fixed_column').DataTable({
                    //"bFilter": false,
                    //"bInfo": false,
                    //"bLengthChange": false
                    //"bAutoWidth": false,
                    //"bPaginate": false,
                    //"bStateSave": true // saves sort state using localStorage
                    "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6 hidden-xs'f><'col-sm-6 col-xs-12 hidden-xs'<'toolbar'>>r>" +
                            "t" +
                            "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                    "autoWidth": true,
                    "preDrawCallback": function () {
                        // Initialize the responsive datatables helper once.
                        if (!responsiveHelper_datatable_fixed_column) {
                            responsiveHelper_datatable_fixed_column = new ResponsiveDatatablesHelper($('#datatable_fixed_column'), breakpointDefinition);
                        }
                    },
                    "rowCallback": function (nRow) {
                        responsiveHelper_datatable_fixed_column.createExpandIcon(nRow);
                    },
                    "drawCallback": function (oSettings) {
                        responsiveHelper_datatable_fixed_column.respond();
                    }
                });

                // custom toolbar
                $("div.toolbar").html('<div class="text-right"><img src="/Content/img/logo.png" alt="SmartAdmin" style="width: 111px; margin-top: 3px; margin-right: 10px;"></div>');

                // Apply the filter
                $("#datatable_fixed_column thead th input[type=text]").on('keyup change', function () {
                    otable
                        .column($(this).parent().index() + ':visible')
                        .search(this.value)
                        .draw();
                });
                /* END COLUMN FILTER */

                /* COLUMN SHOW - HIDE */
                $('#datatable_col_reorder').dataTable({
                    "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'C>r>" +
                            "t" +
                            "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
                    "autoWidth": true,
                    "preDrawCallback": function () {
                        // Initialize the responsive datatables helper once.
                        if (!responsiveHelper_datatable_col_reorder) {
                            responsiveHelper_datatable_col_reorder = new ResponsiveDatatablesHelper($('#datatable_col_reorder'), breakpointDefinition);
                        }
                    },
                    "rowCallback": function (nRow) {
                        responsiveHelper_datatable_col_reorder.createExpandIcon(nRow);
                    },
                    "drawCallback": function (oSettings) {
                        responsiveHelper_datatable_col_reorder.respond();
                    }
                });

                /* END COLUMN SHOW - HIDE */

                /* TABLETOOLS */
                $('#datatable_tabletools').dataTable({

                    // Tabletools options:
                    //   https://datatables.net/extensions/tabletools/button_options
                    "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'T>r>" +
                            "t" +
                            "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
                    "oTableTools": {
                        "aButtons": [
                        "copy",
                        "csv",
                        "xls",
                           {
                               "sExtends": "pdf",
                               "sTitle": "SmartAdmin_PDF",
                               "sPdfMessage": "SmartAdmin PDF Export",
                               "sPdfSize": "letter"
                           },
                           {
                               "sExtends": "print",
                               "sMessage": "Generated by SmartAdmin <i>(press Esc to close)</i>"
                           }
                        ],
                        "sSwfPath": "/Scripts/plugin/datatables/swf/copy_csv_xls_pdf.swf"
                    },
                    "autoWidth": true,
                    "preDrawCallback": function () {
                        // Initialize the responsive datatables helper once.
                        if (!responsiveHelper_datatable_tabletools) {
                            responsiveHelper_datatable_tabletools = new ResponsiveDatatablesHelper($('#datatable_tabletools'), breakpointDefinition);
                        }
                    },
                    "rowCallback": function (nRow) {
                        responsiveHelper_datatable_tabletools.createExpandIcon(nRow);
                    },
                    "drawCallback": function (oSettings) {
                        responsiveHelper_datatable_tabletools.respond();
                    }
                });
                /* END TABLETOOLS */

    
                        });

        //SHOW LOADER ICON
        $(document).ajaxStart(function () {
            $(".loadingImg").show();

        });
        //HIDE LOADER ICON
        $(document).ajaxStop(function () {
            $(".loadingImg").hide();
        });

        var assignGLAccount = function (id, amount,deptcode, sbc) {
            glItemsCharges = [];
            sum_total = 0;
            department_amount = 0;
            department_amount = amount;
            department_id = id;

            $("#deptcode").text(deptcode);
            $("#sbc").text(sbc);
             $("#total_line_amount").val("");
             $("#total_items_amount").val(department_amount.toLocaleString('en'));
             $("#difference").val(department_amount.toLocaleString('en'));

            $('#glItemsModal').modal('show');

                 var fundBalanceParams = { "subBudgetClass": sbc };
            var url = '@Url.Action("GetFundbalance", "PaymentVoucher")';
            $.ajax({
                type: "get",
                url: url,
                data: fundBalanceParams,
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {
                    //=== UPDATE SEARCH GI TABLE ====
                    data = response.data;
                    dt_search_gl_item.fnClearTable();
                    for (var i = 0; i < data.length; i++) {

                        dt_search_gl_item.fnAddData([i + 1,
                           data[i]["GlAccount"].split("|").join("-"),
                           data[i]["GlAccountDesc"],
                           toLabel(data[i]["FundBalance"]),
                           data[i]["FundingRefNo"],
                           '<amount-input placeholder="Amount" max="' + data[i]["FundBalance"] + '"  onkeyup="amountChanged(this)" />'
                        ]);
                    }
                },
                failure: function (error) {
                    swal(error);
                }
            });

        };


        function amountChanged(e) {

            var max_value = parseFloat(e.max);
            var entered_value = parseFloat(e.value.split(",").join(""));
            if (!entered_value) {
                entered_value = 0;
            }

            if (entered_value >= 0) {
                if (max_value >= entered_value) {

                    sum_total = 0;

                    var i = 0;

                    $("#dt_search_gl_item tr").each(function () {


                        if (i > 0) {
                            var value = $(this).children().eq(5).find("input").val().trim().split(",").join("");

                            if (value !="") {

                                var expense_amount = parseFloat($(this).children().eq(3).text().split(",").join(""));

                                var amount = parseFloat(value);

                                //INSERT INTO ARRAY
                                var line = "";
                                line = $(this).children().eq(1).text().split("-").join("|");
                                var item_description = $(this).children().eq(2).text();
                                var expense_amount = parseFloat($(this).children().eq(3).text().split(",").join(""));
                                var funding_ref = $(this).children().eq(4).text();

                                if (glItemsCharges.length > 0) {

                                    //CHECK IF EXIST IN THE ARRAY
                                    var found = false;
                                    for (var j = 0; j < glItemsCharges.length; j++) {
                                        if (glItemsCharges[j].GLAccount == line && glItemsCharges[j].FundingReference == funding_ref) {
                                            glItemsCharges[j].ExpenseAmount = amount;
                                            found = true;
                                        }

                                    }

                                    if (!found) {

                                        glItemsCharges.push({
                                            "GLAccount": line,
                                            "GLAccountDesc": item_description,
                                            "FundingReference": funding_ref,
                                            "ExpenseAmount": amount
                                        });


                                    }


                                } else {

                                    glItemsCharges.push({
                                        "GLAccount": line,
                                        "GLAccountDesc": item_description,
                                        "FundingReference": funding_ref,
                                        "ExpenseAmount": amount
                                    });


                                }




                            }
                        }


                        i++;
                    });

                    for (var j = 0; j < glItemsCharges.length; j++) {

                        sum_total = sum_total + glItemsCharges[j].ExpenseAmount;

                    }

                    var total_items_value = parseFloat($("#total_items_amount").val().split(",").join(""));
                    var balance = total_items_value - sum_total;
                    if (balance >= 0) {
                        $("#total_line_amount").val(sum_total.toLocaleString('en'));
                        $("#difference").val(balance.toLocaleString('en'));
                    }
                    else {
                        swal("Total Line Amount can not exceed " + total_items_value.toLocaleString('en'));
                        e.value = "";


                    }
                } else {
                    swal("Expense Amount can not exceed " + max_value.toLocaleString('en'));
                    e.value = "";


                }
            }
        }


        $("#btn_save_gl_accounts").click(function () {
           sum_total = sum_total.toFixed(2);    
        if (glItemsCharges.length == 0) {
            swal("Please Enter Amount !");
        }
        else if (department_amount != sum_total) {
            swal("Please Total Line Amount must be equal to " + department_amount.toLocaleString('en') + " !");
        }
        else {
            var form_data = {
                "PaylistCurrentDepartmentId": department_id,
                "SalaryCoas": glItemsCharges
            }
           $('#glItemsModal').modal('hide');
            $("#btn_save_gl_accounts").prop('disabled', true);
            var url = '@Url.Action("SaveGLAccounts", "NetPayments")';
            $.ajax(
{
    type: "POST",
    url: url,
    data: form_data,
    success: function (response) {
        $("#btn_save_gl_accounts").prop('disabled', false);
        if (response == "Success") {
                 swal("GL Account(s) assigned successfully", { icon: "success" })
                            .then((value) => {
                                  window.location.reload();
                            });
                                        }
           else {
               swal(response);
            }
    },
    error: function (xhr) {
        $("#btn_save_gl_accounts").prop('disabled', false);
        swal("An error has occured, contact system support");
    },

});

        }

    });
    </script>
}
