@model IEnumerable<IFMIS.Areas.IFMISTZ.Models.PrePaymentVM>
@{
    ViewBag.Title = "Prepayment Receiving Entry";

 

}

<style type="text/css">
    .loadingImg {
        display: none;
    }
</style>

<div id="content" style="margin: 5px; padding-top: 30px"> 
    
    <div class="row">


    </div>


    <!-- widget grid -->
    <section id="widget-grid" class="">


        <!-- START ROW -->

        <div class="row">

            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">

                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">

                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2> Pending Prepayment Receiving Entry</h2>
                    </header>

                    <div>
                        <div class="widget-body " style="padding-top:10px;width:100%">

                            <div align="center">
                                <img src="~/Media/Images/ajax_loader.gif" class="loadingImg" />
                            </div>

                            <div class="row">

                                <div class="col-xs-9 col-sm-3 col-md-3 col-lg-3">
                                    <div class="input-group">
                                        <a href="@Url.Action("ReceivingItems", "PrePayment")" class="btn btn-info" style="width:120px;border-radius:1px;">
                                            <i class="fa fa-plus"></i>Add New
                                        </a>

                                    </div>
                                </div>
                              

                            </div>
                            <br/>


                            <table class="table  table-bordered table-hover table-condensed" id="dt_lpo">
                                <thead>
                                    <tr>
                                        <th style="text-align:right;width:4%"></th>
                                        <th style="text-align:left;">Receiving #</th>
                                        <th style="text-align:left">Prepayment Number</th>
                                        <th style="text-align:left">Supplier</th>
                                        <th style="text-align:right">Prepayment Amount</th> 
                                        <th style="text-align:right;width:10%">Total Received</th>                                      
                                        <th style="text-align:right">Receiving Amount</th>
                                        <th style="text-align:right">Remaining Amount</th>
                                        <th style="text-align:right">Status</th>
                                        @*<th style="text-align:left">Invoice #</th>*@
                                        <th style="text-align:center">Action</th>

                                    </tr>
                                </thead>

                                <tbody>
                                    @{var i = 0;}
                                    @foreach (var item in Model)
                                    {
                                        i++;

                                        decimal balance = Convert.ToDecimal(item.PrePaymentAmount) - Convert.ToDecimal(item.ReceivingItemsValue);

                                       // decimal receivedAmt= Convert.ToDecimal(item.ReceivedAmount) - Convert.ToDecimal(item.ReceivingItemsValue);
                                        decimal receivedAmt = Convert.ToDecimal(item.ReceivedAmount);
                                        <tr>
                                            <td style="text-align:right">
                                                @i
                                            </td>
                                            <td style="text-align:left">
                                                @Html.DisplayFor(modelItem => item.ReceivingNumber)
                                            </td>
                                            <td style="text-align:left">
                                                @Html.DisplayFor(modelItem => item.PrePaymentNo)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.SupplierName)
                                            </td>

                                            <td style="text-align:right">
                                                @Html.DisplayFor(modelItem => item.Currency)
                                                @Html.DisplayFor(modelItem => item.PrePaymentAmount)

                                            </td>

                                            <td style="text-align:right">
                                                @*@Html.DisplayFor(modelItem => item.Currency)*@
                                                @*@receivedAmt*@
                                                @Convert.ToDecimal(receivedAmt).ToString("#,##0.00")
                                            </td>
                                            <td style="text-align:right">
                                                @*@Html.DisplayFor(modelItem => item.Currency)*@
                                                @Html.DisplayFor(modelItem => item.ReceivingItemsValue)
                                            </td>
                                            <td style="text-align:right">


                                                @Html.DisplayFor(modelItem => item.Currency)
                                                @Html.DisplayFor(modelItem => item.Balance)

                                            </td>

                                            <td style="text-align:left">
                                                @if (item.OverallStatus.ToUpper() == "REJECTED")
                                                {
                                                    <a href="#" data-toggle="modal" data-target="#rejectedPrePayment" data-lpo='@item.PrePaymentNo' data-reason='@item.ApprovalStatus' class="rejected_lpo"><i class="fa fa-eye"></i> @item.OverallStatus</a>
                                                }
                                                else
                                                {
                                                    @item.OverallStatus
                                                }
                                            </td>
                                            @*<td style="text-align:left">
                                                @Html.DisplayFor(modelItem => item.InvoiceNo)
                                            </td>*@
                                        
                                            <td style="text-align:center">

                                                <div class="btn-group">
                                                    @*<button type="button" class="btn btn-info  btn-xs" style="width:50px;border-radius:1px;">Action</button>*@
                                                    <button type="button" class="btn btn-info btn-xs dropdown-toggle" data-toggle="dropdown" style="width:40px;border-radius:1px;" aria-haspopup="true" aria-expanded="false">
                                                        <span class="caret"></span>
                                                        <span class="sr-only">Toggle Dropdown</span>
                                                    </button>
                                                    <ul class="dropdown-menu">
                                                        @if (item.OverallStatus.ToUpper() == IFMIS.Libraries.Constants.PENDING.ToUpper() || item.OverallStatus.ToUpper() == IFMIS.Libraries.Constants.REJECTED.ToUpper())
                                                        {
                                                        <li>
                                                            <a href="@Url.Action("EditReceivingItems", "PrePayment",new {id=item.PrePaymentId})" class="btn-xs edit">
                                                                <i class="fa fa-edit"></i>  Edit
                                                            </a>
                                                        </li>
                                                       
                                                        @*<li>
                                                            <a href="@Url.Action("ReceivingAttachment", "PrePayment", new { id = item.ReceivingSummaryId })" class="btn-xs edit">
                                                                <i class="fa fa-edit"></i>  Attachment
                                                            </a>
                                                        </li>*@

                                                        <li>
                                                            <a href="@Url.Action("AttachmentEntry", "PaymentVoucherAttachments",new {groupId=item.ReceivingSummaryId,sourceModule= IFMIS.Libraries.Constants.SOURCE_MODULE_PREPAYMENT })" class="btn-xs edit">
                                                                <i class="fa fa-edit"></i> Attach
                                                            </a>
                                                        </li>

                                                        <li><a href="#" data-toggle="modal" class="receivingCancel   delete" data-id=@item.ReceivingSummaryId data-receiving='@item.ReceivingNumber'><i class="fa fa-edit"></i> Cancel</a></li>
                                                        }

                                                        @*@if (item.DeliveryNote == null)
                                                        {*@
                                                           
                                                        @*}
                                                        else
                                                        {
                                                            <li>
                                                                <a href="@Url.Action("EditReceivingAttachment", "PrePayment",new {id=item.ReceivingSummaryId})" class="btn-xs edit">
                                                                    <i class="fa fa-edit"></i>  Edit Attachment
                                                                </a>
                                                            </li>

                                                        }*@


                                                        @if (item.OverallStatus.ToUpper() == IFMIS.Libraries.Constants.PENDING.ToUpper() || item.OverallStatus.ToUpper() == IFMIS.Libraries.Constants.REJECTED.ToUpper())
                                                        {
                                                            //if (item.ReceivingItemsValue > 0 && item.AttachmentReceived == IFMIS.Libraries.Constants.YES)
                                                            //if (item.AttachmentReceived == IFMIS.Libraries.Constants.YES.ToUpper())
                                                            //{
                                                            <li><a href="#" data-toggle="modal" data-id=@item.ReceivingSummaryId data-receivingno='@item.ReceivingNumber' class="receiveConfirm  btn-xs edit"><i class="fa fa-edit"></i> Confirm</a></li>
                                                                //}
                                                            }

                                                        <li>
                                                            <a href="@Url.Action("PreviewReceiving", "PrePayment",new {id=item.ReceivingSummaryId})" class="btn-xs edit">
                                                                <i class="fa fa-search-minus"></i>  Preview
                                                            </a>
                                                        </li>
                                                    

 
                                                     @*@if (item.OverallStatus.ToUpper() == "PENDING")
                                                     {
                                                        <li><a href="#" data-toggle="modal"  data-id=@item.ReceivingSummaryId data-receivingno='@item.ReceivingNumber' class="receiveDeletion"><i class="fa fa-trash-o"></i> Delete</a></li>
                                                     }*@
                                                       
                                                    </ul>
                                                </div>
                                            </td>

                                        </tr>
                                    }
                                </tbody>
                            </table>

                        </div>





                    </div>


                </div>
            </article>

        </div>
    </section>

</div>



<div class="modal fade" id="rejectedPrePayment">
    <div class="modal-dialog">
        <div class="modal-content">

            <div class="modal-header">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h4 align="center">Prepayment Number <span id="lpo_number"></span></h4>
            </div>

            <div class="modal-body">


                <span id="reason"></span>


            </div>
            <div class="modal-footer">
                <a href="#" class="btn btn-info" data-dismiss="modal">Ok</a>

            </div>


        </div>
    </div>
</div>

@section pagespecific {
    <!-- PAGE RELATED PLUGIN(S) -->

    <script type="text/javascript">


        //SHOW LOADER ICON
        $(document).ajaxStart(function () {
            $(".loadingImg").show();

        });
        //HIDE LOADER ICON
        $(document).ajaxStop(function () {
            $(".loadingImg").hide();
        });
            $(document).ready(function () {
                /* // DOM Position key index //
 l - Length changing (dropdown)
 f - Filtering input (search)
 t - The Table! (datatable)
 i - Information (records)
 p - Pagination (paging)
 r - pRocessing
 < and > - div elements
 <"#id" and > - div with an id
 <"class" and > - div with a class
 <"#id.class" and > - div with an id and class
 Also see: http://legacy.datatables.net/usage/features
 */
                /* BASIC ;*/
                var responsiveHelper_dt_lpo = undefined;
                var responsiveHelper_datatable_fixed_column = undefined;
                var responsiveHelper_datatable_col_reorder = undefined;
                var responsiveHelper_datatable_tabletools = undefined;

                var breakpointDefinition = {
                    tablet: 1024,
                    phone: 480
                };

                $('#dt_lpo').dataTable({
                    "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-12 hidden-xs'l>r>" +
                        "t" +
                        "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                    "autoWidth": true,
                    "preDrawCallback": function () {
                        // Initialize the responsive datatables helper once.
                        if (!responsiveHelper_dt_lpo) {
                            responsiveHelper_dt_lpo = new ResponsiveDatatablesHelper($('#dt_lpo'), breakpointDefinition);
                        }
                    },
                    "rowCallback": function (nRow) {
                        responsiveHelper_dt_lpo.createExpandIcon(nRow);
                    },
                    "drawCallback": function (oSettings) {
                        responsiveHelper_dt_lpo.respond();
                    }
                });

                /* END BASIC */

                /* COLUMN FILTER  */
                var otable = $('#datatable_fixed_column').DataTable({
                    //"bFilter": false,
                    //"bInfo": false,
                    //"bLengthChange": false
                    //"bAutoWidth": false,
                    //"bPaginate": false,
                    //"bStateSave": true // saves sort state using localStorage
                    "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6 hidden-xs'f><'col-sm-6 col-xs-12 hidden-xs'<'toolbar'>>r>" +
                            "t" +
                            "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                    "autoWidth": true,
                    "preDrawCallback": function () {
                        // Initialize the responsive datatables helper once.
                        if (!responsiveHelper_datatable_fixed_column) {
                            responsiveHelper_datatable_fixed_column = new ResponsiveDatatablesHelper($('#datatable_fixed_column'), breakpointDefinition);
                        }
                    },
                    "rowCallback": function (nRow) {
                        responsiveHelper_datatable_fixed_column.createExpandIcon(nRow);
                    },
                    "drawCallback": function (oSettings) {
                        responsiveHelper_datatable_fixed_column.respond();
                    }
                });

                // custom toolbar
                $("div.toolbar").html('<div class="text-right"><img src="/Content/img/logo.png" alt="SmartAdmin" style="width: 111px; margin-top: 3px; margin-right: 10px;"></div>');

                // Apply the filter
                $("#datatable_fixed_column thead th input[type=text]").on('keyup change', function () {
                    otable
                        .column($(this).parent().index() + ':visible')
                        .search(this.value)
                        .draw();
                });
                /* END COLUMN FILTER */

                /* COLUMN SHOW - HIDE */
                $('#datatable_col_reorder').dataTable({
                    "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'C>r>" +
                            "t" +
                            "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
                    "autoWidth": true,
                    "preDrawCallback": function () {
                        // Initialize the responsive datatables helper once.
                        if (!responsiveHelper_datatable_col_reorder) {
                            responsiveHelper_datatable_col_reorder = new ResponsiveDatatablesHelper($('#datatable_col_reorder'), breakpointDefinition);
                        }
                    },
                    "rowCallback": function (nRow) {
                        responsiveHelper_datatable_col_reorder.createExpandIcon(nRow);
                    },
                    "drawCallback": function (oSettings) {
                        responsiveHelper_datatable_col_reorder.respond();
                    }
                });

                /* END COLUMN SHOW - HIDE */

                /* TABLETOOLS */
                $('#datatable_tabletools').dataTable({

                    // Tabletools options:
                    //   https://datatables.net/extensions/tabletools/button_options
                    "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'T>r>" +
                            "t" +
                            "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
                    "oTableTools": {
                        "aButtons": [
                        "copy",
                        "csv",
                        "xls",
                           {
                               "sExtends": "pdf",
                               "sTitle": "SmartAdmin_PDF",
                               "sPdfMessage": "SmartAdmin PDF Export",
                               "sPdfSize": "letter"
                           },
                           {
                               "sExtends": "print",
                               "sMessage": "Generated by SmartAdmin <i>(press Esc to close)</i>"
                           }
                        ],
                        "sSwfPath": "/Scripts/plugin/datatables/swf/copy_csv_xls_pdf.swf"
                    },
                    "autoWidth": true,
                    "preDrawCallback": function () {
                        // Initialize the responsive datatables helper once.
                        if (!responsiveHelper_datatable_tabletools) {
                            responsiveHelper_datatable_tabletools = new ResponsiveDatatablesHelper($('#datatable_tabletools'), breakpointDefinition);
                        }
                    },
                    "rowCallback": function (nRow) {
                        responsiveHelper_datatable_tabletools.createExpandIcon(nRow);
                    },
                    "drawCallback": function (oSettings) {
                        responsiveHelper_datatable_tabletools.respond();
                    }
                });
                /* END TABLETOOLS */

                $(".rejected_lpo").on('click', function () {
                    var reason = $(this).data('reason');
                    var lpo = $(this).data('lpo');
                    $("#lpo_number").text(lpo);
                    $("#reason").text(reason);



                });


                $(".receiveConfirm").on('click', function () {
                    var id = $(this).data('id');
                    var receivingno = $(this).data('receivingno');
                    swal({
                        title: 'Confirmation',
                        text: "Do you what to confirm receiving Prepayment   " + receivingno + " ?",
                        buttons: [
                          'No',
                          'Yes'
                        ],
                    }).then(function (isConfirm) {
                        if (isConfirm) {
                         var url = '@Url.Action("ConfirmReceiving", "PrePayment")';
                            $.ajax(
                {
                    type: "POST",
                    url: url,
                    data: { id: id },
                    success: function (response) {
                        if (response == "Success") {

                            swal("Confirmed successfully", { icon: "success" })
                                      .then((value) => {
                                          location.reload();
                                      });


                        }
                        else {

                            swal("Failed to confirm:"+response);
                        }
                    },
                    error: function (xhr) {
                        swal(error);
                        $("#divLoader").hide();
                    },

                });
                        } else {
                            swal("Cancelled", "No change was made");
                        }
                    });

                });


                $(".receivingCancel").on('click', function () {
                    var id = $(this).data('id');
                    var receivingno = $(this).data('receiving');
                    swal({
                        title: 'Confirmation',
                        text: "Do you what to cancel Receiving   " + receivingno + " ?",
                        buttons: [
                          'No',
                          'Yes'
                        ],
                    }).then(function (isConfirm) {
                        if (isConfirm) {
                            var url = '@Url.Action("CancelReceiving", "PrePayment")';
                            $.ajax(
                {
                    type: "POST",
                    url: url,
                    data: { id: id },
                    success: function (response) {
                        if (response == "Success") {
                            swal("Cancelled  successfully!", { icon: "success" })
                                         .then((value) => {
                                             location.reload();
                                         });
                        }
                        else {
                            alert("Failed to cancel ,DbException");
                        }
                    },
                    error: function (xhr) {
                        //console.log(xhr.responseText);
                        swal("An error has occured, contact system support");

                    },

                });
                        } else {
                            swal("Cancelled", "No change was made");
                        }
                    });
                });

                //delete method
                $(".receiveDeletion").on('click', function () {
                    var id = $(this).data('id');
                    var receivingno = $(this).data('receivingno');
                    swal({
                        title: 'Removing of Prepayment',
                        text: "Do you what to Remove the Prepayment   " + receivingno + " ?",
                        buttons: [
                          'No',
                          'Yes'
                        ],
                    }).then(function (isConfirm) {
                        if (isConfirm) {
                            var url = '@Url.Action("DeletePrePaymentReceived", "PrePayment")';
                            $.ajax(
                {
                    type: "POST",
                    url: url,
                    data: { id: id },
                    success: function (response) {
                        if (response == "Success") {

                            swal("Deleted successfully", { icon: "success" })
                                      .then((value) => {
                                          location.reload();
                                      });
                        }
                        else {

                            swal("Failed to Delete Prepayment ,DbException"+response);
                        }
                    },
                    error: function (xhr) {
                        swal(error);
                        $("#divLoader").hide();
                    },

                });
                        } else {
                            swal("Cancelled", "No change was made");
                        }
                    });

                });
                //end delete method

           });


           if ('@ViewBag.Message' == "success")
            {
                    swal("Attachment saved successfully", { icon: "success" })
                                                               .then((value) => { });
           }

        if ('@ViewBag.Message' == "editsuccess") {
            swal(" Received Prepayment Items updated successfully", { icon: "success" })
                                                       .then((value) => { });
        }
    </script>
}




