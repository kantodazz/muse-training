@model IFMIS.Areas.IFMISTZ.Models.BudgetReallocation
@*@model IEnumerable<IFMIS.Areas.IFMISTZ.Models.BudgetReallocationVM>*@


<style>
    .search-btn {
        border: 1px solid #ccc;
        border-radius: 4px;
        padding: 5px;
        padding-right: 10px;
    }

    .search-container {
        display: inline-flex;
        flex: 1 1 300px;
        position: relative;
        border: 1px solid #ccc;
        border-radius: 5px;
        overflow: hidden;
        padding-left: 10px;
    }

    .name-input-container {
        display: inline-flex;
        flex: 1 1 300px;
        position: relative;
        overflow: hidden;
    }

    .search-icon {
        padding: 0.5rem;
    }

    .search-button {
        background: #538AC5;
        border: 0;
        color: white;
        padding: 8px;
        border-radius: 0;
    }

    input[type=number] {
        padding: 8px;
        border: 1px solid #ccc;
        width: 205px;
    }

    input[type=text] {
        padding: 8px;
        border: 1px solid #ccc;
    }

    input[type=search] {
        padding: 4px;
        border: hidden;
        border-radius: 4px;
    }

    textarea {
        border: 1px solid #ccc;
    }

    select {
        padding: 8px;
        border: 1px solid #ccc;
        resize: vertical;
        width: 230px;
    }

    .action-btn {
        width: 100px;
        color: white;
    }

    .form-label {
        text-align: right;
    }

    td {
        padding: 5px;
    }

    .info-box {
        padding: 10px;
        background-color: #ECF3F8;
        text-align: center;
        border: 1px solid #ccc;
        border-radius: 5px;
    }
</style>
<div style="padding:1em;padding-top:4em">
    <section id="widget-grid">
        <div class="row">
            <article class="col-sm-12 col-md-12 col-lg-12">

                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">

                    <header>
                        <span class="widget-icon"> <i class="fa fa-table"></i> </span>
                        <h2>Budget Reallocation</h2>
                    </header>
                    <div>
                        <div class="widget-body">
                        @*@using (Html.BeginForm())
                        {*@
                            @Html.AntiForgeryToken()
                            @Html.HiddenFor(model=>Model.ReallocationID)
                            @Html.HiddenFor(model => Model.LegalNumber)
                            @Html.HiddenFor(model => Model.Book)
                            @Html.HiddenFor(model => Model.JournalTypeCode)
                            @Html.HiddenFor(model => Model.CreatedBy)
                            @Html.HiddenFor(model => Model.InstitutionId)
                            @Html.HiddenFor(model => Model.InstitutionCode)
                            @Html.HiddenFor(model => Model.InstitutionName)
                            @Html.HiddenFor(model => Model.PaystationId)
                            <div class="row" style="padding:1% 5% 0 5%;">
                                <div class="col-md-6 col-lg-6 col-sm-12 ">
                                    <table>
                                        <tr>
                                            <td class="form-label">
                                                Apply Date
                                                <i class="fa fa-times" style="color:white" id="ApplyDate_1"></i>
                                            </td>
                                            <td>
                                                <div class="input-group date">
                                                    @Html.EditorFor(model => model.ApplyDate,  new { htmlAttributes = new { @class = "form-control datepicker", @style = "width:265px" } })
                                                    <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                                </div>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td class="form-label">
                                                Reallocation Type
                                                <i class="fa fa-times" style="color:white" id="RequestType_1"></i>
                                            </td>
                                            <td>
                                                <div class="input-group">
                                                    @Html.DropDownList("RequestType", null, "Select ---", new { @class = "form-control", @required = "required" , @style = "width:300px" })
                                                    @Html.ValidationMessageFor(model => model.RequestType, "", new { @class = "text-danger", })
                                                    
                                                    @*<select id="RequestType" class = "form-control" style="width:300px" required>
                                                        <option value=''>Please Select Reallocation Type</option>
                                                        <option value='WITHIN'>WITHIN</option>
                                                        <option value='ACROSS'>ACROSS</option>
                                                        @foreach (var ImprestType in ViewBag.ImprestTypeList)
                                                            {
                                                                <option value='@ImprestType.ImprestTypeId'>@ImprestType.ImprestTypeDesc</option>}
                                                    </select>*@
                                                </div>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td class="form-label">
                                                Total Debit Amount
                                                <i class="fa fa-times" style="color:white" id="AmountTo_1"></i>
                                            </td>
                                            <td>
                                                <div class="input-group">
                                                    <span class="input-group-addon">
                                                        <strong id="currency">TZS</strong>
                                                    </span>
                                                    @*@Html.EditorFor(model => model.AmountTo, new { htmlAttributes = new { @class = "form-control", @Value = string.Format("{0:C}", Model.AmountTo), @style = "width:255px" } })*@
                                                    @Html.EditorFor(model => model.AmountTo, new { htmlAttributes = new { @class = "form-control", @style = "width:255px" } })
                                                </div>
                                            </td>
                                        </tr>
                                        @*<tr>
                                            <td class="form-label">Destination GL Items</td>
                                            <td>
                                                <a class="search-btn" onclick="SearchGlTo()" href="#" style="display:block;width:300px">
                                                    <i class="fa fa-search search-icon"></i>
                                                    Search...
                                                </a>
                                            </td>
                                        </tr>*@
                                    </table>
                                </div>

                                <div class="col-lg-6 col-sm-12 ">
                                    <table>
                                        <tr>
                                            <td class="form-label">
                                                Sub Budget Class
                                                <i class="fa fa-times" style="color:white" id="SubBudgetClass_1"></i>
                                            </td>
                                            <td>
                                                @Html.DropDownList("SubBudgetClass", null, "Select ---", new { @class = "form-control", @required = "required" })
                                                @Html.ValidationMessageFor(model => model.SubBudgetClass, "", new { @class = "text-danger", })
                                                @*<select id="SubBudgetClass" class = "form-control" style="width:300px">
                                                    <option value="Please choose sub budget class" selected="selected">Please choose sub budget class</option>
                                                    @foreach (var subBudgetClass in ViewBag.subBudgetClassList)
                                                    {
                                                        <option value='@subBudgetClass.SegmentCode'>
                                                            @subBudgetClass.SegmentCode -@subBudgetClass.SegmentDesc
                                                        </option>
                                                    }
                                                </select>*@
                                            </td>
                                        </tr>
                                        <tr>
                                            <td class="form-label">
                                                Description
                                                <i class="fa fa-times" style="color:white" id="RequestDesc_1"></i>
                                            </td>
                                            <td>
                                                @Html.TextAreaFor(model => model.RequestDesc, new { htmlAttributes = new { @rows = "2", @style = "width:300px" } })
                                                @*<textarea rows="2" id="RequestDesc" style="width:300px;" required></textarea>*@
                                            </td>
                                        </tr>

                                        <tr>
                                            <td class="form-label">
                                                Total Credit Amount
                                                <i class="fa fa-times" style="color:white" id="AmountFrom_1"></i>
                                            </td>
                                            <td>
                                                <div class="input-group">
                                                    <span class="input-group-addon">
                                                        <strong id="currency">TZS</strong>
                                                    </span>
                                                    @Html.EditorFor(model => model.AmountFrom, new { htmlAttributes = new { @class = "form-control", @style = "width:255px" } })
                                                    @*<input id="AmountFrom" type="number" min="0"
                                                           onkeyup="clearVochaDetailsTable()" style="width:255px" readonly>*@
                                                </div>
                                            </td>
                                        </tr>

                                        @*<tr>
                                            <td class="form-label">Source GL Items</td>
                                            <td>
                                                <a class="search-btn" onclick="SearchGlFrom()" href="#" style="display:block;width:300px">
                                                    <i class="fa fa-search search-icon"></i>
                                                    Search...
                                                </a>
                                            </td>
                                        </tr>*@
                                    </table>
                                </div>
                            </div>
                            <div style="padding-top:5px">
                                <a class="btn btn-info" onclick="SearchGl()">
                                    <i class="glyphicon glyphicon-plus"></i> Add Line Items
                                </a>
                                <table id="dt_reallocation_detail" class="table table-striped table-bordered table-hover table-condensed">
                                    <thead>
                                        <tr>
                                            <td>S/N</td>
                                            <th style="display: none;">ReallocationDtlID</th>
                                            <th>GL Item</th>
                                            <th>Description</th>
                                            <th>Debit Amount</th>
                                            <th>Credit Amount</th>
                                            <th>Action</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @{
                                            int cn = 0;
                                        }

                                        @foreach (var line in ViewBag.BudgetReallocList)

                                        //foreach (var line in Model.BudgetReallocationDtls)
                                        {
                                            cn = cn + 1;
                                            <tr>
                                                <td>@cn</td>
                                                <td style="display: none;">@line.ReallocationDtlID</td>
                                                <td id="GLAccount">@line.GLAccount.Replace("|", "-")</td>
                                                <td></td>
                                                <td><input type="number" id="AmtTo-@line.ReallocationDtlID" value="@line.AmountTo" onkeyup="DtlamtChanged(@line.ReallocationDtlID)" /></td>
                                                <td><input type="number" id="AmtFrm-@line.ReallocationDtlID" value="@line.AmountFrom" onkeyup="DtlamtChanged(@line.ReallocationDtlID)" /></td>
                                                <td>
                                                    <div class="btn-group">
                                                        <button type="button" class="btn btn-info btn-xs dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                            <span class="caret"></span>
                                                            <span class="sr-only"></span>
                                                        </button>
                                                        <ul class="dropdown-menu">
                                                            <li><a href="#" onclick="DeleteReallocDtl(@line.ReallocationDtlID)">Delete</a></li>
                                                        </ul>
                                                    </div>
                                                </td>

                                            </tr>
                                        }
                                    </tbody>
                                </table>

                                <div style="padding-bottom:10px" id="infoPanel">
                                    <div class="info-box">No GL Items Selected</div>
                                </div>
                            </div>
                            
                            <!-- end widget content -->

                            <div class="row">
                                <div class="col-md-2"></div>
                                <div class="col-md-6">

                                    <a class="btn btn-info" href='@Url.Action("Reallocations", "BudgetReallocations")' style="margin-right:5px">
                                        <i class="glyphicon glyphicon-arrow-left"></i>Back
                                    </a>
                                    <button type="submit" class="btn btn-info" id="form_submision">
                                        <i class="fa fa-save"></i>Save
                                    </button>
                                </div>
                            </div>
                        @*}*@
                        </div>
                    </div>

                </div>
            </article>
        </div>
    </section>
</div>
<div class="modal fade" id="glItemsModal" style="left:4%">

    <div class="modal-dialog" style="width:80%;">
        <div class="modal-content panel-info">
            <div class="modal-header panel-heading">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h3 class="modal-title">GL Items to Reallocate</h3>
            </div>
            <div class="modal-body">
                <div>
                    <div class="row" style="padding-top:1%;padding-bottom:1%">
                        <div class="col-md-6">
                        </div>
                        <div class="col-md-6">
                            <div class="search-container submit-btn" style="float:right">
                                <i class="fa fa-search search-icon"></i>
                                <input type="search" name="search" placeholder="Search..." id="searchboxItems">
                            </div>
                        </div>
                    </div>
                    <table id="dt_search_gl_items" class="table table-striped table-bordered table-hover table-condensed" width="100%">
                        <thead>
                            <tr>
                                <th>#</th>
                                <th>Expenditure Line Item</th>
                                <th>Description</th>
                                <th>Budget Balance</th>
                                <th>Debit Amount</th>
                                <th>Credit Amount</th>
                            </tr>
                        </thead>
                    </table>

                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-info" id="btn_save_gl_items">
                        <i class="fa fa-save"></i>Save
                    </button>
                    <button class="btn btn-info" data-dismiss="modal">
                        <i class="fa  fa-times"></i>Cancel
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>
@section pagespecific{
    <script>
        $('#AmountFrom').autoNumeric('init');
        $('#AmountTo').autoNumeric('init');

        $(document).ready(function () {
            $("#dt_search_gl_item_wrapper .dt-toolbar").remove();
            $("#dt_search_gl_item_to_wrapper .dt-toolbar").remove();
            $("#dt_reallocation_detail_wrapper .dt-toolbar").remove();
            $("#dt_reallocation_detail_wrapper .dt-toolbar-footer").remove();
        });
        $("#total_voucher_amount").on("keyup input paste cut", function () {
            $("#total_voucher_amount").val(inputThousandSeparator(this.value))
        })
        $("#searchboxItems").on("keyup search input paste cut", function () {
            dt_search_gl_items.DataTable().search(this.value).draw();
        });
        var dt_search_gl_items = $('#dt_search_gl_items').dataTable({
        });
        var dt_reallocation_detail = $('#dt_reallocation_detail').dataTable({
        });

        function DtlamtChanged(id){
            console.log(id);
            var dramt = $('#AmtTo-' + id).val();
            var cramt = $('#AmtFrm-' + id).val();
            //console.log(dramt);
            //console.log(cramt);
            computeTotalLineAmt();
            if (dramt > 0 && cramt > 0) {
                swal("Crediting and Debiting Same Budget Line is not Allowed!")
                return;
            }
            if ($('#RequestType').val() == "ACROSS" && cramt > 0) {
                swal("Crediting This Line is not allowed for This Reallocation Type")
                return;
            }

        }

        function computeTotalLineAmt() {
            var total_Dramount = 0;
            var total_Cramount = 0;
            var difference = 0;
            var amount = "";
            var amtfromTot = 0;
            var amttoTot = 0;
            var realocdata = dt_reallocation_detail.DataTable().rows().data();
            var obj = [];
            console.log(realocdata)
            for (var i = 0; i < realocdata.length; i++) {

                var _row = realocdata.rows(i).data()[0];

                var amtfrom = parseFloat($("#AmtFrm-" + _row[1]).val());
                var amtto = parseFloat($("#AmtTo-" + _row[1]).val());
                amtfromTot = amtfromTot + amtfrom;
                amttoTot = amttoTot + amtto;

            }
            $("#AmountFrom").val(amtfromTot);
            $("#AmountTo").val(amttoTot);
        }

        function SearchGl() {
            if ($('#RequestType').val() == "") {
                swal("Please Select Reallocation Type")
                return
            } else if ($('#SubBudgetClass').val() == "") {
                swal("Please Select Subbudget Class")
                return
            }
            else {
                //remove(form_data_statusTo);
                updateSearchGLTable();
                $('#glItemsModal').modal('show');
                computeTotalItemsAmt();
            }

        }
        function updateSearchGLTable() {
            var subbudgetclass = $("#SubBudgetClass").val();
            var url = '@Url.Action("GetBudgetBalance", "BudgetReallocations")';
            var fundBalanceParams = { "subBudgetClass": subbudgetclass };
            if ($('#RequestType').val() == "ACROSS") {

            }

            $.ajax({
                type: "post",
                url: url,
                data: fundBalanceParams,
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {
                    //=== UPDATE SEARCH GI TABLE ====
                    data = response.data;
                    dt_search_gl_items.fnClearTable();
                    for (var i = 0; i < data.length; i++) {
                        dt_search_gl_items.fnAddData([i + 1,
                            data[i]["GlAccount"].split("|").join("-"),
                            data[i]["GlAccountDesc"],
                            data[i]["BudgetBalance"], 
                            '<input type="number" placeholder="Amount" id="Dr-' + i + '" onkeyup="amountDrChanged(' + i + ')"/>',
                            '<input type="number" placeholder="Amount" id="Cr-' + i + '" onkeyup="amountCrChanged(' + i + ')"/>'
                        ]);
                    }
                },
                failure: function (error) {
                    swal(error);
                }
            });
        }

        var form_data_statusDr = [];
        var all_amountsDr = {};
        function amountDrChanged(i) {
            var data = dt_search_gl_items.DataTable().rows().data();
            var row = data.rows(i).data()[0]
            var original_amount = parseFloat(row[3]);
            var entered_amount = parseFloat($("#Dr-" + i).val());
            all_amountsDr["Dr-" + i] = $("#Dr-" + i).val();
            console.log(original_amount);
        }
        var form_data_statusCr = [];
        var all_amountsCr = {};
        function amountCrChanged(i) {
            var data = dt_search_gl_items.DataTable().rows().data();
            var row = data.rows(i).data()[0]
            var original_amount = parseFloat(row[3]);
            var entered_amount = parseFloat($("#Cr-" + i).val());
            all_amountsDr["Cr-" + i] = $("#Cr-" + i).val();
            //console.log(original_amount);
            //console.log(all_amountsDr["Cr-" + i]);
            var balance = original_amount - entered_amount;

            if (balance < 0) {
                form_data_statusCr.push(i);
                $("#Cr-" + i).css({ 'color': 'red' });
                swal("Entered Amount Has Exceeded The Budget Balance");
                return
            } else {
                $("#Cr-" + i).css({ 'color': 'black' });
                remove(form_data_statusCr, i);
                computeTotalItemsAmt();
            }
        }
        function computeTotalItemsAmt() {
            var total_Dramount = 0;
            var total_Cramount = 0;
            var difference = 0;
            var amount = "";
            var data = dt_search_gl_items.DataTable().rows().data();
            var obj = [];

            for (var i = 0; i < data.length; i++) {
                var Dramount = all_amountsDr["Dr-" + i];
                var Cramount = all_amountsCr["Dr-" + i];

                if (Dramount == undefined) {
                    Dramount = "";
                }
                if (Dramount.trim()) {
                    total_Dramount = parseFloat(total_Dramount) + parseFloat(Dramount);
                }
                if (Cramount == undefined) {
                    Cramount = "";
                }
                if (Cramount.trim()) {
                    total_Cramount = parseFloat(total_Cramount) + parseFloat(Cramount);
                }
            }
            try {
                difference = parseFloat($('#AmountFrom').val()) - parseFloat(total_Cramount);
                $('#difference').val(difference);
                if (difference < 0) {
                    $("#difference").css({ 'color': 'red' });
                    return
                } else {
                    $("#difference").css({ 'color': 'black' });
                }
            } catch (e) { }
            //console.log(total_Cramount)
            //console.log(total_Dramount)
            $("#AmountFrom").val(total_Cramount);
            $("#AmountTo").val(total_Dramount);
        }

        function computeTotalItemsAmt1() {
            var total_Dramount = 0;
            var total_Cramount = 0;
            var difference = 0;
            var amount = "";
            var data = dt_reallocation_detail.DataTable().rows().data();
            var obj = [];

            var row = data.rows(i).data()[0];
            var Dramount = 0;
            var Cramount = 0;

            for (var i = 0; i < data.length; i++) {
                var row = data.rows(i).data()[0];

                Dramount = row[4];
                Cramount = row[5];

                if (Dramount == undefined) {
                    Dramount = "";
                }
                if (Dramount.trim()) {
                    total_Dramount = parseFloat(total_Dramount) + parseFloat(Dramount);
                }
                if (Cramount == undefined) {
                    Cramount = "";
                }
                if (Cramount.trim()) {
                    total_Cramount = parseFloat(total_Cramount) + parseFloat(Cramount);
                }
            }

            console.log(total_Cramount)
            console.log(total_Dramount)
            $("#AmountFrom").val(total_Cramount);
            $("#AmountTo").val(total_Dramount);
        }

        // ====== END OF SEARCH GL ==============
        $("#btn_save_gl_items").click(function () {

            var total_Dramount = 0;
            var total_Cramount = 0;
            var difference = 0;
            var data = dt_search_gl_items.DataTable().rows().data();
            if (form_data_statusCr.length == 0) {
                var obj = [];
               // dt_reallocation_detail.fnClearTable();

                for (var i = 0; i < data.length; i++) {

                    var amountDr = all_amountsDr["Dr-" + i];
                    var amountCr = all_amountsDr["Cr-" + i];
                    if (amountDr == undefined) {
                        amountDr = "";
                    }
                    if (amountCr == undefined) {
                        amountCr = "";
                    }
                    if (amountDr.trim()) {
                        var row = data.rows(i).data()[0];
                        if (parseFloat(amountDr) > 0) {

                            var dtl_frm_data = {
                                "ReallocationID": $("#ReallocationID").val(),
                                "ApplyDate": $("#ApplyDate").val(),
                                "Book": $("#Book").val(),
                                "JournalTypeCode": $("#JournalTypeCode").val(),
                                "ExchangeRate": 1,
                                "SubBudgetClass": $("#SubBudgetClass").val(),
                                "RequestType": $("#RequestType").val(),
                                "RequestDesc": $("#RequestDesc").val(),
                                "AmountFrom": 0,
                                "AmountTo": amountDr,
                                "GLAccount": row[1].split("-").join("|"),
                                "CreatedBy": $("#CreatedBy").val(),
                                "InstitutionId": $("#InstitutionId").val(),
                                "InstitutionCode": $("#InstitutionCode").val(),
                                "InstitutionName": $("#InstitutionName").val(),
                                "PaystationId": $("#PaystationId").val()
                            }

                            postReallocationDtl(dtl_frm_data);
                        }
                        //total_Dramount = parseFloat(total_Dramount) + parseFloat(amountDr);

                        //$("#AmountTo").val(total_Dramount);
                    }
                    if (amountCr.trim()) {
                        var row = data.rows(i).data()[0];
                        if (parseFloat(amountCr) > 0) {

                            var dtl_frm_data = {
                                "ReallocationID": $("#ReallocationID").val(),
                                "ApplyDate": $("#ApplyDate").val(),
                                "Book": $("#Book").val(),
                                "JournalTypeCode": $("#JournalTypeCode").val(),
                                "ExchangeRate": 1,
                                "SubBudgetClass": $("#SubBudgetClass").val(),
                                "RequestType": $("#RequestType").val(),
                                "RequestDesc": $("#RequestDesc").val(),
                                "AmountFrom": amountCr,
                                "AmountTo": 0,
                                "GLAccount": row[1].split("-").join("|"),
                                "CreatedBy": $("#CreatedBy").val(),
                                "InstitutionId": $("#InstitutionId").val(),
                                "InstitutionCode": $("#InstitutionCode").val(),
                                "InstitutionName": $("#InstitutionName").val(),
                                "PaystationId": $("#PaystationId").val()
                            }

                            postReallocationDtl(dtl_frm_data);
                        }
                        //total_Cramount = parseFloat(total_Cramount) + parseFloat(amountCr);

                        //$("#AmountFrom").val(total_Cramount);
                    }
                }

                $('#glItemsModal').modal('hide');
            } else {
                swal("Please Correct the Aount To Reallocate From....");
            }
            toggleTableInfo();
        })
        function postReallocationDtl(dtl_frm_data) {
            console.log(dtl_frm_data);
            var url = '@Url.Action("CreateReallocationDtl", "Budgetreallocations")';
            var urlList = '@Url.Action("Editreallocation", "Budgetreallocations")';
            $("#form_submision").prop('disabled', true);
            $("#saveLoader").toggle(true);
            $.ajax({
                type: "post",
                url: url,
                data: dtl_frm_data,
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {
                    $("#form_submision").prop('disabled', false);
                    $("#saveLoader").toggle(false);
                    if (response == "Success") {
                        swal("Saved Successfully!", { icon: "success" })
                            .then((value) => {
                                window.location.href = urlList;
                            });
                    }
                    else {
                        swal(response);
                    }
                },
                failure: function (error) {
                    $("#form_submision").prop('disabled', false);
                    $("#saveLoader").toggle(false);
                    swal(error);
                }
            });
        }
        function DeleteReallocDtl(id) {
            //if (i == 'x') i = globalPayeeId;
            console.log(id)
            swal({
                title: "Are you sure?",
                text: "Once deleted, you will not be able to recover this Entry!",
                buttons: [
                  'No',
                  'Yes'
                ],
            }).then(function (isConfirm) {
                if (isConfirm) {
                    deleteItemConfirmed(id)
                } else {
                    swal("Cancelled", "No change was made");
                }
            });
            $('#confirmModal').modal('hide');
        }

        function deleteItemConfirmed(id) {
            var url = '@Url.Action("DeleteReallocationDtl", "Budgetreallocations")';
            $.ajax({
                type: "post",
                url: url,
                data: { "id": id },
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {

                    if (response == "Success") {
                        swal("Record Deleted!", { icon: "success" })
                        .then((value) => {
                            window.location.reload();
                        });
                    }
                    else {
                        swal(response);
                    }

                },
                failure: function (error) {
                    swal(error);
                }
            });
        }


        //==== START OF ADD GL Items to Voucher Details ======
        function remove(array, val) {
            var found = array.indexOf(val);
            while (found !== -1) {
                array.splice(found, 1);
                found = array.indexOf(val);
            }
        }

        toggleTableInfo();
        function toggleTableInfo() {
            var data = dt_reallocation_detail.DataTable().rows().data();
            if (data.length > 0) {
                $("#dt_reallocation_detail").toggle(true);
                $("#infoPanel").toggle(false);
            } else {
                $("#dt_reallocation_detail").toggle(false);
                $("#infoPanel").toggle(true);
            }
        }
        //==== END OF ADD GL Items to Voucher Details ======

        $("#form_submision").click(function () {

            var reallocId = $("#ReallocationID").val();
            var reallocationDetails = [];
            var reallocationDetailsData = dt_reallocation_detail.DataTable().rows().data();
            var amtfromTot = 0;
            var amttoTot = 0
            console.log("reallocationDetailsData " + reallocationDetailsData);
            for (var i = 0; i < reallocationDetailsData.length; i++) {

                var _row = reallocationDetailsData.rows(i).data()[0];

                var baseAmountDetail = parseFloat(_row[3]) * 1;
                //var entered_amount = parseFloat($("#Id-" + _row[1]).val());
                var amtfrom = parseFloat($("#AmtFrm-" + _row[1]).val());
                var amtto = parseFloat($("#AmtTo-" + _row[1]).val());
                amtfromTot = amtfromTot + amtfrom;
                amttoTot = amttoTot + amtto;
                //console.log(amtfrom)
                reallocationDetails.push({

                    "ReallocationDtlID": _row[1],
                    "GLAccount": _row[2].split("-").join("|"),
                    "AmountTo": amtto,
                    "AmountFrom": amtfrom,
                    "ReallocationID": reallocId,
                })

            }
            console.log(reallocationDetails);
            var form_data = {
                "ApplyDate": $("#ApplyDate").val(),
                "Book": $("#Book").val(),
                "JournalTypeCode": $("#Book").val(),
                "ExchangeRate": 1,
                "SubBudgetClass": $("#SubBudgetClass").val(),
                "RequestType": $("#RequestType").val(),
                "RequestDesc": $("#RequestDesc").val(),
                "AmountFrom": $("#AmountFrom").val(),
                "AmountTo": $("#AmountTo").val(),
                "ReallocationID": $("#ReallocationID").val(),
                "LegalNumber": $("#LegalNumber").val(),
                "CreatedBy": $("#CreatedBy").val(),
                "InstitutionId": $("#InstitutionId").val(),
                "InstitutionCode": $("#InstitutionCode").val(),
                "InstitutionName": $("#InstitutionName").val(),
                "PaystationId": $("#PaystationId").val(),
                "BudgetReallocationDtls": reallocationDetails
            }

            console.log(form_data);
            if ($("#RequestType").val() == "WITHIN") {

                if ($("#AmountFrom").val().trim() != $("#AmountTo").val().trim()) {
                    swal("Reallocation Amount Must Match  .");
                    //dt_reallocation_detail.fnClearTable();
                }
                else {
                    try {
                        //if (voucherDetails.length == 0) {
                        if (reallocationDetails.length == 0) {
                            swal("No GL Items Selected")
                        } else {
                            var url = '@Url.Action("EditReallocation", "Budgetreallocations")';
                            var urlList = '@Url.Action("Reallocations", "Budgetreallocations")';
                            $("#form_submision").prop('disabled', true);
                            $("#saveLoader").toggle(true);
                            $.ajax({
                                type: "post",
                                url: url,
                                data: form_data,
                                contenttype: "application/json; charset=utf-8",
                                datatype: "json",
                                success: function (response) {
                                    $("#form_submision").prop('disabled', false);
                                    $("#saveLoader").toggle(false);
                                    if (response == "Success") {
                                        swal("Saved Successfully!", { icon: "success" })
                                            .then((value) => {
                                                window.location.href = urlList;
                                            });
                                    }
                                    else {
                                        swal(response);
                                    }
                                },
                                failure: function (error) {
                                    $("#form_submision").prop('disabled', false);
                                    $("#saveLoader").toggle(false);
                                    swal(error);
                                }
                            });
                        }
                    } catch (e) {
                        swal("Error Saving. Please consult system administrator! " + e.toString());
                    }

                }
            } else {
                try {
                    //if (voucherDetails.length == 0) {
                    if (reallocationDetails.length == 0) {
                        swal("No GL Items Selected")
                    } else {
                        var url = '@Url.Action("EditReallocation", "Budgetreallocations")';
                        var urlList = '@Url.Action("Reallocations", "Budgetreallocations")';
                        $("#form_submision").prop('disabled', true);
                        $("#saveLoader").toggle(true);
                        $.ajax({
                            type: "post",
                            url: url,
                            data: form_data,
                            contenttype: "application/json; charset=utf-8",
                            datatype: "json",
                            success: function (response) {
                                $("#form_submision").prop('disabled', false);
                                $("#saveLoader").toggle(false);
                                if (response == "Success") {
                                    swal("Saved Successfully!", { icon: "success" })
                                        .then((value) => {
                                            window.location.href = urlList;
                                        });
                                }
                                else {
                                    swal(response);
                                }
                            },
                            failure: function (error) {
                                $("#form_submision").prop('disabled', false);
                                $("#saveLoader").toggle(false);
                                swal(error);
                            }
                        });
                    }
                } catch (e) {
                    swal("Error Saving. Please consult system administrator! " + e.toString());
                }
            }
        });
</script>
}
