@model IFMIS.Areas.IFMISTZ.Models.LoanTypeVM
@{
    ViewBag.Title = "Edit Loan Type";

}
<style>
    .search-btn {
        border: 1px solid #ccc;
        border-radius: 4px;
        padding: 5px;
        padding-right: 10px;
    }

    .search-container {
        display: inline-flex;
        flex: 1 1 300px;
        position: relative;
        border: 1px solid #ccc;
        border-radius: 5px;
        overflow: hidden;
        padding-left: 10px;
    }

    .name-input-container {
        display: inline-flex;
        flex: 1 1 300px;
        position: relative;
        overflow: hidden;
    }

    .search-icon {
        padding: 0.5rem;
    }

    .search-button {
        background: #538AC5;
        border: 0;
        color: white;
        padding: 8px;
        border-radius: 0;
    }

    input[type=number] {
        padding: 8px;
        border: 1px solid #ccc;
        width: 205px;
    }

    input[type=text] {
        padding: 8px;
        border: 1px solid #ccc;
    }

    input[type=search] {
        padding: 4px;
        border: hidden;
        border-radius: 4px;
    }

    textarea {
        border: 1px solid #ccc;
    }

    select {
        padding: 8px;
        border: 1px solid #ccc;
        resize: vertical;
        width: 230px;
    }

    .action-btn {
        width: 100px;
        color: white;
    }

    .form-label {
        text-align: right;
    }

    td {
        padding: 5px;
    }

    .info-box {
        padding: 10px;
        background-color: #ECF3F8;
        text-align: center;
        border: 1px solid #ccc;
        border-radius: 5px;
    }

    .widget-body {
        position: relative;
    }

    .loadingImg {
        margin-left: auto;
        margin-right: auto;
        position: absolute;
        display: none;
        top: 50%;
    }
</style>

<div id="content" style="margin: 5px; padding-top: 30px">
    <div class="row"></div>
    <section id="widget-grid">
        <div class="row">
            <article class="col-sm-12 col-md-12 col-lg-12">

                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">

                    <header>
                        <span class="widget-icon"> <i class="fa fa-table"></i> </span>
                        <h2>@ViewBag.Title</h2>
                    </header>
                    <div>
                        <div class="widget-body">
                            <div align="center">
                                <img src="~/Media/Images/ajax_loader.gif" class="loadingImg" id="ImageLoader" />
                            </div>
                            @using (Html.BeginForm("EditLoanType", "LoanTypes", FormMethod.Post, new { @class = "form-horizontal", onsubmit = "return validateForm(this);" }))

                            {
                                <div class="row" style="padding:1% 5% 0 5%;">

                                    <div class="col-md-6 col-lg-6 col-sm-12 ">
                                        <table>

                                            @Html.AntiForgeryToken()

                                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                            <tr>
                                                <td class="form-label">
                                                    Loan Code
                                                    <i class="fa fa-times" style="color:white" id="loanCodex"></i>
                                                </td>
                                                <td>
                                                    <div class="input-group">
                                                        <input type="hidden" name="LoanTypeId" value="@ViewBag.loanTypeId" id="LoanTypeId" />
                                                        @Html.TextBoxFor(model => model.LoanCode, new { @Class = "input", @required = "required", style = "width:300px; " })
                                                        @Html.ValidationMessageFor(model => model.LoanCode, "", new { @class = "text-danger" })
                                                    </div>
                                                </td>
                                            </tr>
                                            <tr>
                                                <td class="form-label">
                                                    Description
                                                    <i class="fa fa-times" style="color:white" id="description"></i>
                                                </td>
                                                <td>
                                                    @Html.TextArea("LoanTypeDesc", null, new { @class = "form-control", @required = "required", rows = "2", cols = "41", @style = "width:300px;" })

                                                    @Html.ValidationMessageFor(model => model.LoanTypeDesc, "", new { @class = "text-danger" })
                                                </td>
                                            </tr>

                                            <tr>
                                                <td class="form-label">
                                                    Receivable Account
                                                </td>
                                                <td>
                                                    @Html.Hidden("DrGLAccountDesc")
                                                    @Html.TextBoxFor(model => model.DrGLAccount, new { @Class = "input", @required = "required", style = "width:300px; ", type = "hidden" })
                                                    @Html.ValidationMessageFor(model => model.DrGLAccount, "", new { @class = "text-danger" })

                                                    <a class="search-btn" onclick="SearchGl(1)" href="#" style="display:block;width:300px" id="DrGLAccount2">
                                                        <i class="fa fa-search search-icon"></i>
                                                        Search...
                                                    </a>
                                                </td>
                                            </tr>

                                            <tr>
                                                <td class="form-label">Loan Control Account</td>
                                                <td>
                                                    @Html.Hidden("CrGLAccountDesc")
                                                    @Html.TextBoxFor(model => model.CrGLAccount, new { @Class = "input", @required = "required", style = "width:300px; ", type = "hidden" })
                                                    @Html.ValidationMessageFor(model => model.CrGLAccount, "", new { @class = "text-danger" })
                                                    <a class="search-btn" onclick="SearchGl(2)" href="#" style="display:block;width:300px" id="CrGLAccount2">
                                                        <i class="fa fa-search search-icon"></i>
                                                        Search...
                                                    </a>
                                                </td>
                                            </tr>

                                            <tr>
                                                <td class="form-label">Interest Receivable Account</td>
                                                <td>
                                                    @Html.Hidden("InterestGLAccountDesc")
                                                    @Html.TextBoxFor(model => model.InterestGLAccount, new { @Class = "input", @required = "required", style = "width:300px; ", type = "hidden" })
                                                    @Html.ValidationMessageFor(model => model.InterestGLAccount, "", new { @class = "text-danger" })
                                                    <a class="search-btn" onclick="SearchGl(3)" href="#" style="display:block;width:300px" id="InterestGLAccount2">
                                                        <i class="fa fa-search search-icon"></i>
                                                        Search...
                                                    </a>
                                                </td>
                                            </tr>

                                            <tr>
                                                <td class="form-label">Interest Revenue Account</td>
                                                <td>
                                                    @Html.Hidden("InterestRevenueDesc")
                                                    @Html.TextBoxFor(model => model.InterestRevenue, new { @Class = "input", @required = "required", style = "width:300px; ", type = "hidden" })
                                                    @Html.ValidationMessageFor(model => model.InterestRevenue, "", new { @class = "text-danger" })
                                                    <a class="search-btn" onclick="SearchGl(4)" href="#" style="display:block;width:300px" id="InterestRevenue2">
                                                        <i class="fa fa-search search-icon"></i>
                                                        Search...
                                                    </a>
                                                </td>
                                            </tr>

                                        </table>
                                    </div>

                                    <div class="col-lg-6 col-sm-12 ">
                                        <table>

                                            <tr>
                                                <td class="form-label">
                                                    Recovery Period (Months)
                                                    <i class="fa fa-times" style="color:white" id="recoveryPeriodx"></i>
                                                </td>
                                                <td>
                                                    <div class="input-group">
                                                        @Html.TextBoxFor(model => model.RecoveryPeriod, new { @Class = "input", @required = "required", style = "width:300px; ", type = "number", min = "0" })
                                                        @Html.ValidationMessageFor(model => model.RecoveryPeriod, "", new { @class = "text-danger" })
                                                    </div>
                                                </td>
                                            </tr>

                                            <tr>
                                                <td class="form-label">
                                                    Interest Code
                                                    <i class="fa fa-times" style="color:white" id="interestCodex"></i>
                                                </td>
                                                <td>
                                                    <div class="input-group">
                                                        @Html.TextBoxFor(model => model.InterestCode, new { @Class = "input", @required = "required", style = "width:300px; " })
                                                        @Html.ValidationMessageFor(model => model.InterestCode, "", new { @class = "text-danger" })
                                                    </div>
                                                </td>
                                            </tr>
                                            <tr>
                                                <td class="form-label">
                                                    Interest Rate(%)
                                                    <i class="fa fa-times" style="color:white" id="interestRatex"></i>
                                                </td>
                                                <td>
                                                    <div class="input-group">
                                                        @Html.TextBoxFor(model => model.InterestRate, new { @Class = "input", @required = "required", placeholder = "example 0.01", style = "width:300px; " })
                                                        @Html.ValidationMessageFor(model => model.InterestRate, "", new { @class = "text-danger" })
                                                    </div>
                                                </td>
                                            </tr>
                                            <tr>
                                                <td class="form-label">
                                                    Maximum Amount
                                                    <i class="fa fa-times" style="color:white" id="maxAmountx"></i>
                                                </td>
                                                <td>
                                                    <div class="input-group">
                                                        <span class="input-group-addon">
                                                            <strong id="currency">TZS</strong>
                                                        </span>
                                                        @Html.TextBoxFor(model => model.MaxAmount, new { @Class = "input", @required = "required", style = "width:255px; ", type = "number", min = "0" })
                                                        @Html.ValidationMessageFor(model => model.MaxAmount, "", new { @class = "text-danger" })
                                                    </div>
                                                </td>
                                            </tr>

                                            <tr>
                                                <td class="form-label">
                                                    Status
                                                    <i class="fa fa-times" style="color:white" id="status"></i>
                                                </td>
                                                <td>
                                                    <div class="input-group">
                                                        @Html.DropDownList("OverAllStatus", new List<SelectListItem>{
                                                new SelectListItem{ Text="--Select ---", Value = "" },
                                                new SelectListItem{ Text="ACTIVE", Value = "Active" },
                                                new SelectListItem{ Text="INACTIVE", Value = "Inactive" },
                                                 }, new { @class = "form-control", @required = "required", @Id = "OverAllStatus", style = "width:300px;" })
                                                        @Html.ValidationMessageFor(model => model.OverAllStatus, "", new { @class = "text-danger" })
                                                    </div>
                                                </td>
                                            </tr>

                                        </table>
                                    </div>
                                </div>


                                <div class="row">
                                    <div class="col-md-2"></div>
                                    <div class="col-md-6">

                                        <a class="btn btn-info" href='@Url.Action("LoanTypeList", "LoanTypes")' style="margin-right:5px">
                                            <i class="glyphicon glyphicon-arrow-left"></i>Back
                                        </a>
                                        <button type="submit" name="submit" class="btn btn-info" id="form_submision">
                                            <i class="fa fa-save"></i>Save
                                            @*<img src="~/Content/img/loading.gif" id="saveLoader" />*@
                                        </button>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>

                </div>
            </article>
        </div>
    </section>
</div>
<!----------- Search GL Items ----------------->
<div class="modal fade" id="glItemsModal" style="left:4%">

    <div class="modal-dialog" style="width:80%;">
        <div class="modal-content panel-info">
            <div class="modal-header panel-heading">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h3 class="modal-title"> Search Gl Item</h3>
            </div>
            <div class="modal-body">
                <div>
                    <div class="row" style="padding-top:1%;padding-bottom:1%">
                        <div class="col-md-6">
                        </div>
                        <div class="col-md-6">
                            <div class="search-container submit-btn" style="float:right">
                                <i class="fa fa-search search-icon"></i>
                                <input type="search" name="search" placeholder="Search..." id="searchbox2">
                            </div>
                        </div>
                    </div>
                    <table id="dt_search_gl_item" class="table table-striped table-bordered table-hover table-condensed" width="100%">
                        <thead>
                            <tr>
                                <th>#</th>
                                <th>GLAccount String</th>
                                <th>GLAccount Description</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                    </table>

                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-info" id="btn_save_gl_items">
                        <i class="fa fa-save"></i>Save
                    </button>
                    <button class="btn btn-info" data-dismiss="modal">
                        <i class="fa  fa-times"></i>Cancel
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

@section pagespecific{
    <script>


        function validateForm(formObj) {

            //BEGINNING OF VALIDATION
            var LoanCode = $("#LoanCode").val();
            var LoanTypeDesc = $("#LoanTypeDesc").val();
            var DrGLAccount = $("#DrGLAccount").val();
            var CrGLAccount = $("#CrGLAccount").val();
            var InterestGLAccount = $("#InterestGLAccount").val();
            var InterestRevenue = $("#InterestRevenue").val();
            var RecoveryPeriod = $("#RecoveryPeriod").val();
            var InterestCode = $("#InterestCode").val();
            var InterestRate = $("#InterestRate").val();
            var MaxAmount = $("#MaxAmount").val();
            var OverAllStatus = $("#OverAllStatus").val();

            if (LoanCode == "") {
                swal("Loan Code is Required", { icon: "warning" });
                return false;
            }

            if (RecoveryPeriod == "") {
                swal("Recovery Period is Required", { icon: "warning" });
                return false;
            }

            if (LoanTypeDesc == "") {
                swal("Description is Required", { icon: "warning" });
                return false;
            }


            if (InterestCode == "") {
                swal("Interest Code is Required", { icon: "warning" });
                return false;
            }


            if (DrGLAccount == "") {
                swal("Receivable Account is Required", { icon: "warning" });
                return false;
            }


            if (InterestRate == "") {
                swal("Interest Rate is Required", { icon: "warning" });
                return false;
            }

            if (CrGLAccount == "") {
                swal("Loan Control Account is Required", { icon: "warning" });
                return false;
            }

            if (MaxAmount == "") {
                swal("Maximum Amount is Required", { icon: "warning" });
                return false;
            }

            if (InterestGLAccount == "") {
                swal("Interest Receivable Account is Required", { icon: "warning" });
                return false;
            }


            if (OverAllStatus == "--Select ---" || OverAllStatus == "") {
                swal("Status is Required", { icon: "warning" });
                return false;
            }

            if (InterestRevenue == "") {
                swal("Interest Revenue Account is Required", { icon: "warning" });
                return false;
            }

            //END OF VALIDATION
            $(".loadingImg").show();
            document.getElementById("ImageLoader").style.marginLeft = "auto";
            document.getElementById("ImageLoader").style.marginRight = "auto";
            document.getElementById("ImageLoader").style.position = "absolute";
            document.getElementById("ImageLoader").style.top = "50%";
            formObj.submit.disabled = true;
            formObj.submit.value = 'Please Wait...';
            return true;

        }


        $(document).ready(function () {

            $("#DrGLAccount2").text('@ViewBag.RecAccount'.split("|").join("-"));
            $("#CrGLAccount2").text('@ViewBag.LoanCntrlAccount'.split("|").join("-"));
            $("#InterestGLAccount2").text('@ViewBag.InterestRecAcc'.split("|").join("-"));
            $("#InterestRevenue2").text('@ViewBag.InterestRev'.split("|").join("-"));
        });

        if ('@TempData["Success"]' == 'Success') {
            swal("Saved Successfully!", { icon: 'success' })
                 .then(Ok=> {
                     window.location.href = '@Url.Action("LoanTypeList", "LoanTypes")';
                 });
        } else if ('@TempData["Success"]' == 'No') {

            swal("Fail to save Loan Type ", { icon: 'danger' })

        };

        $(document).ready(function () {

            var lpo_amount = $("#MaxAmountx").val();
            if (lpo_amount) {
                $("#MaxAmountx").val(inputThousandSeparator(lpo_amount))
            }

            $("#DrGLAccount").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: "@Url.Action("GetGlAccounts", "LoanTypes")",
                        type: "POST",
                        dataType: "json",
                        data: { Prefix: request.term },
                        success: function (data) {
                            response($.map(data, function (item) {
                                return { label: item.Text, value: item.value };
                            }))

                        }
                    })
                },
                messages: {
                    noResults: "",
                    results: function (count) {
                        return count + (count > 1 ? ' results' : ' result ') + ' found';
                    }
                }
            });
        })

        var dt_search_gl_item = $('#dt_search_gl_item').dataTable();
        $("#dt_search_gl_item_wrapper .dt-toolbar").remove();

        $("#searchbox2").on("keyup search input paste cut", function () {
            if (!this.value) {
                dt_search_gl_item.fnClearTable();
            } else {
                SearchGlAccount(this.value);
            }
        });

        var searchCode = 0;
        function SearchGl(code) {
            searchCode = code;
            $('#glItemsModal').modal('show');
        }


        var data = [];
        function SearchGlAccount(search) {
            var url = '@Url.Action("GetGLAccount", "LoanTypes")/?search=' + search + '';

            $.ajax({
                type: "get",
                url: url,
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {
                    //=== UPDATE SEARCH GI TABLE ====
                    data = response.data;
                    dt_search_gl_item.fnClearTable();
                    for (var i = 0; i < data.length; i++) {
                        dt_search_gl_item.fnAddData([i,
                           data[i]["GlAccount"].split("|").join("-"),
                           data[i]["GlAccountDesc"],
                          '<a href="#" onclick="getcoa(' + i + ')"><i class="glyphicon glyphicon-plus-sign"></i></a>'
                        ]);
                    }
                },
                failure: function (error) {
                    swal(error);
                }
            });
        }

        function getcoa(rowId) {
            var data = dt_search_gl_item.DataTable().rows().data();
            var row = data[rowId];

            if (searchCode == 1) {
                $("#DrGLAccount2").html(row[1]);
                $("#DrGLAccount").val(row[1]);
                $("#DrGLAccountDesc").val(row[2]);
            }
            if (searchCode == 2) {
                $("#CrGLAccount2").html(row[1]);
                $("#CrGLAccount").val(row[1]);
                $("#CrGLAccountDesc").val(row[2]);
            }

            if (searchCode == 3) {
                $("#InterestGLAccount2").html(row[1]);
                $("#InterestGLAccount").val(row[1]);
                $("#InterestGLAccountDesc").val(row[2]);
            }
            if (searchCode == 4) {
                $("#InterestRevenue2").html(row[1]);
                $("#InterestRevenue").val(row[1]);
                $("#InterestRevenueDesc").val(row[2]);
            }


            $('#glItemsModal').modal('hide');
        }

        $("#MaxAmountx").on("keyup input paste", function () {
            $("#MaxAmountx").val(inputThousandSeparator(this.value))
        });
        var OldVal = 0
        function inputThousandSeparator(NewVal) {
            if (NewVal) {
                try {
                    NewVal = parseFloat(NewVal.split(",").join(""))
                    if (typeof NewVal == 'number' && !Number.isNaN(NewVal)) {
                        OldVal = NewVal;
                        return NewVal.toLocaleString()
                    } else {
                        return OldVal
                    }
                } catch (e) {
                    console.log(e)
                }
            }
        }
    </script>
}


