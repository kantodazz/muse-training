@model IEnumerable<IFMIS.Areas.IFMISTZ.Models.DummySalary>
@{
    ViewBag.Title = "Pending";
}


<div id="content" style="margin: 5px; padding-top: 30px">

    <div class="row">


    </div>


    <!-- widget grid -->
    <section id="widget-grid" class="">


        <!-- START ROW -->

        <div class="row">

            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">

                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">

                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2>Dummy Exchequer Examination</h2>

                    </header>


                    <div>
                        <div class="widget-body " style="padding-top:10px;width:100%">

                            <a href="@Url.Action("CreateDummyExchequer","DummySalaries")" class="btn btn-info">
                                <span class="glyphicon glyphicon-plus"></span>
                                Add New
                            </a>
                            @*<div align="center">
                                    <img src="~/Media/Images/ajax_loader.gif" class="loadingImg" style="display:none" />
                                </div>*@
                            <table class="table  table-bordered table-hover table-condensed" id="dt_salaries">
                                <thead>
                                    <tr>
                                        <th></th>
                                        <th>LegalNo</th>
                                        <th>Dummy Reference No</th>
                                        <th>Institution Code</th>
                                        <th>Sub Budget Class</th>
                                        <th >Apply Date</th>
                                        <th style="text-align:right">Amount</th>
                                        <th>Overall Status</th>
                                        <th>Remarks</th>
                                        <th style="text-align:center;width:7%"></th>

                                    </tr>
                                </thead>

                                <tbody>
                                    @{var i = 0;}
                                    @foreach (var item in Model)
                                    {
                                        i++;
                                        <tr>
                                            <td style="text-align:right">
                                                @i
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.LegalNumber)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.ReferenceNo)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.InstitutionCode)- @Html.DisplayFor(modelItem => item.InstitutionName)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.SubBudgetClass)
                                            </td>
                                            <td>
                                                @Convert.ToDateTime(item.ApplyDate).ToString("yyyy-MM-dd")
                                            </td>
                                            <td style="text-align:right">
                                               @Convert.ToDecimal(item.NetAmount).ToString("0#,0.00")
                                            </td>
                                            <td>
                                               @Html.DisplayFor(modelItem => item.OverallStatus)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.Remarks)
                                            </td>

                                            <td style="text-align:center">

                                                <div class="btn-group">

                                                    <button type="button" class="btn btn-info btn-xs dropdown-toggle" data-toggle="dropdown" style="width:40px;border-radius:1px;" aria-haspopup="true" aria-expanded="false">
                                                        <span class="caret"></span>
                                                        <span class="sr-only">Toggle Dropdown</span>
                                                    </button>
                                                    <ul class="dropdown-menu">
                                                        <li>
                                                            <a href="@Url.Action("Details", "DummySalaries",new {id=item.DummySalaryId})" class="btn-xs edit">
                                                                <i class="fa fa-search-minus"></i>  Details
                                                            </a>
                                                        </li>
                                                        <li><a href="#" onclick="examineDummy(@item.DummySalaryId)" class="btn-xs edit"><i class="fa fa-edit"></i> Examine</a></li>
                                                        <li><a href="#" onclick="rejectDummy(@item.DummySalaryId)" class="btn-xs edit"><i class="fa fa-edit"></i> Reject</a></li>

                                                    </ul>
                                                </div>
                                            </td>

                                        </tr>
                                    }
                                </tbody>
                            </table>

                        </div>





                    </div>


                </div>
            </article>

        </div>
    </section>

</div>


<div class="modal fade" id="divModal" tabindex="-1" role="dialog" aria-labelledby="lblmodal">
    <div class="modal-dialog modal-lg" style="width:80%;">
        <div width="90%" class="modal-content">
            <div class="modal-header alert alert-info" style="font:bold 16px Trebuchet MS, Lucida Sans Unicode, Lucida Grande, Lucida Sans, Arial, sans-serif">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title" id="lblmodal">
                    Preview
                </h4>
            </div>
            <div class="modal-body" id="divModalBody">

            </div>

            <div id="divPaymentStatusLoader" style="text-align:center; display:none">
                <img src="~/assets/img/avatars/ajax_loader.gif" />
            </div>
        </div>
    </div>

</div>
<div class="modal fade" id="rejectDummyModal" tabindex="-1" role="dialog" aria-labelledby="lblmodal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header alert alert-info" style="font:bold 16px Trebuchet MS, Lucida Sans Unicode, Lucida Grande, Lucida Sans, Arial, sans-serif">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title" id="lblmodal">Rejection Reason</h4>
            </div>
            <div class="modal-body">
                <div style="display:flex;justify-content:center;align-content:center">
                    <div>
                        <textarea id="RejectionReason" rows="3" style="width:300px;border-radius:2px"></textarea>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button class="btn btn-info delete-confirm" onclick="saveRejection()">Ok</button>
                <button class="btn btn-info delete-cancel" data-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>
@section pagespecific {
    <!-- PAGE RELATED PLUGIN(S) -->

    <script type="text/javascript">


        $(document).ready(function () {
            /* // DOM Position key index //
     l - Length changing (dropdown)
     f - Filtering input (search)
     t - The Table! (datatable)
     i - Information (records)
     p - Pagination (paging)
     r - pRocessing
     < and > - div elements
     <"#id" and > - div with an id
     <"class" and > - div with a class
     <"#id.class" and > - div with an id and class
     Also see: http://legacy.datatables.net/usage/features
     */
            /* BASIC ;*/
            var responsiveHelper_dt_salaries = undefined;
            var responsiveHelper_datatable_fixed_column = undefined;
            var responsiveHelper_datatable_col_reorder = undefined;
            var responsiveHelper_datatable_tabletools = undefined;

            var breakpointDefinition = {
                tablet: 1024,
                phone: 480
            };

            var dt_search_change_account = $('#dt_salaries').dataTable({
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-12 hidden-xs'l>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_dt_salaries) {
                        responsiveHelper_dt_salaries = new ResponsiveDatatablesHelper($('#dt_salaries'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_dt_salaries.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_dt_salaries.respond();
                }
            });

            /* END BASIC */

            /* COLUMN FILTER  */
            var otable = $('#datatable_fixed_column').DataTable({
                //"bFilter": false,
                //"bInfo": false,
                //"bLengthChange": false
                //"bAutoWidth": false,
                //"bPaginate": false,
                //"bStateSave": true // saves sort state using localStorage
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6 hidden-xs'f><'col-sm-6 col-xs-12 hidden-xs'<'toolbar'>>r>" +
                        "t" +
                        "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_fixed_column) {
                        responsiveHelper_datatable_fixed_column = new ResponsiveDatatablesHelper($('#datatable_fixed_column'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_datatable_fixed_column.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_datatable_fixed_column.respond();
                }
            });

            // custom toolbar
            $("div.toolbar").html('<div class="text-right"><img src="/Content/img/logo.png" alt="SmartAdmin" style="width: 111px; margin-top: 3px; margin-right: 10px;"></div>');

            // Apply the filter
            $("#datatable_fixed_column thead th input[type=text]").on('keyup change', function () {
                otable
                    .column($(this).parent().index() + ':visible')
                    .search(this.value)
                    .draw();
            });
            /* END COLUMN FILTER */

            /* COLUMN SHOW - HIDE */
            $('#datatable_col_reorder').dataTable({
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'C>r>" +
                        "t" +
                        "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_col_reorder) {
                        responsiveHelper_datatable_col_reorder = new ResponsiveDatatablesHelper($('#datatable_col_reorder'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_datatable_col_reorder.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_datatable_col_reorder.respond();
                }
            });

            /* END COLUMN SHOW - HIDE */

            /* TABLETOOLS */
            $('#datatable_tabletools').dataTable({

                // Tabletools options:
                //   https://datatables.net/extensions/tabletools/button_options
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'T>r>" +
                        "t" +
                        "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
                "oTableTools": {
                    "aButtons": [
                    "copy",
                    "csv",
                    "xls",
                       {
                           "sExtends": "pdf",
                           "sTitle": "SmartAdmin_PDF",
                           "sPdfMessage": "SmartAdmin PDF Export",
                           "sPdfSize": "letter"
                       },
                       {
                           "sExtends": "print",
                           "sMessage": "Generated by SmartAdmin <i>(press Esc to close)</i>"
                       }
                    ],
                    "sSwfPath": "/Scripts/plugin/datatables/swf/copy_csv_xls_pdf.swf"
                },
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_tabletools) {
                        responsiveHelper_datatable_tabletools = new ResponsiveDatatablesHelper($('#datatable_tabletools'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_datatable_tabletools.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_datatable_tabletools.respond();
                }
            });
            /* END TABLETOOLS */


        });

        //SHOW LOADER ICON
        $(document).ajaxStart(function () {
            $(".loadingImg").show();

        });
        //HIDE LOADER ICON
        $(document).ajaxStop(function () {
            $(".loadingImg").hide();
        });

        var showDetails = function (id) {
            debugger;
            var url = '@Url.Action("Preview", "ChangePayee")';
            $("#divModalBody").load(url, { id: id }, function (response, status, xhr) {
                if (status == "error") {
                    $("#divModalBody").html("Error on previewing");
                }
                $("#divModal").modal("show");
            });
        };
         var examineDummy = function (id, number) {

            swal({
                title: 'Confirmation',
                text: "Are you sure you want to examine?",
                buttons: [
                  'No',
                  'Yes'
                ],
            }).then(function (isConfirm) {
                if (isConfirm) {
                    var url = '@Url.Action("ExamineDummy", "DummySalaries")';
                    $.ajax(
        {
            type: "POST",
            url: url,
            data: { id: id },
            success: function (response) {
                if (response == "Success") {

                    swal("Examined successfully", { icon: "success" })
                        .then((value) => {
                            location.reload();
                        });


                }
                else {

                    swal("Failed to examine,Please contact system admin");
                }
            },
            error: function (xhr) {
                swal(error);
                $("#divLoader").hide();
            },

        });
                } else {
                    swal("Cancelled", "No change was made");
                }
            });
        };

        var rejectDummy = function (id, number) {

            swal({
                title: 'Confirmation',
                text: "Are you sure you want to reject?",
                buttons: [
                  'No',
                  'Yes'
                ],
            }).then(function (isConfirm) {
                if (isConfirm) {
                    var url = '@Url.Action("RejectDummy", "DummySalaries")';
                    $.ajax(
        {
            type: "POST",
            url: url,
            data: { id: id },
            success: function (response) {
                if (response == "Success") {

                    swal("Rejected successfully", { icon: "success" })
                        .then((value) => {
                            location.reload();
                        });


                }
                else {

                    swal("Failed to reject,Please contact system admin");
                }
            },
            error: function (xhr) {
                swal(error);
                $("#divLoader").hide();
            },

        });
                } else {
                    swal("Cancelled", "No change was made");
                }
            });
        };

        var reject = function (id) {

            var url = "RejectDummy/" + id;

            $(".modal-body").load(url, function () {
                $("#rejectModal").modal("show");
            });
        };

        var saveRejection = function () {

            $.validator.unobtrusive.parse("#rejectProformaForm");
            if (!$("#rejectProformaForm").valid()) {
                return false;
            }
            var url = '@Url.Action("RejectDummy", "DummySalaries")';
            var model = $("#rejectProformaForm").serialize();
            $.ajax({
                type: "POST",
                url: url,
                data: model,
                success: function (response) {
                    if (response == "Success") {
                        swal({
                            text: "saved successfully!",
                            icon: "success",
                            button: "OK",
                        }).then(function () {
                            location.reload();
                        });
                    }
                    else {
                        swal({
                            text: response,
                            icon: "error",
                            button: "OK",
                        }).then(function () {
                            location.reload();
                        });
                    }
                },
                error: function (response) {
                    swal({
                        text: response,
                        icon: "error",
                        button: "OK",
                    }).then(function () {
                        location.reload();
                    });
                }
            });
        };
        var DummySalaryId = 0;
        var rejectDummy = function (id) {
            DummySalaryId = id
            $("#rejectDummyModal").modal("show");

        };

        var saveRejection = function () {
            var url = '@Url.Action("RejectDummy", "DummySalaries")';
            if ($("#RejectionReason").val() == "") {
                swal("Rejection Reason is required..!")
            } else {
                $.ajax({
                    type: "POST",
                    url: url,
                    data: {
                        RejectionReason: $("#RejectionReason").val(),
                        DummySalaryId
                    },
                    success: function (response) {
                        if (response == "Success") {
                            swal({
                                text: "saved successfully!",
                                icon: "success",
                                button: "OK",
                            }).then(function () {
                                location.reload();
                            });
                        }
                        else {
                            swal({
                                text: response,
                                icon: "error",
                                button: "OK",
                            }).then(function () {
                                location.reload();
                            });
                        }
                    },
                    error: function (response) {
                        swal({
                            text: response,
                            icon: "error",
                            button: "OK",
                        }).then(function () {
                            location.reload();
                        });
                    }
                });
            }

        };
    </script>
}
