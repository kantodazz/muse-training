
@model IFMIS.Areas.IFMISTZ.Models.TrackerVM
@{
    ViewBag.Title = "Dummy Tracker";
}

<!-- MAIN CONTENT -->
<div id="content" style="margin: 5px; padding-top: 30px">

    <div class="row">
        @*<div class="col-xs-12 col-sm-9 col-md-9 col-lg-9">
                <h1 class="page-title txt-color-blueDark">

                    <!-- PAGE HEADER -->
                    <!--
                    <i class="fa-fw fa fa-pencil-square-o"></i>
                    Payments
                    <span>
                        >
                        Bills
                    </span>
                        -->
                </h1>
            </div>*@

        <div class="col-xs-12 col-sm-3 col-md-3 col-lg-3">
            <!-- Button trigger modal -->
            <!--<a data-toggle="modal" href="#myModal" class="btn btn-success btn-lg pull-right header-btn hidden-mobile"><i class="fa fa-circle-arrow-up fa-lg"></i> Launch form modal</a>-->
        </div>
    </div>

    <!--
    <div class="alert alert-block alert-success">
        <a class="close" data-dismiss="alert" href="#">×</a>
        <h4 class="alert-heading"><i class="fa fa-check-square-o"></i> Check validation!</h4>
        <p>
            You may also check the form validation by clicking on the form action button. Please try and see the results below!
        </p>
    </div>
        -->
    <!-- widget grid -->
    <section id="widget-grid" class="">


        <!-- START ROW -->

        <div class="row">

            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">

                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">
                    <!-- widget options:
                        usage: <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false">

                        data-widget-colorbutton="false"
                        data-widget-editbutton="false"
                        data-widget-togglebutton="false"
                        data-widget-deletebutton="false"
                        data-widget-fullscreenbutton="false"
                        data-widget-custombutton="false"
                        data-widget-collapsed="true"
                        data-widget-sortable="false"

                    -->
                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2> Track Dummy </h2>

                    </header>

                    <!-- widget div-->
                    <div>

                        <!-- widget edit box -->
                        <div class="jarviswidget-editbox">
                            <!-- This area used as dropdown edit box -->

                        </div>
                        <!-- end widget edit box -->
                        <!-- widget content -->
                        <div class="widget-body">
                            <form name="trackForm" id="trackForm" class="form-horizontal">
                                @Html.AntiForgeryToken()
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                <div class="form-group">
                                    <div class="col-md-2">
                                        @Html.LabelFor(model => model.OverallStatus, "Status", htmlAttributes: new { @class = "control-label" })
                                        @Html.DropDownListFor(model => model.OverallStatus, Model.OverallStatue, "Select Status", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.OverallStatus, "", new { @class = "text-danger" })
                                    </div>

                                    <div class="col-md-3">
                                        @Html.LabelFor(model => model.StartDate, "Start Date", htmlAttributes: new { @class = "control-label" })
                                        @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                                    </div>

                                    <div class="col-md-3">
                                        @Html.LabelFor(model => model.EndDate, "End Date", htmlAttributes: new { @class = "control-label" })
                                        @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                                    </div>

                                    <div class="col-md-4">
                                        @Html.LabelFor(model => model.SearchKeyword, htmlAttributes: new { @class = "control-label" })
                                        <div class="input-group">
                                            <input type="text" class="form-control" name="SearchKeyword" placeholder="Search for...">
                                            <span class="input-group-btn">
                                                <button class="btn btn-default" type="button" onclick="trackDummy()">Search</button>
                                            </span>
                                        </div><!-- /input-group -->
                                        @Html.ValidationMessageFor(model => model.SearchKeyword, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </form>

                            <hr />

                            <div id="searchResults" style="margin-top: 20px; display: none"></div>

                        </div>
                        <!-- end widget content -->
                    </div>
                    <!-- end widget div -->

                </div>
                <!-- end widget -->

            </article>
            <!-- END COL -->

        </div>

        <!-- END ROW -->

    </section>
    <!-- end widget grid -->

</div>
<!-- END MAIN CONTENT -->

@section pagespecific {
    <script type="text/javascript">

        $(function () {

            $("#StartDate")
    .wrap('<div class="input-group">')
    .datepicker({
        dateFormat: "yy-mm-dd",
        changeMonth: true,
        changeYear: true,
        showOn: "both",
        buttonImage: "../../Media/Images/calendar.gif",
        maxDate: "+0D"
    })
    .next("button").button({
        icons: { primary: "ui-icon-calendar" },
        label: "Select a date",
        text: false
    })
    .addClass("btn btn-default")
    .wrap('<span class="input-group-btn">')
    .find('.ui-button-text')
    .css({
        'visibility': 'hidden',
        'display': 'inline'
    });

            $("#EndDate")
    .wrap('<div class="input-group">')
    .datepicker({
        dateFormat: "yy-mm-dd",
        changeMonth: true,
        changeYear: true,
        showOn: "both",
        buttonImage: "../../Media/Images/calendar.gif",
        maxDate: "+0D"
    })
    .next("button").button({
        icons: { primary: "ui-icon-calendar" },
        label: "Select a date",
        text: false
    })
    .addClass("btn btn-default")
    .wrap('<span class="input-group-btn">')
    .find('.ui-button-text')
    .css({
        'visibility': 'hidden',
        'display': 'inline'
    });
        });

        var trackDummy = function () {

            var url = '@Url.Action("GetdummyInformation", "DummySalaries")';
            var model = $("#trackForm").serialize();

            $.ajax({
                type: "get",
                url: url,
                data: model,
                success: function (response) {
                    $("#searchResults").show();
                    $("#searchResults").html(response);
                }
            });
        }

         var withdrawDummyExchequer = function (id) {

            swal({
                title: 'Confirmation',
                text: "Are you sure you want to Withdraw?",
                buttons: [
                  'No',
                  'Yes'
                ],
            }).then(function (isConfirm) {
                if (isConfirm) {
                    var url = '@Url.Action("WithdrawDummyExchequer", "DummySalaries")';
                    $.ajax(
        {
            type: "POST",
            url: url,
            data: { id: id },
            success: function (response) {
                if (response == "Success") {

                    swal("Withdrawn successfully", { icon: "success" })
                        .then((value) => {
                            location.reload();
                        });


                }
                else if (response =="Can not Withdraw Approved Fund") {

                    swal("Can not Withdraw Approved Fund");
                }
                else {

                    swal("Failed to withdraw,Please contact system admin");
                }
            },
            error: function (xhr) {
                swal(error);
                $("#divLoader").hide();
            },

        });
                } else {
                    swal("Cancelled", "No change was made");
                }
            });
        };
    </script>
}


