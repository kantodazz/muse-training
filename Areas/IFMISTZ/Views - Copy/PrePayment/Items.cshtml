@model IFMIS.Areas.IFMISTZ.Models.PrePaymentVM
@{
    ViewBag.Title = "Prepayment Details";
}


<div id="content" style="margin: 5px; padding-top: 30px">

    <div class="row">
    </div>


    <!-- widget grid -->
    <section id="widget-grid" class="">


        <!-- START ROW -->

        <div class="row">

            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">

                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">

                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2> Prepayment Details</h2>

                    </header>


                    <div>
                        <div class="widget-body " style="padding-top:10px;width:100%">
                            <table class="table  table-hover table-condensed">
                                <tbody>
                                    <tr>
                                        <td style="width:20%">Prepayment Number</td>
                                        <td><strong>@Html.DisplayFor(model => model.PrePaymentNo)</strong></td>
                                    </tr>
                                    <tr>
                                        <td>Description</td>
                                        <td> @Html.DisplayFor(model => model.PrePaymentDesc)</td>

                                    </tr>
                                    <tr>
                                        <td>Prepayment Amount</td>
                                        <td>@Html.DisplayFor(model => model.Currency) @Html.DisplayFor(model => model.PrePaymentAmount)</td>
                                    </tr>
                                    <tr>
                                        <td>Total Item value</td>
                                        <td>@Html.DisplayFor(model => model.Currency) @Html.DisplayFor(model => model.GrandTotal)</td>
                                    </tr>

                                </tbody>
                            </table>

                            <br />

                            <table class="table table-bordered table-hover table-condensed" id="dt_lpo">
                                <thead>
                                    <tr>
                                        <th style="text-align:center">#</th>
                                        <th style="text-align:left">Item</th>
                                        <th style="text-align:left;width:20%">Item Classification</th>
                                        <th style="text-align:left">UOM</th>
                                        <th style="text-align:center">Quantity</th>
                                        <th style="text-align:right">Unit Price (@Html.DisplayFor(model => model.Currency))</th>
                                        <th style="text-align:right">Total (@Html.DisplayFor(model => model.Currency))</th>

                                    </tr>
                                </thead>

                                <tbody>
                                    @{var i = 0;
                                        decimal grandTotal = 0;
                                        var item_total = 0;}
                                    @if (Model.PrePaymentDetails !=null) { 
                                    foreach (var item in Model.PrePaymentDetails)
                                    {
                                        grandTotal = grandTotal + Convert.ToDecimal(item.TotalAmount);
                                        item_total = item_total + (int)item.Quantity;
                                        i++;
                                        <tr>
                                            <td style="text-align:center">
                                                @i
                                            </td>
                                            <td style="text-align:left">
                                                @Html.DisplayFor(modelItem => item.ItemDesc)
                                            </td>
                                            <td style="text-align:left">
                                                @Html.DisplayFor(modelItem => item.ItemClassification.ClassificationDesc)
                                            </td>
                                            <td style="text-align:left">
                                                @Html.DisplayFor(modelItem => item.UOM)
                                            </td>
                                            <td style="text-align:center">
                                                @Html.DisplayFor(modelItem => item.Quantity)
                                            </td>
                                            <td style="text-align:right">

                                                @Html.DisplayFor(modelItem => item.UnitPrice)

                                            </td>
                                            <td style="text-align:right">

                                                @Html.DisplayFor(modelItem => item.TotalAmount)
                                            </td>

                                        </tr>

                                    } 
                                    }

                                </tbody>
                            </table>
                        </div>
                        <div class="panel-footer">
                            <a href="@Url.Action("PrePayments", "PrePayment")" class="btn btn-info btn-flat">
                                <span class="glyphicon glyphicon-arrow-left" aria-hidden="true"></span>
                                Back
                            </a>
                        </div>

                    </div>
                </div>
            </article>

        </div>
    </section>

</div>


<div class="modal fade" id="rejectedPrePayment">
    <div class="modal-dialog">
        <div class="modal-content">

            <div class="modal-header">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h4 align="center">Prepayment Number <span id="lpo_number"></span></h4>
            </div>

            <div class="modal-body">


                <span id="reason"></span>


            </div>
            <div class="modal-footer">
                <a href="#" class="btn btn-info" data-dismiss="modal">Ok</a>

            </div>


        </div>
    </div>
</div>
                <!-- end widget div -->
<div class="modal fade" id="lpodetail" style="left:4%">

    <div class="modal-dialog" style="width:40%;">
        <div class="modal-content panel-info">


            <div class="modal-header panel-heading">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h3 class="modal-title"> Prepayment Detail</h3>

            </div>
@using (Html.BeginForm(null, null, FormMethod.Post, new {@class = "well form-horizontal",id= "prePaymentItem" }))
{

            <div class="modal-body">
                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.PrePaymentId)
                <div class="form-group">
                    <label class="col-md-4 control-label">Item Class</label>
                    <div class="col-md-8 inputGroupContainer">
                        <div class="input-group">
                            @Html.DropDownList("PrepaymentItemClassificationId", Model.ItemClassificationsList, "Select Item Class", new { @class = "selectpicker", @style = "background-color:white;width:230px;" })
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-4 control-label">Item</label>
                    <div class="col-md-8 inputGroupContainer">
                        <div class="input-group">
                            @Html.EditorFor(model => model.ItemDesc, new { htmlAttributes = new { @style = "background-color:white;width:230px;height:40px;", @placeholder = "Enter Item" } })
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-4 control-label">Unit Of Measure</label>
                    <div class="col-md-8 inputGroupContainer">
                        <div class="input-group">
                            <div>
                                @Html.DropDownList("UomId", Model.UOMList, "Select Item Class", new { @class = "selectpicker", @style = "background-color:white;width:230px;" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-4 control-label">Quantity</label>
                    <div class="col-md-8 inputGroupContainer">
                        <div class="input-group">
                            @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @style = "background-color:white;width:230px;height:40px;", @placeholder = "Enter Number of Item" } })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <label class="col-md-4 control-label">Unit Price</label>
                    <div class="col-md-8 inputGroupContainer">
                        <div class="input-group">
                            @Html.EditorFor(model => model.UnitPrice, new { htmlAttributes = new { @style = "background-color:white;width:230px;height:40px;", @placeholder = "Unit Price" } })
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-4 control-label">Total</label>
                    <div class="col-md-8 inputGroupContainer">
                        <div class="input-group">
                            @Html.EditorFor(model => model.TotalAmount, new { htmlAttributes = new { @style = "background-color:white;width:230px;height:40px;", @readonly = "readonly" } })
                        </div>
                    </div>
                </div>
               
            </div>
            <div class="modal-footer">
                <a href="#" class="btn btn-default" data-dismiss="modal">Cancel</a>
                <input class="btn btn-info" type="submit" id="btnSubmit" style="width:80px;border-radius:1px;background-color:#2196F3;color:white" value="Save" />
              
            </div>
             }
        </div>
    </div>
</div>





@section pagespecific {
    <!-- PAGE RELATED PLUGIN(S) -->
   
<script type="text/javascript">

    $(document).ready(function () {
        /* // DOM Position key index //
    l - Length changing (dropdown)
    f - Filtering input (search)
    t - The Table! (datatable)
    i - Information (records)
    p - Pagination (paging)
    r - pRocessing
    < and > - div elements
    <"#id" and > - div with an id
    <"class" and > - div with a class
    <"#id.class" and > - div with an id and class
    Also see: http://legacy.datatables.net/usage/features
    */
        /* BASIC ;*/
        var responsiveHelper_dt_lpo = undefined;
        var responsiveHelper_datatable_fixed_column = undefined;
        var responsiveHelper_datatable_col_reorder = undefined;
        var responsiveHelper_datatable_tabletools = undefined;

        var breakpointDefinition = {
            tablet: 1024,
            phone: 480
        };

        $('#dt_lpo').dataTable({
            "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-12 hidden-xs'l>r>" +
                "t" +
                "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
            "autoWidth": true,
            "preDrawCallback": function () {
                // Initialize the responsive datatables helper once.
                if (!responsiveHelper_dt_lpo) {
                    responsiveHelper_dt_lpo = new ResponsiveDatatablesHelper($('#dt_lpo'), breakpointDefinition);
                }
            },
            "rowCallback": function (nRow) {
                responsiveHelper_dt_lpo.createExpandIcon(nRow);
            },
            "drawCallback": function (oSettings) {
                responsiveHelper_dt_lpo.respond();
            }
        });

        /* END BASIC */

        /* COLUMN FILTER  */
        var otable = $('#datatable_fixed_column').DataTable({
            //"bFilter": false,
            //"bInfo": false,
            //"bLengthChange": false
            //"bAutoWidth": false,
            //"bPaginate": false,
            //"bStateSave": true // saves sort state using localStorage
            "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6 hidden-xs'f><'col-sm-6 col-xs-12 hidden-xs'<'toolbar'>>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
            "autoWidth": true,
            "preDrawCallback": function () {
                // Initialize the responsive datatables helper once.
                if (!responsiveHelper_datatable_fixed_column) {
                    responsiveHelper_datatable_fixed_column = new ResponsiveDatatablesHelper($('#datatable_fixed_column'), breakpointDefinition);
                }
            },
            "rowCallback": function (nRow) {
                responsiveHelper_datatable_fixed_column.createExpandIcon(nRow);
            },
            "drawCallback": function (oSettings) {
                responsiveHelper_datatable_fixed_column.respond();
            }
        });

        // custom toolbar
        $("div.toolbar").html('<div class="text-right"><img src="/Content/img/logo.png" alt="SmartAdmin" style="width: 111px; margin-top: 3px; margin-right: 10px;"></div>');

        // Apply the filter
        $("#datatable_fixed_column thead th input[type=text]").on('keyup change', function () {
            otable
                .column($(this).parent().index() + ':visible')
                .search(this.value)
                .draw();
        });
        /* END COLUMN FILTER */

        /* COLUMN SHOW - HIDE */
        $('#datatable_col_reorder').dataTable({
            "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'C>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
            "autoWidth": true,
            "preDrawCallback": function () {
                // Initialize the responsive datatables helper once.
                if (!responsiveHelper_datatable_col_reorder) {
                    responsiveHelper_datatable_col_reorder = new ResponsiveDatatablesHelper($('#datatable_col_reorder'), breakpointDefinition);
                }
            },
            "rowCallback": function (nRow) {
                responsiveHelper_datatable_col_reorder.createExpandIcon(nRow);
            },
            "drawCallback": function (oSettings) {
                responsiveHelper_datatable_col_reorder.respond();
            }
        });

        /* END COLUMN SHOW - HIDE */

        /* TABLETOOLS */
        $('#datatable_tabletools').dataTable({

            // Tabletools options:
            //   https://datatables.net/extensions/tabletools/button_options
            "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'T>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
            "oTableTools": {
                "aButtons": [
                "copy",
                "csv",
                "xls",
                   {
                       "sExtends": "pdf",
                       "sTitle": "SmartAdmin_PDF",
                       "sPdfMessage": "SmartAdmin PDF Export",
                       "sPdfSize": "letter"
                   },
                   {
                       "sExtends": "print",
                       "sMessage": "Generated by SmartAdmin <i>(press Esc to close)</i>"
                   }
                ],
                "sSwfPath": "/Scripts/plugin/datatables/swf/copy_csv_xls_pdf.swf"
            },
            "autoWidth": true,
            "preDrawCallback": function () {
                // Initialize the responsive datatables helper once.
                if (!responsiveHelper_datatable_tabletools) {
                    responsiveHelper_datatable_tabletools = new ResponsiveDatatablesHelper($('#datatable_tabletools'), breakpointDefinition);
                }
            },
            "rowCallback": function (nRow) {
                responsiveHelper_datatable_tabletools.createExpandIcon(nRow);
            },
            "drawCallback": function (oSettings) {
                responsiveHelper_datatable_tabletools.respond();
            }
        });
        /* END TABLETOOLS */

        $(".lpoDetail").on('click', function () {
            var id = $(this).data('id');
            $(".modal-body #PrePaymentId").val(id);
            $('.modal-body #ItemDesc').val("");
            $('.modal-body #Quantity').val("");
            $('.modal-body #UnitPrice').val("");
            $('.modal-body #TotalAmount').val("");
        });
        $(function () {
            $("#prePaymentItem").on('submit', function (e) {
                e.preventDefault();
                var item_class = $(".modal-body #ItemClassificationId").val();
                if (!item_class) {
                    alert("Please select Item Class !");
                    return
                }
                var itemDesc = $(".modal-body #ItemDesc").val();
                if (!itemDesc) {
                    alert("Please enter item !");
                    return
                }
                var uomId = $(".modal-body #UomId").val();
                if (!uomId) {
                    alert("Please select Unit of measure !");
                    return
                }
                var quantity = $(".modal-body #Quantity").val();
                if (!quantity) {
                    alert("Please enter quantity of items !");
                    return
                }
                var unitPrice = $(".modal-body #UnitPrice").val();
                if (!unitPrice) {
                    alert("Please enter unit price !");
                    return
                }
               
                $('#lpodetail').modal('hide');
                var formData = $(this).serialize();
                var url = '@Url.Action("InsertPrePaymentDetails", "PrePayment")';
                $.ajax(
                {
                    type: "POST", //HTTP POST Method
                    url: url, // Controller/View
                    data: formData,
                    success: function (data) {
                        if (data == "DbException") {
                            alert(" An error has occured DbException, contact system support");
                            $("#divLoader").hide();
                        } else {
                            alert("Item added successfully");
                            location.reload();
                        }
                    },
                    error: function (xhr) {
                        //console.log(xhr.responseText);
                        alert("An error has occured, contact system support");
                        $("#divLoader").hide();
                    },

                });

            });
        });
        $(function () { // this will be called when the DOM is ready
            $(".modal-body #UnitPrice").keyup(function () {
                var unit_price = parseFloat($(".modal-body #UnitPrice").val());
                var quantity = parseInt($(".modal-body #Quantity").val());
                var total = unit_price * quantity;
                $(".modal-body #TotalAmount").val(total);
               

            });

        });

        $('#items').on("click", ".removeItems", function (e) { //user click on remove
            e.preventDefault();
            var id = $(this).data('id');
            var itemDesc = $(this).data('itemdesc');
            var r = confirm("Do you what to delete  " + itemDesc + " ?");
            if (!r) {
                return;
            }
            var url = '@Url.Action("DeleteItem", "Procurement")';
            $.ajax(
{
    type: "POST",
    url: url,
    data: { id: id },
    success: function (response) {
        if (response == "DbException") {
            alert(" An error has occured DbException, contact system support");
            $("#divLoader").hide();
        } else {
            alert("Deleted successfully");
            location.reload();
        }
    },
    error: function (xhr) {
        //console.log(xhr.responseText);
        alert("An error has occured, contact system support");
        $("#divLoader").hide();
    },

});
        });

    });
</script>

}


