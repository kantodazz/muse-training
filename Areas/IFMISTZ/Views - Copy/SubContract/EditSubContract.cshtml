@model IFMIS.Areas.IFMISTZ.Models.SubContractVM
@{
    ViewBag.Title = "Create Contract";
    var i = 0;
}
<style type="text/css">
    body {
        margin-top: 40px;
    }

    .stepwizard-step p {
        margin-top: 10px;
    }

    .stepwizard-row {
        display: table-row;
    }

    .stepwizard {
        display: table;
        width: 100%;
        position: relative;
    }

    .stepwizard-step button[disabled] {
        opacity: 1 !important;
        filter: alpha(opacity=100) !important;
    }

    .stepwizard-row:before {
        top: 14px;
        bottom: 0;
        position: absolute;
        content: " ";
        width: 100%;
        height: 1px;
        background-color: #ccc;
        z-order: 0;
    }

    .stepwizard-step {
        display: table-cell;
        text-align: center;
        position: relative;
    }

    .loadingImg {
        display: none;
    }

    .search-btn {
        border: 1px solid #ccc;
        border-radius: 4px;
        padding: 5px;
        padding-right: 10px;
    }

    .search-container {
        display: inline-flex;
        flex: 1 1 300px;
        position: relative;
        border: 1px solid #ccc;
        border-radius: 5px;
        overflow: hidden;
        padding-left: 10px;
    }

    .name-input-container {
        display: inline-flex;
        flex: 1 1 300px;
        position: relative;
        overflow: hidden;
    }

    .search-icon {
        padding: 0.5rem;
    }

    .search-button {
        background: #538AC5;
        border: 0;
        color: white;
        padding: 8px;
        border-radius: 0;
    }

    input[type=number] {
        padding: 8px;
        border: 1px solid #ccc;
        width: 205px;
    }

    input[type=text] {
        padding: 5px;
        border: 1px solid #ccc;
    }

    input[type=search] {
        padding: 4px;
        border: hidden;
        border-radius: 4px;
    }

    textarea {
        border: 1px solid #ccc;
    }

    select {
        padding: 8px;
        border: 1px solid #ccc;
        resize: vertical;
        width: 230px;
    }

    .action-btn {
        width: 100px;
        color: white;
    }

    .form-label {
        text-align: right;
    }

    td {
        padding: 5px;
    }

    .info-box {
        padding: 10px;
        background-color: #ECF3F8;
        text-align: center;
        border: 1px solid #ccc;
        border-radius: 5px;
    }
</style>
<div id="content" style="margin: 5px; padding-top: 30px">
    <div class="row">


    </div>
    <!-- widget grid -->
    <section id="widget-grid" class="">


        <!-- START ROW -->

        <div class="row">

            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">

                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">

                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2> Sub Contract Entry </h2>

                    </header>


                    <div>
                        <div class="widget-body " style="padding-top:10px;width:100%">

                            <!----WIZARD HEADING -->

                            <div class="stepwizard">
                                <div class="stepwizard-row setup-panel">
                                    <div class="stepwizard-step">
                                        <a href="#step-1" type="button" class="btn btn-primary btn-circle">1</a>
                                        <p><strong>Basic Information </strong></p>
                                    </div>

                                    <div class="stepwizard-step">
                                        <a href="#step-2" type="button" class="btn btn-default btn-circle" disabled="disabled">2</a>
                                        <p><strong>Payment Schedules</strong></p>
                                    </div>

                                </div>
                            </div>
                            <br />
                            <br />

                            <!----WIZARD BODY -->
                            <!---- STEP 1 START HERE -->

                            <div class="row setup-content" id="step-1">
                                @using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = "return SubmitSummary()" }))
                                {
                                    @Html.AntiForgeryToken()
                                    @Html.HiddenFor(model => model.ContractId)
                                    @Html.HiddenFor(model => model.MainPayeeCode)
                                    @Html.HiddenFor(model => model.PayeeDetailId)
                                    @Html.HiddenFor(model => model.SubContractId)
                                <div class="form-horizontal">



                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.ContractNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-3">
                                            <div class="input-group">
                                                <span class="input-group-addon" onclick="SearchContract()"><i class="fa fa-search"></i></span>
                                                @Html.EditorFor(model => model.ContractNumber, new { htmlAttributes = new { @class = "form-control", @placeholder = "Search", @autocomplete = "off", @required = "required", @onclick = "SearchContract()" } })
                                                @Html.ValidationMessageFor(model => model.ContractNumber, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        @Html.LabelFor(model => model.ContractNo, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-3">
                                            @Html.EditorFor(model => model.ContractNo, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @required = "required", @autocomplete = "off" } })
                                            @Html.ValidationMessageFor(model => model.ContractNo, "", new { @class = "text-danger" })
                                        </div>
                                    </div>


                                    <div class="form-group">
                                        @Html.LabelFor(model => model.ContractName, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-3">
                                            @Html.EditorFor(model => model.ContractName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @required = "required", @autocomplete = "off" } })
                                            @Html.ValidationMessageFor(model => model.ContractName, "", new { @class = "text-danger" })
                                        </div>
                                        @Html.LabelFor(model => model.MainPayeeName, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-3">
                                            @Html.EditorFor(model => model.MainPayeeName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @required = "required", @autocomplete = "off" } })
                                            @Html.ValidationMessageFor(model => model.MainPayeeName, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.ContractAmount, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-3">
                                            <div class="input-group">
                                                <span class="input-group-addon currencyDisp">@Html.DisplayFor(model => model.Currency)</span>
                                                @Html.EditorFor(model => model.ContractAmount, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @required = "required", @autocomplete = "off" } })
                                                @Html.ValidationMessageFor(model => model.ContractAmount, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        @Html.LabelFor(model => model.RemainingAmount, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-3">
                                            <div class="input-group">
                                                <span class="input-group-addon currencyDisp">@Html.DisplayFor(model => model.Currency)</span>
                                                @Html.EditorFor(model => model.RemainingAmount, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @required = "required", @autocomplete = "off" } })
                                                @Html.ValidationMessageFor(model => model.RemainingAmount, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.PayeeName, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-3">
                                            <div class="input-group">
                                                <span class="input-group-addon" onclick="SearchSubContract()"><i class="fa fa-search"></i></span>
                                                @Html.EditorFor(model => model.PayeeName, new { htmlAttributes = new { @class = "form-control", @required = "required", @placeholder = "Search", @autocomplete = "off", @onclick = "SearchSubContract()" } })
                                            </div>
                                            @Html.ValidationMessageFor(model => model.PayeeName, "", new { @class = "text-danger" })

                                        </div>
                                        @Html.LabelFor(model => model.PayeeCode, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-3">
                                            @Html.EditorFor(model => model.PayeeCode, new { htmlAttributes = new { @class = "form-control", @required = "required", @readonly = "readonly", @autocomplete = "off" } })
                                            @Html.ValidationMessageFor(model => model.PayeeCode, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.PayeeBankName, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-3">
                                            @Html.EditorFor(model => model.PayeeBankName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @required = "required", @autocomplete = "off" } })
                                            @Html.ValidationMessageFor(model => model.PayeeBankName, "", new { @class = "text-danger" })
                                        </div>

                                        @Html.LabelFor(model => model.PayeeBankAccount, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-3">
                                            @Html.EditorFor(model => model.PayeeBankAccount, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @required = "required", @autocomplete = "off" } })
                                            @Html.ValidationMessageFor(model => model.PayeeBankAccount, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.PayeeAddress, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-3">
                                            @Html.EditorFor(model => model.PayeeAddress, new { htmlAttributes = new { @class = "form-control", @required = "required", @readonly = "readonly", @autocomplete = "off" } })
                                            @Html.ValidationMessageFor(model => model.PayeeAddress, "", new { @class = "text-danger" })
                                        </div>

                                        @Html.LabelFor(model => model.PayeeType, htmlAttributes: new { @class = "control-label   col-md-2" })
                                        <div class="col-md-3">
                                            @Html.DropDownListFor(model => model.PayeeType, Model.PayeeTypesList, "Select ---", new { @class = "form-control", @required = "required" })
                                            @Html.ValidationMessageFor(model => model.PayeeType, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.SubContractDesc, htmlAttributes: new { @class = "control-label   col-md-2" })
                                        <div class="col-md-3">

                                            @Html.EditorFor(model => model.SubContractDesc, new { htmlAttributes = new { @class = "form-control", @required = "required", rows = "3", maxlength = 250 } })

                                            @Html.ValidationMessageFor(model => model.SubContractDesc, "", new { @class = "text-danger" })
                                        </div>
                                        @Html.LabelFor(model => model.SubContractAmount, htmlAttributes: new { @class = "control-label   col-md-2" })
                                        <div class="col-md-3">

                                            <div class="input-group">

                                                <span class="input-group-addon currencyDisp">@Html.DisplayFor(model => model.Currency)</span>
                                                @Html.EditorFor(model => model.SubContractAmount, new { htmlAttributes = new { @class = "form-control", @required = "required", @autocomplete = "off" } })
                                                @Html.ValidationMessageFor(model => model.SubContractAmount, "", new { @class = "text-danger" })
                                            </div>
                                        </div>


                                    </div>

                                    <div class="col-md-offset-2">
                                        <a href="@Url.Action("PendingSubContract","SubContract")" style="margin-right:5px" type="submit" class="btn btn-info pull-left"><i class="glyphicon glyphicon-arrow-left"></i> Back  </a>
                                        @*<button type="submit" id="summary" class="btn btn-info" style="margin-right:2px">
                <i class="glyphicon glyphicon-floppy-disk"></i> Save
            </button>*@
                                        <button class="btn btn-info" type="button" id="save_sub_contractor" style="margin-right:2px">
                                            <i class="glyphicon glyphicon-floppy-disk"></i> Save
                                        </button>

                                        <button class="btn btn-info nextBtn" type="button">Next &nbsp;<span class="glyphicon glyphicon-arrow-right" aria-hidden="true"></span></button>
                                    </div>
                                    <br />

                                    <div align="center">
                                        <img src="~/Media/Images/ajax_loader.gif" class="loadingImg" />
                                    </div>


                                </div>
                                }
                            </div>


                            <!----STEP 2 START HERE -->
                            <div class="row setup-content" id="step-2">

                            
                                <p align="right" style="padding-left:8px" class="subContractLabel">Sub Contract Amount :<strong><span id="AmountDisplay">@Html.DisplayFor(model => model.SubContractAmount) @Html.DisplayFor(model => model.Currency)</span></strong></p>
                                <table class="table  table-bordered table-hover table-condensed" align="center" style="width:99%;" id="payment_schedules">

                                    <thead><tr><th style="text-align: center">#</th><th style="text-align: center;width:4%">ID</th><th style="text-align: left">Payment Schedule </th><th style="text-align: left">Deliverable</th><th style="text-align: right">Total Amount</th><th style="text-align: right">Balance</th><th style="text-align:right">Amount</th></tr></thead>'
                                    <tbody>
                                        @foreach (var item in Model.PaymentSchedules)
                                        {

                                            i++;
                                        <tr>
                                            <td style="text-align: center">@i</td>
                                            <td>@item.PaymentScheduleId</td>
                                            <td>@item.Description</td>
                                            <td>@item.Deliverable</td>
                                            <td style="text-align: right">@item.Amount.ToString("#,##0/=") </td>
                                            <td style="text-align: right">@Convert.ToDecimal(item.Balance).ToString("#,##0/=")</td>
                                            <td style="text-align: right">
                                                <amount-input placeholder = "Amount" max ='@item.Balance' value='@item.ConsumedAmount'  onkeyup = "amountChanged(this)"/>
                                            </td>

                                        </tr>

                                        }
                                    <tr>
                                        <td align="right" colspan="4">Grand Total</td>
                                        <td align="right"><strong>@Model.PaymentSchedules.Select(a => a.Amount).DefaultIfEmpty(0).Sum().ToString("#,##0/=")</strong></td>
                                        <td align="right"><strong>@Convert.ToDecimal(Model.PaymentSchedules.Select(a => a.Balance).DefaultIfEmpty(0).Sum()).ToString("#,##0/=")</strong></td>
                                        <td align="right">
                                            <button type="button" id="submit_amount" class="btn btn-info" style="margin-right:2px"><i class="glyphicon glyphicon-floppy-disk"></i> Save</button>
                                        </td>
                                    </tr>
                                    </tbody>
                                </table>

                                <p align="right" style="padding-left:8px" class="subContractLabel">Total :<strong><span id="total_amount">@Html.DisplayFor(model => model.TotalPaymentSchedule) </span></strong>&nbsp; Balance:<strong><span id="difference">@Html.DisplayFor(model => model.PaymentScheduleBalance)</span></strong>&nbsp;&nbsp;</p>

                                <div class="col-md-offset-2">
                                    <a href="#step-1" style="margin-right:5px" type="submit" class="btn btn-info pull-left"><i class="glyphicon glyphicon-arrow-left"></i> Back  </a>
                                    <button type="button" id="finish" class="btn btn-info" style="margin-right:2px">
                                        <i class="glyphicon glyphicon-floppy-disk"></i> Finish and Exit
                                    </button>
                                </div>
                                <div align="center">
                                    <img src="~/Media/Images/ajax_loader.gif" class="loadingImg" />
                                </div>
                                <br />
                                <br />

                            </div>








                        </div>


                    </div>


                </div>
            </article>

        </div>
    </section>

</div>
<!----------- Search  Contract----------------->
<div class="modal fade" id="search_contracts" style="left:4%">

    <div class="modal-dialog" style="width:80%;">
        <div class="modal-content panel-info">
            <div class="modal-header panel-heading">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h3 class="modal-title">Main Contracts List</h3>
            </div>
            <div class="modal-body">

                <div>


                    <div class="row" style="padding-top:1%;padding-bottom:1%">
                        <div class="col-md-6">
                        </div>
                        <div class="col-md-6">
                            <div class="search-container " style="float:right">
                                <i class="fa fa-search search-icon"></i>
                                <input type="search" name="search" placeholder="Search..." id="search_contract">
                            </div>
                        </div>
                    </div>
                    <div align="center">
                        <img src="/Media/Images/ajax_loader.gif" class="loadingImg" style="display:none" />
                    </div>
                    <table id="dt_search_contract" class="table table-striped table-bordered table-hover table-condensed">
                        <thead>
                            <tr>
                                <th>#</th>
                                <th>Contract Id</th>
                                <th>Payee Code</th>
                                <th>Contract</th>
                                <th>Currency</th>
                                <th>Balance</th>
                                <th>Contract Reg#</th>
                                <th>Contract Number</th>
                                <th>Contract Amount</th>
                                <th> Payee Name</th>
                                <th> Action</th>
                            </tr>
                        </thead>
                    </table>

                </div>
                <div class="modal-footer">
                    <button class="btn btn-info" data-dismiss="modal">
                        <i class="fa  fa-times"></i>Cancel
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

<!----------- Search Payee ----------------->
<div class="modal fade" id="payeeModal" style="left:4%">

    <div class="modal-dialog" style="width:80%;">
        <div class="modal-content panel-info">


            <div class="modal-header panel-heading">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h3 class="modal-title"> Search  Sub Contractor </h3>

            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-6">
                    </div>
                    <div class="col-md-6">
                        <div class="search-container submit-btn" style="float:right">
                            <i class="fa fa-search search-icon"></i>
                            <input type="search" name="search" placeholder="Search..." autocomplete="off" id="searchbox">
                        </div>
                    </div>
                </div>
                <div align="center">
                    <img src="/Media/Images/ajax_loader.gif" class="loadingImg" />
                </div>
                <table class="table" id="dt_search_payee">
                    <thead>
                        <tr>
                            <th>#</th>
                            <th>PaymentId</th>
                            <th>BIC</th>
                            <th>Payee Name</th>
                            <th>Payee Code</th>
                            <th>Bank Name</th>
                            <th>Bank Account No</th>
                            <th>Payee Type</th>
                            <th>Address</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>

            </div>
            <div class="modal-footer">
                <button class="btn btn-info" data-dismiss="modal">
                    <i class="fa  fa-times"></i>Close
                </button>
            </div>
        </div>
    </div>
</div>
<!----------- Search Payee ----------------->

@section pagespecific {
    <!-- PAGE RELATED PLUGIN(S) -->

    <script type="text/javascript">

              var dt_search_contract = $('#dt_search_contract').dataTable({
                    "aoColumnDefs": [{ "bVisible": false, "aTargets": [1, 2, 3, 4, 5] }],
                }
                );
                $("#dt_search_contract_wrapper .dt-toolbar").remove();
               $("#search_contract").on("keyup search input paste cut", function () {
                dt_search_contract.DataTable().search(this.value).draw();
               });


           var dt_search_payee = $('#dt_search_payee').dataTable({
               "aoColumnDefs": [{ "bVisible": false, "aTargets": [1, 2] }],
           });
             $("#dt_search_payee_wrapper .dt-toolbar").remove();


        function SearchContract() {
            $('#search_contracts').modal('show');
                    var url = '@Url.Action("GetContracts", "SubContract")';
                    $.ajax({
                        type: "get",
                        url: url,
                        contenttype: "application/json; charset=utf-8",
                        datatype: "json",
                        success: function (response) {
                            if (response == "NoContract") {
                           swal("No any contract satisfy to add Sub Contract");
                            }
                            else if (response == "DbException") {
                              swal("Db Exception,Please contact technical supporter ");
                            }
                            else {
                                data = response.data;
                                dt_search_contract.fnClearTable();
                                for (var i = 0; i < data.length; i++) {

                                    dt_search_contract.fnAddData([i + 1,
                                    data[i]["ContractId"],
                                    data[i]["PayeeCode"],
                                    data[i]["ContractName"],
                                    data[i]["Currency"],
                                    data[i]["RemainingAmount"],
                                    data[i]["ContractNo"],
                                    data[i]["ContractNumber"],
                                    toLabel(data[i]["ContractAmount"]),
                                    data[i]["Payeename"],
                                    '<a href="#" onclick="contractClicked(' + i + ')"><i class="glyphicon glyphicon-plus-sign"></i></a>'
                                    ]);
                                }
                            }
                        },
                        failure: function (error) {
                            swal(error);
                        }
                    });
                 }
        function contractClicked(rowId) {
        var data = dt_search_contract.DataTable().rows().data();
            var row = data[rowId];
            $("#ContractId").val(row[1]);
            $("#MainPayeeCode").val(row[2]);
            $("#ContractName").val(row[3]);
            $(".currencyDisp").text(row[4]);
            $("#RemainingAmount").val(toLabel(row[5]));
            $("#ContractNo").val(row[6]);
            $("#ContractNumber").val(row[7]);
            $("#ContractAmount").val(row[8]);
            $("#MainPayeeName").val(row[9]);
         $("#search_contracts").modal("hide");
       }
    //END SEARCH CONTRACT
        //Search Sub Contractor
        function SearchSubContract() {
                var contractId = $("#ContractId").val();
                if (!contractId) {
                    swal("Please first select  Main Contract!!!");
                    return
                 }
            $('#payeeModal').modal('show');
        }

          function PaymentSchedules(arrayData) {
                                $('#payment_schedules').empty();
                                var number = arrayData.length;
                                if (number > 0) {

                                    $('<thead><tr><th style="text-align: center">#</th><th style="text-align: center;width:4%">ID</th><th style="text-align: left">Payment Schedule </th><th style="text-align: left">Deliverable</th><th style="text-align: right">Total Amount</th><th style="text-align: right">Balance</th><th style="text-align:right">Amount</th></tr></thead>').appendTo('#payment_schedules');

                                }
                                var j = 0;
                                var sum = 0;
                                var balance_sum = 0;
                                $.each(arrayData, function (i, d) {
                                    sum = sum + parseFloat(d.Amount);
                                    balance_sum = balance_sum + parseFloat(d.Balance);
                                    j++;
                                    if (d.Deliverable) {
                                        $('<tr><td align="center">' + j + '</th><td align="center">' + d.PaymentScheduleId + '</td><td>' + d.Description + '</td><td align="left">' + d.Deliverable + '</td><td align="right">' + d.Amount.toLocaleString('en') + '</td><td align="right">' + d.Balance.toLocaleString('en') + '</td><td align="right"><amount-input placeholder="Amount" max="' + d.Balance + '"  onkeyup="amountChanged(this)" /></td></tr>').appendTo('#payment_schedules');
                                    } else {
                                        $('<tr><td align="center">' + j + '</th><td align="center">' + d.PaymentScheduleId + '</td><td>' + d.Description + '</td><td align="left"></td><td align="right">' + d.Amount.toLocaleString('en') + '</td><td align="right">' + d.Balance.toLocaleString('en') + '</td><td align="right"><amount-input placeholder="Amount" max="' + d.Balance + '"  onkeyup="amountChanged(this)" /></td></tr>').appendTo('#payment_schedules');
                                    }


                                });
                                if (number > 0) {
                                    $('<tr><td align="right" colspan="4">Grand Total</td><td align="right"><strong>' + sum.toLocaleString('en') + '</strong></td><td align="right"><strong>' + balance_sum.toLocaleString('en') + '</strong></td><td align="right" >  <button type="button" id="submit_amount" class="btn btn-info" style="margin-right:2px"><i class="glyphicon glyphicon-floppy-disk"></i> Save</button></td></tr>').appendTo('#payment_schedules');
                                }

                      $("#payment_schedules #submit_amount").prop('disabled', true);
                           }
        var paymentScheduleArray = [];
            var sum_total = 0;
        function amountChanged(e) {
              var max_value = parseFloat(e.max);
        var entered_value = parseFloat(e.value.split(",").join(""));
            if (entered_value >= 0) {
                if (max_value >= entered_value) {
                    sum_total = 0;
                    var i = 0;
                    var k = 0;
                    $("#payment_schedules tr").each(function () {
                        k++;
                    });
                    //swal("my lord"+k);
                    $("#payment_schedules tr").each(function () {


                    if (i > 0 && i< k -1) {
                        var value = $(this).children().eq(6).find("input").val().trim().split(",").join("");
                        if (value != "") {

                           var amount = parseFloat(value);
                            var id = parseInt($(this).children().eq(1).text());

                            //INSERT INTO ARRAY

                            if (paymentScheduleArray.length > 0) {

                                //CHECK IF EXIST IN THE ARRAY
                                var found = false;
                                for (var j = 0; j < paymentScheduleArray.length; j++) {
                                    if (parseInt(paymentScheduleArray[j].PaymentScheduleId) == id) {
                                        paymentScheduleArray[j].Amount = amount;
                                        found = true;
                                    }

                                }

                                if (!found) {
                                       paymentScheduleArray.push({
                                        "PaymentScheduleId": id,
                                        "Amount": amount
                                    });

                                }


                            } else {

                                    paymentScheduleArray.push({
                                        "PaymentScheduleId": id,
                                        "Amount": amount
                                    });


                            }




                        }
                    }


                    i++;
                });
              for (var j = 0; j < paymentScheduleArray.length; j++) {

                    sum_total = sum_total + parseFloat(paymentScheduleArray[j].Amount);

                }

                var sub_contract_amount = parseFloat($("#SubContractAmount").val().split(",").join(""));
                    var balance = sub_contract_amount - sum_total;
                    if (balance >= 0) {
                        $(".subContractLabel #total_amount").text(sum_total.toLocaleString('en'));
                        $(".subContractLabel #difference").text(balance.toLocaleString('en'));
                        if (balance == 0) {
                   $("#payment_schedules #submit_amount").prop('disabled', false);
                          }
                          else {
                   $("#payment_schedules #submit_amount").prop('disabled', true);
                          }
                }
                else {
                    swal("Total amount can not exceed " + sub_contract_amount.toLocaleString('en'));
                    e.value = "";


                }

                }
                else {
                swal("Total amount can not exceed " + max_value.toLocaleString('en'));
                e.value = "";

               }
            }
        }
              $("#searchbox").on("keyup search input paste cut", function () {
                            if (!this.value) {
                                dt_search_payee.fnClearTable();
                            } else {
                                searchPayeeTableUpdate(this.value);
                            }
                        });
           function searchPayeeTableUpdate(search) {
                            var url = '@Url.Action("GetPayee", "PaymentVoucher")';
                            $.ajax({
                                type: "get",
                                url: url + "/?search=" + search + "",
                                contenttype: "application/json; charset=utf-8",
                                datatype: "json",
                                success: function (response) {
                                    data = response.data;
                                    dt_search_payee.fnClearTable();
                                    for (var i = 0; i < data.length; i++) {
                                        dt_search_payee.fnAddData([i+1,
                                           data[i]["PayeeDetailId"],
                                           data[i]["BankName"],
                                           data[i]["AccountName"],
                                           data[i]["PayeeCode"],
                                           data[i]["PayeeName"],
                                           data[i]["Accountnumber"],
                                           data[i]["PayeeType"],
                                           data[i]["Address1"],
                                           '<a href="#" onclick="payeeClicked(' + i + ')"><i class="glyphicon glyphicon-plus-sign"></i></a>'
                                        ]);
                                    }
                                },
                                failure: function (error) {
                                    swal(error);
                                }
                            });
                        }

                        function payeeClicked(rowId) {
                            var data = dt_search_payee.DataTable().rows().data();
                            var row = data[rowId];
                                 var payeeCode = $("#MainPayeeCode").val();
                            if (payeeCode == row[4]) {
                                swal("Please do not select Payee of Main Contract!!!");
                                return
                               }
                            $("#PayeeDetailId").val(row[1]);
                            $("#PayeeCode").val(row[4]);
                            $("#PayeeName").val(row[5]);
                            $("#PayeeAddress").val(row[8]);
                            $("#PayeeBankName").val(row[2]);
                            $("#PayeeBankAccount").val(row[6]);
                            $("#payeeModal").modal("hide");
                        }

        //End Sub Contractor


        @*//SEARCH BANK ACCOUNT
        function SearchSubContract() {
            var payee_code = $("#PayeeCode").val();

            $('#payeeModal').modal('show');
                  var url = '@Url.Action("GetPayee", "PaymentVoucher")';
                            $.ajax({
                                type: "get",
                                url: url,
                                contenttype: "application/json; charset=utf-8",
                                datatype: "json",
                                success: function (response) {
                                    data = response.data;
                                    dt_search_payee.fnClearTable();
                                    for (var i = 0; i < data.length; i++) {
                                        dt_search_payee.fnAddData([i+1,
                                           data[i]["PayeeDetailId"],
                                           data[i]["BIC"],
                                           data[i]["AccountName"],
                                           data[i]["PayeeCode"],
                                           data[i]["BankName"],
                                           data[i]["Accountnumber"],
                                           data[i]["PayeeType"],
                                           data[i]["Address1"],
                                           '<a href="#" onclick="payeeClicked(' + i + ')"><i class="glyphicon glyphicon-plus-sign"></i></a>'
                                        ]);
                                    }
                                },
                                failure: function (error) {
                                    swal(error);
                                }
                            });

        }
                function payeeClicked(rowId) {
                            var data = dt_search_payee.DataTable().rows().data();
                            var row = data[rowId];
                            $("#PayeeDetailId").val(row[1]);
                    var bank_account = $("#BankAccount").val();
                    if (row[6] != bank_account) {
                        $("#form_submision").prop('disabled', false);
                        var module = $("#SourceModule").val();
                        if (module == "Contract") {
                            $("#new_account_details").show();
                            $('#account_data').empty();
                            $('<div class="row"> <div class="col-sm-6 col-md-6 col-lg-6"><strong>New Bank Name&nbsp;:</strong>&nbsp;' + row[5] + '</div><div class="col-sm-6 col-md-6 col-lg-6"><strong>New Account Name&nbsp:</strong>&nbsp;' + row[3] + '</div></div>').appendTo('#account_data');
                            $('<div class="row"><div class="col-sm-6 col-md-6 col-lg-6"><strong>New Account Number&nbsp:</strong>&nbsp;' + row[6] + '</div></div>').appendTo('#account_data');
                        }
                        else {
                            $("#new_account_details1").show();
                            $('#account_data1').empty();
                            $('<div class="row"> <div class="col-sm-6 col-md-6 col-lg-6"><strong>New Bank Name&nbsp;:</strong>&nbsp;' + row[5] + '</div><div class="col-sm-6 col-md-6 col-lg-6"><strong>New Account Name&nbsp:</strong>&nbsp;' + row[3] + '</div></div>').appendTo('#account_data1');
                            $('<div class="row"><div class="col-sm-6 col-md-6 col-lg-6"><strong>New Account Number&nbsp:</strong>&nbsp;' + row[6] + '</div></div>').appendTo('#account_data1');


                        }
                            $(".new_bank").val(row[6]);
                        $("#payeeModal").modal("hide");
                    } else {
                        swal("This currently assigned,Please choose different Bank Account !!!");
                    }


                        }
        //END SEARCH BANK ACCOUNT*@


        $(document).ready(function () {

       //MANAGE STEP WIZARD
                            var navListItems = $('div.setup-panel div a'),
                                   allWells = $('.setup-content'),
                                   allNextBtn = $('.nextBtn');

                            allWells.hide();

                            navListItems.click(function (e) {
                                e.preventDefault();
                                var $target = $($(this).attr('href')),
                                        $item = $(this);

                                if (!$item.hasClass('disabled')) {
                                    navListItems.removeClass('btn-primary').addClass('btn-default');
                                    $item.addClass('btn-primary');
                                    allWells.hide();
                                    $target.show();
                                    $target.find('input:eq(0)').focus();
                                }
                            });

                            allNextBtn.click(function () {
                                var curStep = $(this).closest(".setup-content"),
                                    curStepBtn = curStep.attr("id"),
                                    nextStepWizard = $('div.setup-panel div a[href="#' + curStepBtn + '"]').parent().next().children("a"),
                                    curInputs = curStep.find("input[type='text'],input[type='url']"),
                                    isValid = true;

                                $(".form-group").removeClass("has-error");
                                for (var i = 0; i < curInputs.length; i++) {
                                    if (!curInputs[i].validity.valid) {
                                        isValid = false;
                                        $(curInputs[i]).closest(".form-group").addClass("has-error");
                                    }
                                }

                                if (isValid)
                                    nextStepWizard.removeAttr('disabled').trigger('click');
                            });

                            $('div.setup-panel div a.btn-primary').trigger('click');
                            //END MANAGE STEP WIZARD

            $("#save_sub_contractor").click(function () {
                   var subContractId = $("#SubContractId").val();
                   var contractId = $("#ContractId").val();
                if (!contractId) {
                    swal("Please Select Main  Contract !!!");
                    return
                   }
               var payeeDetailId = $("#PayeeDetailId").val();
                if (!payeeDetailId) {
                        swal("Please Select Sub Contractor !!!");
                        return
                }
                var payeeType = $("#PayeeType").val();
                if (!payeeType) {
                    swal("Please Select Payee Type !!!");
                    return
                }
                   var description = $("#SubContractDesc").val();
                if (!description) {
                    swal("Please Enter Sub Contract Description !!!");
                    return
                }
                    var amount = $("#SubContractAmount").val();
                if (!amount) {
                    swal("Please Enter Sub Contract Amount !!!");
                    return
                }
                    var sub_contract_amount = parseFloat(amount.split(",").join(""));

                var form_data = {
                           "SubContractId": subContractId,
                           "ContractId": contractId,
                           "PayeeDetailId":payeeDetailId,
                           "PayeeType":payeeType,
                           "Description": description,
                           "SubContractAmount": sub_contract_amount
                           }
                $("#save_sub_contractor").prop('disabled', true);
               var url = '@Url.Action("SaveSubContract", "SubContract")';
                        $.ajax(
                {
                type: "POST",
                url: url,
                data: form_data,
                success: function (result) {
                   $("#save_sub_contractor").prop('disabled', false);
                    if (result.response == "SavedSuccess") {
                             swal("Basic information saved successfully", { icon: "Success" })
                                 .then((value) => {
                                      $("#SubContractId").val(result.id);
                                      $(".subContractLabel").show();
                                      $(".message_display").hide();
                                      $("#AmountDisplay").text(result.amount.toLocaleString('en') + "/=");
                                      var balance = 0;
                                      $(".subContractLabel #total_amount").text(balance.toLocaleString('en'));
                                      $(".subContractLabel #difference").text(result.amount.toLocaleString('en'));
                                        PaymentSchedules(result.paymentScheduleList);
                                    });
                    }
                     else if (result.response == "Updated") {

                          swal("Basic information updated successfully and amount of step two release if previously was entered", { icon: "Success" })
                                    .then((value) => {
                                      $(".subContractLabel").show();
                                      $(".message_display").hide();
                                      $("#AmountDisplay").text(result.amount.toLocaleString('en') + "/=");
                                      var balance = 0;
                                      $(".subContractLabel #total_amount").text(balance.toLocaleString('en'));
                                      $(".subContractLabel #difference").text(result.amount.toLocaleString('en'));
                                        PaymentSchedules(result.paymentScheduleList);
                                    });
                    }
                    else if (result.response == "UpdatedSuccess") {

                          swal("Basic information updated successfully", { icon: "Success" })
                                    .then((value) => {
                                     $("#AmountDisplay").text(result.amount.toLocaleString('en'));
                                    });
                    }
                    else {

                        swal("An error has occured DbException,contact technical supporter");

                    }
                },
                error: function (xhr) {
                        $("#save_sub_contractor").prop('disabled', false);
                    swal("An error has occured, contact system supporter");

                },

            });


           });


    });

        $('#PaymentDescription').bind('copy paste cut', function (e) {
            e.preventDefault();
            swal('Paste option is disabled !!');
        });
        $("#PaymentDescription").on('keypress', function (event) {
            var regex = new RegExp("^[0-9a-zA-Z \b]+$");
            var key = String.fromCharCode(!event.charCode ? event.which : event.charCode);
            if (!regex.test(key)) {
                event.preventDefault();
                return false;
            }
        });
    //SHOW LOADER ICON
    $(document).ajaxStart(function () {
        $(".loadingImg").show();

    });
    //HIDE LOADER ICON
    $(document).ajaxStop(function () {
        $(".loadingImg").hide();
    });

     $("#SubContractAmount").autoNumeric('init');

        $("#SubContractAmount").keyup(function () {
                var contractId = $("#ContractId").val();
                if (!contractId) {
                    swal("Please select  Contract first!!!");
                    $(this).val("");
                    return
                 }
            var balance = parseFloat($("#RemainingAmount").val().split(",").join(""));
            var amount = $(this).val();
             var sub_contract_amount = parseFloat(amount.split(",").join(""));
            if (sub_contract_amount > balance) {
                swal("Sub contract can not exceed balance :" + toLabel(balance));
                   $(this).val("");
            }

        });

        //Submit Payment Schedule Amount
        $(document).on('click', '#payment_schedules #submit_amount', function () {
                       var amount = $("#SubContractAmount").val();
                 var sub_contract_amount = parseFloat(amount.split(",").join(""));
                if (sum_total != sub_contract_amount) {
                    swal("Please Enter  Amount !!!");
                    return
                }

            var subContractId = $("#SubContractId").val();
            var form_data = {
                "SubContractId": subContractId,
                "PaymentSchedules": paymentScheduleArray
            };
                  $("#payment_schedules #submit_amount").prop('disabled', true);
               var url = '@Url.Action("UpdatePaymentSchedules", "SubContract")';
                        $.ajax(
                {
                type: "POST",
                url: url,
                data: form_data,
                success: function (response) {
                   $("#payment_schedules #submit_amount").prop('disabled', false);
                    if (response == "Success") {
                             swal("Amount  saved successfully", { icon: "Success" })
                                 .then((value) => {
                               var url = '@Url.Action("PendingSubContract", "SubContract")';
                                window.location.replace(url);
                                    });
                    }
                    else {

                        swal("An error has occured DbException,contact technical supporter");

                    }
                },
                error: function (xhr) {
                        $("#payment_schedules #submit_amount").prop('disabled', false);
                    swal("An error has occured, contact system supporter");

                },

            });
        });
                        //FINISH CONTRACT
                            $("#finish").click(function (e) {
                                var id = $("#SubContractId").val();
                                if (id > 0) {
                                    swal("Finished successfully ", { icon: "success" })
                                                  .then((value) => {
                                                    var url = '@Url.Action("PendingSubContract", "SubContract")';
                                                    window.location.replace(url);
                                                  });
                                } else {
                                    swal("Navigate to step 1 then click back button");
                                }

                            });
    </script>
}


