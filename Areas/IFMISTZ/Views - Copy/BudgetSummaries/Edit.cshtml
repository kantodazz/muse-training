@model IFMIS.Areas.IFMISTZ.Models.BudgetSummary

<style>
    input[type=number] {
        padding: 8px;
        border: 1px solid #ccc;
        border-radius: 4px;
        resize: vertical;
    }

    input[type=text] {
        padding: 8px;
        border: 1px solid #ccc;
        border-radius: 4px;
        resize: vertical;
    }

    select {
        padding: 8px;
        border: 1px solid #ccc;
        border-radius: 4px;
        resize: vertical;
    }

    .searchContainer {
        display: inline-flex;
        flex: 1 1 300px;
        position: relative;
        border: 1px solid #ccc;
        border-radius: 5px;
        overflow: hidden;
    }

    .searchIcon {
        padding: 0.5rem;
    }

    .searchBox {
        border: 0;
        /*padding: 0.5rem 0.5rem 0.5rem 0;*/
        padding: 8px;
        flex: 1;
    }

    .searchButton {
        background: #538AC5;
        border: 0;
        color: white;
        /*padding: 0.5rem;*/
        padding: 8px;
        border-radius: 0;
    }

    select {
        padding: 8px;
        border: 1px solid #ccc;
        border-radius: 4px;
        resize: vertical;
    }

    .action-btn {
        width: 100px;
        /*background-color:#2196F3;*/
        color: white;
    }

    .action-btn2 {
        border-radius: 10px;
    }

    .swal-button--confirm {
        background-color: #4CAF50 !important;
    }

    .swal-button--cancel {
        background-color: #F44336 !important;
        color: #fff !important;
    }

    .swal-title {
        font-size: 20px !important;
    }

    .swal-text {
        font-size: 15px !important;
    }

    .swal-icon {
        width: 66px !important;
        height: 70px !important;
    }
</style>


<div style="padding:1em;padding-top:4em">
    <section id="widget-grid">
        <div class="row">
            <article class="col-sm-12 col-md-12 col-lg-12">

                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">

                    <header>
                        <span class="widget-icon"> <i class="fa fa-table"></i> </span>
                        <h2>Edit Budget Ceiling</h2>
                    </header>
                    <div>

                        @using (Html.BeginForm())
                        {
                            @Html.AntiForgeryToken()
                            @Html.HiddenFor(model => model.BudgetSummaryId)
                            @Html.HiddenFor(model => model.Book)
                            @Html.HiddenFor(model => model.LegalNumber)
                            @Html.HiddenFor(model => model.InstitutionId)
                            @Html.HiddenFor(model => model.InstitutionCode)
                            @Html.HiddenFor(model => model.InstitutionName)
                            @Html.HiddenFor(model => model.ApprovalStatus)
                            @Html.HiddenFor(model => model.BudgetVersion)

                            <div class="widget-body " style="padding-top:10px">
                                @if (ViewBag.Error != null)
                                {
                                    <div class="well form-horizontal">
                                        <div class="form-group">
                                            <h3 style="color:red">@ViewBag.Error</h3>
                                        </div>
                                    </div>
                                }

                                <table class="table table-striped">
                                    <tr>
                                        <td colspan="1">

                                            <fieldset>
                                                <div class="well form-horizontal">
                                                    <div class="form-group">
                                                        <label class="control-label col-md-4">Budget Type</label>
                                                        <div class="col-md-6">
                                                            @Html.DropDownList("JournalTypeCode", null, "--Select Budget type--", new { @class = "form-control", @required = "required" })
                                                            @Html.ValidationMessageFor(model => model.JournalTypeCode, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                    <div class="form-group">
                                                        <label class="control-label col-md-4">Apply Date</label>
                                                        <div class="col-md-6">
                                                            <div class="input-group">
                                                                @Html.TextBoxFor(model => model.ApplyDate, "{0:dd/MM/yyyy}", new { @class = "form-control", @required = "required", @autocomplete = "off" })
                                                                @Html.ValidationMessageFor(model => model.ApplyDate, "", new { @class = "text-danger" })
                                                                <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="form-group">
                                                        <label class="control-label col-md-4">Sub Budget Class</label>
                                                        <div class="col-md-6">
                                                            @Html.DropDownList("SubBudgetClass", null, "Select ---", new { @class = "form-control", @required = "required" })
                                                            @Html.ValidationMessageFor(model => model.SubBudgetClass, "", new { @class = "text-danger", }) 
                                                        </div>
                                                    </div>

                                                    <div class="form-group">
                                                        <label class="control-label col-md-4">Amount</label>
                                                        <div class="col-md-6">
                                                            <div class="input-group">
                                                                <span class="input-group-addon" id="currencyDisp">@Html.DisplayFor(model => model.OperationalCurrency)</span>
                                                                @Html.EditorFor(model => model.OperationalAmount, new { htmlAttributes = new { @class = "form-control", @required = "required" ,@onkeypress = "return isNumberKey(event)" } })
                                                                @*@Html.HiddenFor(model => model.OperationalAmount, new { @class = "form-control" })*@
                                                                @Html.HiddenFor(model => model.UpdatedAmount, new { @class = "form-control" })
                                                                @*<input type="text" class="form-control" id="OperationalAmount1" autocomplete="off" required onload="inputThousandSeparator1(3000000)" />*@
                                                                 @Html.ValidationMessageFor(model => model.OperationalAmount, "", new { @class = "text-danger" })
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </fieldset>
                                        </td>
                                        <td colspan="1">

                                            <fieldset>
                                                <div class="well form-horizontal">
                                                    <div class="form-group">
                                                        <label class="control-label col-md-4">Funding Source</label>
                                                        <div class="col-md-6">
                                                            @Html.DropDownList("FundingSource", null, "Please Select Funding Source", new { @class = "form-control", @required = "required" })
                                                            @Html.ValidationMessageFor(model => model.FundingSource, "", new { @class = "text-danger", })
                                                        </div>
                                                    </div>
                                                    <div class="form-group">
                                                        <label class="control-label col-md-4">Financia lYear</label>
                                                        <div class="col-md-6">
                                                            @Html.DropDownList("FinancialYear", null, "--Select Financial Year--", new { @class = "form-control", @required = "required" })
                                                            @Html.ValidationMessageFor(model => model.FinancialYear, "", new { @class = "text-danger", })
                                                        </div>
                                                    </div>
                                                    <div class="form-group">
                                                        <label class="control-label col-md-4">Currency</label>
                                                        <div class="col-md-6">
                                                            @Html.DropDownList("OperationalCurrency", null, new { @class = "form-control", @required = "required" })
                                                            @Html.ValidationMessageFor(model => model.OperationalCurrency, "", new { @class = "text-danger" })

                                                        </div>
                                                    </div>
                                                    <div class="form-group">
                                                        <label class="control-label col-md-4">Transaction Type</label>
                                                        <div class="col-md-6">
                                                            <select id="dbcrInd" name="dbcrInd" class="form-control" required>
                                                                @*<option value="@Html.EditorFor(model =>model.DbCrInd)" selected="selected">@Html.DisplayFor(model => model.DbCrInd)</option>*@
                                                                <option value="DR" selected="selected">DR</option>
                                                                <option value="CR">CR</option>
                                                            </select>
                                                            @*@Html.DropDownList("OperationalCurrency", null, new { @class = "form-control", @required = "required" })*@
                                                            @Html.HiddenFor(model => model.DbCrInd)
                                                            @Html.ValidationMessageFor(model => model.DbCrInd, "", new { @class = "text-danger" })

                                                        </div>
                                                    </div>
                                                </div>
                                            </fieldset>
                                        </td>
                                    </tr>
                                </table>
                                <div class="form-actions">
                                    <div class="row">
                                        <div clss="col-md-4">

                                        </div>
                                        <div class="col-md-6">
                                            <button class="btn btn-info" id="back" style="float:left; margin-right:5px">
                                                <i class="glyphicon glyphicon-arrow-left"></i>@Html.ActionLink("Back", "BudgetList", "budgetsummaries", new { area = "ifmistz" }, null)
                                            </button>
                                            <button type="submit" class="btn btn-info" id="form_submision" style="float:left">
                                                <i class="fa fa-save"></i>Save
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>

                </div>
            </article>
        </div>
    </section>
</div>

@section pagespecific {
    <script type="text/javascript">
        $('#OperationalAmount').autoNumeric('init');
        $(document).ready(function () {

            $("#Book").attr('value', 'BUDGET');
            var opm = 0;
            opm = @Model.UpdatedAmount;

            @*if (System.Convert.Double(@Model.UpdatedAmount)==0.00)
            {
                opm = 0
            }else{
                opm = @Model.UpdatedAmount;
            }*@

            //console.log(opm);

            if (opm==0){
                $("#OperationalAmount1").val((@Model.OperationalAmount))
                //console.log(opm)
            }else{
                //console.log(opm)
                $("#OperationalAmount1").val((@Model.UpdatedAmount))
            }

        });
        function isNumberKey(evt) {
            var charCode = (evt.which) ? evt.which : event.keyCode
            if (charCode > 31 && (charCode < 48 || charCode > 57))
                return false;

            return true;
        }
        $("#FundingSource").change(function () {

            //debugger
            console.log($(this).val())
        });
        $('#ApplyDate').datepicker({
            dateFormat: 'dd/mm/yy',
            prevText: '<i class="fa fa-chevron-left"></i>',
            nextText: '<i class="fa fa-chevron-right"></i>',
            onSelect: function (selectedDate) {
                $('#ApplyDate').datepicker('option', 'maxDate', selectedDate);
            }
        });
        $("#OperationalAmount").on("keyup input paste cut", function () {
            $("#UpdatedAmount").val(this.value);
        })


        $("#OperationalAmount1").on("keyup input paste cut", function () {
            var opm =@Model.UpdatedAmount;
            if (opm==0){
                $("#OperationalAmount").val(this.value.split(",").join(""))
                console.log(opm)
            }else{
                console.log(opm)
                $("#UpdatedAmount").val(this.value.split(",").join(""))
            }
            //$("#OperationalAmount").val(this.value.split(",").join(""))
            $("#OperationalAmount1").val(inputThousandSeparator(this.value))
        })

        var OldVal = 0
        function inputThousandSeparator(NewVal) {
            if (NewVal) {
                try {
                    NewVal = parseFloat(NewVal.split(",").join(""))
                    if (typeof NewVal == 'number'
                        && !Number.isNaN(NewVal)) {
                        OldVal = NewVal;
                        return NewVal.toLocaleString()
                    } else {
                        return OldVal
                    }
                } catch (e) {
                    console.log(e)
                }
            }
        }
    </script>

}
