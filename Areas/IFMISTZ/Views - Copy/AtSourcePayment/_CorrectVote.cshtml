@model IFMIS.Areas.IFMISTZ.Models.VoteCorrection
@using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = "return SubmitVote(this)" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.DeductionByVoteId)
    <div class="form-horizontal">

        <div class="form-group">
            @Html.LabelFor(model => model.VoteName, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.VoteName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VoteName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.VoteCode, htmlAttributes: new { @class = "control-label col-md-3", @style = "color:red" })

            <div class="col-md-6">
                @Html.EditorFor(model => model.VoteCode, new { htmlAttributes = new { @class = "form-control", @style = "color:red" } })
                @Html.ValidationMessageFor(model => model.VoteCode, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.VoteId, htmlAttributes: new { @class = "control-label col-md-3" })

            <div class="col-md-6">
                @Html.DropDownList("VoteId", null, "Select.......", htmlAttributes: new { @class = "form-control select2" })
                @Html.ValidationMessageFor(model => model.VoteId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-3 col-md-offset-2">
                <button type="submit" class="btn btn-info" id="save_button">
                    <i class="glyphicon glyphicon-floppy-disk"></i> Save
                </button>
            </div>
        </div>
    </div>
    <div class="modal-footer">

        <button class="btn btn-info btn-flat modal-close" data-dismiss="modal">Close</button>
    </div>
}


<script>
    $(function () {
        $("#VoteId").select2({});
    });

      function SubmitVote(formData) {
              var voteId = $("#divModal #VoteId").val();

              if (!voteId) {
                  swal("Please select Vote!!!");
                  return false;
              }

            var url = '@Url.Action("CorrectVote", "AtSourcePayment")';
            var ajaxConfig = {
                type: "post",
                url: url,
                data: new FormData(formData),
                success: function (response) {
                    if (response == "Success") {
                        swal("Data saved  successfully", { icon: "Success" })
                                    .then((value) => {
                                  location.reload();
                                });
                    }
                    else {
                        swal(response);
                    }
                }
            }

            if ($(formData).attr('enctype') == "multipart/form-data") {
                ajaxConfig["contentType"] = false;
                ajaxConfig["processData"] = false;
            }
            $.ajax(ajaxConfig);
            return false;
        }
</script>