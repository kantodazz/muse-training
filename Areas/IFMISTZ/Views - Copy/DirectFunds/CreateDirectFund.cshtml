@model IFMIS.Areas.IFMISTZ.Models.CreateDirectFundVM

<div id="divLoader"></div>
<!-- MAIN CONTENT -->
<div id="content" style="margin: 5px; padding-top: 30px">

    <div class="row">
        @*<div class="col-xs-12 col-sm-9 col-md-9 col-lg-9">
                <h1 class="page-title txt-color-blueDark">

                    <!-- PAGE HEADER -->
                    <!--
                    <i class="fa-fw fa fa-pencil-square-o"></i>
                    Payments
                    <span>
                        >
                        Bills
                    </span>
                        -->
                </h1>
            </div>*@

        <div class="col-xs-12 col-sm-3 col-md-3 col-lg-3">
            <!-- Button trigger modal -->
            <!--<a data-toggle="modal" href="#myModal" class="btn btn-success btn-lg pull-right header-btn hidden-mobile"><i class="fa fa-circle-arrow-up fa-lg"></i> Launch form modal</a>-->
        </div>
    </div>

    <!--
    <div class="alert alert-block alert-success">
        <a class="close" data-dismiss="alert" href="#">×</a>
        <h4 class="alert-heading"><i class="fa fa-check-square-o"></i> Check validation!</h4>
        <p>
            You may also check the form validation by clicking on the form action button. Please try and see the results below!
        </p>
    </div>
        -->
    <!-- widget grid -->
    <section id="widget-grid" class="">


        <!-- START ROW -->

        <div class="row">

            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">

                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">
                    <!-- widget options:
                        usage: <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false">

                        data-widget-colorbutton="false"
                        data-widget-editbutton="false"
                        data-widget-togglebutton="false"
                        data-widget-deletebutton="false"
                        data-widget-fullscreenbutton="false"
                        data-widget-custombutton="false"
                        data-widget-collapsed="true"
                        data-widget-sortable="false"

                    -->
                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2> Create Direct Fund </h2>

                    </header>

                    <!-- widget div-->
                    <div>

                        <!-- widget edit box -->
                        <div class="jarviswidget-editbox">
                            <!-- This area used as dropdown edit box -->

                        </div>
                        <!-- end widget edit box -->
                        <!-- widget content -->
                        <div class="widget-body">
                            <form action="CreateDirectFund" method="post" class="form-horizontal">
                                @Html.AntiForgeryToken()
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                @Html.HiddenFor(model => model.ReceivingBankName)
                                @Html.HiddenFor(model => model.ReceivingBankBIC)
                                @Html.HiddenFor(model => model.ReceivingBankAccountName)
                                @Html.HiddenFor(model => model.SubBudgetClassDesc)
                                @Html.HiddenFor(model => model.DrGlAccount)
                                @Html.HiddenFor(model => model.DrGlAccountDesc)
                                @Html.HiddenFor(model => model.FundingSourceDesc)
                                @Html.HiddenFor(model => model.CrGlAccountDesc)

                                <div class="form-group">
                                    @Html.LabelFor(model => model.ReferenceNo, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4">
                                        @Html.EditorFor(model => model.ReferenceNo, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.ReferenceNo, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.ReceivingBankAccountNo, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4">
                                        @Html.EditorFor(model => model.ReceivingBankAccountNo, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.ReceivingBankAccountNo, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.OperationalAmount, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4">
                                        @Html.EditorFor(model => model.OperationalAmount, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.OperationalAmount, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.OperationalCurrency, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4">
                                        @Html.DropDownListFor(model => model.OperationalCurrency, Model.OperationalCurrencies, "Select Currency", new { @class = "form-control select2" })
                                        @Html.ValidationMessageFor(model => model.OperationalCurrency, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.ApplyDate, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4">
                                        @Html.TextBoxFor(model => model.ApplyDate, new { @class = "form-control", @autocomplete = "off" })
                                        @Html.ValidationMessageFor(model => model.ApplyDate, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4">
                                        @Html.TextAreaFor(model => model.Remarks, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.SubBudgetClassCode, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4">
                                        @Html.EditorFor(model => model.SubBudgetClassCode, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.SubBudgetClassCode, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.FundingSourceCode, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4">
                                        @Html.EditorFor(model => model.FundingSourceCode, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.FundingSourceCode, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.CrGlAccount, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.CrGlAccount, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.CrGlAccount, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-actions">
                                    <div class="row">
                                        <div class="col-md-8 col-md-offset-2">
                                            <a href="@Url.Action("PendingDirectFunds", "DirectFunds")" class="btn btn-info" style="float: left">
                                                <i class="fa fa-arrow-left"></i>
                                                Back
                                            </a>
                                            <button class="btn btn-info" type="submit" style="float: left; margin-left: 5px">
                                                <i class="fa fa-arrow-right"></i>
                                                Next
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </form>
                        </div>
                        <!-- end widget content -->
                    </div>
                    <!-- end widget div -->

                </div>
                <!-- end widget -->

            </article>
            <!-- END COL -->

        </div>

        <!-- END ROW -->

    </section>
    <!-- end widget grid -->

</div>
<!-- END MAIN CONTENT -->
@section pagespecific {
    <script type="text/javascript">
        $(function() {
            $("#ReceivingBankAccountNo").select2({
                minimumInputLength: 2,  // minimumInputLength for sending ajax request to server
                width: 'resolve',   // to adjust proper width of select2 wrapped elements
                placeholder: 'Search Bank Account',
                allowClear: false,
                initSelection: function (element, callback) {
                    var id = $(element).val();
                    if (id !== "") {
                        $.ajax('@Url.Action("GetSelectedInstitutionAccount", "InstitutionAccounts")', {
                            data: { id: id },
                            dataType: "json"
                        }).done(function (data) {
                            callback(data);
                        });
                    }
                },
                ajax: {
                    url: '@Url.Action("GetInstitutionAccounts", "InstitutionAccounts")', // Controller - Select2Demo and Action -AccessRemoteData
                    type: "GET",
                    dataType: 'json',
                    data: function (term) {
                        return {
                            term: term
                        };
                    },
                    results: function (data, page) {
                        return { results: data.institutionAccounts }; // data.CountryList returning json data from Controlle
                    }
                }
            });

            $('#OperationalAmount').autoNumeric('init');

            $("#ApplyDate")
.wrap('<div class="input-group">')
.datepicker({
    dateFormat: "yy-mm-dd",
    changeMonth: true,
    changeYear: true,
    showOn: "both",
    buttonImage: "../../Media/Images/calendar.gif",
    maxDate: "+0D"
})
.next("button").button({
    icons: { primary: "ui-icon-calendar" },
    label: "Select a date",
    text: false
})
.addClass("btn btn-default")
.wrap('<span class="input-group-btn">')
.find('.ui-button-text')
.css({
    'visibility': 'hidden',
    'display': 'inline'
});

            $("#FundingSourceCode").select2({
                minimumInputLength: 2,  // minimumInputLength for sending ajax request to server
                width: 'resolve',   // to adjust proper width of select2 wrapped elements
                placeholder: 'Search Funding Source',
                allowClear: false,
                initSelection: function (element, callback) {
                    var id = $(element).val();
                    if (id !== "") {
                        $.ajax('@Url.Action("GetSelectedFundingSource", "FundingSources")', {
                            data: { id: id },
                            dataType: "json"
                        }).done(function (data) {
                            callback(data);
                        });
                    }
                },
                ajax: {
                    url: '@Url.Action("GetFundingSources", "FundingSources")', // Controller - Select2Demo and Action -AccessRemoteData
                    type: "GET",
                    dataType: 'json',
                    data: function (term) {
                        return {
                            term: term
                        };
                    },
                    results: function (data, page) {
                        return { results: data.fundingSources }; // data.CountryList returning json data from Controlle
                    }
                }
            });

            $("#SubBudgetClassCode").select2({
                minimumInputLength: 2,  // minimumInputLength for sending ajax request to server
                width: 'resolve',   // to adjust proper width of select2 wrapped elements
                placeholder: 'Search Sub Budget Class',
                allowClear: false,
                initSelection: function (element, callback) {
                    var id = $(element).val();
                    if (id !== "") {
                        $.ajax('@Url.Action("GetSelectedSubBudgetClass", "SubBudgetClasses")', {
                            data: { id: id },
                            dataType: "json"
                        }).done(function (data) {
                            callback(data);
                        });
                    }
                },
                ajax: {
                    url: '@Url.Action("GetSubBudgetClassesByAccount", "SubBudgetClasses")', // Controller - Select2Demo and Action -AccessRemoteData
                    type: "GET",
                    dataType: 'json',
                    data: function (term) {
                        return {
                            term: term,
                            accountNo: $("#ReceivingBankAccountNo").val()
                        };
                    },
                    results: function (data, page) {
                        return { results: data.subBudgetClasses }; // data.CountryList returning json data from Controlle
                    }
                }
            });

            $("#CrGlAccount").select2({
                minimumInputLength: 2,  // minimumInputLength for sending ajax request to server
                width: 'resolve',   // to adjust proper width of select2 wrapped elements
                placeholder: "Search GL Account",
                initSelection: function (element, callback) {
                    var id = $(element).val();
                    if (id !== "") {
                        $.ajax('@Url.Action("GetSelectedCoa", "Coas")', {
                            data: { id: id },
                            dataType: "json"
                        }).done(function (data) {
                            callback(data);
                        });
                    }
                },
                ajax: {
                    url: '@Url.Action("GetCoas", "Coas")', // Controller - Select2Demo and Action -AccessRemoteData
                    type: "GET",
                    dataType: 'json',
                    data: function (term) {
                        return {
                            subBudgetClass: $("#SubBudgetClassCode").val(),
                            term: term
                        };
                    },
                    results: function (data, page) {
                        return { results: data.coas }; // data.CountryList returning json data from Controlle
                    }
                }
            });
        });

        $('#ReceivingBankAccountNo').on("change", function () {
            $("#divLoader").show();
            var receivingBankAccountNo = $("#ReceivingBankAccountNo").val();
            $.ajax({
                type: "GET",
                url: '@Url.Action("GetInstitutionAccount", "InstitutionAccounts")',
                data: { id: receivingBankAccountNo },
                success: function (data, status, jqXHR) {
                    if (data.success) {
                        $("#ReceivingBankName").val(data.ReceivingBankName);
                        $("#ReceivingBankBIC").val(data.ReceivingBankBic);
                        $("#ReceivingBankAccountName").val(data.ReceivingBankAccountName);
                    } else {
                        swal('Error on accessing cash account details');
                    }
                },
                error: function () {
                    swal("Error on accessing cash account details");
                },
                complete: function () {
                    $("#divLoader").hide();
                }
            })
        });

        $('#SubBudgetClassCode').on("change", function (e) {
            var subBudgetClassCode = $("#SubBudgetClassCode").val();
            var accountNo = $("#ReceivingBankAccountNo").val();
            $("#divLoader").show();

            $.ajax({
                type: "GET",
                url: '@Url.Action("GetSubBudgetClass", "SubBudgetClasses")',
                data: { subBudgetClassCode: subBudgetClassCode, accountNo: accountNo },
                success: function (data) {
                    if (data.success) {
                        $("#SubBudgetClassDesc").val(data.SubBudgetClassDesc);
                        $("#DrGlAccount").val(data.DrGlAccount);
                        $("#DrGlAccountDesc").val(data.DrGlAccountDesc);
                    } else {
                        swal(data.response);
                        $("#SubBudgetClassCode").select2("val", "");
                    }
                },
                error: function () {
                    swal("Error on accessing sub budget class items");
                },
                complete: function () {
                    $("#divLoader").hide();
                }
            })

            $("#CrGlAccount").select2({
                minimumInputLength: 2,  // minimumInputLength for sending ajax request to server
                width: 'resolve',   // to adjust proper width of select2 wrapped elements
                ajax: {
                    url: '@Url.Action("GetCoas", "Coas")', // Controller - Select2Demo and Action -AccessRemoteData
                    type: "GET",
                    dataType: 'json',
                    data: function (term) {
                        return {
                            subBudgetClass: subBudgetClassCode,
                            term: term
                        };
                    },
                    results: function (data, page) {
                        return { results: data.coas }; // data.CountryList returning json data from Controlle
                    }
                }
            });
        });

        $('#FundingSourceCode').on("change", function () {
            var fundingSourceCode = $(this).val();
            $.ajax({
                type: "GET",
                url: '@Url.Action("GetFundingSource", "FundingSources")',
                data: { fundingSourceCode: fundingSourceCode },
                success: function (data, status, jqXHR) {
                    if (data.success) {
                        $("#FundingSourceDesc").val(data.SegmentDesc);
                    }
                },
                error: function () {
                    swal("Error on accessing funding source details");
                }
            })
        });

        $('#CrGlAccount').on("change", function (e) {
            var crGlAccount = $("#CrGlAccount").val();
            $("#divLoader").show();
            $.ajax({
                type: "GET",
                url: '@Url.Action("GetCoa", "Coas")',
                data: { id: crGlAccount },
                success: function (data, status, jqXHR) {
                    if (data.success) {
                        $("#CrGlAccountDesc").val(data.GlAccountDesc);
                    } else {
                        swal('Error on accessing GL details');
                    }
                },
                error: function () {
                    swal("Error on accessing GL details");
                },
                complete: function () {
                    $("#divLoader").hide();
                }
            })
        });

    </script>
}
