@model IFMIS.Areas.IFMISTZ.Models.AssetDetail
@if (Model.AssetClass.ClassName == "Furnitures/Equipments" || Model.AssetClass.ClassName == "Furniture/Equipments")
{
    using (Html.BeginForm(null, null, FormMethod.Post, new { id = "edit_form", enctype = "multipart/form-data", onsubmit = "return SubmitFurnsEquips(this)" }))
    {
        <div class="modal-body form-horizontal">
            <input type="hidden" name="ReceivedAssetsId" id="ReceivedAssetsId" value='@Model.ReceivedAssetsId'>
            <br />

            <div class="form-group">
                @Html.LabelFor(model => model.AssetDetailId, htmlAttributes: new { @class = "control-label col-md-2" })

                <div class="col-md-4">
                    @Html.EditorFor(model => model.AssetDetailId, new { htmlAttributes = new { @class = "form-control", @required = "required", @readonly = "readonly", @autocomplete = "off" } })
                </div>
                <label class="col-md-2 control-label">Asset ID:</label>
                <div class="col-md-4">
                    @Html.EditorFor(model => model.AssetNo, new { htmlAttributes = new { @class = "form-control", @required = "required", @autocomplete = "off" } })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Condition, htmlAttributes: new { @class = "control-label col-md-2" })

                <div class="col-md-4">
                    @Html.DropDownListFor(model => model.Condition, Model.ConditionList, "Select ", new { @class = "form-control", @required = "required" })
                </div>
                @Html.LabelFor(model => model.AssetClass.ClassName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.AssetClass.ClassName, new { htmlAttributes = new { @class = "form-control", @required = "required", @readonly = "readonly", @autocomplete = "off" } })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.InstitutionCode, htmlAttributes: new { @class = "control-label col-md-2" })

                <div class="col-md-4">
                    @Html.EditorFor(model => model.InstitutionCode, new { htmlAttributes = new { @class = "form-control", @required = "required", @readonly = "readonly", @autocomplete = "off" } })
                </div>
                @Html.LabelFor(model => model.InstitutionSubLevelId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.DropDownListFor(model => model.InstitutionSubLevelId, Model.DepartmentList, "Select ", new { @class = "form-control", @required = "required" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.RegionId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.DropDownListFor(model => model.RegionId, Model.RegionList, "Select ...", new { @class = "form-control", @required = "required" })
                </div>
                @Html.LabelFor(model => model.DistrictId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.DropDownListFor(model => model.DistrictId, Model.DistrictList, "Select ...", new { @class = "form-control", @required = "required" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Building, htmlAttributes: new { @class = "control-label col-md-2" })

                <div class="col-md-4">
                    @Html.EditorFor(model => model.Building, new { htmlAttributes = new { @class = "form-control", @required = "required", @autocomplete = "off" } })
                </div>
                @Html.LabelFor(model => model.Floor, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.Floor, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Room, htmlAttributes: new { @class = "control-label col-md-2" })

                <div class="col-md-4">
                    @Html.EditorFor(model => model.Room, new { htmlAttributes = new { @class = "form-control", @required = "required", @autocomplete = "off" } })
                </div>
                @Html.LabelFor(model => model.RemainEconomicLife, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.RemainEconomicLife, new { htmlAttributes = new { @class = "form-control", @required = "required", @autocomplete = "off" } })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Remark, htmlAttributes: new { @class = "control-label col-md-2" })

                <div class="col-md-4">
                    @Html.EditorFor(model => model.Remark, new { htmlAttributes = new { @class = "form-control", @required = "required", rows = "2", maxlength = 250 } })
                </div>

            </div>


        </div>
        <div class="modal-footer">
            <a href="#" class="btn btn-default" data-dismiss="modal">Cancel</a>
            <input class="btn btn-info" type="submit" id="btnSubmit" value="Save" />
            @*<input type="submit" value="Submit" class="btn btn-success" id="btnSubmit" />*@

        </div>

    }
}
else if (Model.AssetClass.ClassName == "Motor Vehicle/Motor Cycle/Plants and Machinery")
{
    using (Html.BeginForm(null, null, FormMethod.Post, new {enctype = "multipart/form-data", onsubmit = "return SubmitAWithEngine(this)" }))
    {
        <div class="modal-body form-horizontal">
            <input type="hidden" name="ReceivedAssetsId" id="ReceivedAssetsId" value='@Model.ReceivedAssetsId'>
            <br />

            <div class="form-group">
                @Html.LabelFor(model => model.AssetDetailId, htmlAttributes: new { @class = "control-label col-md-2" })

                <div class="col-md-4">
                    @Html.EditorFor(model => model.AssetDetailId, new { htmlAttributes = new { @class = "form-control", @required = "required", @readonly = "readonly", @autocomplete = "off" } })
                </div>
                <label class="col-md-2 control-label">Reg Number:</label>
                <div class="col-md-4">
                    @Html.EditorFor(model => model.AssetNo, new { htmlAttributes = new { @class = "form-control", @required = "required", @autocomplete = "off" } })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Condition, htmlAttributes: new { @class = "control-label col-md-2" })

                <div class="col-md-4">
                    @Html.DropDownListFor(model => model.Condition, Model.ConditionList, "Select ", new { @class = "form-control", @required = "required" })
                </div>
                @Html.LabelFor(model => model.AssetClass.ClassName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.AssetClass.ClassName, new { htmlAttributes = new { @class = "form-control", @required = "required", @readonly = "readonly", @autocomplete = "off" } })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.InstitutionCode, htmlAttributes: new { @class = "control-label col-md-2" })

                <div class="col-md-4">
                    @Html.EditorFor(model => model.InstitutionCode, new { htmlAttributes = new { @class = "form-control", @required = "required", @readonly = "readonly", @autocomplete = "off" } })
                </div>
                @Html.LabelFor(model => model.InstitutionSubLevelId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.DropDownListFor(model => model.InstitutionSubLevelId, Model.DepartmentList, "Select ", new { @class = "form-control", @required = "required" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.RegionId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.DropDownListFor(model => model.RegionId, Model.RegionList, "Select ...", new { @class = "form-control", @required = "required" })
                </div>
                @Html.LabelFor(model => model.DistrictId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.DropDownListFor(model => model.DistrictId, Model.DistrictList, "Select ...", new { @class = "form-control", @required = "required" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.AssetModel, htmlAttributes: new { @class = "control-label col-md-2" })

                <div class="col-md-4">
                    @Html.EditorFor(model => model.AssetModel, new { htmlAttributes = new { @class = "form-control", @required = "required", @autocomplete = "off" } })
                </div>
                @Html.LabelFor(model => model.BodyType, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.BodyType, new { htmlAttributes = new { @class = "form-control", @required = "required", @autocomplete = "off" } })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Capacity, htmlAttributes: new { @class = "control-label col-md-2" })

                <div class="col-md-4">
                    @Html.EditorFor(model => model.Capacity, new { htmlAttributes = new { @class = "form-control", @required = "required", @autocomplete = "off" } })
                </div>
                @Html.LabelFor(model => model.EngineNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.EngineNumber, new { htmlAttributes = new { @class = "form-control", @required = "required", @autocomplete = "off" } })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.ChasisNumber, htmlAttributes: new { @class = "control-label col-md-2" })

                <div class="col-md-4">
                    @Html.EditorFor(model => model.ChasisNumber, new { htmlAttributes = new { @class = "form-control", @required = "required", @autocomplete = "off" } })
                </div>
                @Html.LabelFor(model => model.YearOfManufacture, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.YearOfManufacture, new { htmlAttributes = new { @class = "form-control", @required = "required", @autocomplete = "off" } })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })

                <div class="col-md-4">
                    @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control", @required = "required", @autocomplete = "off" } })
                </div>
                @Html.LabelFor(model => model.RemainEconomicLife, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.RemainEconomicLife, new { htmlAttributes = new { @class = "form-control", @required = "required", @autocomplete = "off" } })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Remark, htmlAttributes: new { @class = "control-label col-md-2" })

                <div class="col-md-4">
                    @Html.EditorFor(model => model.Remark, new { htmlAttributes = new { @class = "form-control", @required = "required", rows = "2", maxlength = 250 } })
                </div>

            </div>


        </div>
        <div class="modal-footer">
            <a href="#" class="btn btn-default" data-dismiss="modal">Cancel</a>
            <input class="btn btn-info" type="submit" id="btnSubmit" value="Save" />
            @*<input type="submit" value="Submit" class="btn btn-success" id="btnSubmit" />*@

        </div>

    }

}
else if (Model.AssetClass.ClassName == "Land")
{
    using (Html.BeginForm(null, null, FormMethod.Post, new { id = "edit_form", enctype = "multipart/form-data", onsubmit = "return SubmitLand(this)" }))
    {
<div class="modal-body form-horizontal">
    <input type="hidden" name="ReceivedAssetsId" id="ReceivedAssetsId" value='@Model.ReceivedAssetsId'>
    <br />

    <div class="form-group">
        @Html.LabelFor(model => model.AssetDetailId, htmlAttributes: new { @class = "control-label col-md-2" })

        <div class="col-md-4">
            @Html.EditorFor(model => model.AssetDetailId, new { htmlAttributes = new { @class = "form-control", @required = "required", @readonly = "readonly", @autocomplete = "off" } })
        </div>
        <label class="col-md-2 control-label">Title Deed No:</label>
        <div class="col-md-4">
            @Html.EditorFor(model => model.AssetNo, new { htmlAttributes = new { @class = "form-control", @required = "required", @autocomplete = "off" } })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Condition, htmlAttributes: new { @class = "control-label col-md-2" })

        <div class="col-md-4">
            @Html.DropDownListFor(model => model.Condition, Model.ConditionList, "Select ", new { @class = "form-control", @required = "required" })
        </div>
        @Html.LabelFor(model => model.AssetClass.ClassName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.AssetClass.ClassName, new { htmlAttributes = new { @class = "form-control", @required = "required", @readonly = "readonly", @autocomplete = "off" } })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.InstitutionCode, htmlAttributes: new { @class = "control-label col-md-2" })

        <div class="col-md-4">
            @Html.EditorFor(model => model.InstitutionCode, new { htmlAttributes = new { @class = "form-control", @required = "required", @readonly = "readonly", @autocomplete = "off" } })
        </div>
        @Html.LabelFor(model => model.InstitutionSubLevelId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.DropDownListFor(model => model.InstitutionSubLevelId, Model.DepartmentList, "Select ", new { @class = "form-control", @required = "required" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.RegionId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.DropDownListFor(model => model.RegionId, Model.RegionList, "Select ...", new { @class = "form-control", @required = "required" })
        </div>
        @Html.LabelFor(model => model.DistrictId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.DropDownListFor(model => model.DistrictId, Model.DistrictList, "Select ...", new { @class = "form-control", @required = "required" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Size, htmlAttributes: new { @class = "control-label col-md-2" })

        <div class="col-md-4">
            @Html.EditorFor(model => model.Size, new { htmlAttributes = new { @class = "form-control", @required = "required", @autocomplete = "off" } })
        </div>
        @Html.LabelFor(model => model.SurveyedStatus, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.SurveyedStatus, new { htmlAttributes = new { @class = "form-control", @required = "required", @autocomplete = "off" } })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.RightOfOccupancy, htmlAttributes: new { @class = "control-label col-md-2" })

        <div class="col-md-4">
            @Html.EditorFor(model => model.RightOfOccupancy, new { htmlAttributes = new { @class = "form-control", @required = "required", @autocomplete = "off" } })
        </div>
        @Html.LabelFor(model => model.EndRightOfOccupancy, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.EndRightOfOccupancy, new { htmlAttributes = new { @class = "form-control", @required = "required", @autocomplete = "off" } })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Usage, htmlAttributes: new { @class = "control-label col-md-2" })

        <div class="col-md-4">
            @Html.EditorFor(model => model.Usage, new { htmlAttributes = new { @class = "form-control", @required = "required", @autocomplete = "off" } })
        </div>
        @Html.LabelFor(model => model.RemainEconomicLife, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.RemainEconomicLife, new { htmlAttributes = new { @class = "form-control", @required = "required", @autocomplete = "off" } })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Remark, htmlAttributes: new { @class = "control-label col-md-2" })

        <div class="col-md-4">
            @Html.EditorFor(model => model.Remark, new { htmlAttributes = new { @class = "form-control", @required = "required", rows = "2", maxlength = 250 } })
        </div>

    </div>


</div>
        <div class="modal-footer">
            <a href="#" class="btn btn-default" data-dismiss="modal">Cancel</a>
            <input class="btn btn-info" type="submit" id="btnSubmit" value="Save" />
            @*<input type="submit" value="Submit" class="btn btn-success" id="btnSubmit" />*@

        </div>

    }
}
else if (Model.AssetClass.ClassName == "Buildings")
{
    using (Html.BeginForm(null, null, FormMethod.Post, new { id = "edit_form", enctype = "multipart/form-data", onsubmit = "return SubmitBuilding(this)" }))
    {
        <div class="modal-body form-horizontal">
            <input type="hidden" name="ReceivedAssetsId" id="ReceivedAssetsId" value='@Model.ReceivedAssetsId'>
            <br />

            <div class="form-group">
                @Html.LabelFor(model => model.AssetDetailId, htmlAttributes: new { @class = "control-label col-md-2" })

                <div class="col-md-4">
                    @Html.EditorFor(model => model.AssetDetailId, new { htmlAttributes = new { @class = "form-control", @required = "required", @readonly = "readonly", @autocomplete = "off" } })
                </div>
                <label class="col-md-2 control-label">Building ID</label>
                <div class="col-md-4">
                    @Html.EditorFor(model => model.AssetNo, new { htmlAttributes = new { @class = "form-control", @required = "required", @autocomplete = "off" } })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Condition, htmlAttributes: new { @class = "control-label col-md-2" })

                <div class="col-md-4">
                    @Html.DropDownListFor(model => model.Condition, Model.ConditionList, "Select ", new { @class = "form-control", @required = "required" })
                </div>
                @Html.LabelFor(model => model.AssetClass.ClassName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.AssetClass.ClassName, new { htmlAttributes = new { @class = "form-control", @required = "required", @readonly = "readonly", @autocomplete = "off" } })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.InstitutionCode, htmlAttributes: new { @class = "control-label col-md-2" })

                <div class="col-md-4">
                    @Html.EditorFor(model => model.InstitutionCode, new { htmlAttributes = new { @class = "form-control", @required = "required", @readonly = "readonly", @autocomplete = "off" } })
                </div>
                @Html.LabelFor(model => model.InstitutionSubLevelId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.DropDownListFor(model => model.InstitutionSubLevelId, Model.DepartmentList, "Select ", new { @class = "form-control", @required = "required" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.RegionId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.DropDownListFor(model => model.RegionId, Model.RegionList, "Select ...", new { @class = "form-control", @required = "required" })
                </div>
                @Html.LabelFor(model => model.DistrictId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.DropDownListFor(model => model.DistrictId, Model.DistrictList, "Select ...", new { @class = "form-control", @required = "required" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.NumberOfStorey, htmlAttributes: new { @class = "control-label col-md-2" })

                <div class="col-md-4">
                    @Html.EditorFor(model => model.NumberOfStorey, new { htmlAttributes = new { @class = "form-control", @required = "required", @autocomplete = "off" } })
                </div>
                @Html.LabelFor(model => model.PlotNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.PlotNumber, new { htmlAttributes = new { @class = "form-control", @required = "required", @autocomplete = "off" } })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Usage, htmlAttributes: new { @class = "control-label col-md-2" })

                <div class="col-md-4">
                    @Html.EditorFor(model => model.Usage, new { htmlAttributes = new { @class = "form-control", @required = "required", @autocomplete = "off" } })
                </div>
                @Html.LabelFor(model => model.RemainEconomicLife, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.RemainEconomicLife, new { htmlAttributes = new { @class = "form-control", @required = "required", @autocomplete = "off" } })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Remark, htmlAttributes: new { @class = "control-label col-md-2" })

                <div class="col-md-4">
                    @Html.EditorFor(model => model.Remark, new { htmlAttributes = new { @class = "form-control", @required = "required", rows = "2", maxlength = 250 } })
                </div>

            </div>


        </div>
        <div class="modal-footer">
            <a href="#" class="btn btn-default" data-dismiss="modal">Cancel</a>
            <input class="btn btn-info" type="submit" id="btnSubmit" value="Save" />
            @*<input type="submit" value="Submit" class="btn btn-success" id="btnSubmit" />*@

        </div>

    }
}
else if (Model.AssetClass.ClassName == "Roads")
{
    using (Html.BeginForm(null, null, FormMethod.Post, new { id = "edit_form", enctype = "multipart/form-data", onsubmit = "return SubmitInfrastructure(this)" }))
    {
<div class="modal-body form-horizontal">
    <input type="hidden" name="ReceivedAssetsId" id="ReceivedAssetsId" value='@Model.ReceivedAssetsId'>
    <br />

    <div class="form-group">
        @Html.LabelFor(model => model.AssetDetailId, htmlAttributes: new { @class = "control-label col-md-2" })

        <div class="col-md-4">
            @Html.EditorFor(model => model.AssetDetailId, new { htmlAttributes = new { @class = "form-control", @required = "required", @readonly = "readonly", @autocomplete = "off" } })
        </div>
        <label class="col-md-2 control-label"><strong>Asset ID:</strong></label>
        <div class="col-md-4">
            @Html.EditorFor(model => model.AssetNo, new { htmlAttributes = new { @class = "form-control", @required = "required", @autocomplete = "off" } })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Condition, htmlAttributes: new { @class = "control-label col-md-2" })

        <div class="col-md-4">
            @Html.DropDownListFor(model => model.Condition, Model.ConditionList, "Select ", new { @class = "form-control", @required = "required" })
        </div>
        @Html.LabelFor(model => model.AssetClass.ClassName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.AssetClass.ClassName, new { htmlAttributes = new { @class = "form-control", @required = "required", @readonly = "readonly", @autocomplete = "off" } })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.InstitutionCode, htmlAttributes: new { @class = "control-label col-md-2" })

        <div class="col-md-4">
            @Html.EditorFor(model => model.InstitutionCode, new { htmlAttributes = new { @class = "form-control", @required = "required", @readonly = "readonly", @autocomplete = "off" } })
        </div>
        @Html.LabelFor(model => model.InstitutionSubLevelId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.DropDownListFor(model => model.InstitutionSubLevelId, Model.DepartmentList, "Select ", new { @class = "form-control", @required = "required" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.RegionId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.DropDownListFor(model => model.RegionId, Model.RegionList, "Select ...", new { @class = "form-control", @required = "required" })
        </div>
        @Html.LabelFor(model => model.DistrictId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.DropDownListFor(model => model.DistrictId, Model.DistrictList, "Select ...", new { @class = "form-control", @required = "required" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })

        <div class="col-md-4">
            @Html.EditorFor(model => model.Type, new { htmlAttributes = new { @class = "form-control", @required = "required", @autocomplete = "off" } })
        </div>
        @Html.LabelFor(model => model.RoadLength, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.RoadLength, new { htmlAttributes = new { @class = "form-control", @required = "required", @autocomplete = "off" } })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.RoadFrom, htmlAttributes: new { @class = "control-label col-md-2" })

        <div class="col-md-4">
            @Html.EditorFor(model => model.RoadFrom, new { htmlAttributes = new { @class = "form-control", @required = "required", @autocomplete = "off" } })
        </div>
        @Html.LabelFor(model => model.RoadTo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.RoadTo, new { htmlAttributes = new { @class = "form-control", @required = "required", @autocomplete = "off" } })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Remark, htmlAttributes: new { @class = "control-label col-md-2" })

        <div class="col-md-4">
            @Html.EditorFor(model => model.Remark, new { htmlAttributes = new { @class = "form-control", @required = "required", rows = "2", maxlength = 250 } })
        </div>
        @Html.LabelFor(model => model.RemainEconomicLife, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.RemainEconomicLife, new { htmlAttributes = new { @class = "form-control", @required = "required", @autocomplete = "off" } })
        </div>
    </div>



</div>
        <div class="modal-footer">
            <a href="#" class="btn btn-default" data-dismiss="modal">Cancel</a>
            <input class="btn btn-info" type="submit" id="btnSubmit" value="Save" />
            @*<input type="submit" value="Submit" class="btn btn-success" id="btnSubmit" />*@

        </div>

    }
}
else if (Model.AssetClass.ClassName == "Biological Assets")
{
    using (Html.BeginForm(null, null, FormMethod.Post, new { id = "edit_form", enctype = "multipart/form-data", onsubmit = "return SubmitBiologicalAsset(this)" }))
    {
        <div class="modal-body form-horizontal">
            <input type="hidden" name="ReceivedAssetsId" id="ReceivedAssetsId" value='@Model.ReceivedAssetsId'>
            <br />

            <div class="form-group">
                @Html.LabelFor(model => model.AssetDetailId, htmlAttributes: new { @class = "control-label col-md-2" })

                <div class="col-md-4">
                    @Html.EditorFor(model => model.AssetDetailId, new { htmlAttributes = new { @class = "form-control", @required = "required", @readonly = "readonly", @autocomplete = "off" } })
                </div>
                <label class="col-md-2 control-label">Identification No</label>
                <div class="col-md-4">
                    @Html.EditorFor(model => model.AssetNo, new { htmlAttributes = new { @class = "form-control", @required = "required", @autocomplete = "off" } })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Condition, htmlAttributes: new { @class = "control-label col-md-2" })

                <div class="col-md-4">
                    @Html.DropDownListFor(model => model.Condition, Model.ConditionList, "Select ", new { @class = "form-control", @required = "required" })
                </div>
                @Html.LabelFor(model => model.AssetClass.ClassName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.AssetClass.ClassName, new { htmlAttributes = new { @class = "form-control", @required = "required", @readonly = "readonly", @autocomplete = "off" } })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.InstitutionCode, htmlAttributes: new { @class = "control-label col-md-2" })

                <div class="col-md-4">
                    @Html.EditorFor(model => model.InstitutionCode, new { htmlAttributes = new { @class = "form-control", @required = "required", @readonly = "readonly", @autocomplete = "off" } })
                </div>
                @Html.LabelFor(model => model.InstitutionSubLevelId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.DropDownListFor(model => model.InstitutionSubLevelId, Model.DepartmentList, "Select ", new { @class = "form-control", @required = "required" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.RegionId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.DropDownListFor(model => model.RegionId, Model.RegionList, "Select ...", new { @class = "form-control", @required = "required" })
                </div>
                @Html.LabelFor(model => model.DistrictId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.DropDownListFor(model => model.DistrictId, Model.DistrictList, "Select ...", new { @class = "form-control", @required = "required" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Sex, htmlAttributes: new { @class = "control-label col-md-2" })

                <div class="col-md-4">
                @Html.DropDownListFor(model => model.Sex, new List<SelectListItem>{
                  new SelectListItem{ Text="--Select--", Value = "" },
                  new SelectListItem{ Text="Male", Value = "Male" },
                  new SelectListItem{ Text="Female", Value = "Female" },
                   }, new { @class = "form-control", @required = "required" })
                </div>
                @Html.LabelFor(model => model.BiologicalAssetAge, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.BiologicalAssetAge, new { htmlAttributes = new { @class = "form-control", @required = "required", @autocomplete = "off" } })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })

                <div class="col-md-4">
                    @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control", @required = "required", @autocomplete = "off" } })
                </div>
                @Html.LabelFor(model => model.RemainEconomicLife, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.RemainEconomicLife, new { htmlAttributes = new { @class = "form-control",@required = "required", @autocomplete = "off" } })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Remark, htmlAttributes: new { @class = "control-label col-md-2" })

                <div class="col-md-4">
                    @Html.EditorFor(model => model.Remark, new { htmlAttributes = new { @class = "form-control", @required = "required", rows = "2", maxlength = 250 } })
                </div>

            </div>


        </div>
        <div class="modal-footer">
            <a href="#" class="btn btn-default" data-dismiss="modal">Cancel</a>
            <input class="btn btn-info" type="submit" id="btnSubmit" value="Save" />
            @*<input type="submit" value="Submit" class="btn btn-success" id="btnSubmit" />*@

        </div>

    }
}











