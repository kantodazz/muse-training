@model IEnumerable<IFMIS.Areas.IFMISTZ.Models.InventoryDetailVM>
@{
    ViewBag.Title = "Approved Inventories List";
}



<div id="content" style="margin: 5px; padding-top: 30px">

    <div class="row">


    </div>


    <!-- widget grid -->
    <section id="widget-grid" class="">


        <!-- START ROW -->

        <div class="row">

            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">

                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">

                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2> Issue Inventories </h2>

                    </header>


                    <div>
                        <div class="widget-body " style="padding-top:10px;width:100%">
                            <div class="row">
                                <div class="col-lg-3 col-sm-3 col-xs-3">
                                    <div class="input-group"><input class="form-control" id="ItemCard" name="ItemCard" placeholder="Search Item Card" value='' type="text" autocomplete="off" onclick="SearchInventoryCard()" /><span class="input-group-btn"><button class="btn" style="background-color:#2196F3;color:white" id="search" onclick="SearchInventoryCard()">Search</button></span></div>
                                </div>
                               
                            </div>
                            <hr>
                            <p align="left" id="itemcardcontents" style="display:none">
                                Description :<strong><span id="description"></span></strong><br>
                                Reorder Level :<strong><span id="reoderLevel"></span></strong><br>
                                Total Available  :<strong><span id="totalAvailable"></span></strong><br>
                            </p>
                            <br />
                            <br />
                            <div align="center">
                                <img src="/Media/Images/ajax_loader.gif" class="loadingImg" style="display:none" />
                            </div>
                            <div id="issuing_table" style="display:none">
                                <table align="center" class="table  table-bordered table-hover table-condensed" id="dt_inventories" style="width:96%">
                                    <thead>
                                        <tr>
                                            <th style="text-align:right;width:4%"></th>
                                            <th style="text-align:left">Code</th>
                                            <th style="text-align:left">Item Name </th>
                                            <th style="text-align:left">UOM</th>
                                            <th style="text-align:right">Unit Price(Tsh)</th>
                                            <th style="text-align:center;width:7%">Origin Quantity</th>
                                            <th style="text-align:center;width:7%">Previous Issued</th>
                                            <th style="text-align:center;width:7%">Current Issued</th>
                                            <th style="text-align:center;width:7%">Quantity Remains</th>
                                            <th style="text-align:right">Value(Tsh)</th>
                                            <th style="text-align:left">Overall Status</th>
                                            <th style="text-align:center">Action</th>

                                        </tr>
                                    </thead>
                                </table>
                            </div>
                        </div>





                    </div>


                </div>
            </article>

        </div>
    </section>

</div>

<!----------- Search  GL----------------->
<div class="modal fade" id="search_item_card" style="left:4%">

    <div class="modal-dialog" style="width:80%;">
        <div class="modal-content panel-info">
            <div class="modal-header panel-heading">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h3 class="modal-title"> Select Item Card</h3>
            </div>
            <div class="modal-body">

                <div>
                    @*<div class="row" style="padding-top:1%;padding-bottom:1%">
                        <div class="col-md-8">

                        </div>
                        <div class="col-md-4">
                            <div class="input-group" style="float:right">
                                <span class="input-group-addon"><i class="fa fa-search"></i></span>
                                <input type="search" name="search" class="form-control" autocomplete="off" placeholder="Search..." id="search_card">
                            </div>
                        </div>
                    </div>*@
                    <div align="center">
                        <img src="/Media/Images/ajax_loader.gif" class="loadingImg" style="display:none" />
                    </div>
                    <table id="dt_search_item_card" class="table table-striped table-bordered table-hover table-condensed">
                        <thead>
                            <tr>
                                <th>#</th>
                                <th>Reorder Level Value</th>
                                <th>Available</th>
                                <th>Item Card</th>
                                <th>Description</th>
                                <th>UOM</th>
                                <th style="text-align:center">Reorder Level</th>
                                <th style="text-align:center">Available Quantity</th>
                                <th style="text-align:center">Action</th>
                            </tr>
                        </thead>
                    </table>

                </div>
                <div class="modal-footer">

                    <button class="btn btn-info" data-dismiss="modal">
                        <i class="fa  fa-times"></i>Cancel
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>


<div class="modal fade" id="AddInventory" style="left:4%">

    <div class="modal-dialog" style="width:35%;">
        <div class="modal-content panel-info">

            <div class="modal-header panel-heading">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h3 class="modal-title" style="text-align:center"> Add  Inventories</h3>
                <h4 align="center">Ledger Folio <span class="code"></span></h4>
            </div>
            @using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = "return AddInventories(this)" }))
            {
                <div class="modal-body form-horizontal">

                    <br />

                    <input type="hidden" name="Id" id="Id" value="">
                    <div class="form-group">
                        @Html.Label("Number Of Inventory", htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-6">
                            <input type="number" name="Quantity" id="Quantity" class="form-control" required autocomplete="off" min="1">
                        </div>

                    </div>
                    <div class="form-group">
                        @Html.Label("Value", htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-6">
                            <input type="text" name="Value" id="Value" class="form-control" required autocomplete="off" min="1">
                        </div>

                    </div>
                    <div class="form-group">
                        @Html.Label("Description", htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-6">
                            <textarea name="Description" id="Description" required rows="4" placeholder="Reason of adding new inventory" maxlength="250" class="form-control"></textarea>
                        </div>
                    </div>

                </div>
                <div class="modal-footer">
                    <a href="#" class="btn btn-default" data-dismiss="modal">Cancel</a>
                    <input class="btn btn-info" type="submit" id="btnSubmit" value="Save" />
                    @*<input type="submit" value="Submit" class="btn btn-success" id="btnSubmit" />*@

                </div>

            }
        </div>
    </div>
</div>

<div class="modal fade" id="WriteOff" style="left:4%">

    <div class="modal-dialog" style="width:35%;">
        <div class="modal-content panel-info">

            <div class="modal-header panel-heading">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h3 class="modal-title" style="text-align:center"> Write Off</h3>
                <h4 align="center">Ledger Folio <span class="code"></span></h4>
            </div>
            @using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = "return WriteOff(this)" }))
            {
                <div class="modal-body2 form-horizontal">

                    <br />

                    <input type="hidden" name="Id" id="Id" value="">
                    <div class="form-group">
                        @Html.Label("Number Of Inventory", htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-6">
                            <input type="number" name="Quantity" id="Quantity" class="form-control" required autocomplete="off" min="1">
                        </div>

                    </div>
                    <div class="form-group">
                        @Html.Label("Value", htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-6">
                            <input type="text" name="Value" id="Value" class="form-control" required autocomplete="off" min="1">
                        </div>

                    </div>
                    <div class="form-group">
                        @Html.Label("Description", htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-6">
                            <textarea name="Description" id="Description" required rows="4" placeholder="Why do you write off" maxlength="250" class="form-control"></textarea>
                        </div>
                    </div>

                </div>
                <div class="modal-footer">
                    <a href="#" class="btn btn-default" data-dismiss="modal">Cancel</a>
                    <input class="btn btn-info" type="submit" id="btnSubmit" value="Save" />
                    @*<input type="submit" value="Submit" class="btn btn-success" id="btnSubmit" />*@

                </div>

            }
        </div>
    </div>
</div>
<div class="modal fade" id="divModal" tabindex="-1" role="dialog" aria-labelledby="lblmodal">
    <div class="modal-dialog modal-lg" style="width:80%;">
        <div width="90%" class="modal-content">
            <div class="modal-header alert alert-info" style="font:bold 16px Trebuchet MS, Lucida Sans Unicode, Lucida Grande, Lucida Sans, Arial, sans-serif">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title" id="lblmodal">
                    Inventories Issuing
                </h4>
            </div>
            <div class="modal-body" id="divModalBody">

            </div>

            <div id="divPaymentStatusLoader" style="text-align:center; display:none">
                <img src="~/assets/img/avatars/ajax_loader.gif" />
            </div>
        </div>
    </div>

</div>
@section pagespecific {
    <!-- PAGE RELATED PLUGIN(S) -->

    <script type="text/javascript">
              var dt_inventories = $('#dt_inventories').dataTable();
        var dt_search_item_card = $('#dt_search_item_card').dataTable(
        {
        "aoColumnDefs": [{ "bVisible": false, "aTargets": [1,2] }],
    });
                //$("#dt_search_item_card_wrapper .dt-toolbar").remove();
               $("#search_item_card").on("keyup search input paste cut", function () {
                dt_search_item_card.DataTable().search(this.value).draw();
               });
                function SearchInventoryCard() {
                    $('#search_item_card').modal('show');
                      dt_search_item_card.fnClearTable();
                      SearchItemCards();
                }
               $("#search_card").on("keyup search input paste cut", function () {
                            if (!this.value) {
                                dt_search_item_card.fnClearTable();
                            } else {
                                SearchItemCards(this.value);
                            }
                    });
                function SearchItemCards() {
                 var url = '@Url.Action("GetItemCards", "Inventories")';
                    $.ajax({
                        type: "get",
                        url: url,
                        contenttype: "application/json; charset=utf-8",
                        datatype: "json",
                        success: function (response) {
                           if (response == "DbException") {
                              swal("Db Exception,Please contact technical supporter ");
                            }
                            else {
                                data = response.data;
                                dt_search_item_card.fnClearTable();
                               for (var i = 0; i < data.length; i++) {

                                   dt_search_item_card.fnAddData([i + 1,
                                    data[i]["OrderLevel"],
                                    data[i]["AvailableQuantity"],
                                    data[i]["ItemCard"],
                                    data[i]["ItemDescription"],
                                    data[i]["UOM"],
                                    '<div align="center"><span class="badge">'+data[i]["OrderLevel"]+'</span></div>',
                                    '<div align="center"><span class="badge">'+data[i]["AvailableQuantity"]+'</span></div>',
                                    '<div align="center"><a href="#" onclick="ItemCardClicked(' + i + ')"><i class="glyphicon glyphicon-plus-sign"></i></a></div>'
                                    ]);

                                }
                            }
                        },
                        failure: function (error) {
                            swal(error);
                        }
                    });
                        }
              function ItemCardClicked(rowId) {
                    var data = dt_search_item_card.DataTable().rows().data();
                        var row = data[rowId];
                  $("#ItemCard").val(row[3]);
                  $("#itemcardcontents").show();
                  $("#description").text(row[4]); 
                  $("#reoderLevel").text(row[1]); 
                   $("#totalAvailable").text(row[2]);                
                  $("#search_item_card").modal("hide");
                   dt_inventories.fnClearTable();
                    InventoriesByItemCard(row[3]);
             }
            function InventoriesByItemCard(itemCard) {
                 var formData = { "ItemCard": itemCard };
                 var url = '@Url.Action("GetInventoriesByItemCard", "Inventories")';
                    $.ajax({
                        type: "get",
                        url: url,
                        data: formData,
                        contenttype: "application/json; charset=utf-8",
                        datatype: "json",
                        success: function (response) {
                           if (response == "DbException") {
                               swal("Db Exception,Please contact technical supporter ");
                           }
                           else if (response == "NoAnyInventory") {
                                  $("#itemcardcontents").hide();
                              swal("No any inventory available for issuing by this Item Card");
                            }
                           else {
                               $("#issuing_table").show();
                                data = response.data;                           
                               for (var i = 0; i < data.length; i++) {
                                   var overallStatus = data[i]["OverallStatus"];
                                   if (data[i]["Rejected"]=="Rejected") {
                                       overallStatus = data[i]["Rejected"];
                                      }
                                    if (data[i]["CurrentIssued"] > 0) {
                        
                                    dt_inventories.fnAddData([i + 1,
                                        data[i]["InventoryCode"],
                                        data[i]["ItemName"],
                                        data[i]["UOM"],
                                        '<span style="float:right">' + toLabel(data[i]["UnitPrice"]) + '</span>',
                                        '<div align="center">' + data[i]["Quantity"] + '</div>',
                                        '<div align="center">' + data[i]["PreviousIssued"] + '</div>',
                                        '<div align="center">' + data[i]["CurrentIssued"] + '</div>',
                                        '<div align="center">' + data[i]["BalanceQuantity"] + '</div>',
                                        '<span style="float:right">' + toLabel(data[i]["InventoryValue"]) + '</span>',
                                        overallStatus,
                                       '<div align="center"><div class="btn-group">\
                                            <button type="button" class="btn btn-info btn-xs dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\
                                                 <span class="caret"></span\
                                                     <span class="sr-only"></span>\
                                            </button>\
                                          <ul class="dropdown-menu">\
                                                <li><a href="#" onclick= "issueInventories(' + data[i]["InventoryDetailId"] + ')">Issue</a></li>\
                                                <li><a href="#" onclick= "previewIssuing(' + data[i]["InventoryDetailId"] + ')">Preview</a></li>\
                                                <li><a href="#" onclick= "confirmIssuing(' + data[i]["InventoryDetailId"] + ')">Confirm</a></li>\
                                          </ul>\
                                        </div></div>'
                                    ]);

                                    } else {
                                  
                                    dt_inventories.fnAddData([i + 1,
                                        data[i]["InventoryCode"],
                                        data[i]["ItemName"],
                                        data[i]["UOM"],
                                        '<span style="float:right">' + toLabel(data[i]["UnitPrice"]) + '</span>',
                                        '<div align="center">' + data[i]["Quantity"] + '</div>',
                                        '<div align="center">' + data[i]["PreviousIssued"] + '</div>',
                                        '<div align="center">' + data[i]["CurrentIssued"] + '</div>',
                                        '<div align="center">' + data[i]["BalanceQuantity"] + '</div>',
                                        '<span style="float:right">' + toLabel(data[i]["InventoryValue"]) + '</span>',
                                        overallStatus,
                                       '<div align="center"><div class="btn-group">\
                                            <button type="button" class="btn btn-info btn-xs dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\
                                                 <span class="caret"></span\
                                                     <span class="sr-only"></span>\
                                            </button>\
                                          <ul class="dropdown-menu">\
                                                <li><a href="#" onclick= "issueInventories(' + data[i]["InventoryDetailId"] + ')">Issue</a></li>\
                                                <li><a href="#" onclick= "previewIssuing(' + data[i]["InventoryDetailId"] + ')">Preview</a></li>\
                                          </ul>\
                                        </div></div>'
                                    ]);


                                         }
                                }
                            }
                        },
                        failure: function (error) {
                            swal(error);
                        }
                    });
            }

           function updateInventories(itemCard) {
                 var formData = { "ItemCard": itemCard };
                 var url = '@Url.Action("GetInventoriesByItemCard", "Inventories")';
                    $.ajax({
                        type: "get",
                        url: url,
                        data: formData,
                        contenttype: "application/json; charset=utf-8",
                        datatype: "json",
                        success: function (response) {
                           if (response == "DbException") {
                               swal("Db Exception,Please contact technical supporter ");
                           }
                           else if (response == "NoAnyInventory") {
                               //No Need to update table
                               $("#itemcardcontents").hide();
                            }
                           else {
                               $("#issuing_table").show();
                                data = response.data;                           
                               for (var i = 0; i < data.length; i++) {
                                     var overallStatus = data[i]["OverallStatus"];
                                   if (data[i]["Rejected"]=="Rejected") {
                                       overallStatus = data[i]["Rejected"];
                                      }
                                    if (data[i]["CurrentIssued"] > 0) {
                        
                                    dt_inventories.fnAddData([i + 1,
                                        data[i]["InventoryCode"],
                                        data[i]["ItemName"],
                                        data[i]["UOM"],
                                        '<span style="float:right">' + toLabel(data[i]["UnitPrice"]) + '</span>',
                                        '<div align="center">' + data[i]["Quantity"] + '</div>',
                                        '<div align="center">' + data[i]["PreviousIssued"] + '</div>',
                                        '<div align="center">' + data[i]["CurrentIssued"] + '</div>',
                                        '<div align="center">' + data[i]["BalanceQuantity"] + '</div>',
                                        '<span style="float:right">' + toLabel(data[i]["InventoryValue"]) + '</span>',
                                        overallStatus,
                                       '<div align="center"><div class="btn-group">\
                                            <button type="button" class="btn btn-info btn-xs dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\
                                                 <span class="caret"></span\
                                                     <span class="sr-only"></span>\
                                            </button>\
                                          <ul class="dropdown-menu">\
                                                <li><a href="#" onclick= "issueInventories(' + data[i]["InventoryDetailId"] + ')">Issue</a></li>\
                                                <li><a href="#" onclick= "previewIssuing(' + data[i]["InventoryDetailId"] + ')">Preview</a></li>\
                                                <li><a href="#" onclick= "confirmIssuing(' + data[i]["InventoryDetailId"] + ')">Confirm</a></li>\
                                          </ul>\
                                        </div></div>'
                                    ]);

                                    } else {
                                  
                                    dt_inventories.fnAddData([i + 1,
                                        data[i]["InventoryCode"],
                                        data[i]["ItemName"],
                                        data[i]["UOM"],
                                        '<span style="float:right">' + toLabel(data[i]["UnitPrice"]) + '</span>',
                                        '<div align="center">' + data[i]["Quantity"] + '</div>',
                                        '<div align="center">' + data[i]["PreviousIssued"] + '</div>',
                                        '<div align="center">' + data[i]["CurrentIssued"] + '</div>',
                                        '<div align="center">' + data[i]["BalanceQuantity"] + '</div>',
                                        '<span style="float:right">' + toLabel(data[i]["InventoryValue"]) + '</span>',
                                        overallStatus,
                                       '<div align="center"><div class="btn-group">\
                                            <button type="button" class="btn btn-info btn-xs dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\
                                                 <span class="caret"></span\
                                                     <span class="sr-only"></span>\
                                            </button>\
                                          <ul class="dropdown-menu">\
                                                <li><a href="#" onclick= "issueInventories(' + data[i]["InventoryDetailId"] + ')">Issue</a></li>\
                                                <li><a href="#" onclick= "previewIssuing(' + data[i]["InventoryDetailId"] + ')">Preview</a></li>\
                                          </ul>\
                                        </div></div>'
                                    ]);


                                         }
                                }
                            }
                        },
                        failure: function (error) {
                            swal(error);
                        }
                    });
                        }
        function AddInventories(formData) {
            var url = '@Url.Action("AddInventories", "Inventories")';
            $('#AddInventory').modal('hide');
            var ajaxConfig = {
                type: "post",
                url: url,
                data: new FormData(formData),
                success: function (result) {
                    if (result == "Success") {
                        swal("Data saved successfully", { icon: "Success" })
                                                                   .then((value) => {
                                                                       location.reload();
                                                                   });
                    }
                    else {
                        swal("Failed  due to DbException");
                    }
                }
            }

            if ($(formData).attr('enctype') == "multipart/form-data") {
                ajaxConfig["contentType"] = false;
                ajaxConfig["processData"] = false;
            }
            $.ajax(ajaxConfig);
            return false;
        }
        // =========== End Save Add Inventories ====================
        function WriteOff(formData) {
            var url = '@Url.Action("WriteOff", "Inventories")';
            $('#WriteOff').modal('hide');
            var ajaxConfig = {
                type: "post",
                url: url,
                data: new FormData(formData),
                success: function (result) {
                    if (result == "Success") {
                        swal("Data saved successfully", { icon: "Success" })
                                                                   .then((value) => {
                                                                       location.reload();
                                                                   });
                    }
                    else if (result == "Exceed") {
                        swal("Failed,You can not write off more than quantity available in the store");
                    }
                    else {
                        swal("Failed  due to DbException");
                    }
                }
            }

            if ($(formData).attr('enctype') == "multipart/form-data") {
                ajaxConfig["contentType"] = false;
                ajaxConfig["processData"] = false;
            }
            $.ajax(ajaxConfig);
            return false;
        }
        // =========== End Save Write Off Inventories ====================
            $(document).ready(function () {

                $(".inventoryConfirm").on('click', function () {
                    var id = $(this).data('id');
                    var inventoryno = $(this).data('inventoryno');
                    swal({
                        title: 'Confirmation',
                        text: "Do you what to confirm Invenory issuing " + inventoryno + " ?",
                        buttons: [
                          'No',
                          'Yes'
                        ],
                    }).then(function (isConfirm) {
                        if (isConfirm) {
                            var url = '@Url.Action("ConfirmIssuing", "Inventories")';
                            $.ajax(
                {
                    type: "POST",
                    url: url,
                    data: { id: id },
                    success: function (response) {
                        if (response == "Success") {

                            swal("Confirmed successfully!", { icon: "success" })
                                      .then((value) => {
                                          location.reload();
                                      });


                        }
                        else {

                            swal("Failed to confirm ,DbException");
                        }
                    },
                    error: function (xhr) {
                        swal(error);
                        $("#divLoader").hide();
                    },

                });
                        } else {
                            swal("Cancelled", "No change was made");
                        }
                    });

                });

                $(".addConfirm").on('click', function () {
                    var id = $(this).data('id');
                    var inventoryno = $(this).data('inventoryno');
                    swal({
                        title: 'Confirmation',
                        text: "Do you confirm added quantity to invetory with Ledger Folio of" + inventoryno + " ?",
                        buttons: [
                          'No',
                          'Yes'
                        ],
                    }).then(function (isConfirm) {
                        if (isConfirm) {
                            var url = '@Url.Action("ConfirmAddition", "Inventories")';
                            $.ajax(
                {
                    type: "POST",
                    url: url,
                    data: { id: id },
                    success: function (response) {
                        if (response == "Success") {

                            swal("Confirmed successfully!", { icon: "success" })
                                      .then((value) => {
                                          location.reload();
                                      });


                        }
                        else {

                            swal("Failed to confirm ,DbException");
                        }
                    },
                    error: function (xhr) {
                        swal(error);
                        $("#divLoader").hide();
                    },

                });
                        } else {
                            swal("Cancelled", "No change was made");
                        }
                    });

                });

                $(".writeOffConfirm").on('click', function () {
                    var id = $(this).data('id');
                    var inventoryno = $(this).data('inventoryno');
                    swal({
                        title: 'Confirmation',
                        text: "Do you confirm writing off to invetory with Ledger Folio of " + inventoryno + " ?",
                        buttons: [
                          'No',
                          'Yes'
                        ],
                    }).then(function (isConfirm) {
                        if (isConfirm) {
                            var url = '@Url.Action("ConfirmWriteOff", "Inventories")';
                            $.ajax(
                {
                    type: "POST",
                    url: url,
                    data: { id: id },
                    success: function (response) {
                        if (response == "Success") {

                            swal("Confirmed successfully!", { icon: "success" })
                                      .then((value) => {
                                          location.reload();
                                      });


                        }
                        else {

                            swal("Failed to confirm ,DbException");
                        }
                    },
                    error: function (xhr) {
                        swal(error);
                        $("#divLoader").hide();
                    },

                });
                        } else {
                            swal("Cancelled", "No change was made");
                        }
                    });

                });


                $(".AddInventory").on('click', function () {
                    var id = $(this).data('id');
                    var code = $(this).data('code');
                    $(".modal-body #Id").val(id);
                    $(".code").text(code);
                });

                $(".WriteOff").on('click', function () {
                    var id = $(this).data('id');
                    var code = $(this).data('code');
                    $(".modal-body2 #Id").val(id);
                    $(".code").text(code);
                });

                var $rows = $('#lpo tr');
                $('#search').keyup(function () {
                    var val = $.trim($(this).val()).replace(/ +/g, ' ').toLowerCase();

                    $rows.show().filter(function () {
                        var text = $(this).text().replace(/\s+/g, ' ').toLowerCase();
                        return !~text.indexOf(val);
                    }).hide();
                });


                        });

        //SHOW LOADER ICON
        $(document).ajaxStart(function () {
            $(".loadingImg").show();

        });
        //HIDE LOADER ICON
        $(document).ajaxStop(function () {
            $(".loadingImg").hide();
        });
        $(".modal-body #Value").autoNumeric('init');
        $(".modal-body2 #Value").autoNumeric('init');
            //function myFunction() {
            //    // Declare variables
            //    var input, filter, table, tr, td, i, txtValue;
            //    input = document.getElementById("lpo_search");
            //    filter = input.value.toUpperCase();
            //    table = document.getElementById("lpo");
            //    tr = table.getElementsByTagName("tr");

            //    // Loop through all table rows, and hide those who don't match the search query
            //    for (i = 0; i < tr.length; i++) {
            //        td = tr[i].getElementsByTagName("td")[2];
            //        if (td) {
            //            txtValue = td.textContent || td.innerText;
            //            if (txtValue.toUpperCase().indexOf(filter) > -1) {
            //                tr[i].style.display = "";
            //            } else {
            //                tr[i].style.display = "none";
            //            }
            //        }
            //    }
            //}
        var issueInventories = function (id) {
            var url = '@Url.Action("IssueInventory", "Inventories")';
            $("#divModalBody").load(url, { id: id }, function (response, status, xhr) {
                if (status == "error") {
                    $("#divModalBody").html("Error on issuing inventories system support.");
                }
                $("#divModal").modal("show");
            });
        };

        var previewIssuing = function (id) {
            var url = '@Url.Action("PreviewInventoriesIssuing", "Inventories")';
            $("#divModalBody").load(url, { id: id }, function (response, status, xhr) {
                if (status == "error") {
                    $("#divModalBody").html("Error on issuing inventories system support.");
                }
                $("#divModal").modal("show");
            });
        };

        var confirmIssuing = function (id) {

                    swal({
                        title: 'Confirmation',
                        text: "Do you what to confirm this Invenory issuing ?",
                        buttons: [
                          'No',
                          'Yes'
                        ],
                    }).then(function (isConfirm) {
                        if (isConfirm) {
                            var url = '@Url.Action("ConfirmIssuing", "Inventories")';
                            $.ajax(
                {
                    type: "POST",
                    url: url,
                    data: { id: id },
                    success: function (response) {
                        if (response == "Success") {

                            swal("Confirmed successfully!", { icon: "success" })
                                .then((value) => {
                                           dt_inventories.fnClearTable();
                                       var item_card=$("#ItemCard").val();
                                         updateInventories(item_card);
                                      });


                        }
                        else {

                            swal("Failed to confirm ,DbException");
                        }
                    },
                    error: function (xhr) {
                        swal(error);
                        $("#divLoader").hide();
                    },

                });
                        } else {
                            swal("Cancelled", "No change was made");
                        }
                    });
        };

        function enteredQuantity(e) {
        var maxQuantity = $("#divModalBody #BalanceQuantity").val();
        var i = 0;
        var sum = 0;
        $("#inventories tr").each(function () {
            if (i > 0) {
                if ($(this).children().eq(4).find("input").val()) {
                var value = $(this).children().eq(4).find("input").val();
                if (value != "") {
                    if (parseFloat(value)) {
                        sum = sum + parseFloat(value);
                    }
                    else {
                        e.value = "";
                    }
                }
                 }
            }
            i++;
        });
        $("#total_issuing").text(sum);
        if (sum > maxQuantity) {
            swal("Total can not exceed quantity remains in store i.e " + maxQuantity);
            sum = sum - parseFloat(e.value);
            e.value = "";
            $("#total_issuing").text(sum);
           
        }
       
        }


        function enteredQuantityTwo(e) {
         var maxQuantity = $("#divModalBody #BalanceQuantity").val();
        var i = 0;
        var sum = 0;
        $("#inventories tr").each(function () {
            if (i > 0) {
                if ($(this).children().eq(5).find("input").val()) {
                var value = $(this).children().eq(5).find("input").val();
                if (value != "") {
                    if (parseFloat(value)) {
                        sum = sum + parseFloat(value);
                    }
                    else {
                        e.value = "";
                    }
                }
                 }
            }
            i++;
        });
        $("#total_issuing").text(sum);
        if (sum > maxQuantity) {
            swal("Total can not exceed " + maxQuantity);
            sum = sum - parseFloat(e.value);
            e.value = "";
            $("#total_issuing").text(sum);

        }

    }


                  // =========== Start Save Inventory Information====================

        function SubmitIssuing(formData) {
                  $("#save_button").prop('disabled', true);
            var url = '@Url.Action("SaveInventoryIssuing", "Inventories")';
            var ajaxConfig = {
                type: "post",
                url: url,
                data: new FormData(formData),
                success: function (result) {
                    $("#save_button").prop('disabled', false);
                    if (result == "Success") {
                        swal("Issuing saved successfully", { icon: "Success" })
                                    .then((value) => {
                                        $("#divModal").modal("hide");
                                         dt_inventories.fnClearTable();
                                          var item_card=$("#ItemCard").val();
                                         updateInventories(item_card);
                                    });
                    }
                    else if (result == "NoQuantity") {
                            swal("Please enter quantity");
                    }
                    else if (result == "Exceed") {
                            swal("Exceed available quantity");
                    }
                    else {
                        swal("Failed  due to DbException");
                    }
                }
            }

            if ($(formData).attr('enctype') == "multipart/form-data") {
                ajaxConfig["contentType"] = false;
                ajaxConfig["processData"] = false;
            }
            $.ajax(ajaxConfig);
            return false;
        }

           function SubmitIssuingTwo(formData) {
                  $("#save_button").prop('disabled', true);
            var url = '@Url.Action("IssueRemainsInventory", "Inventories")';
            var ajaxConfig = {
                type: "post",
                url: url,
                data: new FormData(formData),
                success: function (result) {
                    $("#save_button").prop('disabled', false);
                    if (result == "Success") {
                        swal("Issuing saved successfully", { icon: "Success" })
                                    .then((value) => {
                                        $("#divModal").modal("hide");
                                         dt_inventories.fnClearTable();
                                          var item_card=$("#ItemCard").val();
                                         updateInventories(item_card);
                                    });
                    }
                    else if (result == "NoQuantity") {
                            swal("Please enter quantity");
                    }
                    else if (result == "Exceed") {
                            swal("Exceed available quantity");
                    }
                    else {
                        swal("Failed  due to DbException");
                    }
                }
            }

            if ($(formData).attr('enctype') == "multipart/form-data") {
                ajaxConfig["contentType"] = false;
                ajaxConfig["processData"] = false;
            }
            $.ajax(ajaxConfig);
            return false;
        }
       // =========== End Save Inventory Information ====================
    </script>
}












