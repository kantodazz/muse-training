@model IEnumerable<IFMIS.Areas.IFMISTZ.Models.PaymentBatchVM>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- MAIN CONTENT -->
<div id="content" style="margin: 5px; padding-top: 30px">

    <div class="row">
        @*<div class="col-xs-12 col-sm-9 col-md-9 col-lg-9">
                <h1 class="page-title txt-color-blueDark">

                    <!-- PAGE HEADER -->
                    <!--
                    <i class="fa-fw fa fa-pencil-square-o"></i>
                    Payments
                    <span>
                        >
                        Bills
                    </span>
                        -->
                </h1>
            </div>*@

        <div class="col-xs-12 col-sm-3 col-md-3 col-lg-3">
            <!-- Button trigger modal -->
            <!--<a data-toggle="modal" href="#myModal" class="btn btn-info btn-lg pull-right header-btn hidden-mobile"><i class="fa fa-circle-arrow-up fa-lg"></i> Launch form modal</a>-->
        </div>
    </div>

    <!--
    <div class="alert alert-block alert-info">
        <a class="close" data-dismiss="alert" href="#">×</a>
        <h4 class="alert-heading"><i class="fa fa-check-square-o"></i> Check validation!</h4>
        <p>
            You may also check the form validation by clicking on the form action button. Please try and see the results below!
        </p>
    </div>
        -->
    <!-- widget grid -->
    <section id="widget-grid" class="">


        <!-- START ROW -->

        <div class="row">

            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">

                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">
                    <!-- widget options:
                        usage: <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false">

                        data-widget-colorbutton="false"
                        data-widget-editbutton="false"
                        data-widget-togglebutton="false"
                        data-widget-deletebutton="false"
                        data-widget-fullscreenbutton="false"
                        data-widget-custombutton="false"
                        data-widget-collapsed="true"
                        data-widget-sortable="false"

                    -->
                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2>Payment Batch Approval</h2>

                    </header>

                    <!-- widget div-->
                    <div>

                        <!-- widget edit box -->
                        <div class="jarviswidget-editbox">
                            <!-- This area used as dropdown edit box -->

                        </div>
                        <!-- end widget edit box -->
                        <!-- widget content -->
                        <div class="widget-body">
                            @*<a href="@Url.Action("CreatePaymentBatch","PaymentBatches")" class="btn btn-info">
                                <span class="glyphicon glyphicon-plus"></span>
                                Add New Payment Batch
                            </a>*@
                      
                            <hr class="simple" />
                            <table id="dt_basic" class="table table-striped table-bordered table-hover table-condensed" width="100%">
                                <thead>
                                    <tr style="background-color: #f5f5f5; color:black">
                                        <th>#</th>

                                        <th>
                                            Batch Number
                                        </th>
                                        <th>
                                            Description
                                        </th>
                                        <th>
                                            Institution Code
                                        </th>
                                        <th>
                                            Payment Category
                                        </th>

                                        <th>
                                            Payer Account
                                        </th>

                                        <th style="text-align: center">
                                            No. of Transactions
                                        </th>
                                        <th style="text-align: center">
                                            Total Amount
                                        </th>
                                        <th>
                                            Overall Status
                                        </th>
                                        <th>
                                            Voucher Status
                                        </th>
                                        <th></th>
                                        <th>Action</th>

                                    </tr>
                                </thead>
                                @{int i = 0;}
                                @foreach (var item in Model)
            {
                i++;
                            <tr>
                                <td>@i</td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.BatchNo)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.BatchDesc)
                                </td>
                                <td style="text-align: center">
                                    @Html.DisplayFor(modelItem => item.InstitutionCode)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.PaymentCategory)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.PayerBankAccount)
                                </td>
                                <td style="text-align: center">
                                    @string.Format("{0:#,0}", item.NoTrx)
                                </td>
                                <td style="text-align: right">
                                    @string.Format("{0:#,0.00}", item.TotalAmount)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.OverallStatus)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.PaymentVoucherStatus)
                                </td>
                                <td>
                                    <a href="@Url.Action("AttachmentView", "PaymentVoucherAttachments",new { groupId = item.PaymentBatchID, sourceModule = "bulkpayment" })"><i class="fa fa-file-pdf-o"></i></a>
                                </td>
                                <td style="text-align: center">
                                    <!-- Split button -->
                                    <div class="btn-group">

                                        <button type="button" class="btn btn-info btn-xs dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                            <span class="caret"></span>
                                            <span class="sr-only">Toggle Dropdown</span>
                                        </button>
                                        <ul class="dropdown-menu">
                                            @if (item.OverallStatus == "Verified in Payment Office" || item.OverallStatus == "Rejected in Payment Office Submission")
                                            {
                                                <li><a href="@Url.Action("ApprovalDetails", "PaymentBatches", new { id = item.PaymentBatchID })"><i class="fa fa-eye fa-fw"></i>View</a></li>
                                                <li><a href="@Url.Action("DownloadPaymentSummary","PaymentBatches",new { id=item.PaymentBatchID })"><i class="fa fa-send"></i>Priview Slip</a></li>
                                                <li><a href="#" onclick="batchapproval(@item.PaymentBatchID)"><i class="fa fa-check-square fa-fw"></i>Approve</a></li>
                                                <li><a href="#" onclick="rejectpaymentBatch(@item.PaymentBatchID)"><i class="fa fa-check-square fa-fw"></i>Reject</a></li>
                                            }

                                            @if (item.OverallStatus == "Approved in Payment Office" && item.UploadStatusInPaymentOffice != "Slip Uploaded in Payment Office")
                                            {
                                                <li><a target="_blank" href="@Url.Action("PaymentSlip","PaymentBatches",new { id=item.PaymentBatchID })"><i class="fa fa-print"></i>Print Slip</a></li>
                                                <li><a href="#" data-toggle="modal" data-target="#fileAttachModal" data-id=@item.PaymentBatchID class="fileAttachModal"><i class="fa fa-cloud-upload fa-fw"></i>Upload</a></li>
                                                <li><a href="#" onclick="rejectpaymentBatch(@item.PaymentBatchID)"><i class="fa fa-check-square fa-fw"></i>Reject</a></li>
                                            }

                                            @*@if (item.OverallStatus == "Rejected in Payment Office Submission")
                    {
                        <li><a target="_blank" href="@Url.Action("PaymentSlip","PaymentBatches",new { id=item.PaymentBatchID })"><i class="fa fa-print"></i>Print Slip</a></li>
                        <li><a href="#" data-toggle="modal" data-target="#fileAttachModal" data-id=@item.PaymentBatchID class="fileAttachModal"><i class="fa fa-cloud-upload fa-fw"></i>Upload</a></li>
                        <li><a href="#" onclick="rejectpaymentBatch(@item.PaymentBatchID)"><i class="fa fa-check-square fa-fw"></i>Reject</a></li>
                    }*@

                                            @*@if(item.OverallStatus == "Slip Uploaded in Payment Office")
                    {
                       <li><a href="#" data-toggle="modal" data-target="#fileAttachModal" data-id=@item.PaymentBatchID class="fileAttachModal"><i class="fa fa-cloud-upload fa-fw"></i>Upload</a></li>
                       <li><a href="@Url.Action("DownloadPaymentSlipinPo","PaymentBatches",new { id=item.PaymentBatchID })"><i class="fa fa-send"></i>Priview Slip</a></li>
                       <li><a href="#" onclick="sentToBoT(@item.PaymentBatchID)"><i class="fa fa-send"></i>Send To BoT</a></li>
                       <li><a href="#" onclick="rejectpaymentBatch(@item.PaymentBatchID)"><i class="fa fa-check-square fa-fw"></i>Reject</a></li>
                    }*@

                                        </ul>
                                    </div>
                                </td>
                            </tr>
                                }

                            </table>
                        </div>
                        <!-- end widget content -->
                    </div>
                    <!-- end widget div -->

                </div>
                <!-- end widget -->

            </article>
            <!-- END COL -->

        </div>

        <!-- END ROW -->

    </section>
    <!-- end widget grid -->

</div>
<!-- END MAIN CONTENT -->
<!--Start of delete confirmation modal section-->
<div class="modal fade" id="modal" tabindex="-1" role="dialog" aria-labelledby="lblmodal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header alert alert-danger" style="font:bold 16px Trebuchet MS, Lucida Sans Unicode, Lucida Grande, Lucida Sans, Arial, sans-serif">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>

                <h4 class="modal-title" id="lblmodal">Confirm Delete</h4>
            </div>
            <div class="modal-body" id="modal-body">
                <p class="success-message">Are you sure you want to delete this record ? </p>
            </div>
            <div class="modal-footer">
                <button class="btn btn-info delete-confirm">Yes</button>
                <button class="btn btn-info confirm-confirm">Yes</button>
                <button class="btn btn-default delete-cancel" data-dismiss="modal">No</button>
            </div>
        </div>
    </div>
</div>
<!--End of delete confirmation modal section-->
<!--Start of details modal section-->
<div class="modal fade" id="modal-details" tabindex="-1" role="dialog" aria-labelledby="lbl-modal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header alert alert-info" style="font:bold 16px Trebuchet MS, Lucida Sans Unicode, Lucida Grande, Lucida Sans, Arial, sans-serif">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>

                <h4 class="modal-title" id="lbl-modal-details">Payment Batch Details</h4>
            </div>
            <div class="modal-body" id="modal-details-body" style="padding: 0px">
            </div>
            <div class="modal-footer">
                <button class="btn btn-default delete-cancel" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
<!--End of details modal section-->
<div class="modal fade" id="rejectModal" tabindex="-1" role="dialog" aria-labelledby="lblmodal">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header alert alert-info" style="font:bold 16px Trebuchet MS, Lucida Sans Unicode, Lucida Grande, Lucida Sans, Arial, sans-serif">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title">Add Rejection Reason</h4>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("RejectpaymentBatch", "PaymentBatches", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                    @Html.AntiForgeryToken()
                    <div class="modal-body">
                        <div class="form-horizontal">
                            <div class="form-group">
                                <div class="col-md-8">
                                    <textarea class="form-control"></textarea>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
            <div class="modal-footer">
                <button value="Save" class="btn btn-info pull-left"><i class="fa fa-save"></i> Save </button>
                <button class="btn btn-default delete-cancel pull-left" data-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>


<div class="modal fade" id="fileAttachModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
            </div>
            @using (Html.BeginForm("AttachSlipinPo", "PaymentBatches", FormMethod.Post, new { encType = "multipart/form-data" }))
            {   <div class="modal-body">
                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <br />
                            <div class='form-group'>
                                <div class="input-group input-file" name="FileName">
                                    <span class="input-group-btn">
                                    </span>
                                    <input type="text" name="FileName" id="FileName" class="form-control" placeholder='Upload file in PDF Format ...' />
                                    <span class="input-group-btn">
                                        <button class="btn btn-default btn-choose" id="button1" type="button">Browse</button>
                                    </span>
                                </div>
                            </div>
                            <input type="hidden" name="PaymentBatchID" id="PaymentBatchID" value="" />
                        </div>
                        <div class="modal-footer">
                            <a href="#" class="btn btn-default" data-dismiss="modal">Cancel</a>
                            <input type="submit" value="Submit" class="btn btn-default" id="btnSubmit" />
                        </div>
            }

        </div>
    </div>
</div>

@section Scripts{
    <script>
        $(document).on("click", ".fileAttachModal", function () {
            var transfer_id = $(this).data('id');
            $(".modal-body #PaymentBatchID").val(transfer_id);
        });

        // DO NOT REMOVE : GLOBAL FUNCTIONS!

        $(document).ready(function () {

            /* // DOM Position key index //

            l - Length changing (dropdown)
            f - Filtering input (search)
            t - The Table! (datatable)
            i - Information (records)
            p - Pagination (paging)
            r - pRocessing
            < and > - div elements
            <"#id" and > - div with an id
            <"class" and > - div with a class
            <"#id.class" and > - div with an id and class

            Also see: http://legacy.datatables.net/usage/features
            */

            /* BASIC ;*/
            var responsiveHelper_dt_basic = undefined;
            var responsiveHelper_datatable_fixed_column = undefined;
            var responsiveHelper_datatable_col_reorder = undefined;
            var responsiveHelper_datatable_tabletools = undefined;

            var breakpointDefinition = {
                tablet: 1024,
                phone: 480
            };

            $('#dt_basic').dataTable({
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-12 hidden-xs'l>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_dt_basic) {
                        responsiveHelper_dt_basic = new ResponsiveDatatablesHelper($('#dt_basic'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_dt_basic.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_dt_basic.respond();
                }
            });

            /* END BASIC */

            /* COLUMN FILTER  */
            var otable = $('#datatable_fixed_column').DataTable({
                //"bFilter": false,
                //"bInfo": false,
                //"bLengthChange": false
                //"bAutoWidth": false,
                //"bPaginate": false,
                //"bStateSave": true // saves sort state using localStorage
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6 hidden-xs'f><'col-sm-6 col-xs-12 hidden-xs'<'toolbar'>>r>" +
                        "t" +
                        "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_fixed_column) {
                        responsiveHelper_datatable_fixed_column = new ResponsiveDatatablesHelper($('#datatable_fixed_column'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_datatable_fixed_column.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_datatable_fixed_column.respond();
                }

            });

            // custom toolbar
            $("div.toolbar").html('<div class="text-right"><img src="/Content/img/logo.png" alt="SmartAdmin" style="width: 111px; margin-top: 3px; margin-right: 10px;"></div>');

            // Apply the filter
            $("#datatable_fixed_column thead th input[type=text]").on('keyup change', function () {

                otable
                    .column($(this).parent().index() + ':visible')
                    .search(this.value)
                    .draw();

            });
            /* END COLUMN FILTER */

            /* COLUMN SHOW - HIDE */
            $('#datatable_col_reorder').dataTable({
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'C>r>" +
                        "t" +
                        "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_col_reorder) {
                        responsiveHelper_datatable_col_reorder = new ResponsiveDatatablesHelper($('#datatable_col_reorder'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_datatable_col_reorder.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_datatable_col_reorder.respond();
                }
            });

            /* END COLUMN SHOW - HIDE */

            /* TABLETOOLS */
            $('#datatable_tabletools').dataTable({

                // Tabletools options:
                //   https://datatables.net/extensions/tabletools/button_options
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'T>r>" +
                        "t" +
                        "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
                "oTableTools": {
                    "aButtons": [
                    "copy",
                    "csv",
                    "xls",
                       {
                           "sExtends": "pdf",
                           "sTitle": "SmartAdmin_PDF",
                           "sPdfMessage": "SmartAdmin PDF Export",
                           "sPdfSize": "letter"
                       },
                       {
                           "sExtends": "print",
                           "sMessage": "Generated by SmartAdmin <i>(press Esc to close)</i>"
                       }
                    ],
                    "sSwfPath": "/Scripts/plugin/datatables/swf/copy_csv_xls_pdf.swf"
                },
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_tabletools) {
                        responsiveHelper_datatable_tabletools = new ResponsiveDatatablesHelper($('#datatable_tabletools'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_datatable_tabletools.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_datatable_tabletools.respond();
                }
            });

            /* END TABLETOOLS */

        });

        function ApproveBatch(id) {
            var url = '@Url.Action("Approval", "PaymentBatches")';
            $.ajax({
                type: "post",
                url: url,
                data: { id: id },
                success: function (response) {
                    if (response == "Success") {
                        swal("Approved Successfully!", { icon: "success" }).then((e) => {
                            window.location.reload();
                        });
                    } else if (response == "DbException") {
                        swal(response + "An error has occured, contact system support");
                    }
                },
                error: function (xhr) {
                    alert("An error has occured, contact system support");
                    $("#divLoader").hide();
                },
            });
        }

        function batchapproval(i, id) {
            if (i == 'x') i = id;
            swal({
                title: "Approve",
                text: "Are you sure you want to Approve? ",
                buttons: [
                  'Yes',
                  'No'
                ],
                closeOnClickOutside: false,
            }).then(function (isConfirm) {
                if (isConfirm) {
                    swal("Cancelled", "No change was made");
                } else {

                    ApproveBatch(i);
                }
            });
            $('#confirmModal').modal('hide');
        }


        function SendtoBoT(id) {
            var url = '@Url.Action("SendtoBoT", "PaymentBatches")';
            $.ajax({
                type: "post",
                url: url,
                data: { id: id },
                success: function (response) {
                    if (response == "Success") {
                        swal("Sent to BoT Successfully!", { icon: "success" }).then((e) => {
                            window.location.reload();
                        });
                    } else if (response == "DbException") {
                        swal(response + "An error has occured, contact system support");
                    }
                },
                error: function (xhr) {
                    alert("An error has occured, contact system support");
                    $("#divLoader").hide();
                },
            });
        }

        function sentToBoT(i, id) {
            if (i == 'x') i = id;
            swal({
                title: "Send",
                text: "Are you sure you want to Send the File to Payment Office? ",
                buttons: [
                  'Yes',
                  'No'
                ],
                closeOnClickOutside: false,
            }).then(function (isConfirm) {
                if (isConfirm) {
                    swal("Cancelled", "No change was made");
                } else {
                    SendtoBoT(i);
                }
            });
            $('#confirmModal').modal('hide');
        }

        function rejectpaymentBatch(i, id) {
            swal({
                title: "Rejection Reason",
                closeOnClickOutside: false,
                content: "input",
                buttons: [
                  'Cancel',
                  'Save'
                ],
            }).then((value) => {
                var inputValue = `${value}`;
                if (inputValue == "null") {
                    swal("Cancelled");
                }
                else {
                    rejectReasons(i, `${value}`)
                }
            });
        }

        var rejectReasons = function (id, reason) {
            var rejectionReason = reason;
            $.ajax({
                type: "POST",
                url: "RejectPaymentOfficeAproval",
                data: { ids: id, reason: rejectionReason },
                success: function (response) {
                    if (response == "Success") {
                        swal("Rejection Successfully Saved", { icon: "success" }).then((e) => {
                            window.location.reload();
                        });

                    } else if (response == "emptyreason") {
                        swal("Rejection Reason is Required", { icon: "warning" }).then((e) => {
                            window.location.reload();
                        });
                    } else if (response == "DbException") {
                        swal(response + "An error has occured, contact system support");
                    }
                },
                error: function (xhr) {
                    swal("An error has occured, contact system support");
                    $("#divLoader").hide();
                },
            });
        };

    </script>
}
