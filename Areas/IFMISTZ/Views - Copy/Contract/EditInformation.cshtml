@model IFMIS.Areas.IFMISTZ.Models.ReceivingSummaryVM
@{
    ViewBag.Title = "Receiving Attachment";
       string retention_ptg = null;
    if (Model.RetentionPercentage != null)
    {
        retention_ptg = Model.RetentionPercentage.ToString() + "%";
    }
    else
    {
        retention_ptg = "NA";
    }
}
<style type="text/css">

    .search-btn {
        border: 1px solid #ccc;
        border-radius: 4px;
        padding: 5px;
        padding-right: 10px;
    }

    .search-container {
        display: inline-flex;
        flex: 1 1 300px;
        position: relative;
        border: 1px solid #ccc;
        border-radius: 5px;
        overflow: hidden;
        padding-left: 10px;
    }

    .name-input-container {
        display: inline-flex;
        flex: 1 1 300px;
        position: relative;
        overflow: hidden;
    }

    .search-icon {
        padding: 0.5rem;
    }

    .search-button {
        background: #538AC5;
        border: 0;
        color: white;
        padding: 8px;
        border-radius: 0;
    }

    input[type=number] {
        padding: 8px;
        border: 1px solid #ccc;
        width: 205px;
    }

    input[type=text] {
        padding: 5px;
        border: 1px solid #ccc;
    }

    input[type=search] {
        padding: 4px;
        border: hidden;
        border-radius: 4px;
    }

    textarea {
        border: 1px solid #ccc;
    }

    select {
        padding: 8px;
        border: 1px solid #ccc;
        resize: vertical;
        width: 230px;
    }

    .action-btn {
        width: 100px;
        color: white;
    }

    .form-label {
        text-align: right;
    }

    td {
        padding: 5px;
    }

    .info-box {
        padding: 10px;
        background-color: #ECF3F8;
        text-align: center;
        border: 1px solid #ccc;
        border-radius: 5px;
    }
</style>


<div id="content" style="margin: 5px; padding-top: 30px">

    <div class="row">


    </div>


    <!-- widget grid -->
    <section id="widget-grid" class="">


        <!-- START ROW -->

        <div class="row">

            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">

                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">

                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2>Receiving add information </h2>

                    </header>


                    <div>
                        <div class="widget-body " style="padding-top:10px;width:100%">
                            <div align="center">
                                <img src="~/Media/Images/ajax_loader.gif" class="loadingImg" style="display:none" />
                            </div>
                            <fieldset>
                                <div class="row"> <div class="col-sm-6 col-md-6 col-lg-6"><strong>Contract Reg #&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:</strong>&nbsp;&nbsp;&nbsp;@Html.DisplayFor(model => model.ContractNo)</div><div class="col-sm-6 col-md-6 col-lg-6"><strong>Contract Number&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:</strong>&nbsp;&nbsp;&nbsp;@Html.DisplayFor(model => model.ContractNumber)</div></div>
                                <div class="row"> <div class="col-sm-6 col-md-6 col-lg-6"><strong>Receiving Number&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:</strong>&nbsp;&nbsp;&nbsp;@Html.DisplayFor(model => model.ReceivingNumber)</div><div class="col-sm-6 col-md-6 col-lg-6"><strong>Payee Code&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:</strong>&nbsp;&nbsp;&nbsp;@Html.DisplayFor(model => model.PayeeCode)</div></div>
                                <div class="row"> <div class="col-sm-6 col-md-6 col-lg-6"><strong>Currency&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:</strong>&nbsp;&nbsp;&nbsp;@Html.DisplayFor(model => model.Currency) </div><div class="col-sm-6 col-md-6 col-lg-6"><strong>Payee Name&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:</strong>&nbsp;&nbsp;&nbsp;@Html.DisplayFor(model => model.SupplierName)</div></div>
                                <div class="row">  <div class="col-sm-6 col-md-6 col-lg-6"><strong>Receiving Amount&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:</strong>&nbsp;&nbsp;&nbsp;@Html.DisplayFor(model => model.ReceivedAmount)</div><div class="col-sm-6 col-md-6 col-lg-6"><strong>Status&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:</strong>&nbsp;&nbsp;&nbsp;&nbsp;@Html.DisplayFor(model => model.OverallStatus)</div></div>
                                <div class="row">
                                    <div class="col-sm-6 col-md-6 col-lg-6">
                                        <strong>Advance Payment&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:</strong>&nbsp;&nbsp;&nbsp;
                                        @if (Model.AdvancePayment != null)
                                        {
                                            @Html.DisplayFor(model => model.AdvancePayment)
                                        }
                                        else
                                        {
                                            <span>NA</span>
                                        }
                                    </div>
                                    <div class="col-sm-6 col-md-6 col-lg-6"><strong>SBC&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:</strong>&nbsp;&nbsp;&nbsp;@Html.DisplayFor(model => model.SubBudgetClass)    <a data-toggle="collapse" data-parent="#accordion" href="#collapse3">&nbsp;&nbsp;&nbsp;Change SBC&nbsp;&nbsp;&nbsp;</a></div>
                                </div>
                                <div id="collapse3" class="panel-collapse collapse">
                                    <div class="row">
                                        <div class="col-sm-6 col-md-6 col-lg-6"></div>
                                        <div class="col-sm-6 col-md-6 col-lg-6">

                                            <div class="row">
                                                <fieldset>
                                                    <legend class="scheduler-border">&nbsp;</legend>

                                                    <div class="col-md-6">
                                                        @Html.DropDownList("NewSubBudgetClass", Model.SBCList, "Select New SBC......", new { @class = "form-control", @required = "required" })
                                                    </div>

                                                </fieldset>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                @if (Model.RetentionPercentage != null || Model.LiquidatedDamageAmount != null)
                                {
                                    <div class="row">
                                        <div class="col-sm-6 col-md-6 col-lg-6">
                                            <strong>Retention&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:</strong>&nbsp;&nbsp;&nbsp;@retention_ptg
                                        </div>
                                        @if (Model.LiquidatedDamageAmount != null)
                                        {
                                            <div class="col-sm-6 col-md-6 col-lg-6">
                                                <strong>Liquidated Damages&nbsp;:</strong>&nbsp;&nbsp;&nbsp;
                                                @if (Model.LiquidatedNumberOfDays != null)
                                                {
                                                    <span>Number of Days   @Html.DisplayFor(model => model.LiquidatedNumberOfDays) equals to </span>
                                                }
                                                @Html.DisplayFor(model => model.LiquidatedDamageAmount)    @Html.DisplayFor(model => model.Currency)
                                                @if (Model.LiquidatedSBCTo != null)
                                                {
                                                    <span>,SBC To   @Html.DisplayFor(model => model.LiquidatedSBCTo)</span>
                                                }

                                            </div>
                                        }
                                    </div>

                                }
                                @if (Model.RetentionPercentage != null)
                                {
                                    <div class="row">
                                        <div class="col-sm-6 col-md-6 col-lg-6"><strong>Transfer Category&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:</strong>&nbsp;&nbsp;&nbsp;@Html.DisplayFor(model => model.RetentionBy)</div>
                                        @if (Model.RetentionBy == "InternalTransfer")
                                        {
                                            <div class="col-sm-6 col-md-6 col-lg-6">
                                                <strong>SBC To&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:</strong>&nbsp;&nbsp;&nbsp;&nbsp;@Html.DisplayFor(model => model.SubBudgetClassTo)
                                            </div>
                                        }
                                        else
                                        {
                                            if (Model.AccountName != null)
                                            {
                                                <div class="col-sm-6 col-md-6 col-lg-6">
                                                    <strong>Bank Account To&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:</strong>&nbsp;&nbsp;&nbsp;&nbsp;@Html.DisplayFor(model => model.AccountName)
                                                </div>
                                            }
                                        }

                                    </div>
                                }
                                @if (Model.Accrual == "YES")
                                {


                                    <div class="row">
                                        <div class="col-sm-6 col-md-6 col-lg-6">
                                            <strong>Accrual Receiving&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:</strong>&nbsp;&nbsp;&nbsp;

                                            @Html.DisplayFor(model => model.Accrual)


                                        </div>
                                    </div>


                                }
                                @if (Model.ParentInstitutionCode != null)
                                {
                                    <div class="row">  <div class="col-sm-6 col-md-6 col-lg-6"><strong>Parent Institution&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:</strong>&nbsp;&nbsp;&nbsp;@Html.DisplayFor(model => model.ParentInstitutionCode) - @Html.DisplayFor(model => model.ParentInstitutionName)</div><div class="col-sm-6 col-md-6 col-lg-6"><strong>SubWarant&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:</strong>&nbsp;&nbsp;&nbsp;&nbsp;@Html.DisplayFor(model => model.SubWarrantCode) - @Html.DisplayFor(model => model.SubWarrantDescription)</div></div>
                                }

                                @*<div class="row">
                                    <div class="col-sm-6 col-md-6 col-lg-6">
                                        <strong>Last Receiving&nbsp;:</strong>&nbsp;

                                        <input type="checkbox" style="width:30px" id="IsLastReceiving">
                                        @Html.EditorFor(model => model.Receiving, new { htmlAttributes = new { @style = "width:40px;font-weight:bold", @readonly = "readonly" } })

                                    </div>
                                </div>*@

                            </fieldset>
                            <fieldset class="bordered">
                                <legend class="scheduler-border">Deductions</legend>

                                <div class="row">
                                    <div class="col-md-offset-1 col-sm-6 col-lg-4">
                                        <a data-toggle="collapse" data-parent="#accordion" href="#collapse1" class="btn btn-info btn-xs">&nbsp;&nbsp;&nbsp;Apply Deductions&nbsp;&nbsp;&nbsp;</a>
                                    </div>
                                </div>
                                <div id="collapse1" class="panel-collapse collapse">
                                    <hr />
                                    <H5><u>Retention </u></H5>
                                    <div class="row">
                                        <div class="col-sm-8 col-lg-4">
                                            <div class="form-group">
                                                <label class="col-md-5 control-label">Has Retention:</label>
                                                <div class="col-md-1">
                                                    @Html.EditorFor(x => x.HasRetention)
                                                </div>
                                                <div class="retention_display" style="display:none">
                                                    <label class="col-md-3 control-label">Percentage:</label>
                                                    <div class="col-md-3">
                                                        @Html.EditorFor(model => model.RetentionPercentage, new { htmlAttributes = new { @class = "form-control", @min = 0, @autocomplete = "off" } })

                                                    </div>

                                                </div>
                                            </div>
                                        </div>
                                        @if (ViewBag.MDAReceiving != null)
                                        {
                                            <div class="col-md-1 retention_display" style="display:none">
                                                <button type="button" id="accrual_retention" class="btn btn-info" style="margin-right:2px">
                                                    <i class="glyphicon glyphicon-floppy-disk"></i> Save
                                                </button>

                                            </div>
                                        }
                                        else
                                        {
                                            <div class="retention_display" style="display:none">
                                                <div class="col-sm-6 col-lg-3">
                                                    <div class="form-group">
                                                        <label class="col-md-6 control-label">Transfer Category:</label>
                                                        <div class="col-md-6">

                                                            @Html.DropDownListFor(model => model.RetentionBy, Model.RetentionByList, "Select ---", new { @class = "form-control" })
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-sm-6 col-lg-4">
                                                    <div class="form-group">

                                                        <div class="col-md-6">
                                                            <div class="internal_transfer" style="display:none">

                                                                @Html.DropDownListFor(model => model.SubBudgetClassTo, Model.SubBudgetClassList, "Select SubBudgetClass", new { @class = "form-control" })
                                                            </div>
                                                            <div class="bank_transfer" style="display:none">

                                                                @Html.DropDownListFor(model => model.BankAccountTo, Model.AccountToList, "Select Bank Account", new { @class = "form-control" })

                                                            </div>
                                                        </div>

                                                        <div class="col-md-1 submit_retention" style="display:none">
                                                            <button type="button" id="save_retention" class="btn btn-info" style="margin-right:2px">
                                                                <i class="glyphicon glyphicon-floppy-disk"></i> Save
                                                            </button>

                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                    </div>
                                    <hr />
                                    <H5><u>Liquidated Damages</u></H5>
                                    <div class="form-horizontal">
                                        <div class="form-group">
                                            <label class="col-md-2 control-label">Has Liquidated Damages:</label>
                                            <div class="col-md-1" style="padding-top:8px">
                                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@Html.EditorFor(x => x.HasLiquidatedDamage)
                                            </div>
                                            <div id="liquided_damage" style="display:none">
                                                @Html.LabelFor(model => model.LiquidatedNumberOfDays, htmlAttributes: new { @class = "control-label col-md-2" })

                                                <div class="col-md-3">
                                                    @Html.EditorFor(model => model.LiquidatedNumberOfDays, new { htmlAttributes = new { @class = "form-control", @min = 0, @placeholder = "Days", @autocomplete = "off", @style = "width:70%" } })
                                                </div>
                                                <div class="col-md-2">
                                                    @Html.DropDownListFor(model => model.LiquidatedSBCTo, Model.SubBudgetClassLDList, "Select SubBudgetClass", new { @class = "form-control" })

                                                </div>
                                                <div class="col-md-1">
                                                    <button type="button" id="save_liqdmg" class="btn btn-info" style="margin-right:2px">
                                                        <i class="glyphicon glyphicon-floppy-disk"></i> Save
                                                    </button>
                                                </div>

                                            </div>
                                        </div>

                                    </div>
                                    <hr />
                                </div>
                                <br />
                            </fieldset>


                            @Html.HiddenFor(model => model.ReceivingSummaryId)
                            @Html.HiddenFor(model => model.ContractId)
                            @Html.HiddenFor(model => model.SubBudgetClass)
                            @Html.HiddenFor(model => model.ParentInstitutionCode)
                            @Html.HiddenFor(model => model.SubWarrantCode)
                            @Html.HiddenFor(model => model.ReceivedAmount)
                            @Html.HiddenFor(model => model.LiquidatedDamageAmount)
                            @Html.HiddenFor(model => model.RetentionBy)
                            @Html.HiddenFor(model => model.BankAccountToDisp)
                            @Html.HiddenFor(model => model.AccountName)
                            @*@Html.HiddenFor(model => model.InstitutionCodeTo)*@

                            <fieldset class="bordered">
                                <legend class="scheduler-border">GL Items Charge</legend>

                                <div class="row">
                                    <div class="col-md-offset-1 col-sm-6 col-lg-4">
                                        <button type="button" class="btn btn-info btn-xs" id="gl_items_charge">
                                            <i class="fa fa-plus"></i> <span class="hidden-mobile">Add GL Account(s)</span>
                                        </button>
                                    </div>
                                </div>
                                <br />
                                @if (Model.ReceivingCoas.Count() != 0)
                                {
                                    <div class="row">
                                        <div class="col-md-offset-1 col-sm-6 col-lg-4">
                                            <a data-toggle="collapse" data-parent="#accordion" href="#collapse2">View GL Account(s)</a>
                                        </div>
                                    </div>
                                }
                                <div id="collapse2" class="panel-collapse collapse">
                                    <hr />


                                    @if (Model.ReceivingCoas != null)
                                    {
                                        if (Model.ReceivingCoas.Count() > 0)
                                        {
                                            <table class="table table-bordered table-hover table-condensed" id="items_charge" style="width:100%">
                                                <thead>
                                                    <tr style="width:5%">
                                                        <th>#</th>
                                                        <th style="text-align:left">GL Account</th>
                                                        <th style="text-align:left">GL Account Desc</th>
                                                        <th style="text-align:left">Funding Reference</th>
                                                        <th style="text-align:right">Amount</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @for (var i = 0; i < Model.ReceivingCoas.Count(); i++)
                                                    {
                                                        var j = i + 1;
                                                        <tr>
                                                            <td style="text-align:center">@j</td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => Model.ReceivingCoas[i].GLAccount)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => Model.ReceivingCoas[i].GLAccountDesc)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => Model.ReceivingCoas[i].FundingReference)
                                                            </td>
                                                            <td style="text-align:right">
                                                                @Html.DisplayFor(modelItem => Model.ReceivingCoas[i].ExpenseAmount)
                                                            </td>

                                                        </tr>
                                                    }
                                                    <tr>
                                                        <td colspan="4" style="text-align:right"><strong>Total</strong></td>
                                                        <td style="text-align:right"><strong>@Convert.ToDecimal(Model.ReceivingCoas.Select(a => a.ExpenseAmount).DefaultIfEmpty(0).Sum()).ToString("#,##0.00")</strong></td>
                                                    </tr>

                                                </tbody>
                                            </table>

                                        }
                                    }
                                    <hr />
                                </div>
                                <br />
                            </fieldset>
                            <fieldset class="bordered">
                                <legend class="scheduler-border">Attachments</legend>

                                @if (Model.ContractType == "Works")
                                {
                                    if (Model.InvoiceNumber != null || Model.InspectionReportNo != null)
                                    {
                                        <table class="table table-bordered table-hover table-condensed" style="width:80%">
                                            <thead>
                                                <tr>
                                                    <th></th>
                                                    <th style="text-align:center">Ref/No</th>
                                                    <th style="text-align:center">Date</th>
                                                    <th style="text-align:center">Attachment</th>
                                                    <th style="text-align:center">Edit</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @if (Model.InvoiceNumber != null)
                                                {
                                                    <tr>
                                                        <td style="width:18%">
                                                            Invoice
                                                        </td>
                                                        <td align="center">
                                                            @Html.DisplayFor(model => model.InvoiceNumber)
                                                        </td>
                                                        <td align="center">
                                                            @Convert.ToDateTime(Model.InvoiceDate).ToString("dd/MM/yyyy")
                                                        </td>
                                                        <td align="center">
                                                            <strong>
                                                                <a href="@Url.Action("InvoiceAttachment","Contract",new {Filename=Model.InvoiceFileName})"><i class="fa fa-download"></i></a>
                                                            </strong>
                                                        </td>
                                                        <td align="center">
                                                            @if (Model.EditAttachment != "No")
                                                            {
                                                                <a href="#" data-toggle="modal" data-target="#attachment2" class="attachment2" data-type="Invoice" data-cnumber='@Model.InvoiceNumber' data-cdate='@Convert.ToDateTime(Model.InvoiceDate).ToString("yyyy-MM-dd")'><i class="fa fa-pencil"></i></a>

                                                            }

                                                        </td>
                                                    </tr>
                                                }

                                                @if (Model.InspectionReportNo != null)
                                                {
                                                    <tr>
                                                        <td style="width:18%">
                                                            Payment Certificate
                                                        </td>
                                                        <td align="center">
                                                            @Html.DisplayFor(model => model.InspectionReportNo)
                                                        </td>
                                                        <td align="center">
                                                            @Convert.ToDateTime(Model.InspectionReportDate).ToString("dd/MM/yyyy")
                                                        </td>
                                                        <td align="center">
                                                            <strong>
                                                                <a href="@Url.Action("InspectionAttachment","Contract",new {Filename=Model.InspReportFileName })"><i class="fa fa-download"></i></a>
                                                            </strong>
                                                        </td>
                                                        <td align="center">
                                                            @if (Model.EditAttachment != "No")
                                                            {
                                                                <a href="#" data-toggle="modal" data-target="#attachment2" class="attachment2" data-type="Inspection Report" data-cnumber='@Model.InspectionReportNo' data-cdate='@Convert.ToDateTime(Model.InspectionReportDate).ToString("yyyy-MM-dd")'><i class="fa fa-pencil"></i></a>

                                                            }

                                                        </td>
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                    }
                                }
                                else if (Model.ContractType == "Goods")
                                {
                                    if (Model.InvoiceNumber != null || Model.DeliveryNote != null || Model.InspectionReportNo != null)
                                    {
                                        <table class="table table-bordered table-hover table-condensed" style="width:80%">
                                            <thead>
                                                <tr>
                                                    <th></th>
                                                    <th style="text-align:center">Ref/No</th>
                                                    <th style="text-align:center">Date</th>
                                                    <th style="text-align:center">Attachment</th>
                                                    <th style="text-align:center">Edit</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @if (Model.InvoiceNumber != null)
                                                {
                                                    <tr>
                                                        <td style="width:18%">
                                                            Invoice
                                                        </td>
                                                        <td align="center">
                                                            @Html.DisplayFor(model => model.InvoiceNumber)
                                                        </td>
                                                        <td align="center">
                                                            @Convert.ToDateTime(Model.InvoiceDate).ToString("dd/MM/yyyy")
                                                        </td>
                                                        <td align="center">
                                                            <strong>
                                                                <a href="@Url.Action("InvoiceAttachment","Contract",new {Filename=Model.InvoiceFileName})"><i class="fa fa-download"></i></a>
                                                            </strong>
                                                        </td>
                                                        <td align="center">
                                                            @if (Model.EditAttachment != "No")
                                                            {
                                                                <a href="#" data-toggle="modal" data-target="#attachment2" class="attachment2" data-type="Invoice" data-cnumber='@Model.InvoiceNumber' data-cdate='@Convert.ToDateTime(Model.InvoiceDate).ToString("yyyy-MM-dd")'><i class="fa fa-pencil"></i></a>

                                                            }

                                                        </td>
                                                    </tr>
                                                }
                                                @if (Model.DeliveryNote != null)
                                                {
                                                    <tr>
                                                        <td style="width:18%">
                                                            Delivery Note
                                                        </td>
                                                        <td align="center">
                                                            @Html.DisplayFor(model => model.DeliveryNote)
                                                        </td>
                                                        <td align="center">
                                                            @Convert.ToDateTime(Model.DeliveryDate).ToString("dd/MM/yyyy")
                                                        </td>
                                                        <td align="center">
                                                            <strong>
                                                                <a href="@Url.Action("DeliveryAttachment","Contract",new {Filename=Model.DeliveryFileName })"><i class="fa fa-download"></i></a>
                                                            </strong>
                                                        </td>
                                                        <td align="center">
                                                            @if (Model.EditAttachment != "No")
                                                            {
                                                                <a href="#" data-toggle="modal" data-target="#attachment2" class="attachment2" data-type="Delivery Note" data-cnumber='@Model.DeliveryNote' data-cdate='@Convert.ToDateTime(Model.DeliveryDate).ToString("yyyy-MM-dd")'><i class="fa fa-pencil"></i></a>

                                                            }

                                                        </td>
                                                    </tr>
                                                }
                                                @if (Model.InspectionReportNo != null)
                                                {
                                                    <tr>
                                                        <td style="width:18%">
                                                            Inspection Report
                                                        </td>
                                                        <td align="center">
                                                            @Html.DisplayFor(model => model.InspectionReportNo)
                                                        </td>
                                                        <td align="center">
                                                            @Convert.ToDateTime(Model.InspectionReportDate).ToString("dd/MM/yyyy")
                                                        </td>
                                                        <td align="center">
                                                            <strong>
                                                                <a href="@Url.Action("InspectionAttachment","Contract",new {Filename=Model.InspReportFileName })"><i class="fa fa-download"></i></a>
                                                            </strong>
                                                        </td>
                                                        <td align="center">
                                                            @if (Model.EditAttachment != "No")
                                                            {
                                                                <a href="#" data-toggle="modal" data-target="#attachment2" class="attachment2" data-type="Inspection Report" data-cnumber='@Model.InspectionReportNo' data-cdate='@Convert.ToDateTime(Model.InspectionReportDate).ToString("yyyy-MM-dd")'><i class="fa fa-pencil"></i></a>

                                                            }

                                                        </td>
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                    }
                                }
                                else if (Model.ContractType == "Consultancy")
                                {
                                    if (Model.InvoiceNumber != null || Model.DeliveryNote != null || Model.InspectionReportNo != null)
                                    {
                                        <table class="table table-bordered table-hover table-condensed" style="width:80%">
                                            <thead>
                                                <tr>
                                                    <th></th>
                                                    <th style="text-align:center">Ref/No</th>
                                                    <th style="text-align:center">Date</th>
                                                    <th style="text-align:center">Attachment</th>
                                                    <th style="text-align:center">Edit</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @if (Model.InvoiceNumber != null)
                                                {
                                                    <tr>
                                                        <td style="width:18%">
                                                            Invoice
                                                        </td>
                                                        <td align="center">
                                                            @Html.DisplayFor(model => model.InvoiceNumber)
                                                        </td>
                                                        <td align="center">
                                                            @Convert.ToDateTime(Model.InvoiceDate).ToString("dd/MM/yyyy")
                                                        </td>
                                                        <td align="center">
                                                            <strong>
                                                                <a href="@Url.Action("InvoiceAttachment","Contract",new {Filename=Model.InvoiceFileName})"><i class="fa fa-download"></i></a>
                                                            </strong>
                                                        </td>
                                                        <td align="center">
                                                            @if (Model.EditAttachment != "No")
                                                            {
                                                                <a href="#" data-toggle="modal" data-target="#attachment2" class="attachment2" data-type="Invoice" data-cnumber='@Model.InvoiceNumber' data-cdate='@Convert.ToDateTime(Model.InvoiceDate).ToString("yyyy-MM-dd")'><i class="fa fa-pencil"></i></a>

                                                            }

                                                        </td>
                                                    </tr>
                                                }
                                                @if (Model.DeliveryNote != null)
                                                {
                                                    <tr>
                                                        <td style="width:18%">
                                                            Delivery Note
                                                        </td>
                                                        <td align="center">
                                                            @Html.DisplayFor(model => model.DeliveryNote)
                                                        </td>
                                                        <td align="center">
                                                            @Convert.ToDateTime(Model.DeliveryDate).ToString("dd/MM/yyyy")
                                                        </td>
                                                        <td align="center">
                                                            <strong>
                                                                <a href="@Url.Action("DeliveryAttachment","Contract",new {Filename=Model.DeliveryFileName })"><i class="fa fa-download"></i></a>
                                                            </strong>
                                                        </td>
                                                        <td align="center">
                                                            @if (Model.EditAttachment != "No")
                                                            {
                                                                <a href="#" data-toggle="modal" data-target="#attachment2" class="attachment2" data-type="Delivery Note" data-cnumber='@Model.DeliveryNote' data-cdate='@Convert.ToDateTime(Model.DeliveryDate).ToString("yyyy-MM-dd")'><i class="fa fa-pencil"></i></a>

                                                            }

                                                        </td>
                                                    </tr>
                                                }
                                                @if (Model.InspectionReportNo != null)
                                                {
                                                    <tr>
                                                        <td style="width:18%">
                                                            Inspection Report
                                                        </td>
                                                        <td align="center">
                                                            @Html.DisplayFor(model => model.InspectionReportNo)
                                                        </td>
                                                        <td align="center">
                                                            @Convert.ToDateTime(Model.InspectionReportDate).ToString("dd/MM/yyyy")
                                                        </td>
                                                        <td align="center">
                                                            <strong>
                                                                <a href="@Url.Action("InspectionAttachment","Contract",new {Filename=Model.InspReportFileName })"><i class="fa fa-download"></i></a>
                                                            </strong>
                                                        </td>
                                                        <td align="center">
                                                            @if (Model.EditAttachment != "No")
                                                            {
                                                                <a href="#" data-toggle="modal" data-target="#attachment2" class="attachment2" data-type="Inspection Report" data-cnumber='@Model.InspectionReportNo' data-cdate='@Convert.ToDateTime(Model.InspectionReportDate).ToString("yyyy-MM-dd")'><i class="fa fa-pencil"></i></a>

                                                            }

                                                        </td>
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                    }
                                }
                                else if (Model.ContractType == "Non Consuntancy")
                                {
                                    if (Model.InvoiceNumber != null || Model.DeliveryNote != null || Model.InspectionReportNo != null)
                                    {
                                        <table class="table table-bordered table-hover table-condensed" style="width:80%">
                                            <thead>
                                                <tr>
                                                    <th></th>
                                                    <th style="text-align:center">Ref/No</th>
                                                    <th style="text-align:center">Date</th>
                                                    <th style="text-align:center">Attachment</th>
                                                    <th style="text-align:center">Edit</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @if (Model.InvoiceNumber != null)
                                                {
                                                    <tr>
                                                        <td style="width:18%">
                                                            Invoice
                                                        </td>
                                                        <td align="center">
                                                            @Html.DisplayFor(model => model.InvoiceNumber)
                                                        </td>
                                                        <td align="center">
                                                            @Convert.ToDateTime(Model.InvoiceDate).ToString("dd/MM/yyyy")
                                                        </td>
                                                        <td align="center">
                                                            <strong>
                                                                <a href="@Url.Action("InvoiceAttachment","Contract",new {Filename=Model.InvoiceFileName})"><i class="fa fa-download"></i></a>
                                                            </strong>
                                                        </td>
                                                        <td align="center">
                                                            @if (Model.EditAttachment != "No")
                                                            {
                                                                <a href="#" data-toggle="modal" data-target="#attachment2" class="attachment2" data-type="Invoice" data-cnumber='@Model.InvoiceNumber' data-cdate='@Convert.ToDateTime(Model.InvoiceDate).ToString("yyyy-MM-dd")'><i class="fa fa-pencil"></i></a>

                                                            }

                                                        </td>
                                                    </tr>
                                                }
                                                @if (Model.DeliveryNote != null)
                                                {
                                                    <tr>
                                                        <td style="width:18%">
                                                            Delivery Note
                                                        </td>
                                                        <td align="center">
                                                            @Html.DisplayFor(model => model.DeliveryNote)
                                                        </td>
                                                        <td align="center">
                                                            @Convert.ToDateTime(Model.DeliveryDate).ToString("dd/MM/yyyy")
                                                        </td>
                                                        <td align="center">
                                                            <strong>
                                                                <a href="@Url.Action("DeliveryAttachment","Contract",new {Filename=Model.DeliveryFileName })"><i class="fa fa-download"></i></a>
                                                            </strong>
                                                        </td>
                                                        <td align="center">
                                                            @if (Model.EditAttachment != "No")
                                                            {
                                                                <a href="#" data-toggle="modal" data-target="#attachment2" class="attachment2" data-type="Delivery Note" data-cnumber='@Model.DeliveryNote' data-cdate='@Convert.ToDateTime(Model.DeliveryDate).ToString("yyyy-MM-dd")'><i class="fa fa-pencil"></i></a>

                                                            }

                                                        </td>
                                                    </tr>
                                                }
                                                @if (Model.InspectionReportNo != null)
                                                {
                                                    <tr>
                                                        <td style="width:18%">
                                                            Inspection Report
                                                        </td>
                                                        <td align="center">
                                                            @Html.DisplayFor(model => model.InspectionReportNo)
                                                        </td>
                                                        <td align="center">
                                                            @Convert.ToDateTime(Model.InspectionReportDate).ToString("dd/MM/yyyy")
                                                        </td>
                                                        <td align="center">
                                                            <strong>
                                                                <a href="@Url.Action("InspectionAttachment","Contract",new {Filename=Model.InspReportFileName })"><i class="fa fa-download"></i></a>
                                                            </strong>
                                                        </td>
                                                        <td align="center">
                                                            @if (Model.EditAttachment != "No")
                                                            {
                                                                <a href="#" data-toggle="modal" data-target="#attachment2" class="attachment2" data-type="Inspection Report" data-cnumber='@Model.InspectionReportNo' data-cdate='@Convert.ToDateTime(Model.InspectionReportDate).ToString("yyyy-MM-dd")'><i class="fa fa-pencil"></i></a>

                                                            }

                                                        </td>
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                    }
                                }
                                else
                                {
                                    if (Model.InvoiceNumber != null || Model.DeliveryNote != null || Model.InspectionReportNo != null)
                                    {
                                        <table class="table table-bordered table-hover table-condensed" style="width:80%">
                                            <thead>
                                                <tr>
                                                    <th></th>
                                                    <th style="text-align:center">Ref/No</th>
                                                    <th style="text-align:center">Date</th>
                                                    <th style="text-align:center">Attachment</th>
                                                    <th style="text-align:center">Edit</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @if (Model.InvoiceNumber != null)
                                                {
                                                    <tr>
                                                        <td style="width:18%">
                                                            Invoice
                                                        </td>
                                                        <td align="center">
                                                            @Html.DisplayFor(model => model.InvoiceNumber)
                                                        </td>
                                                        <td align="center">
                                                            @Convert.ToDateTime(Model.InvoiceDate).ToString("dd/MM/yyyy")
                                                        </td>
                                                        <td align="center">
                                                            <strong>
                                                                <a href="@Url.Action("InvoiceAttachment","Contract",new {Filename=Model.InvoiceFileName})"><i class="fa fa-download"></i></a>
                                                            </strong>
                                                        </td>
                                                        <td align="center">
                                                            @if (Model.EditAttachment != "No")
                                                            {
                                                                <a href="#" data-toggle="modal" data-target="#attachment2" class="attachment2" data-type="Invoice" data-cnumber='@Model.InvoiceNumber' data-cdate='@Convert.ToDateTime(Model.InvoiceDate).ToString("yyyy-MM-dd")'><i class="fa fa-pencil"></i></a>

                                                            }

                                                        </td>
                                                    </tr>
                                                }
                                                @if (Model.DeliveryNote != null)
                                                {
                                                    <tr>
                                                        <td style="width:18%">
                                                            Delivery Note
                                                        </td>
                                                        <td align="center">
                                                            @Html.DisplayFor(model => model.DeliveryNote)
                                                        </td>
                                                        <td align="center">
                                                            @Convert.ToDateTime(Model.DeliveryDate).ToString("dd/MM/yyyy")
                                                        </td>
                                                        <td align="center">
                                                            <strong>
                                                                <a href="@Url.Action("DeliveryAttachment","Contract",new {Filename=Model.DeliveryFileName })"><i class="fa fa-download"></i></a>
                                                            </strong>
                                                        </td>
                                                        <td align="center">
                                                            @if (Model.EditAttachment != "No")
                                                            {
                                                                <a href="#" data-toggle="modal" data-target="#attachment2" class="attachment2" data-type="Delivery Note" data-cnumber='@Model.DeliveryNote' data-cdate='@Convert.ToDateTime(Model.DeliveryDate).ToString("yyyy-MM-dd")'><i class="fa fa-pencil"></i></a>

                                                            }

                                                        </td>
                                                    </tr>
                                                }
                                                @if (Model.InspectionReportNo != null)
                                                {
                                                    <tr>
                                                        <td style="width:18%">
                                                            Inspection Report
                                                        </td>
                                                        <td align="center">
                                                            @Html.DisplayFor(model => model.InspectionReportNo)
                                                        </td>
                                                        <td align="center">
                                                            @Convert.ToDateTime(Model.InspectionReportDate).ToString("dd/MM/yyyy")
                                                        </td>
                                                        <td align="center">
                                                            <strong>
                                                                <a href="@Url.Action("InspectionAttachment","Contract",new {Filename=Model.InspReportFileName })"><i class="fa fa-download"></i></a>
                                                            </strong>
                                                        </td>
                                                        <td align="center">
                                                            @if (Model.EditAttachment != "No")
                                                            {
                                                                <a href="#" data-toggle="modal" data-target="#attachment2" class="attachment2" data-type="Inspection Report" data-cnumber='@Model.InspectionReportNo' data-cdate='@Convert.ToDateTime(Model.InspectionReportDate).ToString("yyyy-MM-dd")'><i class="fa fa-pencil"></i></a>

                                                            }

                                                        </td>
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                    }
                                }

                            </fieldset>
                            <br />
                            <br />

                            <div class="col-md-offset-1">
                                <a href="@Url.Action("PendingReceiving","Contract")" style="margin-right:5px" class="btn btn-info pull-left"><i class="glyphicon glyphicon-arrow-left"></i> Back  </a>
                            </div>




                            <br />
                            <br />




                        </div>
                 </div>
                    </div>
            </article>

        </div>
    </section>

</div>
<!----------- Search  GL----------------->
<!----------- Search  GL----------------->
<div class="modal fade" id="glItemsModal" style="left:4%">

    <div class="modal-dialog" style="width:80%;">
        <div class="modal-content panel-info">
            <div class="modal-header panel-heading">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h3 class="modal-title"> Search Gl Item(s)</h3>
            </div>
            <div class="modal-body">
                <table>
                    <tr>
                        <td style="padding:5px">Total Items Amount</td>
                        <td style="padding:5px">
                            <input type="text" disabled id="total_items_amount">
                        </td>

                        <td style="padding:5px">Total Line Amount</td>
                        <td style="padding:5px">
                            <input value="0" type="text" disabled id="total_line_amount">
                        </td>

                        <td style="padding:5px">Difference</td>
                        <td style="padding:5px">
                            <input value="0" type="text" disabled id="difference" style="width:250px">
                        </td>
                    </tr>
                </table>
                <div>
                    <div class="row" style="padding-top:1%;padding-bottom:1%">
                        <div class="col-md-6">
                        </div>
                        <div class="col-md-6">
                            <div class="search-container " style="float:right">
                                <i class="fa fa-search search-icon"></i>
                                <input type="search" name="search" placeholder="Search..." id="search_gl">
                            </div>
                        </div>
                    </div>
                    <div align="center">
                        <img src="/Media/Images/ajax_loader.gif" class="loadingImg" />
                    </div>
                    <table id="dt_search_gl_item" class="table table-striped table-bordered table-hover table-condensed">
                        <thead>
                            <tr>
                                <th>#</th>
                                <th>Expenditure Line Item</th>
                                <th>Item Description</th>
                                @if (Model.Accrual == "YES")
                                {
                                    <th>Budget Balance</th>
                                }
                                else
                                {
                                    <th>Fund Balance</th>
                                }
                                <th>Funding Reference</th>
                                <th>Expense Amount</th>
                            </tr>
                        </thead>
                    </table>

                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-info" id="btn_save_items_charge">
                        <i class="fa fa-save"></i>Save
                    </button>
                    <button class="btn btn-info" data-dismiss="modal">
                        <i class="fa  fa-times"></i>Cancel
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

<!----------- Transfer ----------------->
<div class="modal fade" id="Transfer" style="left:4%">

    <div class="modal-dialog" style="width:36%;">
        <div class="modal-content panel-info">

            <div class="modal-header panel-heading">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h3 class="modal-title" style="text-align:center">Transfer To</h3>
            </div>
            @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "Transfer_info" }))
            {
                <div class="modal-body form-horizontal">

                    <br />

                    <input type="hidden" name="Id" id="Id" value="">
                    <div class="form-group">

                            @*@Html.LabelFor(model => model.InstitutionCodeTo, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.DropDownListFor(model => model.InstitutionCodeTo, Model.InstitutionsList, "Select ", new { @class = "form-control", @required = "required" })
                                @Html.ValidationMessageFor(model => model.InstitutionCodeTo, "", new { @class = "text-danger" })
                            </div>*@
                       
                    </div>
                    <div class="form-group">

                        @Html.LabelFor(model => model.BankAccountTo, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @*<select id="BankAccountTo" required="required" style="width:100%">
                                <option> </option>
                            </select>*@
                            <select name="BankAccountTo" id="BankAccountTo" class="form-control" required = "required"></select>  
                        </div>

                    </div>

                </div>
                <div class="modal-footer">
                    <a href="#" class="btn btn-default" data-dismiss="modal">Cancel</a>
                    <input class="btn btn-info" type="submit" id="btnSubmit" value="Select" />
                </div>

            }
        </div>
    </div>
</div>

<div class="modal fade" id="attachment2" style="left:4%">

    <div class="modal-dialog" style="width:35%;">
        <div class="modal-content panel-info">

            <div class="modal-header panel-heading">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h3 class="modal-title" style="text-align:center" id="title2"> </h3>
            </div>
            @using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = "return EditSubmitAttachment(this)" }))
            {
                @Html.AntiForgeryToken()
                <div class="modal-body2 form-horizontal">

                    <br />
                    @Html.HiddenFor(model => model.ReceivingSummaryId)
                    <input type="hidden" name="DocumentType" id="DocumentType" value="">
                    <div class="form-group">
                        @Html.Label("Ref/No", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-7">
                            @Html.EditorFor(modelItem => Model.CertificateNumber, new { htmlAttributes = new { @class = "form-control", @required = "required", autocomplete = "off" } })

                        </div>

                    </div>
                    <div class="form-group">
                        @Html.Label("Date", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-7">
                            <div class="input-group">
                                <div class="flatpickr3 date-group">
                                    <input type="text" placeholder="Select Date.."
                                           data-input
                                           class="form-control"
                                           style="width:140px;padding-left:10px;border:none"
                                           autocomplete="off" name="AttachmentDate" id="AttachmentDate">
                                    <a class="input-button" title="open" data-toggle href="#">
                                        <span class="input-group-addon" style="height:32px"><i class="fa fa-calendar"></i></span>
                                    </a>

                                </div>
                            </div>

                        </div>

                    </div>
                    <div class="form-group">
                        @Html.Label("Attachment(PDF)", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-7">
                            <input type="file" class="form-control btn btn-default" id="AttachentFile" name="AttachentFile" accept=".pdf">

                        </div>

                    </div>

                </div>
                <div class="modal-footer">
                    <a href="#" class="btn btn-default" data-dismiss="modal">Cancel</a>
                    <button id="save_attach" class="btn btn-info" style="margin-right:2px">
                        <i class="glyphicon glyphicon-floppy-disk"></i> Save
                    </button>
                    @*<input class="btn btn-info" type="submit" id="btnSubmit" value="Save" />*@
                    @*<input type="submit" value="Submit" class="btn btn-success" id="btnSubmit" />*@

                </div>

            }
        </div>
    </div>
</div>
@section pagespecific {



    <!-- PAGE RELATED PLUGIN(S) -->

    <script type="text/javascript">
        function EditSubmitAttachment(formData) {
            var attachment_number = $(".modal-body2 #CertificateNumber").val();
            if (!attachment_number) {
                swal("Please enter document number");
                return false;
            }
            var attachment_date = $(".modal-body2 #AttachmentDate").val();
            if (!attachment_date) {
                swal("Please Select Date");
                return false;
            }

            var attachment_file = $(".modal-body2 #AttachentFile").val();
            if (!attachment_file) {
                swal("Please upload file");
                return false;
            }
            $('#attachment2').modal('hide');
            var url = '@Url.Action("EditAttachments", "Contract")';
            var ajaxConfig = {
                type: "post",
                url: url,
                data: new FormData(formData),
                success: function (result) {
                    if (result == "Success") {
                        swal("Data saved successfully", { icon: "success" })
                                                                   .then((value) => {
                                                                       location.reload();
                                                                   });
                    }
                    else {
                        swal("Failed  due to DbException");
                    }
                }
            }

            if ($(formData).attr('enctype') == "multipart/form-data") {
                ajaxConfig["contentType"] = false;
                ajaxConfig["processData"] = false;
            }
            $.ajax(ajaxConfig);
            return false;
        }
        // =========== End Save Atttachment ====================

        var dt_search_gl_item = $('#dt_search_gl_item').dataTable();
        $("#dt_search_payee_wrapper .dt-toolbar").remove();
        //Search Retention Payee
        function SearchPayee() {
            $('#payeeModal').modal('show');
        }

        //Search Retention Payee
        function SearchBankAccount() {
            $('#Transfer').modal('show');
        }
        var dt_search_payee = $('#dt_search_payee').dataTable({
            "aoColumnDefs": [{ "bVisible": false, "aTargets": [1, 2] }],
        });

        $("#searchbox").on("keyup search input paste cut", function () {
            if (!this.value) {
                dt_search_payee.fnClearTable();
            } else {
                searchPayeeTableUpdate(this.value);
            }
        });
        function searchPayeeTableUpdate(search) {
            var url = '@Url.Action("GetPayee", "PaymentVoucher")';
            $.ajax({
                type: "get",
                url: url + "/?search=" + search + "",
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {
                    data = response.data;
                    dt_search_payee.fnClearTable();
                    for (var i = 0; i < data.length; i++) {
                        dt_search_payee.fnAddData([i + 1,
                           data[i]["PayeeDetailId"],
                           data[i]["BIC"],
                           data[i]["AccountName"],
                           data[i]["PayeeCode"],
                           data[i]["BankName"],
                           data[i]["Accountnumber"],
                           data[i]["PayeeType"],
                           data[i]["Address1"],
                           '<a href="#" onclick="payeeClicked(' + i + ')"><i class="glyphicon glyphicon-plus-sign"></i></a>'
                        ]);
                    }
                },
                failure: function (error) {
                    swal(error);
                }
            });
        }
        function payeeClicked(rowId) {
            var data = dt_search_payee.DataTable().rows().data();
            var row = data[rowId];
            $("#PayeeDetailId").val(row[1]);
            $("#PayeeName").val(row[3]);
            $("#payeeModal").modal("hide");
        }
        //=============SEARCH GL ACCOUNTS ==================
        $("#search_gl").on("keyup search input paste cut", function () {      
            $("#search_exp_line").val("");
            dt_search_gl_item.DataTable().search(this.value).draw();
        });
        function searchGLTableUpdate() {
            var subBudgetClass = $("#SubBudgetClass").val();
             var accrual = '@(Model.Accrual)';

            var accuralReceiving = false;

            if (accrual == "YES") {
                accuralReceiving = true;
            } 
             var url = '@Url.Action("GetFundbalance", "PaymentVoucher")';
            
             var parent_code = "UNKNOWN";
            if ($("#ParentInstitutionCode").val() !="") {
                parent_code = $("#ParentInstitutionCode").val();
            }
            var sub_warant_code = "UNKNOWN";
            if ($("#SubWarrantCode").val() !="") {
                sub_warant_code = $("#SubWarrantCode").val();
            }
           
               var fundBalanceParams = {
                subBudgetClass,
                instCode: parent_code,
                subWarrantCode: sub_warant_code,
                IsAccrualVoucher: accuralReceiving
            };
            $.ajax({
                type: "get",
                url: url,
                data: fundBalanceParams,
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {
                    //=== UPDATE SEARCH GI TABLE ====
                    data = response.data;
                    dt_search_gl_item.fnClearTable();          
                    if (accrual == "YES") {
                        for (var i = 0; i < data.length; i++) {
                                   var amount = 0;
                            if (data[i]["BudgetBalance"] > 0) {
                                amount = data[i]["BudgetBalance"];
                            }
                           dt_search_gl_item.fnAddData([i + 1,
                           data[i]["GlAccount"].split("|").join("-"),
                           data[i]["GlAccountDesc"],
                            toLabel(data[i]["BudgetBalance"] || 0),
                           'NA',
                           '<amount-input placeholder="Amount" max="' + amount + '"  onkeyup="amountChanged(this)" />'
                        ]);
                    }
                    } else {

                          for (var i = 0; i < data.length; i++) {
                           dt_search_gl_item.fnAddData([i + 1,
                           data[i]["GlAccount"].split("|").join("-"),
                           data[i]["GlAccountDesc"],
                           toLabel(data[i]["FundBalance"]),
                           data[i]["FundingRefNo"],
                           '<amount-input placeholder="Amount" max="' + data[i]["FundBalance"] + '"  onkeyup="amountChanged(this)" />'
                        ]);
                                          }

                    }
                },
                failure: function (error) {
                    swal(error);
                }
            });
        }
        //==============END SEARCH GL ACCOUNT====================
        $(document).ready(function () {

            $(".attachment2").on('click', function () {
                var type = $(this).data('type');
                var certificate_number = $(this).data('cnumber');
                var cdate = $(this).data('cdate');
                $("#title2").text(type);
                $(".modal-body2 #DocumentType").val(type);
                $(".modal-body2 #CertificateNumber").val(certificate_number);
                $(".modal-body2 #AttachmentDate").val(cdate);
                $(".modal-body2 #AttachentFile").val("");


            });


            $("#dt_search_gl_item_wrapper .dt-toolbar").remove();
                var contract_amount = $("#ContractAmount").val();
                if (!contract_amount) {
                    //$('#save_attachment').prop('disabled', true);
                    //$("#attachment").hide();

                }
                else {
                    $("#attachment").hide();
                }

                $("#HasRetention").change(function (e) {

                    if ($(this).is(":checked")) {
                        $(".retention_display").show();

                    } else {

                        var percentage = $("#RetentionPercentage").val();
                        if (percentage > 1) {
                            var summary_id = $("#ReceivingSummaryId").val();
                            var form_data = {
                                "id": summary_id
                            }
                            swal({
                                title: 'Confirmation',
                                text: "Delete retention information ?",
                                buttons: [
                                  'No',
                                  'Yes'
                                ],
                            }).then(function (isConfirm) {
                                if (isConfirm) {
                                    var url = '@Url.Action("DeleteRetention", "Contract")';
                                    $.ajax(
                                {
                                    type: "POST",
                                    url: url,
                                    data: form_data,
                                    success: function (response) {
                                        if (response == "Success") {
                                            swal("Deleted  successfully!", { icon: "success" })
                                                      .then((value) => {
                                                          location.reload();
                                                      });


                                        }


                                        else {
                                            $(".retention_display").show();
                                            swal("Failed to delete ,DbException");
                                        }
                                    },
                                    error: function (xhr) {
                                        $(".retention_display").show();
                                        swal(error);

                                    },

                                });
                                } else {
                                    $("#HasRetention").prop("checked", true);
                                    $(".retention_display").show();
                                    swal("Cancelled", "No change was made");

                                }
                            });
                        }
                        $(".retention_display").hide();
                    }
                });
                $("#HasLiquidatedDamage").change(function (e) {

                    if ($(this).is(":checked")) {
                        $("#liquided_damage").show();

                    } else {
                        var liq_dmg = $("#LiquidatedDamageAmount").val();
                        if (liq_dmg > 1) {
                            var summary_id = $("#ReceivingSummaryId").val();
                            var form_data = {
                                "id": summary_id
                            }
                            swal({
                                title: 'Confirmation',
                                text: "Delete liquidated damages information ?",
                                buttons: [
                                  'No',
                                  'Yes'
                                ],
                            }).then(function (isConfirm) {
                                if (isConfirm) {
                                    var url = '@Url.Action("DeleteLiqDamage", "Contract")';
                                    $.ajax(
                                {
                                    type: "POST",
                                    url: url,
                                    data: form_data,
                                    success: function (response) {
                                        if (response == "Success") {
                                            swal("Deleted  successfully!", { icon: "success" })
                                                      .then((value) => {
                                                          location.reload();
                                                      });


                                        }


                                        else {
                                            $("#liquided_damage").show();
                                            swal("Failed to delete ,DbException");
                                        }
                                    },
                                    error: function (xhr) {
                                        $("#liquided_damage").show();
                                        swal(error);

                                    },

                                });
                                } else {
                                    $("#HasLiquidatedDamage").prop("checked", true);
                                    $("#liquided_damage").show();
                                    swal("Cancelled", "No change was made");

                                }
                            });
                        }
                        $("#liquided_damage").hide();
                    }
                });


                if ($("#HasLiquidatedDamage").is(":checked")) {
                    $("#liquided_damage").show();
                }
                if ($("#HasRetention").is(":checked")) {
                    $(".retention_display").show();
                    $("#save_retention").hide();
                    $("#update_retention").show();
                }
              $("#RetentionPercentage").keyup(function () {
                    var percentage = $("#RetentionPercentage").val();
                    if (percentage > 10) {
                        swal("Percentage of retention can not exceed 10 %");
                        $("#RetentionPercentage").val("");
                    }
                }
               );
                $(function () {
                    $("#RetentionBy").change(function (e) {
                        var retentionBy = $("#RetentionBy").val();
                        if (retentionBy == "BankTransfer") {
                            $(".bank_transfer").show();
                            $(".internal_transfer").hide();
                            $(".submit_retention").show();
                        } else if (retentionBy == "InternalTransfer") {
                            $(".bank_transfer").hide();
                            $(".internal_transfer").show();
                            $(".submit_retention").show();
                        }
                        else {
                            $(".bank_transfer").hide();
                            $(".internal_transfer").hide();
                            $(".submit_retention").hide();
                        }
                    });
                });
                var retentionBy = $("#RetentionBy").val();

                if (retentionBy == "BankTransfer") {
                    $(".bank_transfer").show();
                      $(".submit_retention").show();
                    $("#save_retention").show();
                    $("#BankAccountTo").empty();
                    var account_name = $("#AccountName").val();
                    var bank_account = $("#BankAccountToDisp").val();
                    $('<option value="' + bank_account + '" selected>' + account_name + '</option>').appendTo('#BankAccountTo');
                } else {
                    if ($("#HasRetention").is(":checked")) {
                        $(".internal_transfer").show();
                        $(".submit_retention").show();
                        $("#save_retention").show();
                    } else { }

                }
            //Save liquided damage
                $(function () { // this will be called when the DOM is ready
                    $("#save_liqdmg").click(function () {
                       var liqdmgNoOfDays =$("#LiquidatedNumberOfDays").val();
                        if (liqdmgNoOfDays > 0) {
                            var sbc = $("#LiquidatedSBCTo").val();
                            if (!sbc) {
                                swal("Please select Sub Budget Class");
                                return;
                            }
                            var summary_id = $("#ReceivingSummaryId").val();
                            $("#save_liqdmg").prop('disabled', true);
                            var form_data = {
                                "ReceivingSummaryId": summary_id,
                                "NumberOfDays": liqdmgNoOfDays,
                                "SubBudgetClass": sbc
                                    }
                                    swal({
                                        title: 'Confirmation',
                                        text: "Save Liquidated Damages ?",
                                        buttons: [
                                          'No',
                                          'Yes'
                                        ],
                                    }).then(function (isConfirm) {
                                        if (isConfirm) {
                                            var url = '@Url.Action("SaveLiquidedDamage", "Contract")';
                                            $.ajax(
                                        {
                                            type: "POST",
                                            url: url,
                                            data: form_data,
                                            success: function (response) {
                                                if (response == "Success") {

                                                    swal("Saved  successfully!", { icon: "success" })
                                                              .then((value) => {
                                                                  location.reload();

                                                              });


                                                }
                                                else if (response == "Setup") {
                                                    swal("Chart of Account setup is incomplete. COA with GFS Liquidated Damage for subbudget class 301 is missing. Please contact Administrator!");
                                                    $("#save_liqdmg").prop('disabled', false);
                                                  }
                                                else if (response== "Exceed") {
                                                       swal("Liquidated damages can not exceed or be equal to amount payable");
                                                    $("#save_liqdmg").prop('disabled', false);
                                                }
                                                else {

                                                    swal("Failed to save ,DbException");
                                                    $("#save_liqdmg").prop('disabled', false);
                                                }
                                            },
                                            error: function (xhr) {
                                                swal(error);
                                                $("#save_liqdmg").prop('disabled', false);
                                            },

                                        });
                                        } else {
                                            swal("Cancelled", "No change was made");
                                            $("#save_liqdmg").prop('disabled', false);
                                        }
                                    });





                        } else {
                            swal("Number of days is required");
                        }


                    });
                });

            //Save retention
            $(function () { // this will be called when the DOM is ready
                $("#save_retention").click(function () {
                    var percentage = parseFloat($("#RetentionPercentage").val());
                    if (percentage > 0) {
                    } else {
                        swal("Please enter retention percentage");
                        return;
                    }
                        var summary_id = $("#ReceivingSummaryId").val();
                        var retentionBy = $("#RetentionBy").val();
                        if (!retentionBy) {
                            swal("Please select Tranfer Category");
                            return;
                        }
                        if (retentionBy == "BankTransfer") {

                            var bank_account = $("#BankAccountTo").val();
                            if (!bank_account) {
                                swal("Please select Bank Account");
                                return;
                            }

                            $("#save_retention").prop('disabled', true);
                            var form_data = {
                                "id": summary_id,
                                "percentage": percentage,
                                "retentionBy": retentionBy,
                                "bankAccount": bank_account
                            }
                            swal({
                                title: 'Confirmation',
                                text: "Save retention information ?",
                                buttons: [
                                  'No',
                                  'Yes'
                                ],
                            }).then(function (isConfirm) {
                                if (isConfirm) {
                                    var url = '@Url.Action("SaveRetention", "Contract")';
                                    $.ajax(
                                {
                                    type: "POST",
                                    url: url,
                                    data: form_data,
                                    success: function (response) {
                                        if (response == "Success") {
                                            swal("Saved  successfully!", { icon: "success" })
                                                                                   .then((value) => {
                                                                                       location.reload();

                                                                                   });

                                        }
                                        else if (response == "Setup") {
                                            swal("Chart of Account setup is incomplete. COA with GFS Retention for subbudget class 301 is missing. Please contact Administrator!");
                                            $("#save_retention").prop('disabled', false);
                                        }
                                        else if (response == "Exceed") {
                                             swal("Retention can not exceed or be equal to amount payable");
                                            $("#save_retention").prop('disabled', false);
                                        }

                                        else {

                                            swal("Failed to save ,DbException");
                                            $("#save_retention").prop('disabled', false);
                                        }
                                    },
                                    error: function (xhr) {
                                        swal(error);
                                        $("#save_retention").prop('disabled', false);
                                    },

                                });
                                } else {
                                    swal("Cancelled", "No change was made");
                                    $("#save_retention").prop('disabled', false);
                                }
                            });
                        } else {

                            var sbc = $("#SubBudgetClassTo").val();
                            if (!sbc) {
                                swal("Please select SubBudgetClass");
                                return;
                            }
                            $("#save_retention").prop('disabled', true);
                            var form_data = {
                                "id": summary_id,
                                "percentage": percentage,
                                "retentionBy": retentionBy,
                                "SubBudgetClass": sbc
                            }
                            swal({
                                title: 'Confirmation',
                                text: "Save retention information ?",
                                buttons: [
                                  'No',
                                  'Yes'
                                ],
                            }).then(function (isConfirm) {
                                if (isConfirm) {
                                    var url = '@Url.Action("SaveRetention", "Contract")';
                                    $.ajax(
                                {
                                    type: "POST",
                                    url: url,
                                    data: form_data,
                                    success: function (response) {
                                        if (response == "Success") {

                                            swal("Saved  successfully!", { icon: "success" })
                                                  .then((value) => {
                                                      location.reload();

                                                  });
                                        }
                                        else if (response == "Exceed") {
                                           swal("Retention can not exceed or be equal to amount payable");
                                            $("#save_retention").prop('disabled', false);
                                        }
                                      else if (response == "Setup") {
                                            swal("Chart of Account setup is incomplete. COA with GFS Retention for subbudget class 301 is missing. Please contact Administrator!");
                                            $("#save_retention").prop('disabled', false);
                                        }
                                        else {

                                            swal("Failed to save ,DbException");
                                            $("#save_retention").prop('disabled', false);
                                        }
                                    },
                                    error: function (xhr) {
                                        swal(error);
                                        $("#save_retention").prop('disabled', false);
                                    },

                                });
                                } else {
                                    swal("Cancelled", "No change was made");
                                    $("#save_retention").prop('disabled', false);
                                }
                            });

                        }



                });
            });
                  //Save accrual retention
            $(function () { // this will be called when the DOM is ready
                $("#accrual_retention").click(function () {
                    var percentage = parseFloat($("#RetentionPercentage").val());
                    if (percentage > 0) {
                    } else {
                        swal("Please enter retention percentage");
                        return;
                    }
                    var summary_id = $("#ReceivingSummaryId").val();

                            $("#accrual_retention").prop('disabled', true);
                            var form_data = {
                                "id": summary_id,
                                "percentage": percentage
                            }
                            swal({
                                title: 'Confirmation',
                                text: "Save retention information?,New entry will be added to retention associated with this deduction!",
                                buttons: [
                                  'No',
                                  'Yes'
                                ],
                            }).then(function (isConfirm) {
                                if (isConfirm) {
                                    var url = '@Url.Action("SaveAccrualRetention", "Contract")';
                                    $.ajax(
                                {
                                    type: "POST",
                                    url: url,
                                    data: form_data,
                                    success: function (response) {
                                        if (response == "Success") {

                                            swal("Saved  successfully!", { icon: "success" })
                                                  .then((value) => {
                                                      location.reload();

                                                  });
                                        }
                                        else if (response == "Exceed") {
                                           swal("Retention can not exceed or be equal to amount payable");
                                            $("#accrual_retention").prop('disabled', false);
                                        }

                                        else {

                                            swal("Failed to save ,DbException");
                                            $("#accrual_retention").prop('disabled', false);
                                        }
                                    },
                                    error: function (xhr) {
                                        swal(error);
                                        $("#accrual_retention").prop('disabled', false);
                                    },

                                });
                                } else {
                                    swal("Cancelled", "No change was made");
                                    $("#accrual_retention").prop('disabled', false);
                                }
                            });
                         
                     
                  
                });
            });
            //Select Bank Transfer
            $("#Transfer_info").on('submit', function (e) {
                e.preventDefault();
                var summary_id = $("#ReceivingSummaryId").val();
                var instituion_code = $("#Transfer_info #InstitutionCodeTo").val();
                var bank_account = $("#Transfer_info #BankAccountTo").val();
                $("#InstitutionCodeTo").val(instituion_code);
                $("#BankAccountTo").val(bank_account);
                $("#Transfer").modal("hide");
            });
            //Save retention with retention by Transfer
            $(function () { // this will be called when the DOM is ready
                $("#save_retention1").click(function () {
                    var percentage = parseFloat($("#RetentionPercentage").val());
                    if (percentage > 0) {
                        var summary_id = $("#ReceivingSummaryId").val();
                        var retentionBy = $("#RetentionBy").val();
                        if (!retentionBy) {
                            swal("Please select RetentionBy");
                            return;
                        }
                        var bank_account = $("#BankAccountTo").val();

                        if (!bank_account) {
                            swal("Please search Bank Account");
                            return;
                        }
                        $("#save_retention1").prop('disabled', true);
                        var form_data = {
                            "id": summary_id,
                            "percentage": percentage,
                            "bankAccount": bank_account,
                            "retentionBy": retentionBy
                        }
                        swal({
                            title: 'Confirmation',
                            text: "Save retention information ?",
                            buttons: [
                              'No',
                              'Yes'
                            ],
                        }).then(function (isConfirm) {
                            if (isConfirm) {
                                var url = '@Url.Action("SaveRetention", "Contract")';
                                $.ajax(
                            {
                                type: "POST",
                                url: url,
                                data: form_data,
                                success: function (response) {
                                    if (response == "Success") {
                                        swal("Saved  successfully!", { icon: "success" })
                                                  .then((value) => {
                                                      location.reload();

                                                  });


                                    }
                                    else if (response == "Exceed") {
                                        swal("Retention can not exceed or be equal to amount payable");
                                        $("#save_retention1").prop('disabled', false);
                                    }                                 
                                      else if (response == "Setup") {
                                            swal("Chart of Account setup is incomplete. COA with GFS Retention for subbudget class 301 is missing. Please contact Administrator!");
                                            $("#save_retention1").prop('disabled', false);
                                        }
                                    else {

                                        swal("Failed to save ,DbException");
                                        $("#save_retention1").prop('disabled', false);
                                    }
                                },
                                error: function (xhr) {
                                    swal(error);
                                    $("#save_retention1").prop('disabled', false);
                                },

                            });
                            } else {
                                swal("Cancelled", "No change was made");
                                $("#save_retention1").prop('disabled', false);
                            }
                        });





                    } else {
                        swal("Please enter retention percentage");
                    }


                });
            });
                $("#gl_items_charge").on('click', function () {
                    var sum = parseFloat($("#ReceivedAmount").val());
                        $("#search_exp_line").val("");
                        $("#total_line_amount").val("");
                        $("#total_items_amount").val(sum.toLocaleString('en'));
                        $("#difference").val(sum.toLocaleString('en'));
                        $("#glItemsModal").modal();
                        searchGLTableUpdate();
                        //$("#table_items_charge tr").each(function () {
                        //    $(this).find('td').each(function () {
                        //        if ($(this).text().trim() == "") {
                        //            $(this).closest("tr").remove();
                        //        };

                        //    });
                        //});



                });
                $(function () { // this will be called when the DOM is ready
                    $("#search_exp_line").keyup(function () {

                        var search = $(this).val();
                        if (search.length>1) {
                            $("#text_display").hide();
                        var subBudgetClass = $("#SubBudgetClass").val();

                        var formParams = { "GlAccountDesc": search, "subBudgetClass": subBudgetClass };
                        var url = '@Url.Action("GetFundBalance", "Procurement")';

                        //Feed Datatable
                        $.ajax({
                            type: "post",
                            url: url,
                            data: formParams,
                            contenttype: "application/json; charset=utf-8",
                            datatype: "json",
                            success: function (data) {
                                var i = 0;
                                $("#table_items_charge tr").each(function () {
                                    $(this).closest("tr").find("input").each(function () {
                                        if (this.value.trim() == "") {
                                            $(this).closest("tr").remove();
                                        }
                                    });
                                });

                                $.each(data, function (i, d) {
                                    i++;
                                    $('<tr><td>' + i + '</td><td align="left">' + d.GlAccount.split("|").join("-") + '</td><td>' + d.GlAccountDesc + '</td><td align="right">' + d.FundBalance.toLocaleString('en') + '</td><td>' + d.FundingRefNo + '</td><td><input class="charge" type="text"  placeholder="Amount" max="' + d.FundBalance + '" id="Id-' + i + '" onkeyup="amountChanged(this)"/></td></tr>').appendTo('#table_items_charge');
                                });
                                if (search) {
                                    if (data.length == 0) {
                                        swal("No Matching GL Account");
                                    }
                                }

                            },
                            failure: function (errmsg) {
                                swal(errmsg);
                            }
                        });

                    }
                        else {
                            $("#text_display").show();
                        }


                    });
                });


                //SAVE GL ACCOUNT(S)
                $("#btn_save_items_charge").click(function () {
                 
                    var total_items_value = parseFloat($("#total_items_amount").val().split(",").join(""));
                      sum_total = sum_total.toFixed(2);
                    if (glItemsCharges.length == 0) {
                        swal("Please Enter Amount !");
                    }
                    else if (total_items_value != sum_total) {
                        swal("Please Total Line Amount must be equal to " + total_items_value.toLocaleString('en') + " !");
                    }
                    else {
                        $('#glItemsModal').modal('hide');
                        var receiving_id = $("#ReceivingSummaryId").val();
                        var contractId = $("#ContractId").val();
                        var form_data = {
                            "ReceivingSummaryId": receiving_id,
                            "ContractId": contractId,
                            "ReceivingCoas": glItemsCharges
                        }
                        $('#bind_gl').hide();
                        $("#btn_save_items_charge").prop('disabled', true);
                        var url = '@Url.Action("ItemsCharge", "Contract")';
                        $.ajax(
            {
                type: "POST",
                url: url,
                data: form_data,
                success: function (response) {
                    $("#btn_save_items_charge").prop('disabled', false);
                        if (response == "Success") {
                 swal("GL Account(s) assigned successfully", { icon: "success" })
                            .then((value) => {
                              location.reload();              
                            });
                           }
                           else {
                               swal(response);
                            }
                },
                error: function (xhr) {
                    //console.log(xhr.responseText);
                    $("#btn_save_items_charge").prop('disabled', false);
                    swal("An error has occured, contact system support");
                    $("#divLoader").hide();
                },

            });

                    }

                });
                //END SAVE GL ACCOUNT(S)
                        });

        var glItemsCharges = [];
        var sum_total = 0;

        function amountChanged(e) {

            var max_value = parseFloat(e.max);
            var entered_value = parseFloat(e.value.split(",").join(""));
            if (!entered_value) {
                entered_value = 0;
            }
            if (entered_value >= 0) {
                if (max_value >= entered_value) {

                    sum_total = 0;

                    var i = 0;

                    $("#dt_search_gl_item tr").each(function () {


                        if (i > 0) {
                            var value = $(this).children().eq(5).find("input").val().trim().split(",").join("");
                            if (value != "") {

                                var expense_amount = parseFloat($(this).children().eq(3).text().split(",").join(""));

                                var amount = parseFloat(value);

                                //INSERT INTO ARRAY
                                var line = "";
                                line = $(this).children().eq(1).text().split("-").join("|");
                                var item_description = $(this).children().eq(2).text();
                                var expense_amount = parseFloat($(this).children().eq(3).text().split(",").join(""));
                                var funding_ref = $(this).children().eq(4).text();

                                if (glItemsCharges.length > 0) {

                                    //CHECK IF EXIST IN THE ARRAY
                                    var found = false;
                                    for (var j = 0; j < glItemsCharges.length; j++) {
                                        if (glItemsCharges[j].GLAccount == line && glItemsCharges[j].FundingReference == funding_ref) {
                                            glItemsCharges[j].ExpenseAmount = amount;
                                            found = true;
                                        }

                                    }

                                    if (!found) {

                                        glItemsCharges.push({
                                            "GLAccount": line,
                                            "GLAccountDesc": item_description,
                                            "FundingReference": funding_ref,
                                            "ExpenseAmount": amount
                                        });


                                    }


                                } else {

                                    glItemsCharges.push({
                                        "GLAccount": line,
                                        "GLAccountDesc": item_description,
                                        "FundingReference": funding_ref,
                                        "ExpenseAmount": amount
                                    });


                                }




                            }
                        }


                        i++;
                    });

                    for (var j = 0; j < glItemsCharges.length; j++) {

                        sum_total = sum_total + glItemsCharges[j].ExpenseAmount;

                    }

                    var total_items_value = parseFloat($("#total_items_amount").val().split(",").join(""));
                    var balance = total_items_value - sum_total;
                    if (balance >= 0) {
                        $("#total_line_amount").val(sum_total.toLocaleString('en'));
                        $("#difference").val(balance.toLocaleString('en'));
                    }
                    else {
                        swal("Total Line Amount can not exceed " + total_items_value.toLocaleString('en'));
                        e.value = "";


                    }
                } else {
                    swal("Expense Amount can not exceed " + max_value.toLocaleString('en'));
                    e.value = "";


                }
            }
        }

        //SHOW LOADER ICON
        $(document).ajaxStart(function () {
            $(".loadingImg").show();

        });
        //HIDE LOADER ICON
        $(document).ajaxStop(function () {
            $(".loadingImg").hide();
        });
        //COMMA SEPARATOR ON INSERTING ITEM CHARGE
        $(document).on('keyup', '.charge', function () {
            $(this).val(inputThousandSeparator(this.value))
        });
        var OldVal = 0
        function inputThousandSeparator(NewVal) {
            if (NewVal) {
                try {
                    NewVal = parseFloat(NewVal.split(",").join(""))
                    if (typeof NewVal == 'number' && !Number.isNaN(NewVal)) {
                        OldVal = NewVal;
                        return NewVal.toLocaleString()
                    } else {
                        return OldVal
                    }
                } catch (e) {
                    console.log(e)
                }
            }
        }
        //SHOW LOADER ICON
        $(document).ajaxStart(function () {
            $(".loadingImg").show();

        });
        //HIDE LOADER ICON
        $(document).ajaxStop(function () {
            $(".loadingImg").hide();
        });
             $("#IsLastReceiving").change((e) => {
                   $("#Receiving").val(e.target.checked ? "YES" : "NO");
                   var selection = e.target.checked ? "YES" : "NO";
                      var contractId = $("#ContractId").val();
                        var form_data = {
                            "id": contractId,
                            "selection": selection
                   }
                                   var url = '@Url.Action("LastReceiving", "Contract")';
                        $.ajax(
            {
                type: "POST",
                url: url,
                data: form_data,
                success: function (response) {
                    if (response == "Success") {
                        if (selection =="YES") {
                            swal("This will be last receiving to this Contract");
                           }
                    }
                    else {
                        swal("An error has occured DbException, contact system support");
                    }
                },
                error: function (xhr) {
                    swal("An error has occured, contact system support");
                },

            });

               });
        var lastReceiving = '@(Model.Receiving)';
        if (lastReceiving=="YES") {
            $("#IsLastReceiving").prop("checked", true);
        }
            $("#NewSubBudgetClass").change(function () {
                   var sbc = $(this).val();
                               if (sbc) {
                                   var receivingId = $("#ReceivingSummaryId").val();
                                   var form_data = {
                                           "id": receivingId,
                                           "sbc": sbc
                                   }
                                            var url = '@Url.Action("ChangeSBC", "Contract")';
                        $.ajax(
            {
                type: "POST",
                url: url,
                data: form_data,
                success: function (response) {
                    if (response == "Success") {
                             swal("SBC Changed successfully", { icon: "success" })
                                          .then((value) => {
                                              location.reload();
                                              }); 
                    }
                    else  if (response == "GLRemoved") {
                              swal("SBC Changed successfully and GL Account(s) assigned previously released", { icon: "success" })
                                          .then((value) => {
                                              location.reload();
                                              }); 
                    }
                   else  if (response == "SetupProblem") {

                     swal("This will be last receiving to this Contract");

                    }
                    else {
                        swal("An error has occured DbException, contact system support");
                    }
                },
                error: function (xhr) {
                    swal("An error has occured, contact system support");
                },

            });
                                 }
               
                        });
    </script>
}








