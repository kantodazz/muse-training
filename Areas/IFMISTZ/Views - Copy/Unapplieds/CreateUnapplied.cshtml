@model IFMIS.Areas.IFMISTZ.Models.CreateUnappliedVM

<div id="content" style="margin: 5px; padding-top: 30px">

    <div class="row">
        @*<div class="col-xs-12 col-sm-9 col-md-9 col-lg-9">
            <h1 class="page-title txt-color-blueDark">

            <!-- PAGE HEADER -->
            <!--
            <i class="fa-fw fa fa-pencil-square-o"></i>
            Payments
            <span>
            >
            Bills
            </span>
            -->
            </h1>
            </div>*@

        <div class="col-xs-12 col-sm-3 col-md-3 col-lg-3">
            <!-- Button trigger modal -->
            <!--<a data-toggle="modal" href="#myModal" class="btn btn-success btn-lg pull-right header-btn hidden-mobile"><i class="fa fa-circle-arrow-up fa-lg"></i> Launch form modal</a>-->
        </div>
    </div>

    <!--
    <div class="alert alert-block alert-success">
        <a class="close" data-dismiss="alert" href="#">×</a>
        <h4 class="alert-heading"><i class="fa fa-check-square-o"></i> Check validation!</h4>
        <p>
            You may also check the form validation by clicking on the form action button. Please try and see the results below!
        </p>
    </div>
        -->
    <!-- widget grid -->
    <section id="widget-grid" class="">


        <!-- START ROW -->

        <div class="row">

            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">

                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">
                    <!-- widget options:
                        usage: <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false">

                        data-widget-colorbutton="false"
                        data-widget-editbutton="false"
                        data-widget-togglebutton="false"
                        data-widget-deletebutton="false"
                        data-widget-fullscreenbutton="false"
                        data-widget-custombutton="false"
                        data-widget-collapsed="true"
                        data-widget-sortable="false"

                    -->
                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2> Add New </h2>

                    </header>

                    <!-- widget div-->
                    <div>

                        <!-- widget edit box -->
                        <div class="jarviswidget-editbox">
                            <!-- This area used as dropdown edit box -->

                        </div>
                        <!-- end widget edit box -->
                        <!-- widget content -->
                        <div class="widget-body">

                            <form method="post" class="form-horizontal" name="unappliedForm" id="unappliedForm">
                                @Html.AntiForgeryToken()
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class="form-group">
                                    @Html.LabelFor(model => model.UnappliedId, "Search Unapplied", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-8">
                                        @Html.EditorFor(model => model.UnappliedId, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.UnappliedId, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.TrxAmount, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.TrxAmount, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                        @Html.ValidationMessageFor(model => model.TrxAmount, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.PaymentDesc, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.PaymentDesc, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", @readonly = true } })
                                        @Html.ValidationMessageFor(model => model.PaymentDesc, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.BankingStatusDesc, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.BankingStatusDesc, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                        @Html.ValidationMessageFor(model => model.BankingStatusDesc, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                @*<div class="form-group">
                                    @Html.LabelFor(model => model.VendorCode, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.VendorCode, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                        @Html.ValidationMessageFor(model => model.VendorCode, "", new { @class = "text-danger" })
                                    </div>
                                </div>*@
                            <div class="form-group">
                                @Html.LabelFor(model => model.BenAcct, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-3">
                                    @Html.EditorFor(model => model.BenAcct, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                    @Html.ValidationMessageFor(model => model.BenAcct, "", new { @class = "text-danger" })
                                </div>
                               
                                @Html.LabelFor(model => model.NewBankAccount, "New Beneficiary account", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-3">
                                    @Html.DropDownListFor(model => model.NewBankAccount, new SelectList(""), "---select---", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.NewBankAccount, "", new { @class = "text-danger" })
                                </div>
                               
                            </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.BenName, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.BenName, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                        @Html.ValidationMessageFor(model => model.BenName, "", new { @class = "text-danger" })
                                    </div>
                                    @Html.LabelFor(model => model.NewBenName, "New Account Name", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.NewBenName, new { htmlAttributes = new { @class = "form-control", @readonly = true, @autocomplete = "off" } })
                                        @Html.ValidationMessageFor(model => model.NewBenName, "", new { @class = "text-danger" })
                                    </div>                                 
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.BankName, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.BankName, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                        @Html.ValidationMessageFor(model => model.BankName, "", new { @class = "text-danger" })
                                    </div>
                                   
                                    @Html.LabelFor(model => model.NewBankName, "New Bank Name", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.NewBankName, new { htmlAttributes = new { @class = "form-control", @readonly = true, @autocomplete = "off" } })
                                        @*@Html.DropDownList("NewBankName", new SelectList(ViewBag.Banks, "BankName", "BankName"), "---select---", new { @class = "form-control" })*@
                                        @Html.ValidationMessageFor(model => model.NewBankName, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.BenBic, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.BenBic, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                        @Html.ValidationMessageFor(model => model.BenBic, "", new { @class = "text-danger" })
                                    </div>
                                    @Html.LabelFor(model => model.NewBenBic, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.NewBenBic, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                        @Html.ValidationMessageFor(model => model.NewBenBic, "", new { @class = "text-danger" })
                                    </div>
                                   
                                </div>
                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-6">
                                        <a class="btn btn-info" style="margin-right:5px" onclick="window.history.back()">
                                            <i class="glyphicon glyphicon-arrow-left"></i>Back
                                        </a>
                                        <button type="submit" class="btn btn-info" id="btnSave">
                                            <span class="glyphicon glyphicon-floppy-save" aria-hidden="true"></span>Save
                                        </button>
                                    </div>
                                </div>
                                @*<div class="form-actions">
                                    <div class="row">
                                        <div class="col-md-8 col-md-offset-2">
                                            <button class="btn btn-info" type="submit" style="float: left">
                                                <i class="fa fa-save"></i>
                                                Save
                                            </button>
                                            <a href="@Url.Action("UnappliedList", "Unapplieds" )" class="btn btn-info" style="float: left; margin-left: 5px">
                                                <i class="fa fa-arrow-left"></i>
                                                Back
                                            </a>
                                        </div>
                                    </div>
                                </div>*@
                            </form>
                        </div>
                        <!-- end widget content -->
                    </div>
                    <!-- end widget div -->

                </div>
                <!-- end widget -->

            </article>
            <!-- END COL -->

        </div>

        <!-- END ROW -->

    </section>
    <!-- end widget grid -->

</div>
@section Scripts{
    <script>
        $(function () {
            var url = '@Url.Action("SearchUnapplied", "unapplieds")';

            $("#UnappliedId").select2({
                minimumInputLength: 2,  // minimumInputLength for sending ajax request to server
                width: 'resolve',   // to adjust proper width of select2 wrapped elements
                ajax: {
                    url: url, // Controller - Select2Demo and Action -AccessRemoteData
                    type: "GET",
                    dataType: 'json',
                    data: function (term) {
                        return {
                            term: term
                        };
                    },
                    results: function (data, page) {
                        return { results: data.unappliedList }; // data.CountryList returning json data from Controlle
                    }
                }
            });
        });

        $("#UnappliedId").change(function () {
            var id = $(this).val();

            $.ajax({
                type: "get",
                url: '@Url.Action("GetUnappliedDetails", "Unapplieds")',
                data: { id: id },
                success: function (response) {
                    $("#VendorCode").val(response.VendorCode);
                    $("#BenName").val(response.BenName);
                    $("#EndToEndId").val(response.EndToEndId);
                    $("#BenAcct").val(response.BankAccount);
                    $("#BankName").val(response.BankName);
                    $("#BenBic").val(response.BenBic);
                    $("#TrxAmount").val(response.TrxAmount);
                    $("#UnappliedAccount").val(response.UnappliedAccount);
                    $("#PaymentDesc").val(response.PaymentDesc);
                    $("#BankingStatusDesc").val(response.BankingStatusDesc);
                    //$("#NewBenName").val(response.NewBenName);
                    //$("#NewBankName").val(response.NewBankName);
                   // $("#NewBenBic").val(response.NewBenBic);
                    //$("#NewBankAccount").html('');
                    $.each(response.Accounts, function (i, account) {                        
                        $("#NewBankAccount").append('<option value="'
                            + account.Accountnumber + '">'
                            + account.AccountnumberAccountName + '</option');
                    })
                    
                },
                error: function (response) {
                    swal({
                        text: "An error occured while processing your request, please contact system support",
                        icon: "error",
                        button: "OK",
                    })
                    return false;
                }
            });
        });

        $("#NewBankAccount").change(function () {
            var accountNumber = $(this).val();

            $.ajax({
                type: "get",
                url: '@Url.Action("GetAccountDetails", "Unapplieds")',
                data: { accountNumber: accountNumber },
                success: function (response) {
                    $("#NewBenName").val(response.NewBenName);
                    $("#NewBankName").val(response.NewBankName);
                    $("#NewBenBic").val(response.NewBenBic);

                },
                error: function (response) {
                    swal(response);
                    return false;
                }
            });
           
        });


    </script>
}

