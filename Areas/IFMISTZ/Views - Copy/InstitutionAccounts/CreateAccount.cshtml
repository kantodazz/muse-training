@model IFMIS.Areas.IFMISTZ.Models.InstitutionAccount

@{

    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .input[type="text"], select {
        border: 1px solid lightgray;
        width: 100%;
        height: 35px;
    }

    .search-icon {
        padding: 0.5rem;
    }

    input[type=search] {
        padding: 4px;
        border: hidden;
        border-radius: 4px;
    }

    .search-container {
        display: inline-flex;
        flex: 1 1 300px;
        position: relative;
        border: 1px solid #ccc;
        border-radius: 5px;
        overflow: hidden;
        padding-left: 10px;
    }

    .search-btn {
        border: 1px solid #ccc;
        border-radius: 4px;
        padding: 5px;
        padding-right: 10px;
    }

    .textarea {
        border: 1px solid lightgray;
        width: 100%;
    }

    .input[type="text"]:focus {
        border: 1px solid lightblue;
    }

    th {
        text-align: center;
    }

    .select2 {
        width: 100% !important;
    }
</style>
<!-- widget grid -->
<div id="content" style="margin: 5px; padding-top: 30px">

    <div class="row">


        <div class="col-xs-12 col-sm-3 col-md-3 col-lg-3">
            <!-- Button trigger modal -->
            <!--<a data-toggle="modal" href="#myModal" class="btn btn-success btn-lg pull-right header-btn hidden-mobile"><i class="fa fa-circle-arrow-up fa-lg"></i> Launch form modal</a>-->
        </div>
    </div>


    <!-- widget grid -->
    <section id="widget-grid" class="">


        <!-- START ROW -->

        <div class="row">

            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">


                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">

                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>

                        <h2 style="color:black;">Institution Account Creation.</h2>

                    </header>
                    <div>
                        <div class="widget-body" style="padding-top:10px; width:100%;">
                            @if (ViewBag.Error != null)
                            {
                                <p class="help-block">
                                    @ViewBag.Error
                                </p>
                            }
                            <table style="width:100%;">
                                <tr>
                                    <td colspan="1">
                                        @using (Html.BeginForm(null, null, FormMethod.Post, new { @class = "form-horizontal" }))
                                        {
                                            @Html.AntiForgeryToken()
                                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                            <div class="form-group">
                                                <label class="col-md-4 control-label" style="text-align:right">Institution Name:</label>
                                                <div class="col-md-4">
                                                    @Html.DropDownList("InstitutionId", ViewBag.inst as List<SelectListItem>, "--Select Institution Name--", new { @class = "select2 form-control padding-left-10 width:20px", style = "width:325px;max-width:325px ", required = "required" })
                                                    @Html.ValidationMessageFor(model => model.InstitutionId, "", new { @class = "text-danger" })
                                                </div>

                                            </div>
                                            <div class="form-group">
                                                <label class="col-md-4 control-label" style="text-align:right">Account Number:</label>
                                                <div class="col-md-4">
                                                    @Html.DropDownList("AccountNumber", ViewBag.AccountNumber as SelectList, "-- Select Account Number--", new { @class = "select2 form-control padding-left-10", style = "width:325px;max-width:325px " })
                                                    @Html.ValidationMessageFor(model => model.AccountNumber, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="col-md-4 control-label" style="text-align:right">Account Name:</label>
                                                <div class="col-md-8 inputGroupContainer">
                                                    <div class="input-group">
                                                        @Html.TextBoxFor(model => model.AccountName, new { @Class = "input", id = "AccountName", @ReadOnly = "Readonly", style = "width:325px; ", required = "required" })
                                                        @Html.ValidationMessageFor(model => model.AccountName, "", new { @class = "text-danger" })

                                                    </div>
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="col-md-4 control-label" style="text-align:right">Bank Name:</label>
                                                <div class="col-md-8 inputGroupContainer">
                                                    <div class="input-group">
                                                        @Html.TextBoxFor(model => model.BankName, new { @Class = "input", id = "BankName", style = "width:325px; ", required = "required", })
                                                        @Html.ValidationMessageFor(model => model.BankName, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="col-md-4 control-label" style="text-align:right">Currency:</label>
                                                <div class="col-md-8 inputGroupContainer">
                                                    <div class="input-group">
                                                        <input type="text" id="CurrencyId1" style="width:325px; " readonly Class="input" required="required" />
                                                        @Html.TextBoxFor(model => model.CurrencyId, new { @Class = "input", id = "CurrencyId", style = "width:325px; ", type = "hidden" })
                                                        @Html.ValidationMessageFor(model => model.CurrencyId, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="form-group">
                                                <label class="col-md-4 control-label" style="text-align:right">Account Type:</label>
                                                <div class="col-md-8 inputGroupContainer">
                                                    <div class="input-group">
                                                        @Html.DropDownList("AccountType", new List<SelectListItem>{
                                                               new SelectListItem{ Text="--Select Account Type--", Value = "" },
                                                               new SelectListItem{ Text="Expenditure", Value = "Expenditure" },
                                                               new SelectListItem{ Text="Revenue", Value = "Revenue" },
                                                               new SelectListItem{ Text="Deposit", Value = "Deposit" },
                                                               new SelectListItem{ Text="OwnSource", Value = "OwnSource" },
                                                               new SelectListItem{ Text="Unapplied", Value = "Unapplied" },
                                                               new SelectListItem{ Text="Bulk Payment", Value = "Bulk Payment" },
                                                               new SelectListItem{ Text="TSA", Value = "TSA" },
                                                               new SelectListItem{ Text="CF", Value = "CF" },

                                                             }, new { @class = "form-control", style = "width:325px;max-width:325px " })

                                                        @Html.ValidationMessageFor(model => model.AccountType, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="form-group">
                                                <label class="col-md-4 control-label" style="text-align:right">SubBudgetClass:</label>
                                                <div class="col-md-4">
                                                    @Html.DropDownList("SubBudgetClass", ViewBag.SubBudgetClassList as SelectList, "-- Select SubBudgetClass --", new { @class = "select2 form-control padding-left-10", style = "width:325px;max-width:325px " })
                                                    @Html.ValidationMessageFor(model => model.SubBudgetClass, "", new { @class = "text-danger" })
                                                </div>

                                                @*<div class="col-md-8 inputGroupContainer">
                                                                <div class="input-group">
                                                                    @Html.DropDownList("SubBudgetClass", ViewBag.SubBudgetClassList as SelectList, "", new { @Class = "input", style = "width:300px; ", required = "required" })
                                                                    @Html.ValidationMessageFor(model => model.SubBudgetClass, "", new { @class = "text-danger" })
                                                                </div>
                                                    </div>*@
                                            </div>


                                            <div class="form-group">
                                                <label class="col-md-4 control-label" style="text-align:right">Cash Account:</label>
                                                <div class="col-md-8 inputGroupContainer">
                                                    <div class="input-group">
                                                        @Html.TextBoxFor(model => model.GlAccount, new { @Class = "input", style = "width:325px; ", type = "hidden" })
                                                        @** @Html.ValidationMessageFor(model => model.GlAccount, "", new { @class = "text-danger" })*@
                                                        <a class="search-btn" onclick="SearchGl(1)" href="#" style="display:block;width:325px" id="GlAccount2">
                                                            <i class="fa fa-search search-icon"></i>
                                                            Search...
                                                        </a>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="col-md-4 control-label" style="text-align:right">Receiving GL Account:</label>
                                                <div class="col-md-8 inputGroupContainer">
                                                    <div class="input-group">
                                                        @Html.TextBoxFor(model => model.ReceivingGlAccount, new { @Class = "input", style = "width:325px; ", type = "hidden" })
                                                        <a class="search-btn" onclick="SearchGl(2)" href="#" style="display:block;width:325px" id="ReceivingGlAccount2">
                                                            <i class="fa fa-search search-icon"></i>
                                                            Search...
                                                        </a>
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="form-group" id="divAccount1">
                                                <label class="col-md-4 control-label" style="text-align:right">Sub TSA Account Number:</label>
                                                <div class="col-md-4">
                                                    @Html.DropDownList("SubTSAAccountNumber", ViewBag.SubTSAAccountNumber as SelectList, "", new { @class = "select2 form-control padding-left-10", style = "width:325px;max-width:325px ", required = "required" })
                                                    @Html.ValidationMessageFor(model => model.SubTSAAccountNumber, "", new { @class = "text-danger" })
                                                </div>
                                            </div>

                                            <div class="form-group" id="divAccount2">
                                                <label class="col-md-4 control-label" style="text-align:right">Sub TSA Cash Account:</label>
                                                <div class="col-md-8 inputGroupContainer">
                                                    <div class="input-group">
                                                        @Html.TextBoxFor(model => model.SubTSAGlAccount, new { @Class = "input", style = "width:325px; ", type = "hidden" })
                                                        <a class="search-btn" onclick="SearchGl(3)" href="#" style="display:block;width:300px" id="SubTSACashAccount">
                                                            <i class="fa fa-search search-icon"></i>
                                                            Search...
                                                        </a>
                                                    </div>
                                                </div>
                                            </div>


                                            <div class="form-group" id="divUnAccountNumber">
                                                <label class="col-md-4 control-label" style="text-align:right">Unnapplied Account Number:</label>
                                                <div class="col-md-4">
                                                    @Html.DropDownList("UnnappliedAccountNumber", ViewBag.UnnappliedAccountNumber as SelectList, "-- Select Account Number--", new { @class = "select2 form-control padding-left-10", style = "width:325px;max-width:325px " })
                                                    @Html.ValidationMessageFor(model => model.UnnappliedAccountNumber, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="form-group" id="divUnAccountName">
                                                <label class="col-md-4 control-label" style="text-align:right">Unnapplied Account Name:</label>
                                                <div class="col-md-8 inputGroupContainer">
                                                    <div class="input-group">
                                                        @Html.TextBoxFor(model => model.UnnappliedAccountName, new { @Class = "input", id = "UnnappliedAccountName", @ReadOnly = "Readonly", style = "width:325px; ", required = "required" })
                                                        @Html.ValidationMessageFor(model => model.UnnappliedAccountName, "", new { @class = "text-danger" })

                                                    </div>
                                                </div>
                                            </div>
                                            <div class="form-group" id="divUnBankName">
                                                <label class="col-md-4 control-label" style="text-align:right">Unnapplied Bank Name:</label>
                                                <div class="col-md-8 inputGroupContainer">
                                                    <div class="input-group">
                                                        @Html.TextBoxFor(model => model.UnnappliedBankName, new { @Class = "input", id = "UnnappliedBankName", @ReadOnly = "Readonly", style = "width:325px; ", required = "required", })
                                                        @Html.ValidationMessageFor(model => model.UnnappliedBankName, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>

                                            @*<div class="form-group" id="divUnSubSubBudgetClass">
                                                    <label class="col-md-4 control-label" style="text-align:right">Unnapplied SubBudgetClass:</label>
                                                    <div class="col-md-8 inputGroupContainer">
                                                        <div class="input-group">
                                                            @Html.TextBoxFor(model => model.UnnappliedSubBudgetClass, new { @Class = "input", id = "UnnappliedBankName", @ReadOnly = "Readonly", style = "width:325px; ", required = "required", })
                                                            @Html.ValidationMessageFor(model => model.UnnappliedSubBudgetClass, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                </div>*@

                                            <div class="form-actions">
                                                <div class="row">
                                                    <div class="col-md-6">
                                                        <a href='@Url.Action("AccountList", "InstitutionAccounts")' class="btn btn-info" style="   width:80px;border-radius:1px;color:black">
                                                            <i class="glyphicon glyphicon-arrow-left"></i>
                                                            Back
                                                        </a>
                                                        <button type="submit" class="btn action-btn btn btn-info" id="submit">
                                                            <i class="fa fa-save"></i>
                                                            <img src="~/Content/img/loading.gif" id="saveLoader" />
                                                            Save
                                                        </button>
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                    </td>
                                    <td colspan="1"></td>
                                </tr>
                            </table>

                        </div>

                    </div>
                </div>
            </article>
        </div>
    </section>
</div>
<!----------- Search GL Items ----------------->
<div class="modal fade" id="glItemsModal" style="left:4%">

    <div class="modal-dialog" style="width:80%;">
        <div class="modal-content panel-info">
            <div class="modal-header panel-heading">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h3 class="modal-title"> Search Gl Item</h3>
            </div>
            <div class="modal-body">
                <div>
                    <div class="row" style="padding-top:1%;padding-bottom:1%">
                        <div class="col-md-6">
                        </div>
                        <div class="col-md-6">
                            <div class="search-container submit-btn" style="float:right">
                                <i class="fa fa-search search-icon"></i>
                                <input type="search" name="search" placeholder="Search..." id="searchbox2">
                            </div>
                        </div>
                    </div>
                    <table id="dt_search_gl_item" class="table table-striped table-bordered table-hover table-condensed" width="100%">
                        <thead>
                            <tr>
                                <th>#</th>
                                <th>GLAccount String</th>
                                <th>GLAccount Description</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                    </table>

                </div>
                <div class="modal-footer">
                    @*<button type="submit" class="btn btn-info" id="btn_save_gl_items">
                            <i class="fa fa-save"></i>Save
                        </button>*@
                    <button class="btn btn-info" data-dismiss="modal">
                        <i class="fa  fa-times"></i>Cancel
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

@section pagespecific{

    <script>
        $('#divAccount1').toggle(false)
        $('#divAccount2').toggle(false)
        $('#divUnAccountNumber').toggle(false)
        $('#divUnAccountName').toggle(false)
        $('#divUnBankName').toggle(false)
       // $('#divUnSubSubBudgetClass').toggle(false)

        if ('@TempData["Success"]' == 'Success') {
            swal("Saved Successfully!", { icon: 'success' })
                 .then(Ok=> {
                     window.location.href = '@Url.Action("AccountList", "InstitutionAccounts")';
                 });
        } else if ('@TempData["Success"]' == 'revenuecountsu') {

            swal("This Account in this Institution already Created!!", { icon: 'warning' })

        } else if ('@TempData["Success"]' == 'counts') {

            swal("This Account in this Institution already Created!!", { icon: 'warning' })

        } else if ('@TempData["Success"]' == 'UnnappliedAcc') {

            swal("Unapplied Account is Required!", { icon: 'warning' })

        }else if ('@TempData["Success"]' == 'sbc') {

            swal("The Sub Budget Class Selected  is not equal with Sub Budget Class  in Cash GlAccount OR Receiving GL Account Selected", { icon: 'warning' })

        };


        $("form").submit(function () {
            $("#saveLoader").toggle(true);
            $('#submit').attr("disabled", true);
        });

        $("#saveLoader").toggle(false);
        $("#submit").prop('disabled', false);


        $("#InstitutionCode").val('@ViewBag.InstitutionCode[0].InstitutionCode' + "--" + '@ViewBag.InstitutionCode[0].InstitutionName');

        function getaccountdetails(accountNo) {
            var option = [];
            $.ajax({
                url: '@Url.Action("populateaccounts", "InstitutionAccounts")/?accountNo=' + accountNo + '',
                type: "GET",
                dataType: "json",
                success: function (data) {
                    $("#AccountName").val(data.AccountName);
                    $("#BankName").val(data.Bank);
                   // $("#AccountType").val(data.AccountTypeCode);
                    $("#CurrencyId1").val(data.CurrencyCode + " - " + data.CurrencyName);
                    $("#CurrencyId").val(data.CurrencyId);
                }
            })
        }


        $("#AccountNumber").change(function () {

            var accountNo = $(this).val();
            if (accountNo == "9921180001") {
                $('#divAccount1').toggle(true)
                $('#divAccount2').toggle(true)

                getaccountdetails(accountNo);

            } else {
                $('#divAccount1').toggle(false)
                $('#divAccount2').toggle(false)
                $("#SubTSAAccountNumber").val("")
                $("#SubTSAGlAccount").val("")

                getaccountdetails(accountNo);
            }


            });

        $(document).ready(function () {
            $("#GlAccount").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: "@Url.Action("GetGlAccounts", "InstitutionAccounts")",
                        type: "POST",
                        dataType: "json",
                        data: { Prefix: request.term },
                      success: function (data) {
                            response($.map(data, function (item) {
                                return { label: item.Text, value: item.value };
                            }))

                        }
                    })
                },
                messages: {
                    noResults: "",
                    results: function (count) {
                        return count + (count > 1 ? ' results' : ' result ') + ' found';
                    }
                }
            });
        })

        var dt_search_gl_item = $('#dt_search_gl_item').dataTable();
        $("#dt_search_gl_item_wrapper .dt-toolbar").remove();

        $("#searchbox2").on("keyup search input paste cut", function () {
            if (!this.value) {
                dt_search_gl_item.fnClearTable();
            } else {
                SearchGlAccount(this.value);
            }
        });

        var searchCode = 0;
        function SearchGl(code) {
            searchCode = code;
        $('#glItemsModal').modal('show');
        }

        var data = [];
        function SearchGlAccount(search){
            var url = '@Url.Action("GetGLAccount", "InstitutionAccounts")' + "/?institutionid=" + $("#InstitutionId").val() + "&&subBudgetClass=" + $('#SubBudgetClass').val() + '&&search='+search+'';

            $.ajax({
                type: "get",
                url: url,
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {
                    //=== UPDATE SEARCH GI TABLE ====
                    data = response.data;
                    dt_search_gl_item.fnClearTable();
                    for (var i = 0; i < data.length; i++) {
                        dt_search_gl_item.fnAddData([i,
                           data[i]["GlAccount"].split("|").join("-"),
                           data[i]["GlAccountDesc"],
                          '<a href="#" onclick="getcoa(' + i + ')"><i class="glyphicon glyphicon-plus-sign"></i></a>'
                        ]);
                    }
                },
                failure: function (error) {
                    swal(error);
                }
            });
        }

        function getcoa(rowId) {
            var data = dt_search_gl_item.DataTable().rows().data();
            var row = data[rowId];

            if (searchCode == 1) {
                $("#GlAccount2").html(row[1]);
                $("#GlAccount").val(row[1]);
            }
            if (searchCode == 2) {
                $("#ReceivingGlAccount2").html(row[1]);
                $("#ReceivingGlAccount").val(row[1]);
            }

            if (searchCode == 3) {
                $("#SubTSACashAccount").html(row[1]);
                $("#SubTSAGlAccount").val(row[1]);
            }
            $('#glItemsModal').modal('hide');
        }



        @*$("#InstitutionId").change(function () {
         var url = "@Url.Action("GetAccountListbyInstitution", "InstitutionAccounts")";
          var institutionid = $("#InstitutionId").val();
            $.ajax({
                type: "POST",
                url: url,
                data: { institutionid: institutionid },
                success: function (response) {
                    $("#AccountNumber").empty();
                    $("#AccountNumber").append(response);
                }
            });
        });*@



         $("#InstitutionId").change(function () {
         var url = "@Url.Action("", "InstitutionAccounts")";
          var institutionid = $("#InstitutionId").val();
             $.ajax({
                 url: '@Url.Action("GetAccountListbyInstitution", "InstitutionAccounts")/?institutionid=' + institutionid + '',
                type: "GET",
                 dataType: "json",
                 success: function (data) {
                    $("#AccountNumber").empty();
                    $("#AccountNumber").append(response);
                }
            });
        });



        $("#UnnappliedAccountNumber").change(function () {
            var accountNumber = $("#UnnappliedAccountNumber").val();;
            var option1 = [];
            $.ajax({
                url: '@Url.Action("populateaccounts", "InstitutionAccounts")/?accountNo=' + accountNumber + '',
                type: "GET",
                dataType: "json",
                success: function (data) {
                    $("#UnnappliedAccountName").val(data.AccountName);
                    $("#UnnappliedBankName").val(data.Bank);
                   // $("#divUnSubSubBudgetClass").val(data.AccountTypeCode);
                    //$("#CurrencyId1").val(data.CurrencyCode + " - " + data.CurrencyName);
                    //$("#CurrencyId").val(data.CurrencyId);
                }
            });
        });



        $("#AccountType").change(function () {
            var institutionid = $("#InstitutionId").val();
            var accountType = $("#AccountType").val();
            if (accountType == "CF" || accountType == "Revenue" || accountType == "Unapplied" || accountType == "OwnSource" ) {
                $('#divUnAccountNumber').toggle(false)
                $('#divUnAccountName').toggle(false)
                $('#divUnBankName').toggle(false)
                $("#UnnappliedAccountNumber").val("")
                $("#UnnappliedAccountName").val("")
                $("#UnnappliedBankName").val("")

            } else {
                $('#divUnAccountNumber').toggle(true)
                $('#divUnAccountName').toggle(true)
                $('#divUnBankName').toggle(true)
                getunnappliedaccountdetails(institutionid);
            }
        });


        function getunnappliedaccountdetails(institutionId) {

         var url = "@Url.Action("GetUnnappliedAccountListbyInstitution", "InstitutionAccounts")";

            $.ajax({
                type: "POST",
                url: url,
                data: { institutionid: institutionId },
                success: function (response) {
                    $("#UnnappliedAccountNumber").empty();
                    $("#UnnappliedAccountNumber").append(response);
                }
            });
        }

    </script>
}

