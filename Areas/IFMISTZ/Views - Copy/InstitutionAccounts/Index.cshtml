@model IEnumerable<IFMIS.Areas.IFMISTZ.Models.InstitutionAccount>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<section id="widget-grid" class="">


    <!-- START ROW -->

    <div class="row">

        <!-- NEW COL START -->
        <article class="col-sm-12 col-md-12 col-lg-12">

            <div class="jarviswidget col-sm-8" id="wid-id-0" data-widget-editbutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-collapsebutton="false" style="top:50px; width:100%;padding-left:10px;padding-right:10px;">


                <header>
                    <span class="widget-icon"> <i class="fa fa-table"></i> </span>

                    <h2 style="color:black;">Institution Account List</h2>

                </header>

                <div>
                    <a href='@Url.Action("Create", "InstitutionAccounts")' class="btn btn-info" style="width:100px;border-radius:1px;color:black">
                        <i class="fa fa-plus"></i>Add New
                    </a>
                    <div class="widget-body " style="padding-top:10px">
                        <table style="width:100%">
                            <tr>
                                <td colspan="1">

                                    <table id="dt_basic" class="table-condensed table-bordered table-hover" width="100%">
                                        <thead>
                                            <tr>
                                                <th>No</th>
                                                <th> Account Number</th>
                                                <th> Account Name</th>
                                                <th>Account type</th>
                                                 <th> BIC</th>
                                                <th>Bank Name</th>
                                                <th>Currency</th>
                                                <th>Institution Code</th>
                                                <th>Institution Name</th>
                                                <th style="width:100px">Action</th>
                                            </tr>
                                        </thead>
                                        @{ int i = 0;}
                                        <tbody>
                                            @foreach (var item in Model)
                                        {
                                                i++;
                                            <tr>
                            <td>@i</td>
                                <td>
                                   @Html.DisplayFor(modelItem => item.AccountNumber)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.AccountName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.AccountType)
                                </td>

                                <td>
                                    @Html.DisplayFor(modelItem => item.BIC)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.BankName)
                                </td>

                                <td>
                                    @Html.DisplayFor(modelItem => item.Currency)
                                </td>

                                <td>
                                    @Html.DisplayFor(modelItem => item.InstitutionCode)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.InstitutionName)
                                </td>

                    <td>
                        <div class="btn-group">
                            <button type="button" class="btn btn-info  btn-xs" style="width:50px;border-radius:1px;">Action</button>
                            <button type="button" class="btn btn-info btn-xs dropdown-toggle" data-toggle="dropdown" style="width:40px;border-radius:1px;" aria-haspopup="true" aria-expanded="false">
                                <span class="caret"></span>
                                <span class="sr-only">Toggle Dropdown</span>
                            </button>
                            <ul class="dropdown-menu">

                                <li>
                                    <a href="@Url.Action("Edit", "InstitutionAccounts",new {id=item.InstitutionAccountId })" class="btn-xs edit">
                                        <i class="fa fa-edit"></i>  Edit
                                    </a>
                                </li>
                                <li>
                                    <a href="@Url.Action("Details", "InstitutionAccounts",new {id=item.InstitutionAccountId })" class="btn-xs edit">
                                        <i class="fa fa-edit"></i>  Details
                                    </a>
                                </li>
                                @*<li>
                                        <a href="@Url.Action("Delete", "InstitutionAccounts",new {id=item.InstitutionAccountId })" class="btn-xs edit">
                                            <i class="fa fa-edit"></i>  Delete
                                        </a>
                                    </li>*@




                            </ul>
                        </div>
                    </td>
                </tr>
            }
                                        </tbody>
                                    </table>
                                </td>
                                <td colspan="1"></td>
                            </tr>
                        </table>
                    </div>
                </div>
            </div>
            </article>
        </div>
    </section>
@section pagespecific {
    <script type="text/javascript">

    // DO NOT REMOVE : GLOBAL FUNCTIONS!

    $(document).ready(function () {

   
        var responsiveHelper_dt_basic = undefined;
        var responsiveHelper_datatable_fixed_column = undefined;
        var responsiveHelper_datatable_col_reorder = undefined;
        var responsiveHelper_datatable_tabletools = undefined;

        var breakpointDefinition = {
            tablet: 1024,
            phone: 480
        };

        $('#dt_basic').dataTable({
            "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-12 hidden-xs'l>r>" +
                "t" +
                "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
            "autoWidth": true,
            "preDrawCallback": function () {
                // Initialize the responsive datatables helper once.
                if (!responsiveHelper_dt_basic) {
                    responsiveHelper_dt_basic = new ResponsiveDatatablesHelper($('#dt_basic'), breakpointDefinition);
                }
            },
            "rowCallback": function (nRow) {
                responsiveHelper_dt_basic.createExpandIcon(nRow);
            },
            "drawCallback": function (oSettings) {
                responsiveHelper_dt_basic.respond();
            }
        });

        /* END BASIC */

        /* COLUMN FILTER  */
        var otable = $('#datatable_fixed_column').DataTable({
            //"bFilter": false,
            //"bInfo": false,
            //"bLengthChange": false
            //"bAutoWidth": false,
            //"bPaginate": false,
            //"bStateSave": true // saves sort state using localStorage
            "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6 hidden-xs'f><'col-sm-6 col-xs-12 hidden-xs'<'toolbar'>>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
            "autoWidth": true,
            "preDrawCallback": function () {
                // Initialize the responsive datatables helper once.
                if (!responsiveHelper_datatable_fixed_column) {
                    responsiveHelper_datatable_fixed_column = new ResponsiveDatatablesHelper($('#datatable_fixed_column'), breakpointDefinition);
                }
            },
            "rowCallback": function (nRow) {
                responsiveHelper_datatable_fixed_column.createExpandIcon(nRow);
            },
            "drawCallback": function (oSettings) {
                responsiveHelper_datatable_fixed_column.respond();
            }

        });

        // custom toolbar
        $("div.toolbar").html('<div class="text-right"><img src="/Content/img/logo.png" alt="SmartAdmin" style="width: 111px; margin-top: 3px; margin-right: 10px;"></div>');

        // Apply the filter
        $("#datatable_fixed_column thead th input[type=text]").on('keyup change', function () {

            otable
                .column($(this).parent().index() + ':visible')
                .search(this.value)
                .draw();

        });
        /* END COLUMN FILTER */

        /* COLUMN SHOW - HIDE */
        $('#datatable_col_reorder').dataTable({
            "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'C>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
            "autoWidth": true,
            "preDrawCallback": function () {
                // Initialize the responsive datatables helper once.
                if (!responsiveHelper_datatable_col_reorder) {
                    responsiveHelper_datatable_col_reorder = new ResponsiveDatatablesHelper($('#datatable_col_reorder'), breakpointDefinition);
                }
            },
            "rowCallback": function (nRow) {
                responsiveHelper_datatable_col_reorder.createExpandIcon(nRow);
            },
            "drawCallback": function (oSettings) {
                responsiveHelper_datatable_col_reorder.respond();
            }
        });

        /* END COLUMN SHOW - HIDE */

        /* TABLETOOLS */
        $('#datatable_tabletools').dataTable({

            // Tabletools options:
            //   https://datatables.net/extensions/tabletools/button_options
            "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'T>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
            "oTableTools": {
                "aButtons": [
                "copy",
                "csv",
                "xls",
                   {
                       "sExtends": "pdf",
                       "sTitle": "SmartAdmin_PDF",
                       "sPdfMessage": "SmartAdmin PDF Export",
                       "sPdfSize": "letter"
                   },
                   {
                       "sExtends": "print",
                       "sMessage": "Generated by SmartAdmin <i>(press Esc to close)</i>"
                   }
                ],
                "sSwfPath": "/Scripts/plugin/datatables/swf/copy_csv_xls_pdf.swf"
            },
            "autoWidth": true,
            "preDrawCallback": function () {
                // Initialize the responsive datatables helper once.
                if (!responsiveHelper_datatable_tabletools) {
                    responsiveHelper_datatable_tabletools = new ResponsiveDatatablesHelper($('#datatable_tabletools'), breakpointDefinition);
                }
            },
            "rowCallback": function (nRow) {
                responsiveHelper_datatable_tabletools.createExpandIcon(nRow);
            },
            "drawCallback": function (oSettings) {
                responsiveHelper_datatable_tabletools.respond();
            }
        });

        /* END TABLETOOLS */

    })

    </script>
}