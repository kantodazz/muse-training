@model IFMIS.Areas.Coadmis.Models.MaterialityConfigVM
@{
    ViewBag.Title = "Create Materiality Configuration";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style type="text/css">
    .loadingImg {
        display: none;
    }

    body {
        margin-top: 40px;
    }

    .search-btn {
        border: 1px solid #ccc;
        border-radius: 4px;
        padding: 5px;
        padding-right: 10px;
    }

    .search-container {
        display: inline-flex;
        flex: 1 1 300px;
        position: relative;
        border: 1px solid #ccc;
        border-radius: 5px;
        overflow: hidden;
        padding-left: 10px;
    }

    .name-input-container {
        display: inline-flex;
        flex: 1 1 300px;
        position: relative;
        overflow: hidden;
    }

    .search-icon {
        padding: 0.5rem;
    }

    .search-button {
        background: #538AC5;
        border: 0;
        color: white;
        padding: 8px;
        border-radius: 0;
    }

    input[type=number] {
        padding: 8px;
        border: 1px solid #ccc;
        width: 205px;
    }

    input[type=text] {
        padding: 5px;
        border: 1px solid #ccc;
    }

    input[type=search] {
        padding: 4px;
        border: hidden;
        border-radius: 4px;
    }

    textarea {
        border: 1px solid #ccc;
    }

    select {
        padding: 8px;
        border: 1px solid #ccc;
        resize: vertical;
        width: 230px;
    }

    .action-btn {
        width: 100px;
        color: white;
    }

    .form-label {
        text-align: right;
    }

    td {
        padding: 5px;
    }

    .info-box {
        padding: 10px;
        background-color: #ECF3F8;
        text-align: center;
        border: 1px solid #ccc;
        border-radius: 5px;
    }

    #itemUL li {
        margin-left: -40px;
        border-bottom: 1px solid silver;
        height: 26px;
        padding-left: 5px;
        padding-top: 8px;
        cursor: pointer;
    }

    .redStar {
        color: red;
        font-size: 15px;
    }
</style>
<div id="content" style="margin: 5px; padding-top: 50px">
    <div class="row"></div>
    <!-- widget grid -->
    <section id="widget-grid" class="">
        <div class="row">
            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">

                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">

                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2> @ViewBag.Title</h2>
                    </header>

                    <div>
                        <div class="widget-body ">
                            <div class="row">
                                <div class="form-horizontal">
                                    <div class="col-xs-12">
                                        <div align="center">
                                            <img src="~/Media/Images/ajax_loader.gif" class="loadingImg" />
                                        </div>
                                        <div class="col-md-12">
                                            <div class="form-group">
                                                <label class="control-label col-md-2">Client Name<span class="redStar">*</span></label>
                                                <div class="col-md-3">
                                                    @if (ViewBag.ClientList != null)
                                                    {
                                                        @Html.DropDownListFor(model => model.ClientId, ViewBag.ClientList as SelectList, "Select Client Type", new { @class = "form-control select2" })
                                                        @Html.ValidationMessageFor(model => model.ClientId, "", new { @class = "text-danger" })

                                                    }
                                                    else
                                                    {
                                                        @Html.DropDownList("ClientId", null, "Select Cleint Name", new { @class = "form-control select2" })

                                                    }
                                                </div>
                                                <label class="control-label col-md-2">Materiality Approach<span class="redStar">*</span></label>
                                                <div class="col-md-3">
                                                    @if (ViewBag.ApproachList != null)
                                                    {
                                                        @Html.DropDownListFor(model => model.MaterialityApproach, ViewBag.ApproachList as SelectList, "Select Client Type", new { @class = "form-control select2" })
                                                        @Html.ValidationMessageFor(model => model.MaterialityApproach, "", new { @class = "text-danger" })

                                                    }
                                                    else
                                                    {
                                                        @Html.DropDownList("MaterialityApproach", null, "Select Approach Name", new { @class = "form-control select2" })

                                                    }


                                                    @*@Html.DropDownList("MaterialityApproach", new List<SelectListItem>{
                                                                            new SelectListItem{ Text="--Select Approach ---", Value = "" },
                                                                            new SelectListItem{ Text="Tabular Approach", Value = "Tabular Approach" },
                                                                            new SelectListItem{ Text="Benchmark Approach", Value = "Benchmark Approach" },
                                                                            }, new { @class = "form-control select2", @required = "required" })
                                                    @Html.ValidationMessageFor(model => model.MaterialityApproach, "", new { @class = "text-danger" })*@
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="control-label col-md-2">Method To Be Used<span class="redStar">*</span></label>

                                                <div class="col-md-3">
                                                    <select id="MaterialityMethod" name="MaterialityMethod" class="form-control select2" required="required">
                                                        <option>Select Method</option>
                                                    </select>
                                                </div>

                                                @Html.LabelFor(model => model.CalculatedValue, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-md-3">
                                                    @Html.EditorFor(model => model.CalculatedValue, new { htmlAttributes = new { @class = "form-control" } })
                                                    @Html.ValidationMessageFor(model => model.CalculatedValue, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-2"></div>
                                        <div class="col-md-3">
                                            <a href="@Url.Action("MaterialityConfifurationList", "MaterialityConfiguration")" style="margin-right:5px" type="submit" class="btn btn-info pull-left"><i class="glyphicon glyphicon-arrow-left"></i> Back  </a>
                                            <button type="submit" class="btn btn-info" id="saveMaterialityForm">
                                                <i class="fa fa-save"></i>Save
                                                <img src="~/Content/img/loading.gif" class="loadingImg" />
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </article>
        </div>
    </section>
</div>
@section pagespecific {
    <!-- PAGE RELATED PLUGIN(S) -->
    <script type="text/javascript">
        $(document).ajaxStart(function () {
            $(".loadingImg").show();

        });

        $("#MaterialityApproach").change(function () {
            debugger;
            var id = $(this).val();
            var approachName = $("#MaterialityApproach option:selected").text();
            if (id != "") {

               var option = [];
                $.ajax({
                    url: '@Url.Action("GetApproachMethod", "MaterialityConfiguration")/?approachName=' + approachName,
                    type: "GET",
                    dataType: "json",
                    success: function (data) {

                        console.log('select', data);
                        option.empty;
                        option.push('<option value="">Select Method </option>');
                        data.data.forEach(d => {
                            option.push('<option value=' + d["ApproachMethod"] + '>' + d["ApproachMethod"] + '</option>');
                        });
                        option = option.toString().replace(",", "").replace("[", "").replace("]", "");
                        $("#MaterialityMethod").html(option);
                    }
                });
                $(".loadingImg").toggle(false);
            }
        })

        $("#saveLoader").toggle(false);
        $("#saveMaterialityForm").click(function () {
            debugger;
            var clientId = $("#ClientId").val();
            var clientName = $("#ClientId option:selected").text();
            var materialityApproach = $("#MaterialityApproach option:selected").text();
            var materialityMethod = $("#MaterialityMethod option:selected").text();
            var calculatedValue = $("#CalculatedValue").val();

            if (clientId == '' || materialityApproach == '' || materialityMethod == '') {
                swal("Please Fill All the required Fields", {icon: "warning"});
                return false;
            }
            if (materialityApproach =="Benchmark Approach") {
                if (calculatedValue == '' || calculatedValue==null) {
                    swal("Calculated Value Is Required", { icon: "warning" });
                    return false;
                }
            }
            var formdata = new FormData();
            formdata.append("__RequestVerificationToken", $('[name=__RequestVerificationToken]').val());
            formdata.append("ClientId", clientId);
            formdata.append("ClientName", clientName);
            formdata.append("MaterialityApproach", materialityApproach);
            formdata.append("MaterialityMethod", materialityMethod);
            formdata.append("CalculatedValue", calculatedValue);

            for (const value of formdata.values()) {
                console.log(value);
            }

            var url = '@Url.Action("SaveMaterilaDataToSave", "MaterialityConfiguration")';
            var urlList = '@Url.Action("MaterialityConfifurationList", "MaterialityConfiguration")';
            $("#saveMaterialityForm").prop('disabled', true);
            $("#saveLoader").toggle(true);

            $.ajax({
                url: url,
                data: formdata,
                type: 'POST',
                contentType: false,
                processData: false,
                success: function (response) {
                    $("#saveMaterialityForm").prop('disabled', false);
                    $("#saveLoader").toggle(false);
                    if (response == "Success") {
                        swal("Saved Successfully!", { icon: "success" })
                            .then((value) => {
                                window.location.href = urlList;
                            });
                    } else if (response =="Duplicate") {
                        swal("Duplicate Record, Once per One Materiality Configuration!", { icon: "warning" })
                            .then((value) => {
                                window.location.reload();
                            });
                    }
                    else {
                        swal(response);
                    }
                },
                failure: function (error) {
                    $("#saveMaterialityForm").prop('disabled', false);
                    $("#saveLoader").toggle(false);
                    swal(error);
                }
            });
        })
    </script>
}

