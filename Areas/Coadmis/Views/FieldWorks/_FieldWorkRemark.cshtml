@model IFMIS.Areas.Coadmis.Models.RemarksVM

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "remarkForm", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
<div class="form-horizontal">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.ModuleLevel)
    @Html.HiddenFor(model => model.ModuleName)
    @Html.HiddenFor(model => model.OverallStatus)
    @Html.HiddenFor(model => model.OverallStatusDescription)
    @Html.HiddenFor(model => model.StepNo)
    @Html.HiddenFor(model => model.StepName)
    @Html.HiddenFor(model => model.Source)
    @Html.HiddenFor(model => model.DateOut)
    @Html.HiddenFor(model => model.Process)
    @if (Model.Process == false)
    {
        <div class="form-group">
            @Html.LabelFor(model => model.Destination, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">

                <select class="form-control select 2" id="Destination" name="Destination">
                    <option> Select Destination </option>
                    @foreach (var item in ViewBag.destinationusers)
                    {
                        <option value="@item.Value"> @item.Text </option>
                    }
                </select>

                @Html.ValidationMessageFor(model => model.Destination, "", new { @class = "text-danger" })
            </div>
        </div>
    }
    else
    {
        @Html.HiddenFor(model => model.Destination)
    }

    @if (Model.Process == true && Model.ModuleLevel == "Allocation")
    {
        @Html.HiddenFor(model => model.UserName)
        <div class="form-group">
            @Html.Label("Assign To", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">

                <select class="form-control select 2" id="UserId" name="UserId">
                    <option> Select Responsible Person  </option>
                    @foreach (var item in ViewBag.destinationusers)
                    {
                        <option value="@item.Value"> @item.Text </option>
                    }
                </select>
            </div>
        </div>
    }
<div class="form-group">
    @Html.LabelFor(model => model.AuditOpinionId, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-8">
        @Html.DropDownListFor(model => model.AuditOpinionId, ViewBag.AuditOpinion as SelectList, "Select Audit Option", new { @class = "form-control select2" })
        @Html.ValidationMessageFor(model => model.AuditOpinionId, "", new { @class = "text-danger" })
    </div>
</div>
    <div class="form-group">
        @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-8">
            @Html.TextAreaFor(model => model.Remarks, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
        </div>
    </div>
</div>
}
