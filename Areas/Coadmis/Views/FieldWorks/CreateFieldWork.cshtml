@model IFMIS.Areas.Coadmis.Models.FieldWorkSummaryVm
@{
    ViewBag.Title = "Field Work Entry";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style type="text/css">
    .loadingImg {
        display: none;
    }

    .stepwizard-step p {
        margin-top: 10px;
    }

    .stepwizard-row {
        display: table-row;
    }

    textarea {
        resize: none;
        width: 100%;
    }

    .stepwizard {
        display: table;
        width: 100%;
        position: relative;
    }

    .stepwizard-step button[disabled] {
        opacity: 1 !important;
        filter: alpha(opacity=100) !important;
    }

    .stepwizard-row:before {
        top: 14px;
        bottom: 0;
        position: absolute;
        content: " ";
        width: 100%;
        height: 1px;
        background-color: #ccc;
        z-order: 0;
    }

    .stepwizard-step {
        display: table-cell;
        text-align: center;
        position: relative;
    }

    .search-btn {
        border: 1px solid #ccc;
        border-radius: 4px;
        padding: 5px;
        padding-right: 10px;
    }

    .search-container {
        display: inline-flex;
        flex: 1 1 300px;
        position: relative;
        border: 1px solid #ccc;
        border-radius: 5px;
        overflow: hidden;
        padding-left: 10px;
    }

    .name-input-container {
        display: inline-flex;
        flex: 1 1 300px;
        position: relative;
        overflow: hidden;
    }

    .search-icon {
        padding: 0.5rem;
    }

    .search-button {
        background: #538AC5;
        border: 0;
        color: white;
        padding: 8px;
        border-radius: 0;
    }

    input[type=number] {
        padding: 8px;
        border: 1px solid #ccc;
        width: 205px;
    }

    input[type=text] {
        padding: 5px;
        border: 1px solid #ccc;
    }

    input[type=search] {
        padding: 4px;
        border: hidden;
        border-radius: 4px;
    }

    textarea {
        border: 1px solid #ccc;
    }

    select {
        padding: 8px;
        border: 1px solid #ccc;
        resize: vertical;
        width: 230px;
    }

    .action-btn {
        width: 100px;
        color: white;
    }

    .form-label {
        text-align: right;
    }

    td {
        padding: 5px;
    }

    .info-box {
        padding: 10px;
        background-color: #ECF3F8;
        text-align: center;
        border: 1px solid #ccc;
        border-radius: 5px;
    }

    #itemUL li {
        margin-left: -40px;
        border-bottom: 1px solid silver;
        height: 26px;
        padding-left: 5px;
        padding-top: 8px;
        cursor: pointer;
    }

    .redStar {
        color: red;
        font-size: 15px;
    }
</style>
<div id="content" style="margin: 5px;">
    <div id="divLoader"></div>
    <div class="row"></div>
    <!-- widget grid -->
    <section id="widget-grid" class="">
        <div class="row">
            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">

                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">

                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2> @ViewBag.Title</h2>
                    </header>

                    <div>
                        @if (Model.FieldWorkSummaryId != 0)
                        {
                            <table width="100%">
                                <tr class="alert alert-block alert-info">
                                    <td colspan="9" style="font-weight:bold"> Client Name : @Model.ClientName <br /> </td>
                                
                                    <td colspan="9" style="font-weight:bold"> Engagement Name : @Model.EngagementName <br /> </td>
                                
                                    <td colspan="9" style="font-weight:bold"> Auditable Area : @Model.AuditableArea <br /> </td>
                                </tr>
                            </table>
                        }
                        <div class="widget-body " style="padding-top:10px;width:100%">
                            <!----WIZARD HEADING -->
                            <div class="stepwizard">
                                <div class="stepwizard-row setup-panel">
                                    <div class="stepwizard-step">
                                        <a href="#step-1" type="button" class="btn btn-primary btn-circle">1</a>
                                        <p><strong> Auditable Area  </strong></p>
                                    </div>

                                    <div class="stepwizard-step">
                                        <a href="#step-2" type="button" class="btn btn-default btn-circle">2</a>
                                        <p><strong>Audit Program</strong></p>
                                    </div>

                                    <div class="stepwizard-step">
                                        <a href="#step-3" type="button" class="btn btn-default btn-circle">3</a>
                                        <p><strong> Lead Schedule </strong></p>
                                    </div>
                                    <div class="stepwizard-step">
                                        <a href="#step-4" type="button" class="btn btn-default btn-circle">4</a>
                                        <p><strong>Summary of Findings </strong></p>
                                    </div>
                                    <div class="stepwizard-step">
                                        <a href="#step-5" type="button" class="btn btn-default btn-circle">5</a>
                                        <p><strong> Attachments </strong></p>
                                    </div>
                                </div>
                            </div>
                            <br />
                            @*--------------------BEGINNING OF STEP ONE-------------------------*@
                            <div class="form-horizontal">
                                <div class="row setup-content" id="step-1">
                                    <div class="col-xs-12">
                                        <div class="col-md-12">
                                            @Html.AntiForgeryToken()
                                            <div class="form-horizontal">
                                                <div class="col-xs-12">
                                                    @Html.HiddenFor(model => model.FieldWorkSummaryId)
                                                    @Html.HiddenFor(model => model.AuditableAreaId)
                                                    @Html.HiddenFor(model => model.ClientId)
                                                    @Html.HiddenFor(model => model.EngagementId)
                                                    @Html.HiddenFor(model => model.Status)
                                                    @Html.HiddenFor(model => model.StatusDescription)
                                                    @Html.HiddenFor(model => model.EngagementRefNo)
                                                    <hr />
                                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                                    @if (Model.FieldWorkSummaryId != 0)
                                                    {
                                                        <div class="form-group">
                                                            @Html.Label("Assigned AuditableArea", htmlAttributes: new { @class = "control-label col-md-2" })
                                                            <div class="col-md-8">
                                                                @Html.DropDownListFor(model => model.EngagementId, Model.AuditPrograms, "Select Engagement", new { @class = "form-control select2" })

                                                                @*<select class="form-control select2" id="assignedEngagementId">
                                                                        <option value=""> Select Auditable Area </option>
                                                                        @foreach (var item in Model.AuditPrograms)
                                                                        {
                                                                            <option value="@item.Value">@item.Text</option>

                                                                        }
                                                                    </select>*@
                                                                @Html.ValidationMessageFor(model => model.AuditPrograms, "", new { @class = "text-danger" })
                                                            </div>
                                                        </div>

                                                        <div class="form-group">
                                                            @Html.LabelFor(model => model.AuditableArea, htmlAttributes: new { @class = "control-label col-md-2" })
                                                            <div class="col-md-8">
                                                                @Html.EditorFor(model => model.AuditableArea, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                                                @*@Html.HiddeNF(model => model.ClientName, new { htmlAttributes = new { @class = "form-control",@readonly="readonly" } })*@
                                                                @Html.ValidationMessageFor(model => model.AuditableArea, "", new { @class = "text-danger" })
                                                            </div>
                                                        </div>
                                                        <div class="form-group">
                                                            @Html.LabelFor(model => model.ClientName, htmlAttributes: new { @class = "control-label col-md-2" })
                                                            <div class="col-md-8">
                                                                @Html.EditorFor(model => model.ClientName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                                                @*@Html.HiddeNF(model => model.ClientName, new { htmlAttributes = new { @class = "form-control",@readonly="readonly" } })*@
                                                                @Html.ValidationMessageFor(model => model.ClientName, "", new { @class = "text-danger" })
                                                            </div>
                                                        </div>

                                                        <div class="form-group">
                                                            @Html.LabelFor(model => model.FinancialYear, htmlAttributes: new { @class = "control-label col-md-2" })
                                                            <div class="col-md-3">
                                                                @Html.EditorFor(model => model.FinancialYear, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                                                @*@Html.HiddeNF(model => model.ClientName, new { htmlAttributes = new { @class = "form-control",@readonly="readonly" } })*@
                                                                @Html.ValidationMessageFor(model => model.FinancialYear, "", new { @class = "text-danger" })
                                                            </div>

                                                            @Html.LabelFor(model => model.EngagementName, htmlAttributes: new { @class = "control-label col-md-2" })
                                                            <div class="col-md-3">
                                                                @Html.EditorFor(model => model.EngagementName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                                                @Html.ValidationMessageFor(model => model.EngagementName, "", new { @class = "text-danger" })
                                                            </div>
                                                        </div>
                                                        <div class="form-group">
                                                            <div class="col-md-2"></div>
                                                            <div class="col-md-6">
                                                                <a href="@Url.Action("PendingFieldWork", "FieldWorks")" style="margin-right:5px" type="submit" class="btn btn-info pull-left"><i class="glyphicon glyphicon-arrow-left"></i> Back  </a>
                                                                <button type="button" class="btn btn-info" id="saveBtn">
                                                                    <i class="fa fa-save"></i>Save
                                                                    <img src="~/Content/img/loading.gif" class="loadingImg" />
                                                                </button>
                                                                <button class="btn btn-info nextBtn" type="button">Next &nbsp;<span class="glyphicon glyphicon-arrow-right" aria-hidden="true"></span></button>
                                                            </div>
                                                        </div>
                                                    }
                                                    else
                                                    {
                                                        <div class="form-group">
                                                            @Html.Label("Assigned AuditableArea", htmlAttributes: new { @class = "control-label col-md-2" })
                                                            <div class="col-md-8">
                                                                @*@Html.DropDownListFor(model => model.EngagementId, Model.AuditPrograms, "Select Engagement", new { @class = "form-control select2" })*@

                                                                <select class="form-control select2" id="assignedEngagementId">
                                                                    <option value=""> Select Auditable Area </option>
                                                                    @foreach (var item in Model.AuditPrograms)
                                                                    {
                                                                        <option value="@item.Value">@item.Text</option>

                                                                    }
                                                                </select>
                                                                @Html.ValidationMessageFor(model => model.AuditPrograms, "", new { @class = "text-danger" })
                                                            </div>
                                                        </div>

                                                        <div class="form-group">
                                                            @Html.LabelFor(model => model.AuditableArea, htmlAttributes: new { @class = "control-label col-md-2" })
                                                            <div class="col-md-8">
                                                                @Html.EditorFor(model => model.AuditableArea, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                                                @*@Html.HiddeNF(model => model.ClientName, new { htmlAttributes = new { @class = "form-control",@readonly="readonly" } })*@
                                                                @Html.ValidationMessageFor(model => model.AuditableArea, "", new { @class = "text-danger" })
                                                            </div>

                                                        </div>
                                                        <div class="form-group">
                                                            @Html.LabelFor(model => model.ClientName, htmlAttributes: new { @class = "control-label col-md-2" })
                                                            <div class="col-md-8">
                                                                @Html.EditorFor(model => model.ClientName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                                                @*@Html.HiddeNF(model => model.ClientName, new { htmlAttributes = new { @class = "form-control",@readonly="readonly" } })*@
                                                                @Html.ValidationMessageFor(model => model.ClientName, "", new { @class = "text-danger" })
                                                            </div>

                                                        </div>

                                                        <div class="form-group">
                                                            @Html.LabelFor(model => model.FinancialYear, htmlAttributes: new { @class = "control-label col-md-2" })
                                                            <div class="col-md-3">
                                                                @Html.EditorFor(model => model.FinancialYear, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                                                @*@Html.HiddeNF(model => model.ClientName, new { htmlAttributes = new { @class = "form-control",@readonly="readonly" } })*@
                                                                @Html.ValidationMessageFor(model => model.FinancialYear, "", new { @class = "text-danger" })
                                                            </div>

                                                            @Html.LabelFor(model => model.EngagementName, htmlAttributes: new { @class = "control-label col-md-2" })
                                                            <div class="col-md-3">
                                                                @Html.EditorFor(model => model.EngagementName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                                                @Html.ValidationMessageFor(model => model.EngagementName, "", new { @class = "text-danger" })
                                                            </div>
                                                        </div>
                                                        <div class="form-group">
                                                            <div class="col-md-2"></div>
                                                            <div class="col-md-6">
                                                                <a href="@Url.Action("PendingFieldWork", "FieldWorks")" style="margin-right:5px" type="submit" class="btn btn-info pull-left"><i class="glyphicon glyphicon-arrow-left"></i> Back  </a>
                                                                <button type="button" class="btn btn-info" id="saveBtn">
                                                                    <i class="fa fa-save"></i>Save
                                                                    <img src="~/Content/img/loading.gif" class="loadingImg" />
                                                                </button>
                                                                <button class="btn btn-info nextBtn" type="button">Next &nbsp;<span class="glyphicon glyphicon-arrow-right" aria-hidden="true"></span></button>
                                                            </div>
                                                        </div>
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            @*--------------------END OF STEP ONE--------------------*@
                            @*--------------------BEGINNING OF STEP TWO---------------*@
                            <div class="row setup-content" id="step-2">
                                <div class="form-horizontal">
                                    <div class="col-xs-12">
                                        <div class="col-md-12">

                                            @if (Model.FieldWorkSummaryId != 0)
                                            {


                                                <table class="table table-condensed table-striped table-bordered">
                                                    <thead style="display: table-header-group;">

                                                        <tr style="text-align:center;font-weight:bold;height:20px" bgcolor="lightgrey">
                                                            <td id="natd" style="width:15%"> Auditable Area   </td>
                                                            <td id="fungutd" style="width:5%"> No </td>
                                                            <td id="fungutd" style="width:32%"> Procedures </td>
                                                            <td id="amounttd" style="width:12%"> Test Required </td>
                                                            <td id="amounttdp" style="width:12%"> Result Satisfactory </td>
                                                            <td id="amounttdp" style="width:32%"> Comments </td>

                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        @foreach (var group1 in ((IEnumerable<IFMIS.Areas.Coadmis.Models.AuditableAreaProgram>)ViewBag.AuditableAreaProgram).GroupBy(a => a.Title))
                                                        {
                                                            <tr bgcolor="lightgrey"> <td colspan="6" style="font-weight:bold;width:600px"> @group1.Key </td> </tr>

                                                            foreach (var group in group1)
                                                            {
                                                                <tr>
                                                                    <td>

                                                                        @group.AuditableAreaName
                                                                    </td>
                                                                    <td style="text-align:center"> @group.No </td>
                                                                    <td> @group.ProcedureName  </td>
                                                                    <td>
                                                                        <select class="form-control" id="testrequired-@group.AuditableAreaProgramId"
                                                                                onchange="amountChanged('testrequired',@group.AuditableAreaProgramId)">
                                                                            <option> Select One </option>
                                                                            <option value="Yes"> Yes </option>
                                                                            <option value="No"> No </option>
                                                                        </select>
                                                                    </td>
                                                                    <td>
                                                                        <select class="form-control" id="resultsat-@group.AuditableAreaProgramId"
                                                                                onchange="amountChanged('resultsat',@group.AuditableAreaProgramId)">
                                                                            <option> Select One </option>
                                                                            <option value="Yes"> Yes </option>
                                                                            <option value="No"> No </option>
                                                                        </select>
                                                                    </td>

                                                                    <td>
                                                                        <span>
                                                                            <input type="text" class="form-control" id="comments-@group.AuditableAreaProgramId" onchange="amountChanged('comments',@group.AuditableAreaProgramId)" autocomplete="off" />
                                                                        </span>
                                                                    </td>

                                                                </tr>
                                                            }


                                                        }
                                                    </tbody>

                                                </table>
                                                <div class="form-group">
                                                    <div class="col-md-2"></div>
                                                    <div class="col-md-6">
                                                        <a href="@Url.Action("PendingFieldWork", "FieldWorks")" style="margin-right:5px" type="submit" class="btn btn-info pull-left"><i class="glyphicon glyphicon-arrow-left"></i> Back  </a>
                                                        <button class="btn btn-info prevBtn" type="button">Previous &nbsp;<span class="glyphicon glyphicon-arrow-left" aria-hidden="true"></span></button>
                                                        <button type="button" class="btn btn-info" id="btnSaveAuditProgram">
                                                            <i class="fa fa-save"></i>Save
                                                            <img src="~/Content/img/loading.gif" class="loadingImg" />
                                                        </button>
                                                        <button class="btn btn-info nextBtn" type="button">Next &nbsp;<span class="glyphicon glyphicon-arrow-right" aria-hidden="true"></span></button>
                                                    </div>
                                                </div>

                                                <br />
                                                <br />
                                                <table class="table" id="dt_programs">
                                                    <thead>
                                                        <tr>
                                                            <th>#</th>
                                                            <th> Title </th>
                                                            <th> Program Procedure </th>
                                                            <th> Test Required </th>
                                                            <th> Result Satisfactory </th>
                                                            <th> Remark </th>
                                                            <th>Action</th>
                                                        </tr>
                                                    </thead>
                                                </table>

                                                <br />

                                            }
                                            else
                                            {
                                                <div class="row">
                                                    <br />
                                                    <div class="alert alert-block alert-info" style="font-weight:bold;font-size:1.2em">

                                                        <center><span class="glyphicon glyphicon-info-sign"></span> Audit Program Not Available, Please Add Auditable Area to Proceed.. </center>
                                                    </div>

                                                </div>
                                            }


                                        </div>
                                    </div>
                                </div>
                            </div>

                        </div>
                        @*---------------------BEGINNING OF STEP THREE--------------------------*@
                        <div class="row setup-content" id="step-3">
                            <div class="form-horizontal">
                                <div class="col-xs-12">
                                    <div class="col-md-12">
                                        @if (Model.FieldWorkSummaryId != 0)
                                        {
                                            <table id="dt_search_gl_item" class="table table-striped table-bordered table-hover table-condensed" width="100%">
                                                <thead>
                                                   
                                                    <tr>
                                                        <th>
                                                            #
                                                        </th>
                                                        <th>
                                                            Auditable Item
                                                        </th>

                                                        <th>
                                                            Previous Amount
                                                        </th>
                                                        <th>
                                                            Current Amount
                                                        </th>
                                                        <th> AdjustMent </th>
                                                        <th>
                                                            Adjust Current Amount
                                                        </th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @{
                                                        int i = 0;
                                                        foreach (var item in ((IEnumerable<IFMIS.Areas.Coadmis.Models.AuditableAreaSchedule>)ViewBag.schedule))
                                                        {
                                                            i++;
                                                                                                        <tr>
                                                                                                            <td> @i </td>
                                                                                                            <td> @item.AuditableAreaItem </td>
                                                                                                            <td> @string.Format("{0:#,0.00}", @item.PreviousAmount) </td>
                                                                                                            <td> @string.Format("{0:#,0.00}", @item.CurrentAmount) </td>
                                                                                                            <td>
                                                                                                                <select class="form-control" id="adjust-@item.AuditableAreaScheduleId"
                                                                                                                        onchange="amountChangedSchedule('adjust',@item.AuditableAreaScheduleId)">
                                                                                                                    <option> Select One </option>
                                                                                                                    <option value="Add"> Add </option>
                                                                                                                    <option value="Less"> Less </option>
                                                                                                                </select>
                                                                                                            </td>
                                                                                                            <td>
                                                                                                                <span><input type="text" class="input-type-no" id="adjustAmount-@item.AuditableAreaScheduleId" onchange="amountChangedSchedule('adjustAmount',@item.AuditableAreaScheduleId)" name="AdjustedAmout" autocomplete="off" /></span>
                                                                                                            </td>
                                                                                                        </tr>

                                                        }
                                                    }
                                                </tbody>

                                            </table>
                                            <br />
                                            <div class="form-group">
                                                <div class="col-md-2"></div>
                                                <div class="col-md-6">
                                                    <a href="@Url.Action("PendingFieldWork", "FieldWorks")" style="margin-right:5px" type="submit" class="btn btn-info pull-left"><i class="glyphicon glyphicon-arrow-left"></i> Back  </a>
                                                    <button class="btn btn-info prevBtn" type="button">Previous &nbsp;<span class="glyphicon glyphicon-arrow-left" aria-hidden="true"></span></button>
                                                    @*<button type="submit" class="btn btn-info" onclick="saveAuditableAreaForm()" id="saveAuditableAreaBtn">
                                                            <i class="fa fa-save"></i>Save
                                                            <img src="~/Content/img/loading.gif" class="loadingImg" />
                                                        </button>*@
                                                    <div class="name-input-container">
                                                        <a class="btn btn-info" href="#" id="btnSaveSchedules">
                                                            <i class="glyphicon glyphicon-floppy-save"></i> Save
                                                        </a>
                                                    </div>
                                                    <button class="btn btn-info nextBtn" type="button">Next &nbsp;<span class="glyphicon glyphicon-arrow-right" aria-hidden="true"></span></button>
                                                </div>
                                            </div>

                                            <table class="table" id="dt_schedules">
                                                <thead>
                                                    <tr>
                                                        <th>#</th>
                                                        <th> Auditable Item </th>
                                                        <th> Previous Amount </th>
                                                        <th> Current Amount </th>
                                                        <th> Adjustment </th>
                                                        <th> Adjusted Amount </th>
                                                        <th> Final Amount </th>
                                                        <th>Action</th>
                                                        @*<th></th>*@
                                                    </tr>
                                                </thead>
                                            </table>

                                            <br />

                                        }
                                        else
                                        {
                                            <div class="row">
                                                <br />
                                                <div class="alert alert-block alert-info" style="font-weight:bold;font-size:1.2em">

                                                    <center><span class="glyphicon glyphicon-info-sign"></span> Lead Schedule Not Available, Please Add Auditable Area to Proceed.. </center>
                                                </div>

                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                        @*------------------------------END OF STEP THREE-----------------------------*@
                        @*------------------------------BEGINNING OF STEP FOUR------------------------*@
                        <div class="row setup-content" id="step-4">
                            <div class="form-horizontal">
                                <div class="col-xs-12">
                                    <div class="col-md-12">
                                        @if (Model.FieldWorkSummaryId != 0)
                                        {
                                            <div class="form-horizontal">
                                                <hr />
                                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                                <div class="form-group">
                                                    @Html.Label("Finding Nature", htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-3">
                                                        @Html.DropDownList("FindingNature", Model.FindingNature, "Select Finding Nature", new { @class = "form-control" })
                                                    </div>
                                                    @Html.Label("Is Material ?", htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-3">
                                                        <select class="form-control select2" id="ismaterial">
                                                            <option> Select One </option>
                                                            <option value="Yes"> Yes </option>
                                                            <option value="No"> No </option>
                                                        </select>
                                                    </div>
                                                </div>

                                                <div class="form-group" id="basisOptions">
                                                    @Html.Label("Finding Category", htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-3">
                                                        <select class="form-control select2" id="findingCategory">
                                                            <option> Select Category </option>
                                                        </select>
                                                    </div>
                                                    @Html.Label("Opinion Basis", htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-3">
                                                        <select class="form-control select2" id="opinionBasis">
                                                            <option> Select Opinion </option>
                                                        </select>
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    @Html.Label("Finding Name", htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-8">
                                                        @*<textarea id="FindingName" name="FindingName"> </textarea>*@
                                                        <input type="text" class="form-control" name="FindingName" id="FindingName" />
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    @Html.Label("Finding Description", htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-8">
                                                        <textarea id="FindingNameDescription" name="FindingNameDescription" class="form-control"> </textarea>
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    @Html.Label("Condition", htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-8">
                                                        <textarea id="Condition" name="Condition" class="form-control"> </textarea>
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    @Html.Label("Criteria", htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-8">
                                                        <textarea id="Criteria" name="Criteria" class="form-control"> </textarea>
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    @Html.Label("Causes", htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-8">
                                                        <textarea id="Causes" name="Causes" class="form-control"> </textarea>
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    @Html.Label("Implications (Consequence)", htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-8">
                                                        <textarea id="Implication" name="Implication" class="form-control"> </textarea>
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    @Html.Label("Recommendation", htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-8">
                                                        <textarea id="Recommendation" name="Recommendation" class="form-control"> </textarea>
                                                    </div>
                                                </div>


                                                <div class="form-group">
                                                    <label class="col-md-2 control-label" style="font-weight:normal;text-align:right">

                                                        <i class="fa fa-asterisk" style="color:white;width:5px;height:5px" id="errorProjectDesc"></i>
                                                    </label>
                                                    <div class="col-md-8">
                                                        <a class="btn btn-info" href="#" onclick="addFinding()">
                                                            <i class="glyphicon glyphicon-plus"></i> Add Finding
                                                        </a>
                                                    </div>

                                                </div>
                                                <br />



                                                <table class="table" id="dt_findings">
                                                    <thead>
                                                        <tr>
                                                            <th>#</th>
                                                            <th> Finding Name </th>
                                                            <th> Criteria </th>
                                                            <th> Condition </th>
                                                            <th> Implications </th>
                                                            <th> Causes </th>
                                                            <th> Recommendation </th>
                                                            <th>Action</th>
                                                            <th></th>
                                                        </tr>
                                                    </thead>
                                                </table>

                                                <br />

                                                <div class="form-group">
                                                    <div class="col-md-2"></div>
                                                    <div class="col-md-6">
                                                        <a href="@Url.Action("PendingFieldWork", "FieldWorks")" style="margin-right:5px" type="submit" class="btn btn-info pull-left"><i class="glyphicon glyphicon-arrow-left"></i> Back  </a>
                                                        <button class="btn btn-info prevBtn" type="button">Previous &nbsp;<span class="glyphicon glyphicon-arrow-left" aria-hidden="true"></span></button>
                                                        @*<button type="submit" class="btn btn-info" onclick="saveAuditableAreaForm()" id="saveAuditableAreaBtn">
                                                                <i class="fa fa-save"></i>Save
                                                                <img src="~/Content/img/loading.gif" class="loadingImg" />
                                                            </button>*@
                                                        <button class="btn btn-info nextBtn" type="button">Next &nbsp;<span class="glyphicon glyphicon-arrow-right" aria-hidden="true"></span></button>
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                        else
                                        {
                                            <div class="row">
                                                <br />
                                                <div class="alert alert-block alert-info" style="font-weight:bold;font-size:1.2em">

                                                    <center><span class="glyphicon glyphicon-info-sign"></span> Please Add Auditable Area to Proceed to Summary of Findings </center>
                                                </div>

                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                        @*------------------------------------END OF STEP FOUR---------------------------------------*@
                        @*------------------------------BEGINNING OF STEP FIVE------------------------*@
                        <div class="row setup-content" id="step-5">
                            <div class="form-horizontal">
                                <div class="col-xs-12">
                                    <div class="col-md-12">

                                        @if (Model.FieldWorkSummaryId != 0)
                                        {
                                            <div class="form-horizontal">
                                                <hr />
                                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                                <div class="form-group">
                                                    @Html.Label("Attachment Name", htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-2">
                                                        <input type="text" class="form-control" id="AttachmentName" style="width:300px" />
                                                    </div>
                                                    @Html.Label("File", htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-3">
                                                        <input type="file" class="form-control" autocomplete="off" name="FileName" id="FileName" accept=".pdf" style="width:250px" />
                                                    </div>
                                                    <div class="col-md-3">
                                                        <div class="name-input-container">
                                                            <a class="btn btn-info" href="#" onclick="addAttachments()">
                                                                <i class="glyphicon glyphicon-plus"></i>Add
                                                            </a>
                                                        </div>
                                                    </div>
                                                </div>

                                            </div>

                                            <table class="table" id="dt_attachments">
                                                <thead>
                                                    <tr>
                                                        <th>#</th>
                                                        <th>Attachment Name</th>
                                                        <th>File Name</th>
                                                        <th>Action</th>
                                                    </tr>
                                                </thead>
                                            </table>

                                            <br /> <br />
                                            <div class="form-group">
                                                <div class="col-md-2"></div>
                                                <div class="col-md-6">
                                                    <a href="@Url.Action("PendingFieldWork", "FieldWorks")" style="margin-right:5px" type="submit" class="btn btn-info pull-left"><i class="glyphicon glyphicon-arrow-left"></i> Finish  </a>
                                                    @*<button class="btn btn-info prevBtn" type="button">Previous &nbsp;<span class="glyphicon glyphicon-arrow-left" aria-hidden="true"></span></button>*@
                                                    @*<button type="submit" class="btn btn-info" onclick="saveAuditableAreaForm()" id="saveAuditableAreaBtn">
                                                            <i class="fa fa-save"></i>Save
                                                            <img src="~/Content/img/loading.gif" class="loadingImg" />
                                                        </button>*@
                                                </div>
                                            </div>
                                        }
                                        else
                                        {
                                            <div class="row">
                                                <br />
                                                <div class="alert alert-block alert-info" style="font-weight:bold;font-size:1.2em">

                                                    <center><span class="glyphicon glyphicon-info-sign"></span> Please Add Auditable Area before Uploading Attachment(s) </center>
                                                </div>

                                            </div>
                                        }


                                    </div>
                                </div>
                            </div>
                        </div>
                        @*------------------------------------END OF STEP FIVE---------------------------------------*@
                    </div>
                </div>

            </article>

        </div>
    </section>
</div>

<!-- Start of modal -->
<div id="modal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="lblmodal">
    <div class="modal-dialog" style="width: 70%">
        <div class="modal-content">
            <div class="modal-header alert alert-info" style="font:bold 16px Trebuchet MS, Lucida Sans Unicode, Lucida Grande, Lucida Sans, Arial, sans-serif">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title"> Modify Finding </h4>
            </div>
            <div id="modal-body" class="modal-body"></div>
            <div class="modal-footer">
            </div>
        </div>
    </div>
</div>


<div class="modal fade" id="slipModal" style="left:4%">

    <div class="modal-dialog" style="width:80%;">
        <div class="modal-content panel-info">
            <div class="modal-header panel-heading">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h3 class="modal-title"> Attachment Preview  </h3>
            </div>
            <div class="modal-body">
                <div>
                    <div class="widget-body" id="transferSlip_body" style="height:auto">

                        <div id="detailID"><iframe height="700" id="slipImage" width="100%" src=""></iframe></div>

                    </div>
                </div>

                <div class="modal-footer">
                    @*<button class="btn btn-info btn-150" data-dismiss="modal" style="width:100px;" onclick="accept('x')">
                            <i class="fa fa-check"></i>Accept
                        </button>
                        <button class="btn btn-info btn-150" data-dismiss="modal" style="width:100px;" onclick="reject('x')">
                            <i class="fa  fa-times-circle"></i> Reject
                        </button>*@<button class="btn btn-info btn-150" data-dismiss="modal" style="width:100px;" onclick="accept('x')">
                        <i class="fa fa-check"></i>
                    </button>
                    <button class="btn btn-info btn-150" data-dismiss="modal" style="width:100px;" onclick="reject('x')">
                        <i class="fa  fa-times-circle"></i>
                    </button><button class="btn btn-info btn-150" data-dismiss="modal" style="width:100px;" onclick="accept('x')">
                        <i class="fa fa-check"></i>
                    </button>
                    <button class="btn btn-info btn-150" data-dismiss="modal" style="width:100px;" onclick="reject('x')">
                        <i class="fa  fa-times-circle"></i>
                    </button>
                    <button class="btn btn-info btn-150" id="btncancel" data-dismiss="modal" style="width:100px;">
                        <i class="fa fa-times"></i> Close
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>




<!-- End of modal -->


@section pagespecific {
    <!-- PAGE RELATED PLUGIN(S) -->
    <script type="text/javascript">

        $(function () {
            $(".input-type-no").autoNumeric("init");
        });

        //SHOW LOADER ICON
        $(document).ajaxStart(function () {
            $(".loadingImg").show();

            var fieldWorkId = getUrlVars()["fieldWorkId"];
            var urlvalue = getUrlVars()["modified"];
            if (urlvalue == "Success") {
                  swal("Finding Successfully Modified", { icon: "success" })
                    .then((value) => {
                        window.location.href = '@Url.Action("CreateFieldWork", "FieldWorks")/?fieldWorkId=' + fieldWorkId;
                    })
            }

        });
        //HIDE LOADER ICON
        $(document).ajaxStop(function () {
            $(".loadingImg").hide();
        });

        $(document).ready(function () {
            updateFindingsTables();
            updateAttachmentsTables();

            updateScheduleTable();
            updateProgramTable();
            $("#dt_search_gl_item_wrapper .dt-toolbar").remove();
        });

        //MANAGE STEP WIZARD
        var navListItems = $('div.setup-panel div a'),
            allWells = $('.setup-content'),
            allNextBtn = $('.nextBtn');
        allPrevBtn = $('.prevBtn');

        allWells.hide();

        navListItems.click(function (e) {
            e.preventDefault();
            var $target = $($(this).attr('href')),
                $item = $(this);

            if (!$item.hasClass('disabled')) {
                navListItems.removeClass('btn-primary').addClass('btn-default');
                $item.addClass('btn-primary');
                allWells.hide();
                $target.show();
                $target.find('input:eq(0)').focus();
            }
        });

        allPrevBtn.click(function () {
            var curStep = $(this).closest(".setup-content"),
                curStepBtn = curStep.attr("id"),
                prevStepWizard = $('div.setup-panel div a[href="#' + curStepBtn + '"]').parent().prev().children("a");
            prevStepWizard.removeAttr('disabled').trigger('click');
        });

        allNextBtn.click(function () {
            var curStep = $(this).closest(".setup-content"),
                curStepBtn = curStep.attr("id"),
                nextStepWizard = $('div.setup-panel div a[href="#' + curStepBtn + '"]').parent().next().children("a"),
                curInputs = curStep.find("input[type='text'],input[type='url']"),
                isValid = true;

            $(".form-group").removeClass("has-error");
            for (var i = 0; i < curInputs.length; i++) {
                if (!curInputs[i].validity.valid) {
                    isValid = false;
                    $(curInputs[i]).closest(".form-group").addClass("has-error");
                }
            }

            if (isValid)
                nextStepWizard.removeAttr('disabled').trigger('click');
        });

        $('div.setup-panel div a.btn-primary').trigger('click');
       //END MANAGE STEP WIZARD


       //ON CHANGE OF AUDITABLE AREA
        $("#assignedEngagementId").change(function () {
            $("#divLoader").show();
            debugger
            var id = $(this).val();
            var url = "GetAssignedProgram/?id=" + id;
            $.ajax({
                type: "POST",
                url: url,
                contentType: "html",
                success: function (data) {
                    $("#divLoader").hide();
                    console.log(data);
                    $("#ClientName").val(data.ClientName);
                    $("#EngagementName").val(data.EngagementName);
                    $("#AuditableArea").val(data.AuditableAreaName);
                    $("#ExecutionType").val(data.ExecutionType);
                    $("#FinancialYear").val(data.FinancialYearName);
                    $("#AuditableAreaId").val(data.AuditableAreaId);
                    $("#ClientId").val(data.ClientId);
                    $("#EngagementId").val(data.EngagementId);
                    $("#Status").val(data.Status);
                    $("#StatusDescription").val(data.StatusDescription);
                    $("#EngagementRefNo").val(data.EngagementRefNo);
                },
            });

        });



        // BUTTON SAVE CLICK
       $("#saveBtn").on("click", function () {
             debugger;

            $("#divLoader").show();
            $("#saveBtn").prop("disabled", true);
            var message = "";
             var url = '@Url.Action("CreateFieldWork", "FieldWorks")';
             var urlList = '@Url.Action("PendingFieldWork", "FieldWorks")';

             var formData = new FormData();

             formData.append("AuditableAreaId", $('#AuditableAreaId').val());
             formData.append("ViewId", $('#assignedEngagementId').val());
             formData.append("ClientId", $('#ClientId').val());
             formData.append("EngagementId", $('#EngagementId').val());
             formData.append("Status", $('#Status').val());
             formData.append("StatusDescription", $('#StatusDescription').val());
             formData.append("EngagementRefNo", $('#EngagementRefNo').val());
             formData.append("FinancialYear", $('#FinancialYear').val());
             formData.append("ClientName", $('#ClientName').val());
             formData.append("EngagementName", $('#EngagementName').val());
             formData.append("AuditableArea", $('#AuditableArea').val());

             var model = $("#fieldWorkForm").serialize();


            $.ajax({
                type: "POST",
                url: url,
                type: "POST",
                processData: false,
                contentType: false,
                data: formData,
                success: function (response) {
                    $("#divLoader").show();
                    if (response.status == "Success") {
                        $("#FieldWorkSummaryId").val(response.fieldWorkSummaryId);
                        swal({
                            text: "Field Work Successfully Saved",
                            icon: "success",
                            button: "OK",
                        }).then(function () {
                            urlList = '@Url.Action("CreateFieldWork", "FieldWorks")/?fieldWorkId=' + response.fieldWorkSummaryId;
                            window.location.href = urlList;
                        });
                    }
                    if (response.status == "Exist") {
                         swal({
                            text: "Selected Auditable Area already Exist",
                            icon: "info",
                            button: "OK",
                         }).then(function () {
                             window.location.reload();
                        });

                    }
                },
                error: function () {
                    $("#divLoader").show();
                    $("#saveBtn").prop("disabled", false);
                    swal({
                        text: "An error occured while processing your request, please contact system support",
                        icon: "error",
                        button: "OK",
                    })
                },
                complete: function () {
                    $("#divLoader").hide();
                    $("#saveBtn").prop("disabled", false);
                }
            });
        });



        var AddProgramItems = function () {
                    debugger;
                    $("#divLoader").show();
                    var auditableArea = $("#AuditableArea").val();

                    var assignedEngagementId = $("#assignedEngagementId").val();

                    //if (assignedEngagementId == "") {
                    //    $("#divLoader").hide();
                    //    swal("Please Select Engagement Before Adding Items", { icon : "warning" });
                    //    return false;
                    //}

                     $(".modal-title").text("AUDIT PROGRAMME");
                     var url = '@Url.Action("GetAuditableAreaProgram", "FieldWorks")?auditableArea=' + auditableArea;



                    //$("#divLoader").show();
                    //$(".modal-body").load(url, function () {
                    //    $("#modal").modal({
                    //        backdrop: "static",
                    //        keyboard: false
                    //    });

                    //    $("#divLoader").hide();
                    //});


                $.ajax({
                    type: "GET",
                    url: url,
                    data: { "auditableArea": auditableArea },
                    success: function (response) {
                        console.log(response);
                        $("#divLoader").hide();
                        $("#modal").find("#modal-body").html(response);
                        $("#modal").modal('show');
                    },
                    failure: function (response) {
                        $("#divLoader").hide();
                        alert(response.responseText);
                    },
                    error: function (response) {
                        $("#divLoader").hide();
                        alert(response.responseText);
                    }
                });

        }




         /// ADDING ATTACHMENTS DIALOG STARTS HERE
       var dt_attachments = $('#dt_attachments').dataTable();
       //$("#dt_attachments_wrapper .dt-toolbar").remove();
       //$("#dt_attachments_wrapper .dt-toolbar-footer").remove();


        var allattachments = []
        var attachments = []
        function addAttachments() {
            $("#divLoader").show();
            console.log($("#ProjectId").val());
            debugger;
            var fwId = $("#FieldWorkSummaryId").val();
            var attachmentName = $("#AttachmentName").val()
            if (!attachments.includes($("#AttachmentName").val())) {

                 var formData = new FormData();
                formData.append('ModuleId', fwId);
                formData.append('ModuleName', fwId);
                formData.append('FileName', $('#FileName')[0].files[0]);
                formData.append('AttachmentName', attachmentName );

                var url = '@Url.Action("AddAttachment", "FieldWorks")';
                $.ajax({
                type: "POST",
                url: url,
                data: formData,
                contentType: false,
                processData: false,
                    success: function (response) {
                        $("#divLoader").hide();
                        console.log(response);
                        if (response == "Success") {
                            swal("Attachment Successfully Added", { icon: "success" });
                            allattachments.push({
                                AttachmentName: attachmentName,
                                FileName: $("#FileName").val()
                            })
                            attachments.push(attachmentName);
                            updateAttachmentsTables();
                        }
                        else if (response == "Duplicate") {
                            $("#divLoader").hide();
                            swal("Duplicate Attachment,Name Already Exist", { icon: "warning" });
                        }
                        else {
                            swal(response, { icon: "warning" });
                        }
                },
                failure: function (response) {
                    alert(response.d);
                    $("#divLoader").hide();
                }
            });

            } else {
                $("#divLoader").hide();
                swal("Duplicate Attachment,Name Already Exist", {icon:"warning"});
        }

       }



        function attachmentRemove(did,i) {
            debugger;
            if (i == 'x') i = i;
            swal({
                title: "Are you sure?",
                text: "Once Cancelled, you will not be able to recover this Item ",
                buttons: [
                    'Yes',
                    'No'
                ],
                closeOnClickOutside: false,
            }).then(function (isConfirm) {
                if (isConfirm) {
                    swal("Cancelled", "No change was made");
                } else {

                    removeattachment(did,i)
                }
            });
        }


        function removeattachment(index,id) {
            debugger;
            var params = {"did":  id };
                var url = '@Url.Action("RemoveAttachment", "FieldWorks")';
              $.ajax({
                type: "get",
                url: url,
                data: params,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                  success: function (response) {
                      if (response = "Success") {
                          swal("Attachment Successfully Removed", { icon: "success" })
                          allattachments.splice(index, 1);
                          attachments.splice(index, 1);
                          updateAttachmentsTables();
                      }
                },
                failure: function (response) {
                    alert(response.d);
                }
            });
        }



        function updateAttachmentsTables() {

            debugger;
            var id = $("#FieldWorkSummaryId").val();
            var url = '@Url.Action("GetFwAttachment", "FieldWorks")';
            var params = { "id": id };

            $.ajax({
                type: "get",
                url: url,
                data: params,
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {

                    data = response.data;
                    datalength = data.length;
                    console.log(data.length)
                    dt_attachments.fnClearTable();
                    for (var i = 0; i < data.length; i++) {
                        var filepath = data[i]["FilePath"];
                        dt_attachments.fnAddData([i+1,
                            data[i]["AttachmentName"],
                            "<a href='#' onclick='previewAttachment(" + '"'+filepath+'"' +")'> Preview</a>",
                            '<a href="#" onclick="attachmentRemove(' + i + ',' + data[i]["AttachmentId"] + ')">\
                           <i class="glyphicon glyphicon-trash"></i></a>'
                        ]);
                    }
                    $("#added_attachments").text(" (" + data.length + ")");


                },
                failure: function (error) {
                    swal(error);
                }
            });
        }

        ///END ADD ATTACHMENT MODAL

        /// ADDING  SUMMARY OF FINDINGS
         var dt_findings = $('#dt_findings').dataTable();

        //$("#dt_findings_wrapper .dt-toolbar").remove();
        //$("#dt_findings_wrapper .dt-toolbar-footer").remove();

      var allfindings = []
      var findings = []
        function addFinding() {

          debugger;
          $("#divLoader").show();
          if (!findings.includes($("#FindingName").val())) {

              var fwId = $("#FieldWorkSummaryId").val();
              var engagementid = $("#EngagementId").val();
              var findingname = $("#FindingName").val();
              var criteria = $("#Criteria").val();
              var condition = $("#Condition").val();
              var implication = $("#Implication").val();
              var recommendation = $("#Recommendation").val();
              var causes = $("#Causes").val();
              var findingnature = $("#FindingNature :selected").text();
              var findingcategory = $("#findingCategory :selected").text();
              var opinionbasis = $("#opinionBasis").val();



              var formData = new FormData();

              formData.append("FieldWorkSummaryId", $('#FieldWorkSummaryId').val());
              formData.append("FindingName", $('#FindingName').val());
              formData.append("IsMaterial", $('#ismaterial').val());
              formData.append("FindingNameDescription", $('#FindingNameDescription').val());
              formData.append("Criteria", $('#Criteria').val());
              formData.append("Condition", $('#Condition').val());
              formData.append("Consequence", $('#Implication').val());
              formData.append("Recommendation", $('#Recommendation').val());
              formData.append("Causes", $('#Causes').val());
              formData.append("FindingNature", $("#FindingNature :selected").text());
              formData.append("OpinionBasisClass", $("#findingCategory :selected").text());
              formData.append("OpinionBasis", $('#opinionBasis').val());

                  var url = '@Url.Action("AddSummaryFinding", "FieldWorks")';
                  $.ajax({
                      url: url,
                      type: "POST",
                      processData: false,
                      contentType: false,
                      data: formData,
                      success: function (response) {
                          $("#divLoader").hide();
                          if (response = "Success") {
                              swal("Finding Successfully Added", { icon: "success" });
                              allfindings.push({
                                  FindingName: findingname.trim(),
                                  Criteria: criteria.trim(),
                                  Condition: condition.trim(),
                                  Implication: implication.trim(),
                                  Recommendation: recommendation.trim(),
                                  Causes: causes.trim()
                              })
                              findings.push($("#FindingName").val());
                              updateFindingsTables();
                              $('#FindingName').val("");
                              $('#FindingNameDescription').val("");
                              $('#Criteria').val("");
                              $('#Condition').val("");
                              $('#Implication').val("");
                              $('#Recommendation').val("");
                              $('#Causes').val("");
                              $('#opinionBasis').val("");

                          }
                      },
                      failure: function (response) {

                          $("#divLoader").hide();
                          alert(response.d);
                      }
                  });

          } else {
              $("#divLoader").hide();
              swal("Finding Already Exist for this Auditable Area", {icon:"warning"});
              }
         // }

       }


      function findingRemove(index,id) {
            debugger;
                var params = {"did":  id };
                var url = '@Url.Action("RemoveFinding", "FieldWorks")';
              $.ajax({
                type: "Get",
                url: url,
                data: params,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                  success: function (response) {
                      if (response = "Success") {
                          allfindings.splice(index, 1);
                          findings.splice(index, 1);
                          updateFindingsTables();
                      }
                },
                failure: function (response) {
                    alert(response.d);
                }
            });
        }



        function updateFindingsTables() {
            debugger;
            var fwId = $("#FieldWorkSummaryId").val();
            var url = '@Url.Action("GetSummaryFinding", "FieldWorks")';
            var params = { "id": fwId };

            $.ajax({
                type: "get",
                url: url,
                data: params,
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {
                    data = response.data;
                    datalength = data.length;
                    console.log(data.length)
                    dt_findings.fnClearTable();
                    for (var i = 0; i < data.length; i++) {
                        dt_findings.fnAddData([i+1,
                            data[i]['FindingName'],
                            data[i]['Criteria'],
                            data[i]['Condition'],
                            data[i]['Consequence'],
                            data[i]['Causes'],
                            data[i]['Recommendation'],
                            '<a href="#" onclick="RemoveFinding(' + data[i]["FwSummaryFindingId"] + ')">Delete</a>',
                            '<a href="#" onclick="ModifyFindings(' + data[i]["FwSummaryFindingId"] + ')">Edit</a>'
                        ]);


                    }
                    $("#added_finding").text(" (" + data.length + ")");

                },
                failure: function (error) {
                    swal(error);
                }
            });

        }



        function RemoveFinding(i){
            debugger;
            if (i == 'x') i = i;
            swal({
                title: "Are you sure?",
                text: "Once Cancelled, you will not be able to recover this Item ",
                buttons: [
                    'Yes',
                    'No'
                ],
                closeOnClickOutside: false,
            }).then(function (isConfirm) {
                if (isConfirm) {
                    swal("Cancelled", "No change was made");
                } else {

                    findingRemove(i)
                }
            });
        }

         function findingRemove(id) {
            debugger;
                var params = {"did":  id };
                var url = '@Url.Action("RemoveFinding", "FieldWorks")';
              $.ajax({
                type: "Get",
                url: url,
                data: params,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                  success: function (response) {
                      if (response = "Success") {
                          swal("Finding Successfully Removed", { icon: "success" });
                          updateFindingsTables();
                      }
                },
                failure: function (response) {
                    alert(response.d);
                }
            });
        }

        // END OF SUMMARY FINDINGS


        $("#FindingNature").change(function () {
            $("#findingCategory").empty();
            debugger
            var id = $(this).val();

            var url = '@Url.Action("GetFindingCategory", "FieldWorks")';
            var params = { "findingnatureId": id };

            $.ajax({
                type: "POST",
                url: url,
                data: params,
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {
                    console.log(response);
                    $("#findingCategory").empty();
                    $("#findingCategory").append(response);
                }
            })
        });

        $("#ismaterial").change(function () {
            var ismaterial = $("#ismaterial").val();
            if (ismaterial == "Yes") {
                $("#basisOptions").show();
            }
            else {
                $("#basisOptions").hide();
            }
        });

        $("#findingCategory").change(function () {

            debugger
            var id = $(this).val();
            var url = '@Url.Action("GetFindingOpinionBasis", "FieldWorks")';
             var params = { "findingcategoryId": id };
            $.ajax({
                type: "POST",
                url: url,
                data: params,
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {
                    console.log(response);
                    $("#opinionBasis").empty();
                    $("#opinionBasis").append(response);
                }
            })
        });



        /// LEAD SCHEDULE
        var dt_schedules = $('#dt_schedules').dataTable();

        //$("#dt_schedules_wrapper .dt-toolbar").remove();
        //$("#dt_schedules_wrapper .dt-toolbar-footer").remove();

        function updateScheduleTable() {
            debugger;
            var fieldWorkSummaryId = $("#FieldWorkSummaryId").val();
            var auditableArea = $("#AuditableArea").val();
            var url = '@Url.Action("GetFwSchedules", "FieldWorks")';
            var params = { "fieldWorkSummaryId": fieldWorkSummaryId, "auditableAreaName": auditableArea};

            $.ajax({
                type: "get",
                url: url,
                data: params,
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {
                    data = response.data;
                    datalength = data.length;
                    console.log('getschdule',data.length)
                    dt_schedules.fnClearTable();
                    for (var i = 0; i < data.length; i++) {
                        dt_schedules.fnAddData([i+1,
                            data[i]['AuditableAreaItem'],
                            toLabel(data[i]['PreviousAmount']),
                            toLabel(data[i]['CurrentAmount']),
                            data[i]['Adjustment'],
                            toLabel(data[i]['AdjustedAmount']),
                            toLabel(data[i]['FinalAmount']),
                            '<a href="#" onclick="schedulesRemove(' + data[i]["FieldWorkScheduleId"] + ')"><i class="glyphicon glyphicon-trash" title="Delete"></i></a>'
                        //  '<a href="#" onclick="editschedule(' + data[i]["FieldWorkScheduleId"] + ')"><i class="glyphicon glyphicon-pencil" title="Delete"></i></a>'
                        ]);


                    }

                },
                failure: function (error) {
                    swal(error);
                }
            });

        }

        function schedulesRemove(i) {
            debugger;
            if (i == 'x') i = i;
            swal({
                title: "Are you sure?",
                text: "Once Cancelled, you will not be able to recover this Item ",
                buttons: [
                    'Yes',
                    'No'
                ],
                closeOnClickOutside: false,
            }).then(function (isConfirm) {
                if (isConfirm) {
                    swal("Cancelled", "No change was made");
                } else {
                    removeSchedules(i)
                }
            });
        }

        function removeSchedules(id) {
            debugger;
                var params = {"did":  id };
                var url = '@Url.Action("RemoveSchedules", "FieldWorks")';
              $.ajax({
                type: "Get",
                url: url,
                data: params,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                  success: function (response) {
                      if (response = "Success") {
                          swal("Schedule Successfully Removed", { icon: "success" });
                          updateScheduleTable();
                      }
                },
                failure: function (response) {
                    alert(response.d);
                }
            });
        }







        function remove(array, val) {
            var found = array.indexOf(val);
            while (found !== -1) {
                array.splice(found, 1);
                found = array.indexOf(val);
            }
        }


        let schedulesdata = [];
        let formSchedules = {}
        function amountChangedSchedule(amountType, FieldWorkScheduleId) {
            debugger;
            formSchedules[FieldWorkScheduleId] = {
                [amountType]: $(`#${amountType}-${FieldWorkScheduleId}`).val(),
                ...(formSchedules[FieldWorkScheduleId] || []),
                'FieldWorkScheduleId': FieldWorkScheduleId
            }
        }

        console.log(formSchedules);

        //$("#addSchedules").on('click', function () {
      $("#btnSaveSchedules").on('click', function () {
        debugger;
        //var formdata = new FormData();
            for (let FieldWorkScheduleId in formSchedules) {
                let adjust = formSchedules[FieldWorkScheduleId].adjust
                let adjustAmount = formSchedules[FieldWorkScheduleId].adjustAmount

            schedulesdata.push({
                FieldWorkScheduleId: FieldWorkScheduleId,
                Adjustment: adjust,
                AdjustmentAmount: adjustAmount
            });

          }

          console.log(schedulesdata);

        var formData = {
            "FieldWorkSummaryId": $("#FieldWorkSummaryId").val(),
            "AuditScheduleDatas": schedulesdata
        }


        $("#divLoader").toggle(true);
        var url = '@Url.Action("SaveAuditSchedules", "FieldWorks")';
        $.ajax({
            url: url,
            data: JSON.stringify(formData),
            type: 'POST',
            dataType: "JSON",
            contentType: "application/json",
            success: function (response) {
                console.log('response', response)
                $("#btnSaveRedirection").prop('disabled', false);
                $("#divLoader").toggle(false);
                if (response == "Success") {
                    swal("Saved Successfully!", { icon: "success" })
                        .then((value) => {
                            updateScheduleTable();
                        });
                } else if (response == "Dublicate") {
                    swal("Duplicate Schedule!", { icon: "warning" })
                        .then((value) => {
                            return false;
                        });
                }
                else {
                    swal(response);
                }
            },
            failure: function (error) {
                $("#divLoader").toggle(false);
                swal(error);
            }
        });
    });




    /// AUDIT PROGRAMS

        var dt_programs = $('#dt_programs').dataTable();

        //$("#dt_programs_wrapper .dt-toolbar").remove();
        //$("#dt_programs_wrapper .dt-toolbar-footer").remove();

    let notes2 = [];
    let formAmounts = {}
    function amountChanged(amountType, AuditableAreaAssignId) {
        formAmounts[AuditableAreaAssignId] = {
            [amountType]: $(`#${amountType}-${AuditableAreaAssignId}`).val(),
            ...(formAmounts[AuditableAreaAssignId] || []),
            'AuditableAreaAssignId': AuditableAreaAssignId
        }
    }



        $("#btnSaveAuditProgram").on('click', function () {
        debugger;
        //var formdata = new FormData();
        for (let AuditableAreaAssignId in formAmounts) {
            let TestRequired = formAmounts[AuditableAreaAssignId].testrequired
            let ResultSatisfactory = formAmounts[AuditableAreaAssignId].resultsat
            let Remark = formAmounts[AuditableAreaAssignId].comments

            notes2.push({
                AuditableAreaProgramId: AuditableAreaAssignId,
                TestRequired: TestRequired,
                ResultSatisfactory: ResultSatisfactory,
                Remark: Remark
            });

            console.log(notes2);
        }

        var formData = {
            "FieldWorkSummaryId": $("#FieldWorkSummaryId").val(),
            "AuditProgramDatas": notes2
        }


        $("#divLoader").toggle(true);
        var url = '@Url.Action("SaveAuditProgram", "FieldWorks")';
        $.ajax({
            url: url,
            data: JSON.stringify(formData),
            type: 'POST',
            dataType: "JSON",
            contentType: "application/json",
            success: function (response) {
                console.log('response', response)
                $("#btnSaveRedirection").prop('disabled', false);
                $("#divLoader").toggle(false);
                if (response == "Success") {
                    swal("Saved Successfully!", { icon: "success" })
                        .then((value) => {
                            window.location.reload();
                        });
                } else if (response == "Dublicate") {
                    swal("Dublicate Program!", { icon: "warning" })
                        .then((value) => {
                            return false;
                        });
                }
                else {
                    swal(response);
                }
            },
            failure: function (error) {
                $("#divLoader").toggle(false);
                swal(error);
            }
        });
    });

        function updateProgramTable() {
            debugger;
            var fwId = $("#FieldWorkSummaryId").val();
            var auditableArea = $("#AuditableArea").val();
            var url = '@Url.Action("GetAuditProgram", "FieldWorks")';
            var params = { "id": fwId, "auditablearea": auditableArea};

            $.ajax({
                type: "get",
                url: url,
                data: params,
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {
                    data = response.data;
                    datalength = data.length;
                    console.log(data.length)
                    dt_programs.fnClearTable();
                    for (var i = 0; i < data.length; i++) {
                        dt_programs.fnAddData([i+1,
                            data[i]['Title'],
                            data[i]['ProgramProcedure'],
                            data[i]['TestRequired'],
                            data[i]['ResultSatisfactory'],
                            data[i]['Remark'],
                            '<a href="#" onclick="programRemove(' + data[i]["FieldWorkProgramId"] + ')">\
                           <i class="glyphicon glyphicon-trash"></i></a>'
                        ]);


                    }

                },
                failure: function (error) {
                    swal(error);
                }
            });

        }

        function programRemove(i) {
            debugger;
            if (i == 'x') i = i;
            swal({
                title: "Are you sure?",
                text: "Once Cancelled, you will not be able to recover this Item ",
                buttons: [
                    'Yes',
                    'No'
                ],
                closeOnClickOutside: false,
            }).then(function (isConfirm) {
                if (isConfirm) {
                    swal("Cancelled", "No change was made");
                } else {

                    removeProgram(i)
                }
            });
        }


           function removeProgram(id) {
            debugger;
                var params = {"did":  id };
                var url = '@Url.Action("RemovengAuditProgram", "FieldWorks")';
              $.ajax({
                type: "Get",
                url: url,
                data: params,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                  success: function (response) {
                      if (response = "Success") {
                          swal("Program Successfully Removed", { icon: "success" });
                          updateProgramTable();
                      }
                },
                failure: function (response) {
                    alert(response.d);
                }
            });
        }



        function ModifyFindings(id) {
               $("#divLoader").show();
                debugger;
                   var url = '@Url.Action("GetSummaryFindings", "FieldWorks")/?id='+id;

                    $(".modal-body").load(url, function () {
                        $("#modal").modal({
                            backdrop: "static",
                            keyboard: false
                        });

                        $("#divLoader").hide();
                    });

        }


        function previewAttachment(attachmentpath) {
            debugger;
             var url = '@Url.Content("~/Areas/Coadmis/Attachments/")' + attachmentpath;
            document.getElementById("slipImage").src = url;
            $('#detailID').dialog({
                                 autoOpen: true,
                                 width: 900,
                                 height: 700,
                                 position: 'center',
                                 resizable: true,
                                draggable: true
                                });
        };



        function getUrlVars() {
            debugger;
            var vars = {};
            var parts = window.location.href.replace(/[?&]+([^=&]+)=([^&]*)/gi, function (m, key, value) {
                vars[key] = value;
            });
            return vars;
        }





    </script>
}




