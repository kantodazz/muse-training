@model IFMIS.Areas.Coadmis.Models.QuestionnairVM

@{
    ViewBag.Title = "Create Main Questions";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style type="text/css">
    .loadingImg {
        display: none;
    }

    body {
        margin-top: 40px;
    }

    .search-btn {
        border: 1px solid #ccc;
        border-radius: 4px;
        padding: 5px;
        padding-right: 10px;
    }

    .search-container {
        display: inline-flex;
        flex: 1 1 300px;
        position: relative;
        border: 1px solid #ccc;
        border-radius: 5px;
        overflow: hidden;
        padding-left: 10px;
    }

    .name-input-container {
        display: inline-flex;
        flex: 1 1 300px;
        position: relative;
        overflow: hidden;
    }

    .search-icon {
        padding: 0.5rem;
    }

    .search-button {
        background: #538AC5;
        border: 0;
        color: white;
        padding: 8px;
        border-radius: 0;
    }

    input[type=number] {
        padding: 8px;
        border: 1px solid #ccc;
        width: 205px;
    }

    input[type=text] {
        padding: 5px;
        border: 1px solid #ccc;
    }

    input[type=search] {
        padding: 4px;
        border: hidden;
        border-radius: 4px;
    }

    textarea {
        border: 1px solid #ccc;
    }

    select {
        padding: 8px;
        border: 1px solid #ccc;
        resize: vertical;
        width: 230px;
    }

    .action-btn {
        width: 100px;
        color: white;
    }

    .form-label {
        text-align: right;
    }

    td {
        padding: 5px;
    }

    .info-box {
        padding: 10px;
        background-color: #ECF3F8;
        text-align: center;
        border: 1px solid #ccc;
        border-radius: 5px;
    }

    #itemUL li {
        margin-left: -40px;
        border-bottom: 1px solid silver;
        height: 26px;
        padding-left: 5px;
        padding-top: 8px;
        cursor: pointer;
    }

    .redStar {
        color: red;
        font-size: 15px;
    }
</style>
<div id="content" style="margin: 5px; padding-top: 50px">
    <div class="row"></div>
    <!-- widget grid -->
    <section id="widget-grid" class="">
        <div class="row">
            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">

                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">

                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2> @ViewBag.Title</h2>
                    </header>

                    <div>
                        <div class="widget-body " style="padding-top:10px;width:100%">
                            <div class="row setup-content">
                                @Html.AntiForgeryToken()
                                <form>
                                    <div class="form-horizontal">
                                        <div class="col-xs-12">

                                            <div class="col-md-12">
                                                <div class="form-group">
                                                    <label class="control-label col-md-2">Questionnair Type<span class="redStar">*</span></label>
                                                    <div class="col-md-8">
                                                        @if (ViewBag.QuestionnairTypleList != null)
                                                        {
                                                            @Html.DropDownListFor(model => model.QuestionnairTypeId, ViewBag.QuestionnairTypleList as SelectList, "Select Questionnair Type", new { @class = "form-control select2" })
                                                            @Html.ValidationMessageFor(model => model.QuestionnairTypeId, "", new { @class = "text-danger" })

                                                        }
                                                        else
                                                        {
                                                            @Html.DropDownList("QuestionnairTypeId", null, "Select Questionnair Type", new { @class = "form-control select2" })

                                                        }
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label class="control-label col-md-2">Questionnair Group<span class="redStar">*</span></label>
                                                    <div class="col-md-8 collateralUsage">
                                                        <select id="QuestionnairGrp" name="QuestionnairGrp" class="form-control select2" required="required">
                                                            <option>Select Questionnair Group</option>
                                                        </select>
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    <label class="control-label col-md-2">Question<span class="redStar">*</span></label>
                                                    <div class="col-md-8">
                                                        @Html.TextBoxFor(model => model.QuestionnairName, new { @Class = "input", @required = "required", style = "width:100%; display:block;border:1px solid #ccc;padding:8px;" })
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    <label class="control-label col-md-2">Parent Questionnair Type<span class="redStar">*</span></label>
                                                    <div class="col-md-8">
                                                        @if (ViewBag.parentQnGrpList != null)
                                                        {
                                                            @Html.DropDownListFor(model => model.ParentId, ViewBag.parentQnGrpList as SelectList, "Select Parent Type", new { @class = "form-control select2" })
                                                            @Html.ValidationMessageFor(model => model.ParentId, "", new { @class = "text-danger" })

                                                        }
                                                        else
                                                        {
                                                            @Html.DropDownList("ParentId", null, "Select Parent Qn Type", new { @class = "form-control select2" })

                                                        }
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label class="control-label col-md-2">Answer Type<span class="redStar">*</span></label>
                                                    <div class="col-md-3">
                                                        @Html.DropDownList("AnswerType", new List<SelectListItem>{
                                                          new SelectListItem{ Text="--Select Answer Type ---", Value = "" },
                                                          new SelectListItem{ Text="Dropdown", Value = "Dropdown" },
                                                          new SelectListItem{ Text="Text", Value = "Text" },
                                                          new SelectListItem{ Text="Checkbox", Value = "Checkbox" },
                                                          new SelectListItem{ Text="Radio Button", Value = "Radio Button" },
                                                           }, new { @class = "form-control select2", @required = "required" })
                                                        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                                                    </div>

                                                    <label class="control-label col-md-2">Options Value<span class="redStar">*</span></label>
                                                    <div class="col-md-3">
                                                        <a class="search-btn" onclick="OptionalValues()" id="searchbtn" href="#" style="display:block;border:1px solid #ccc;padding:8px">
                                                            <i class="fa fa-fw fa-lg fa-question"></i>
                                                            &nbsp; Add Choice Value(s) <span id="added_ChoiceValue"></span>
                                                        </a>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </form>
                                <div class="col-md-2"></div>
                                <div class="col-md-3">
                                    <a href="@Url.Action("QuestionnairTitleGrp", "Questionnair")" style="margin-right:5px" type="submit" class="btn btn-info pull-left"><i class="glyphicon glyphicon-arrow-left"></i> Back  </a>
                                    <button type="submit" class="btn btn-info" id="saveCreateMainQnt">
                                        <i class="fa fa-save"></i>Save
                                        <img src="~/Content/img/loading.gif" class="loadingImg" />
                                    </button>
                                </div>

                            </div>
                        </div>
                    </div>
                </div>
            </article>
        </div>
    </section>
</div>


<!---Start here Add Optional Value Model-->
<div class="modal fade" id="AddOptionalValue" style="left:4%">
    <div class="modal-dialog" style="width:80%;">
        <div class="modal-content panel-info">
            <div class="modal-header panel-heading">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h3 class="modal-title"> Question Optional Value </h3>
            </div>
            <div class="modal-body" style="overflow-x: auto;">
                <div class="row">
                    <div class="col-sm-6">
                        <div style="padding-left:5%;padding-right:1%">
                            <table style="margin-left: 2%;padding:4px;width:700px">
                                <tr>
                                    <td>
                                        Optional Name
                                        <i class="fa fa-times" style="color:white" id="Name_1"></i>
                                    </td>
                                    <td></td>
                                </tr>
                                <tr>
                                    <td style="width:700px">
                                        <div class="col-md-8" style="width:500px;">
                                            @Html.TextBoxFor(model => model.OptionalValue, new { @Class = "input", @required = "required", style = "width:100%; display:block;border:1px solid #ccc;padding:8px;" })
                                        </div>
                                    </td>
                                    <td style="width:50px"></td>
                                    <td style="width:50px"></td>
                                    <td style="width:600px">
                                        <div class="name-input-container">
                                            <a class="btn btn-info" href="#"id="saveOptionValue" onclick="addOptions()">
                                                <i class="glyphicon glyphicon-plus"></i>Add
                                            </a>
                                        </div>
                                    </td>
                                </tr>
                            </table>
                        </div>
                    </div>
                </div>
                <br />
                <div id="divOptionValues"></div>

            </div>
            <div class="modal-footer">
                <button class="btn btn-info" data-dismiss="modal">
                    <i class="fa  fa-times"></i>Close
                </button>
            </div>
        </div>
    </div>
</div>
<!--End Optional Value Model-->
@section pagespecific {
    <script type="text/javascript">
        $(document).ajaxStart(function () {
            $(".loadingImg").show();

        });
        //HIDE LOADER ICON
        $(document).ajaxStop(function () {
            $(".loadingImg").hide();
        });


        $("#QuestionnairTypeId").change(function () {
            var id = $(this).val();
            if (id != "") {

                var option = [];
                $.ajax({
                    url: '@Url.Action("GetQntGroup", "Questionnairs")/?id=' + id,
                    type: "GET",
                    dataType: "json",
                    success: function (data) {
                        console.log('select', data);
                        option.empty;
                        option.push('<option value="">Select Questionnair Group</option>');
                        data.data.forEach(d => {
                            option.push('<option value=' + d["QuestionnnairTitleGrpId"] + '>' + d["Title"] + '</option>');
                        });
                        option = option.toString().replace(",", "").replace("[", "").replace("]", "");
                        $("#QuestionnairGrp").html(option);
                    }
                });
            }
        });

        function OptionalValues() {
            $("#AddOptionalValue").modal("show");
        };

        /// ADDING ATTACHMENTS DIALOG STARTS HERE
        var dt_options = $('#dt_options').dataTable();
        $("#dt_options_wrapper .dt-toolbar").remove();
        $("#dt_options_wrapper .dt-toolbar-footer").remove();

        var alloptions = []
        var choicesValues = []
        var countOptions = 0;

        function addOptions() {
            debugger;
            if ($("#OptionalValue").val() == "") {
                return false;
            }

            var optionalValue = $('#OptionalValue').val().trim();

            choicesValues.push({
                ValuedOptionToSave: optionalValue,

            });

            GenerateSavedOptionsTable();
        }

        function GenerateSavedOptionsTable() {
            if (choicesValues.length > 0) {
                var $table = $('<table class="table table-condensed table-stripped table-hover table-bordered"/>');
                $table.append('<thead>' +
                    '<tr><th colspan="3">Choice Values</th>' +
                    '<tr><th>#</th><th style="display:none;">Id</th><th style="text-align: center">Choice Title</th><th style="text-align: center">Action</th></tr>' +
                    '</thead>');
                var $tbody = $('<tbody/>');
                var j = 0;
                $.each(choicesValues, function (i, val) {
                    ++j;
                    var $row = $('<tr/>');
                    $row.append($('<td/>').html(j));
                    $row.append($('<td/>').html(val.ValuedOptionToSave));
                    var $remove = $('<a href="#"><span class="glyphicon glyphicon-trash" aria-hidden="true"></span></a>');
                    $remove.click(function (e) {
                        e.preventDefault();
                        choicesValues.splice(i, 1);
                        GenerateSavedOptionsTable();
                    });
                    $row.append($('<td/>').html($remove));
                    $tbody.append($row);
                });
                $table.append($tbody);
                $('#divOptionValues').html($table);
                $("#OptionalValue").val("");
                $("#saveOptionValue").attr("disabled", false);
            } else {
                $('#divOptionValues').html('');
                $("#saveOptionValue").attr("disabled", true);
            }

            $("#added_ChoiceValue").text(choicesValues.length);
        }

        $("#saveLoader").toggle(false);
        $("#saveCreateMainQnt").click(function ()
        {
            debugger;
            var questionnairTypeId = $("#QuestionnairTypeId").val();
            var title = $("#Title").val();
            var questionnairName = $("#QuestionnairName").val();

            if (questionnairTypeId == '' || questionnairName =='') {
                swal("Please Fill All the required Fields", { icon: "warning" });
                return false;
            }

            var formdata = new FormData();
            formdata.append("__RequestVerificationToken", $('[name=__RequestVerificationToken]').val());
            formdata.append("QuestionnairTypeId", $("#QuestionnairTypeId").val());
            formdata.append("QuestionnnairTitleGrpId", $("#QuestionnairGrp").val());
            formdata.append("QuestionnairName", $("#QuestionnairName").val());
            formdata.append("ParentId", $("#ParentId").val());
            formdata.append("AnswerType", $("#AnswerType").val());

            for (var i = 0; i < choicesValues.length; i++) {
                formdata.append("OptionValueDatas[" + i + "].ValuedOptionToSave", choicesValues[i].ValuedOptionToSave);
            }

            for (const value of formdata.values()) {
                console.log(value);
            }

             var url = '@Url.Action("SaveMainQuestion", "Questionnairs")';
            var urlList = '@Url.Action("MainQuestions", "Questionnairs")';
            $("#saveQuestionnairType").prop('disabled', true);
            $("#saveLoader").toggle(true);

            $.ajax({
                url: url,
                data: formdata,
                type: 'POST',
                contentType: false,
                processData: false,
                success: function (response) {
                    $("#saveQuestionnairType").prop('disabled', false);
                    $("#saveLoader").toggle(false);
                    if (response == "Success") {
                        swal("Saved Successfully!", { icon: "success" })
                            .then((value) => {
                                window.location.href = urlList;
                            });
                    } else if (response =="Dublicate") {
                        swal("Dublicate Role!", { icon: "warning" });
                        return false;
                    }
                    else {
                        swal(response);
                    }
                },
                failure: function (error) {
                    $("#saveEngagementRole").prop('disabled', false);
                    $("#saveLoader").toggle(false);
                    swal(error);
                }
            });
        })
    </script>
}