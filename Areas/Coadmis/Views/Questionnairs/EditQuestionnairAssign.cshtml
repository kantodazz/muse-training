@model IFMIS.Areas.Coadmis.Models.QuestionnairResponseSummary
@{
    ViewBag.Title = "Edit Questionnaire Assignment";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style type="text/css">
    .loadingImg {
        display: none;
    }

    body {
        margin-top: 40px;
    }

    .search-btn {
        border: 1px solid #ccc;
        border-radius: 4px;
        padding: 5px;
        padding-right: 10px;
    }

    .search-container {
        display: inline-flex;
        flex: 1 1 300px;
        position: relative;
        border: 1px solid #ccc;
        border-radius: 5px;
        overflow: hidden;
        padding-left: 10px;
    }

    .name-input-container {
        display: inline-flex;
        flex: 1 1 300px;
        position: relative;
        overflow: hidden;
    }

    .search-icon {
        padding: 0.5rem;
    }

    .search-button {
        background: #538AC5;
        border: 0;
        color: white;
        padding: 8px;
        border-radius: 0;
    }

    input[type=number] {
        padding: 8px;
        border: 1px solid #ccc;
        width: 205px;
    }

    input[type=text] {
        padding: 5px;
        border: 1px solid #ccc;
    }

    input[type=search] {
        padding: 4px;
        border: hidden;
        border-radius: 4px;
    }

    textarea {
        border: 1px solid #ccc;
    }

    select {
        padding: 8px;
        border: 1px solid #ccc;
        resize: vertical;
        width: 230px;
    }

    .action-btn {
        width: 100px;
        color: white;
    }

    .form-label {
        text-align: right;
    }

    td {
        padding: 5px;
    }

    .info-box {
        padding: 10px;
        background-color: #ECF3F8;
        text-align: center;
        border: 1px solid #ccc;
        border-radius: 5px;
    }

    #itemUL li {
        margin-left: -40px;
        border-bottom: 1px solid silver;
        height: 26px;
        padding-left: 5px;
        padding-top: 8px;
        cursor: pointer;
    }

    .redStar {
        color: red;
        font-size: 15px;
    }
  
    
</style>
<div id="content" style="margin: 5px; padding-top: 50px">
    <div class="row"></div>
    <!-- widget grid -->
    <section id="widget-grid" class="">
        <div class="row">
            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">

                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">

                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2> @ViewBag.Title</h2>
                    </header>

                    <div>
                        <div class="widget-body " style="padding-top:10px;width:100%">
                            <div class="row setup-content">
                                @Html.AntiForgeryToken()
                                <form>
                                    <div class="form-horizontal">
                                        <div class="col-xs-12">

                                            <div class="col-md-12">
                                                @Html.HiddenFor(model => model.QnResponseSummaryId)
                                                @Html.HiddenFor(model => model.ClientInformationId)
                                                @Html.HiddenFor(model => model.QuestionnairTypeId)
                                                <div class="form-group">
                                                    <label class="control-label col-md-2">Client Name<span class="redStar">*</span></label>
                                                    <div class="col-md-8">
                                                        @Html.TextBoxFor(model => model.ClientInformationName, new { @class = "form-control", @readonly = true })
                                                        @Html.ValidationMessageFor(model => model.ClientInformationName, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    <label class="control-label col-md-2">Financial Year<span class="redStar">*</span></label>
                                                    <div class="col-md-3 collateralUsage">
                                                        @Html.TextBoxFor(model => model.FinancialYearName, new { @class = "form-control", @required = "required", @readonly = true })
                                                    </div>

                                                    <label class="control-label col-md-2">Questionnair Type<span class="redStar">*</span></label>
                                                    <div class="col-md-3">
                                                            @Html.TextBoxFor(model => model.QuestionnairTypeName, new { @class = "form-control", @readonly = true })
                                                            @Html.ValidationMessageFor(model => model.QuestionnairTypeName, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                                <div class="form-group" id="questionList" style="display: none">
                                                    <div class="col-md-1"></div>
                                                    <div class="col-md-10">
                                                        <table class='table table-striped table-bordered table-hover'>
                                                            <thead>
                                                                <tr>
                                                                    <td><strong>#</strong></td>
                                                                    <td><strong>Question</strong> </td>
                                                                    <td><strong>Assign</strong> <input type="checkbox" name="checkAll" class="qnCheckAll" /></td>
                                                                </tr>
                                                            </thead>
                                                            <tbody id="tablelist">
                                                            </tbody>
                                                        </table>
                                                    </div>
                                                    <div class="col-md-1"></div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </form>
                                <div class="col-md-2"></div>
                                <div class="col-md-3">
                                    <a href="@Url.Action("QuestionnairAssignList", "Questionnairs")" style="margin-right:5px" type="submit" class="btn btn-info pull-left"><i class="glyphicon glyphicon-arrow-left"></i> Back  </a>
                                    <button type="submit" class="btn btn-info" id="editAssignQuestions">
                                        <i class="fa fa-save"></i> Save
                                        <img src="~/Content/img/loading.gif" class="loadingImg" />
                                    </button>
                                </div>

                            </div>
                        </div>
                    </div>
                </div>
            </article>
        </div>
    </section>
</div>

@section pagespecific {
    <!-- PAGE RELATED PLUGIN(S) -->
    <script type="text/javascript">
        //SHOW LOADER ICON
        $(document).ajaxStart(function () {
            $(".loadingImg").show();

        });
        //HIDE LOADER ICON
        $(document).ajaxStop(function () {
            $(".loadingImg").hide();
        });

        $(document).ready(function () {
            var option = [];
            $.ajax({
                url: '@Url.Action("GetSelectedQuestionsByType", "Questionnairs")/?typeId=' + @ViewBag.QuestionnaireTypeId + '&clientId='+ @ViewBag.ClientId,
                type: "GET",
                dataType: "json",
                success: function (data) {
                    option.empty;
                    var n = 0;
                    var j = 0;
                    data.data.forEach(item => {
                        option.push('<tr><td colspan="2"><b>' + item[j]["SubTitle"] + '</b></td><td></td></tr>');
                        item.forEach(itemData => {
                            itemData["Questions"].forEach(q => {
                                n++;
                                if (q["IsChecked"] == true) {
                                    option.push('<tr><td>' + n + '</td><td>' + q["QuestionDesc"] + '</td><td><input type="checkbox" checked class="checkBoxAssign"  value="' + q["QuestionId"] + '"></td></tr>');
                                } else {
                                    option.push('<tr><td>' + n + '</td><td>' + q["QuestionDesc"] + '</td><td><input type="checkbox" class="checkBoxAssign"  value="' + q["QuestionId"] + '"></td></tr>');
                                }
                            });
                        });
                    });
                    j++;
                    $("#questionList").show();
                    $("#tablelist").html(option);
                }
            });
        });

        $(".qnCheckAll").click(function () {
            $(".checkBoxAssign").prop('checked',$(this).prop('checked'));
        });

        $("#saveLoader").toggle(false);
        $("#editAssignQuestions").click(function () {
            var qnIds = [];

            $("input:checkbox.checkBoxAssign").each(function () {
                if ($(this).prop("checked")) {
                    qnIds.push($(this).val());
                }
            });

            if (qnIds.length == 0) {
                swal("Please check atleast One Question!", {icon: "warning"});
                return;
            }

            var ClientInformationId = $("#ClientInformationId").val();
            var questionnairTypeId = $("#QuestionnairTypeId").val();
            var financialYearName = $("#FinancialYearName").val();
            var Id = $("#QnResponseSummaryId").val();

            if (ClientInformationId == '') {
                swal("Please select client", { icon: "warning" });
                return false;
            }

            if (questionnairTypeId == '') {
                swal("Please select questionnaire type", { icon: "warning" });
                return false;
            }

            if (financialYearName == '') {
                swal("Please assign client financial year before assignment", {icon: "warning"});
                return false;
            }

            var formdata = new FormData();
            formdata.append("__RequestVerificationToken", $('[name=__RequestVerificationToken]').val());
            formdata.append("ClientInformationId", ClientInformationId);
            formdata.append("QuestionnairTypeId", questionnairTypeId);
            formdata.append("FinancialYearName", financialYearName);
            formdata.append("QnResponseSummaryId", Id);
            formdata.append("QuestionIds", qnIds);

            var url = '@Url.Action("EditQuestionnairAssignment", "Questionnairs")';
            var urlList = '@Url.Action("QuestionnairAssignList", "Questionnairs")';
            $("#editAssignQuestions").prop('disabled', true);
            $("#saveLoader").toggle(true);

            $.ajax({
                url: url,
                data: formdata,
                type: 'POST',
                contentType: false,
                processData: false,
                success: function (response) {
                    console.log('data, '+ response.response);
                    $("#form_submision").prop('disabled', false);
                    $("#saveLoader").toggle(false);
                    if (response == "Success") {
                        swal("Saved Successfully!", { icon: "success" })
                            .then((value) => {
                                window.location.href = urlList;
                            });
                    } else if (response == "Duplicate") {
                        swal({
                            title: "Questions already exist",
                            text: response.data.toString(),
                            icon: "warning"
                        });
                        $("#editAssignQuestions").prop('disabled', false);
                        $("#saveLoader").toggle(false);
                    } else if (response == "Not Found") {
                        $("#editAssignQuestions").prop('disabled', false);
                        $("#saveLoader").toggle(false);
                        swal("Assignment not found", { icon: "warning"} );
                    } else if (response == "Answer exist") {
                        swal({
                            title: "Questions already answered",
                            text: response.data.toString(),
                            icon: "warning"
                        });
                        $("#editAssignQuestions").prop('disabled', false);
                        $("#saveLoader").toggle(false);
                    }
                    else {
                        $("#editAssignQuestions").prop('disabled', false);
                        $("#saveLoader").toggle(false);
                        swal(response);
                    }
                },
                failure: function (error) {
                    $("#editAssignQuestions").prop('disabled', false);
                    $("#saveLoader").toggle(false);
                    swal(error);
                }
            });
        })
    </script>
}

