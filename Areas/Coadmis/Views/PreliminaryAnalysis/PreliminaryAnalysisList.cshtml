@{
    ViewBag.Title = "Preliminary Analysis List";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style type="text/css">
    .loadingImg {
        display: none;
    }
    .redStar {
        color: red;
        font-size: 15px;
    }
</style>
<div id="content" style="margin: 5px;">
    <div class="row"></div>
    <!-- widget grid -->
    <section id="widget-grid" class="">
        <div class="row">
            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">

                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">

                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2> @ViewBag.Title</h2>
                    </header>

                    <div>
                        <div class="row">
                            <div class="col-md-6">
                                <a class="btn btn-info" href='@Url.Action("CreatePreliminaryAnalysis", "PreliminaryAnalysis")'>
                                    <i class="glyphicon glyphicon-plus"></i> Add New
                                </a>
                            </div>
                            <div class="col-md-6"></div>
                        </div>
                        <div class="widget-body " style="padding-top:10px;width:100%">
                            @Html.AntiForgeryToken()
                            <table class="table  table-bordered table-hover table-condensed" id="dataTableList">
                                <thead>
                                    <tr>
                                        <th style="text-align:right;width:4%">#</th>
                                        <th style="text-align:left;">Client Name</th>
                                        <th style="text-align:left;">Financial Year</th>
                                        <th>Is Questionnaire Full Answered</th>
                                        <th style="text-align:right;">Agreed Fee (VAT Inclusive)</th>
                                        <th>Status</th>
                                        <th style="text-align:center">Action</th>
                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>

                        </div>

                    </div>
                </div>
            </article>

        </div>
    </section>
    <div class="modal fade" id="PreliminaryAnalysisModel">
        <div class="modal-dialog">
            <div class="modal-content ">

                <div class="modal-header alert alert-info">
                    <a href="#" class="close" data-dismiss="modal">&times;</a>
                    <h3 class="modal-title">Audit Fee</h3>
                </div>
                @Html.AntiForgeryToken()
                <div class="modal-body">

                    <div class="form-horizontal">
                        <div class="form-group">
                            <div class="col-md-3"> Amount(VAT Inclusive)<span class="redStar">*</span> </div>
                            <div class="col-md-8">
                                <amount-input id="Amount" name="Amount" style="width:80%;height:30px !important;"  maxlength="15" />
                            </div>
                        </div>
                    </div>

                </div>
                <div class="modal-footer">
                    <div class="form-group">
                        <div class="col-md-2"></div>
                        <div class="col-md-3">
                            <input type="submit" value="Submit" class="btn btn-info" onclick="preliminaryAnalysisForm()" id="btnPreliminaryAnalysis" />
                            <img src="~/Content/img/loading.gif" class="saveLoader" />
                        </div>
                        <div class="col-md-7"></div>
                    </div>

                </div>
            </div>

        </div>

    </div>

    <div class="modal fade" id="EditPreliminaryAnalysisModel">
        <div class="modal-dialog">
            <div class="modal-content ">

                <div class="modal-header alert alert-info">
                    <a href="#" class="close" data-dismiss="modal">&times;</a>
                    <h3 class="modal-title">Edit Audit Fee</h3>
                </div>
                @Html.AntiForgeryToken()
                <div class="modal-body">

                    <div class="form-horizontal">
                        <div class="form-group">
                            <div class="col-md-3"> Amount (VAT Inclusive)<span class="redStar">*</span> </div>
                            <div class="col-md-8">
                                <amount-input id="EditAmount" name="EditAmount" style="width:80%;height:30px !important;" maxlength="15" />
                            </div>
                        </div>
                    </div>

                </div>
                <div class="modal-footer">
                    <div class="form-group">
                        <div class="col-md-2"></div>
                        <div class="col-md-3">
                            <input type="submit" value="Submit" class="btn btn-info" onclick="preliminaryAnalysisEditForm()" id="btnPreliminaryAnalysis" />
                            <img src="~/Content/img/loading.gif" class="saveLoader" />
                        </div>
                        <div class="col-md-7"></div>
                    </div>

                </div>
            </div>

        </div>

    </div>
</div>

@section pagespecific {
    <!-- PAGE RELATED PLUGIN(S) -->
    <script type="text/javascript">
        $(document).ajaxStart(function () {
            $(".loadingImg").show();

        });
        //HIDE LOADER ICON
        $(document).ajaxStop(function () {
            $(".loadingImg").hide();
        });

        $(document).ready(function () {
            $(".saveLoader").toggle(false);
            BindDataTable();
        });

        var BindDataTable = function (response) {

            $("#dataTableList").DataTable({
                "bServerSide": true,
                "sAjaxSource": '@Url.Action("GetPreliminaryAnalysisPendingList", "PreliminaryAnalysis")',
                "iDisplayLength": 10,
                "aLengthMenu": [[10, 25, 50, 100], [10, 25, 50, 100]],
                "fnServerData": function (sSource, aoData, fnCallback) {
                    $.ajax({
                        type: "Get",
                        data: aoData,
                        url: sSource,
                        success: fnCallback
                    })
                },
                "aoColumns": [
                    {
                        render: function (data, type, row, meta) {
                            return meta.row + meta.settings._iDisplayStart + 1;
                        }
                    },
                    { "mData": "ClientName"},
                    { "mData": "FinancialYearName" },
                    {
                        "mData": "IsQuestionnaireFullAnswered",
                        "render": function (IsQuestionnaireFullAnswered) {
                            var getAnswer = null;
                            if (IsQuestionnaireFullAnswered) {
                                getAnswer = "YES";
                            } else {
                                getAnswer = "NO";
                            }
                            return getAnswer;
                        }
                    },
                    {
                        "mData": "AgreedAmount",
                        "render": function (AgreedAmount, type, full, meta) {
                            var amount = null;
                            if (AgreedAmount == null) {
                                amount = "<p align='right'>0</p>";
                            }
                            else {
                                amount = "<p align='right'>" + AgreedAmount.toLocaleString() + "</p>";
                            }
                            return amount;
                        }
                    },
                    { "mData": "OverallStatus" },
                    {
                        "mData": "PreliminaryAnalysisId",
                        "render": function (PreliminaryAnalysisId, type, full, meta) {
                            var editForm = 'display:none';
                            var finishForm = "display:none";
                            var auditFee = "display:none";
                            var editAuditFee = "display:none";
                            var confirmModal = "display:none";
                            if (full.OverallStatus == '@IFMIS.Areas.Coadmis.Libraries.Constants.INITIAL') {
                                finishForm = '';
                            }

                            if (full.OverallStatus == '@IFMIS.Areas.Coadmis.Libraries.Constants.PENDING') {
                                editForm = '';
                                auditFee = '';

                                if (full.CalculatedAmount != 0 && full.CalculatedAmount != null) {
                                    auditFee = "display:none";
                                    editAuditFee = "";
                                    confirmModal = "";
                                } else {
                                    auditFee = "";
                                    editAuditFee = "display:none";
                                }
                            }

                               return '<div class="btn-group" id="drop">\
                                <button type="button" class="btn btn-info btn-xs dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\
                                <span class="caret"></span\
                                <span class="sr-only"></span>\
                                </button>\
                                <ul class="dropdown-menu dropdown-menu-right">\
                                    <li><a class="dropdown-item" href="@Url.Action("PreliminaryAnalysisDetails", "PreliminaryAnalysis")/?id=' + full.PreliminaryAnalysisId + '">Details</a></li>\
                                    <li style="'+ finishForm + '"><a class="dropdown-item" href="@Url.Action("CreatePreliminaryAnalysis", "PreliminaryAnalysis")/?id=' + full.PreliminaryAnalysisId + '">Complete Form</a></li>\
                                    <li style="'+ editForm + '"><a class="dropdown-item" href="@Url.Action("EditPreliminaryAnalysis", "PreliminaryAnalysis")/?id=' + full.PreliminaryAnalysisId + '">Edit Form</a></li>\
                                   <li style="'+ auditFee + '"><a class="dropdown-item" href="#" onclick="AuditFeeForm(' + PreliminaryAnalysisId + ')">Add Audit Fee</a></li>\
                                    <li style="'+ editAuditFee + '"><a class="dropdown-item" href="#" onclick="EditAuditFeeForm(' + PreliminaryAnalysisId + ',' + full.AgreedAmount +')">Edit Audit Fee</a></li>\
                                    <li style="'+ confirmModal + '"><a href="#" onclick="confirmPreliminaryAnalysis('+ PreliminaryAnalysisId+')">Confirm</a></li>\
                                    <li><a href="#" onclick="deletePreliminaryAnalysis('+ PreliminaryAnalysisId+')">Delete</a></li>\
                                </ul>\
                            </div>\ ';
                        }
                    },
                ]
            });
        }

        function confirmPreliminaryAnalysis(id) {
            swal({
                title: 'Confirm Preliminary Analysis',
                text: "Are you sure you want to Confirm Preliminary Analysis? , This process cannot be undone",
                buttons: [
                  'No',
                  'Yes'
                ],
            }).then(function (isConfirm) {
                if (isConfirm) {
                    confirmPreliminaryAnalysisDetail(id);
                } else {
                    swal("Cancelled", "No change was made");
                }
            });

        }

        function confirmPreliminaryAnalysisDetail(id) {
            var url = '@Url.Action("ConfirmPreliminaryAnalysis", "PreliminaryAnalysis")';
            var formData = new FormData()
            formData.append('__RequestVerificationToken', $('[name=__RequestVerificationToken]').val());
            formData.append('id', id);

            $.ajax({
                url: url,
                data: formData,
                type: 'POST',
                contentType: false,
                processData: false,
                success: function (response) {
                    if (response == "Success") {
                        swal("Preliminary Analysis Confirmed Successfully!", { icon: "success" })
                            .then((value) => {
                                window.location.reload();
                            });
                    }
                    else {
                        swal("Error Confirming Preliminary Analysis, Please Contact System Support", { icon: "warning" });
                    }
                },
                failure: function (error) {
                    swal("Error Confirming Preliminary Analysis, Please Contact System Support", { icon: "warning" });
                }
            });
        }

         function deletePreliminaryAnalysis(id) {
            swal({
                title: 'Delete Preliminary Analysis',
                text: "Are you sure you want to Delete Preliminary Analysis? , This process cannot be undone",
                buttons: [
                  'No',
                  'Yes'
                ],
            }).then(function (isConfirm) {
                if (isConfirm) {
                    deletePreliminaryAnalysisDetail(id);
                } else {
                    swal("Cancelled", "No change was made");
                }
            });

        }

        function deletePreliminaryAnalysisDetail(id) {
            var url = '@Url.Action("DeletePreliminaryAnalysis", "PreliminaryAnalysis")';
            var formData = new FormData()
            formData.append('__RequestVerificationToken', $('[name=__RequestVerificationToken]').val());
            formData.append('id', id);

            $.ajax({
                url: url,
                data: formData,
                type: 'POST',
                contentType: false,
                processData: false,
                success: function (response) {
                    if (response == "Success") {
                        swal("Preliminary Analysis Deleted Successfully!", { icon: "success" })
                            .then((value) => {
                                window.location.reload();
                            });
                    }
                    else {
                        swal("Error Deleting Preliminary Analysis, Please Contact System Support", { icon: "warning" });
                    }
                },
                failure: function (error) {
                    swal("Error Deleting Preliminary Analysis, Please Contact System Support", { icon: "warning" });
                }
            });
        }
        var preliminaryAnalysisId = null;
        function AuditFeeForm(id) {
            preliminaryAnalysisId = id;
            $('#PreliminaryAnalysisModel').modal('show');
        }

        var Amount = null;
        function EditAuditFeeForm(id, amount) {
            preliminaryAnalysisId = id;
            //$('#EditAmount').text(amount);
            document.getElementById("_EditAmount").value = amount.toLocaleString();
            $('#EditPreliminaryAnalysisModel').modal('show');
        }

        function preliminaryAnalysisForm() {
            var Amount = $("#Amount").val();
        successMessage = "Preliminary Analysis Audit Fee Added Successfully";
        failureMessage = "Error in Adding Preliminary Analysis Audit Fee";

         if (Amount == '' || Amount <= 0 || Amount == null) {
          swal("Please Enter Valid Amount");
           $(".loadingImg").hide();
           $("#btnPreliminaryAnalysis").prop('disabled', false);
           $(".saveLoader").toggle(false);
            return false;
        }


        var formData = new FormData()
        formData.append('__RequestVerificationToken', $('[name=__RequestVerificationToken]').val());
        formData.append('id', preliminaryAnalysisId);
        formData.append('Amount', Amount);

        swal({
            text: "Preliminary Analysis Add Audit Fee",
            buttons: [
              'No',
              'Yes'
            ],
        }).then(function (isConfirm) {
            if (isConfirm) {
                postFormData(formData);
            } else {
                swal("Cancelled", "No change was made");
                $("#btnPreliminaryAnalysis").prop('disabled', false);
            }
        });
      }
        function preliminaryAnalysisEditForm() {
            var Amount = $("#_EditAmount").val();
            successMessage = "Preliminary Analysis Audit Fee Updated Successfully";
            failureMessage = "Error in Updating Preliminary Analysis Audit Fee";

            if (Amount == '' || Amount <= 0 || Amount == null) {
                swal("Please Enter Valid Amount");
                $(".loadingImg").hide();
                $("#btnPreliminaryAnalysis").prop('disabled', false);
                $(".saveLoader").toggle(false);
                return false;
            }


            var formData = new FormData()
            formData.append('__RequestVerificationToken', $('[name=__RequestVerificationToken]').val());
            formData.append('id', preliminaryAnalysisId);
            formData.append('Amount', Amount);

            swal({
                text: "Preliminary Analysis Edit Audit Fee",
                buttons: [
                    'No',
                    'Yes'
                ],
            }).then(function (isConfirm) {
                if (isConfirm) {
                    postFormData(formData);
                } else {
                    swal("Cancelled", "No change was made");
                    $("#btnPreliminaryAnalysis").prop('disabled', false);
                }
            });
        }
        function postFormData(formData) {
            $(".loadingImg").show();
            $("#btnPreliminaryAnalysis").prop('disabled', true);
            $(".saveLoader").toggle(true);
            var url = '@Url.Action("AuditFeeCalculation", "PreliminaryAnalysis")';
            $.ajax({
                url: url,
                data: formData,
                type: 'POST',
                contentType: false,
                processData: false,
                success: function (response) {
                    $('#PreliminaryAnalysisModel').modal('hide');
                    $("#btnPreliminaryAnalysis").prop('disabled', true);
                    $(".saveLoader").toggle(true);
                    if (response == "Success") {
                        swal(successMessage, { icon: "success" })
                            .then((m) => {
                                window.location.reload();
                            });
                    } else {
                        $("#btnPreliminaryAnalysis").prop('disabled', false);
                        $(".saveLoader").toggle(false);
                        swal(failureMessage + ": " + response, { icon: "warning" });
                    }
                },
                failure: function (error) {
                    $("#btnPreliminaryAnalysis").prop('disabled', false);
                    $(".saveLoader").toggle(false);
                    swal(failureMessage, { icon: "warning" });
                }
            });
        }

    </script>
}




