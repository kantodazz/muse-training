@model IFMIS.Areas.Coadmis.Models.AuditorVM
@{
    ViewBag.Title = "Add Auditor";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style type="text/css">
    .loadingImg {
        display: none;
    }
    .search-btn {
        border: 1px solid #ccc;
        border-radius: 4px;
        padding: 5px;
        padding-right: 10px;
    }

    .search-container {
        display: inline-flex;
        flex: 1 1 300px;
        position: relative;
        border: 1px solid #ccc;
        border-radius: 5px;
        overflow: hidden;
        padding-left: 10px;
    }

    .name-input-container {
        display: inline-flex;
        flex: 1 1 300px;
        position: relative;
        overflow: hidden;
    }

    .search-icon {
        padding: 0.5rem;
    }

    .search-button {
        background: #538AC5;
        border: 0;
        color: white;
        padding: 8px;
        border-radius: 0;
    }

    input[type=number] {
        padding: 8px;
        border: 1px solid #ccc;
        width: 205px;
    }

    input[type=text] {
        padding: 5px;
        border: 1px solid #ccc;
    }

    input[type=search] {
        padding: 4px;
        border: hidden;
        border-radius: 4px;
    }

    textarea {
        border: 1px solid #ccc;
    }

    select {
        padding: 8px;
        border: 1px solid #ccc;
        resize: vertical;
        width: 230px;
    }

    .action-btn {
        width: 100px;
        color: white;
    }

    .form-label {
        text-align: right;
    }

    td {
        padding: 5px;
    }

    .info-box {
        padding: 10px;
        background-color: #ECF3F8;
        text-align: center;
        border: 1px solid #ccc;
        border-radius: 5px;
    }

    #itemUL li {
        margin-left: -40px;
        border-bottom: 1px solid silver;
        height: 26px;
        padding-left: 5px;
        padding-top: 8px;
        cursor: pointer;
    }

    .redStar {
        color: red;
        font-size: 15px;
    }

</style>
<div id="content" style="margin: 5px;">
    <div class="row"></div>
    <!-- widget grid -->
    <section id="widget-grid" class="">
        <div class="row">
            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">

                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">

                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2> @ViewBag.Title</h2>
                    </header>

                    <div>
                        <div class="widget-body " style="padding-top:10px;width:100%">
                            <div class="row setup-content">
                                @Html.AntiForgeryToken()
                                <form>
                                    <div class="form-horizontal">
                                        <input type="hidden" name="_UserId" id="_UserId" />
                                        <div class="col-xs-12">
                                            <div class="col-md-12">

                                                <div class="form-group">
                                                    <label class="control-label col-md-2">User Name / Check Number<span class="redStar">*</span></label>
                                                    <div class="col-md-8">
                                                        <input type="text" required name="UserId" id="UserId" class="form-control" placeholder="Enter Employee's Username or checknumber" style="width:100%" />
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-12">
                                                <div class="form-group">
                                                    <label class="control-label col-md-2">First Name<span class="redStar">*</span></label>
                                                    <div class="col-md-3">
                                                        @Html.TextBoxFor(model => model.FirstName, new { @Class = "input", @required = "required", style = "width:100%; ", @readonly = true })
                                                    </div>
                                                    <label class="control-label col-md-2">Middle Name</label>
                                                    <div class="col-md-3 collateralUsage">
                                                        @Html.TextBoxFor(model => model.MiddleName, new { @Class = "input", @required = "required", style = "width:100%; " })
                                                    </div>

                                                </div>

                                                <div class="form-group">
                                                    <label class="control-label col-md-2">Last Name<span class="redStar">*</span></label>
                                                    <div class="col-md-3">
                                                        @Html.TextBoxFor(model => model.LastName, new { @Class = "input", @required = "required", style = "width:100%; ", @readonly = true })
                                                    </div>

                                                    <label class="control-label col-md-2">Check Number</label>
                                                    <div class="col-md-3">
                                                        @Html.TextBoxFor(model => model.CheckNumber, new { @Class = "input", @required = "required", style = "width:100%; " })
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    <label class="control-label col-md-2">Professional<span class="redStar">*</span></label>
                                                    <div class="col-md-3 collateralUsage">
                                                        @*@Html.TextBoxFor(model => model.Professional, new { @Class = "input", @required = "required", style = "width:100%; " })*@
                                                        @if (ViewBag.Professional != null)
                                                        {
                                                            @Html.DropDownListFor(model => model.Professional, ViewBag.Professional as SelectList, new { @class = "select2 form-select", @id = "Professional", multiple = "multiple" })
                                                            @Html.ValidationMessageFor(model => model.Professional, "", new { @class = "text-danger" })

                                                        }
                                                        else
                                                        {
                                                            @Html.DropDownList("Professional", null, "Select Professional", new { @class = "form-control select2" })

                                                        }
                                                        @*@Html.ListBoxFor(model => model.Professional, ViewBag.Professional, new { @class = "form-control", id = "Professional", multiple = "multiple" })*@
                                                    </div>

                                                    <label class="control-label col-md-2">Phone Number<span class="redStar">*</span></label>
                                                    <div class="col-md-3 collateralUsage">
                                                        @Html.TextBoxFor(model => model.PhoneNumber, new { @Class = "input", @required = "required", style = "width:100%; ", @type = "text", @readonly = true })
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    <label class="control-label col-md-2">Email Address<span class="redStar">*</span></label>
                                                    <div class="col-md-3">
                                                        @Html.TextBoxFor(model => model.EmailAddress, new { @Class = "input", @required = "required", style = "width:100%; " })
                                                    </div>
                                                    <label class="control-label col-md-2">Address<span class="redStar">*</span></label>
                                                    <div class="col-md-3 collateralUsage">
                                                        @Html.TextBoxFor(model => model.Address, new { @Class = "input", @required = "required", style = "width:100%; " })
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    <label class="control-label col-md-2">Position <span class="redStar">*</span></label>
                                                    <div class="col-md-3">
                                                        @if (ViewBag.Positions != null)
                                                        {
                                                            @Html.DropDownListFor(model => model.PositionId, ViewBag.Positions as SelectList, "Select Position", new { @class = "form-control select2" })
                                                            @Html.ValidationMessageFor(model => model.PositionId, "", new { @class = "text-danger" })

                                                        }
                                                        else
                                                        {
                                                            @Html.DropDownList("PositionId", null, "Select Position", new { @class = "form-control select2" })

                                                        }
                                                    </div>
                                                    <label class="control-label col-md-2">Status<span class="redStar">*</span></label>
                                                    <div class="col-md-3">
                                                        @Html.DropDownList("Status", new List<SelectListItem>{
                                                          new SelectListItem{ Text="--Select ---", Value = "" },
                                                          new SelectListItem{ Text="Active", Value = "Active" },
                                                          new SelectListItem{ Text="Inactive", Value = "Inactive" },
                                                           }, new { @class = "form-control select2", @required = "required" })
                                                        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    @*<label class="control-label col-md-2">Working Location <span class="redStar">*</span></label>
                                                    <div class="col-md-8">
                                                        @if (ViewBag.Regions != null)
                                                        {
                                                            @Html.DropDownListFor(model => model.RegionId, ViewBag.Regions as SelectList, "Select Region Name", new { @class = "form-control select2" })
                                                            @Html.ValidationMessageFor(model => model.RegionId, "", new { @class = "text-danger" })

                                                        }
                                                        else
                                                        {
                                                            @Html.DropDownList("RegionId", null, "Select Location", new { @class = "form-control select2" })

                                                        }
                                                    </div>*@

                                                    @Html.Label("Working Location", htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-3" style="padding-left: 5px">
                                                        <a class="search-btn" onclick="ChoseLocation()" href="#" style="display:block;border:1px solid #ccc;padding:8px">
                                                            <i class="fa fa-money"></i>
                                                            Add Location...(<strong id="totalLocation"></strong>)
                                                        </a>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </form>
                                <div class="col-md-2"></div>
                                <div class="col-md-3">
                                    <a href="@Url.Action("AuditorList", "Auditor")" style="margin-right:5px" type="submit" class="btn btn-info pull-left"><i class="glyphicon glyphicon-arrow-left"></i> Back  </a>
                                    <button type="submit" class="btn btn-info" onclick="saveAditorsForm()" id="saveAuditorsBtn">
                                        <i class="fa fa-save"></i>Save
                                        <img src="~/Content/img/loading.gif" class="loadingImg" />
                                    </button>
                                </div>
                            </div>
                            </div>

                    </div>
                </div>
            </article>

        </div>
    </section>

</div>

<div id="createWorkingDialog" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="lblmodal">
    <div class="modal-dialog" style="width: 60%">
        <div class="modal-content">
            <div class="modal-header" style="background-color: #b3e5fc;">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h3 class="modal-title" id="btnSave">Add Auditor Working Zone </h3>
            </div>
            <div class="modal-body">
                <div class="form-horizontal">
                    <div class="form-group">
                        @Html.LabelFor(model => model.RegionId, htmlAttributes: new { @class = "control-label col-md-2", @style = "padding-right: 5px" })
                        <div class="col-md-8">
                            @if (ViewBag.Regions != null)
                            {
                                @Html.DropDownListFor(model => model.RegionId, ViewBag.Regions as SelectList, "Select Region Name", new { @class = "form-control select2" })
                                @Html.ValidationMessageFor(model => model.RegionId, "", new { @class = "text-danger" })

                            }
                            else
                            {
                                @Html.DropDownList("RegionId", null, "Select Location", new { @class = "form-control select2" })

                            }
                        </div>
                       
                    </div>
                    <div id="divWorkingZone"></div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-info btn-size" style="width:100px;" id="addWorkingZoneId">
                    <i class="fa fa fa-plus"> Add</i>
                </button>
                <button class="btn btn-danger btn-size" data-dismiss="modal" style="width:100px;">
                    <i class="fa fa-times ico"></i> Close
                </button>
            </div>
        </div>
    </div>
</div>

@section pagespecific {
    <!-- PAGE RELATED PLUGIN(S) -->
    <script type="text/javascript">

        function ChoseLocation() {
            //debugger;
            $(".modal-title").text("Add Working Zone");
            $("#btnSaveWorkingZone").show();
            $("#createWorkingDialog").modal("show");
        };

        var workingZoneLists = [];

        $("#addWorkingZoneId").click(function () {
            //debugger;
            if ($("#RegionId").val() == "") {
                return false;
            }

            var regionId = $('#RegionId').val();
            var regionName = $('#RegionId option:selected').text();

            workingZoneLists.push({
                RegionId: regionId,
                RegionName: regionName,
            });

            GenerateWorkZoneTable();
        });

        function GenerateWorkZoneTable() {
            //debugger;
            if (workingZoneLists.length > 0) {
                var $table = $('<table class="table table-condensed table-stripped table-hover table-bordered"/>');
                $table.append('<thead>' +
                    '<tr><th colspan="4">Added Working Zone</th>' +
                    '<tr><th>#</th><th style="text-align: center">Region</th>' +
                    '<th style="text-align: center"> Action</th>' +
                    '</tr>' +
                    '</thead>');
                var $tbody = $('<tbody/>');
                var $tfoot = $('<tfoot/>');
                var j = 0;
                $.each(workingZoneLists, function (i, val) {
                    ++j;
                    var $row = $('<tr/>');
                    $row.append($('<td/>').html(j));
                    $row.append($('<td/>').html(val.RegionName));
                    var $remove = $('<a href="#"><span class="glyphicon glyphicon-trash" aria-hidden="true"></span></a>');
                    $remove.click(function (e) {
                        e.preventDefault();
                        workingZoneLists.splice(i, 1);
                        GenerateWorkZoneTable();
                        $("#addWorkingZoneId").attr("disabled", false);
                    });
                    $row.append($('<td/>').html($remove));
                    $tbody.append($row);

                });
                $rowAmount = $('<tr/>');
                $table.append($tbody);
                $table.append($tfoot);
                $('#divWorkingZone').html($table);
                $("#Cost").val("");
                $("#NumberOfKeys").val("");
                $("#addWorkingZoneId").attr("disabled", false);
            } else {
                $('#divWorkingZone').html('');
                $("#addWorkingZoneId").attr("disabled", true);
            }

            $("#totalLocation").text(j);
        }


        //SHOW LOADER ICON
        $(document).ajaxStart(function () {
            $(".loadingImg").show();

        });
        //HIDE LOADER ICON
        $(document).ajaxStop(function () {
            $(".loadingImg").hide();
        });

         $(function () {
            var url = '@Url.Action("GetEmployees", "Auditor")';

            $("#UserId").select2({
                minimumInputLength: 4,  // minimumInputLength for sending ajax request to server
                width: 'resolve',   // to adjust proper width of select2 wrapped elements
                placeholder: 'Select Employee',
                ajax: {
                    url: url, // Controller - Select2Demo and Action -AccessRemoteData
                    type: "POST",
                    dataType: 'json',
                    data: function (term) {
                        return {
                            term: term
                        };
                    },
                    results: function (data, page) {
                        return { results: data.employees }; // data.CountryList returning json data from Controlle
                    }
                }
            });
        });

        $('#UserId').on("change", function () {
            var employeeId = $("#UserId").val();
            var url2 = '@Url.Action("GetEmployee", "Auditor")';
            $.ajax({
                type: "POST",
                url: url2,
                data: { id: employeeId },
                success: function (data, status, jqXHR) {
                    if (data.success) {
                        console.log("data: ", data);
                        $("#CheckNumber").val(data.CheckNumber);
                        $("#UserName").val(data.UserName);
                        $("#FirstName").val(data.FirstName);
                        $("#MiddleName").val(data.MiddleName);
                        $("#LastName").val(data.LastName);
                        $("#PhoneNumber").val(data.PhoneNumber);
                        $("#EmailAddress").val(data.Email);
                        $("#_UserId").val(data.UserId);
                    } else {
                        alert('Error on accessing employee details');
                    }
                },
                error: function () {
                    alert("Error on accessing employee details");
                }
            })
        });

        var workingZoneData = [];
        function saveAditorsForm() {
            //debugger;
            var errorMessage = [];
            var firstName = $("#FirstName").val();
            var middleName = $("#MiddleName").val();
            var lastName = $("#LastName").val();
            var position = $("#PositionId").val();
            var checkNumber = $("#CheckNumber").val();
            var phoneNumber = $("#PhoneNumber").val();
            var emailAddress = $("#EmailAddress").val();
            var address = $("#Address").val();
            var professional = $("#Professional").val();
            console.log("professional: ", professional);
            //var regionId = $("#RegionId").val();
            var status = $("#Status").val();
            var professionalId = $("#ProfessionalId").val();

            if(firstName == '' || lastName == '' || position == '' ||
                phoneNumber == '' || emailAddress == '' || address == '' || professional.length == 0 ||
                status == '' || professionalId==''){
                if (firstName == '') {
                    errorMessage.push("First Name");
            }
            if (lastName == '') {
                    errorMessage.push("Last Name");
            }

            if (position == '') {
                    errorMessage.push("Position");
            }

            if (phoneNumber == '') {
                    errorMessage.push("Phone Number");
            }

            if (emailAddress == '') {
                    errorMessage.push("Email Address");
            }

            if (address == '') {
                    errorMessage.push("Address");
            }

            if (professional.length == 0) {
                    errorMessage.push("Professional");
            }

            if (status == '') {
                    errorMessage.push("Status");
            }

            //if (regionId == '') {
            //        errorMessage.push("Region");
            //}

            swal("Please fill the correct values for fields: " + errorMessage);
            $(".loadingImg").toggle(false);
            $("#saveAuditorsBtn").prop('disabled', false);
                return false;
            }
            else {
             var _userId = $("#_UserId").val();
            if (phoneNumber != null) {

                if (phoneNumber.substr(0, 1) != "0" && phoneNumber.substr(0, 3) != "255" && phoneNumber.substr(0, 4) != "+255") {
                swal("Please enter valid Phone Number example 0700000000 or 255700000000", { icon: "warning" });
                $(".loadingImg").toggle(false);
                $("#saveAuditorsBtn").prop('disabled', false);
                return false;
            }

            if (phoneNumber.substr(0, 1) == "0") {
                if ((phoneNumber.toString().length != 10 || phoneNumber < 0 || phoneNumber == 0)) {
                    swal("Please enter valid Phone Number example 0700000000 or 255700000000", { icon: "warning" });
                    $(".loadingImg").toggle(false);
                    $("#saveAuditorsBtn").prop('disabled', false);
                    return false;
                }
            }
            if (phoneNumber.substr(0, 3) == "255" ) {
                if ((phoneNumber.toString().length != 12 || phoneNumber < 0 || phoneNumber == 0)) {
                    swal("Please enter valid Phone Number example 0700000000 or 255700000000", { icon: "warning" });
                    $(".loadingImg").toggle(false);
                    $("#saveAuditorsBtn").prop('disabled', false);
                    return false;
                }
            }
            if (phoneNumber.substr(0, 4) == "+255") {
                if ((phoneNumber.toString().length != 13 || phoneNumber < 0 || phoneNumber == 0)) {
                    swal("Please enter valid Phone Number example 0700000000 or 255700000000", { icon: "warning" });
                    $(".loadingImg").toggle(false);
                    $("#saveAuditorsBtn").prop('disabled', false);
                    return false;
                }
            }

            }

                 var formData = new FormData()
                formData.append('__RequestVerificationToken', $('[name=__RequestVerificationToken]').val());
                formData.append('FirstName', firstName);
                formData.append('MiddleName', middleName);
                formData.append('LastName', lastName);
                formData.append('PositionId', position);
                formData.append('CheckNumber', checkNumber);
                formData.append('PhoneNumber', phoneNumber);
                formData.append('EmailAddress', emailAddress);
                formData.append('Address', address);
                formData.append('Professional', professional);
                formData.append('Status', status);
                //formData.append('RegionId', regionId);
                formData.append('ProfessionalId', professionalId);
                formData.append('UserId', _userId);

                for (var i = 0; i < workingZoneLists.length; i++) {
                    formData.append("WorkingZoneDetails[" + i + "].RegionId", workingZoneLists[i].RegionId);
                    formData.append("WorkingZoneDetails[" + i + "].RegionName", workingZoneLists[i].RegionName);
                };

                postFormData(formData);
            }
        }

    function postFormData(formData) {
        url = '@Url.Action("SaveAuditors", "Auditor")';

        $("#saveAuditorsBtn").prop('disabled', true);
        $(".loadingImg").toggle(true);
        $.ajax({
            url: url,
            data: formData,
            type: 'POST',
            contentType: false,
            processData: false,
            success: function (response) {
                $("#saveAuditorsBtn").prop('disabled', true);
                $(".loadingImg").toggle(true);
                if (response == "Success") {
                    swal("Saved Successfully!", { icon: "success" })
                        .then((m) => {
                           var url = '@Url.Action("AuditorList", "Auditor")';
                           window.location.replace(url);
                        });
                } else {
                    $("#saveAuditorsBtn").prop('disabled', false);
                    $(".loadingImg").toggle(false);
                    swal(response)
                }
            },
            failure: function (error) {
                $("#saveAuditorsBtn").prop('disabled', false);
                $(".loadingImg").toggle(false);
                swal("An error occured: ",response)
            }
        });
    }
    </script>
}




