@model IFMIS.Areas.Coadmis.Models.AuditableAreaAssignmentVM
@{
    ViewBag.Title = "Edit Auditable Area Assignment";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<style type="text/css">
    .loadingImg {
        display: none;
    }
    .search-btn {
        border: 1px solid #ccc;
        border-radius: 4px;
        padding: 5px;
        padding-right: 10px;
    }

    .search-container {
        display: inline-flex;
        flex: 1 1 300px;
        position: relative;
        border: 1px solid #ccc;
        border-radius: 5px;
        overflow: hidden;
        padding-left: 10px;
    }

    .name-input-container {
        display: inline-flex;
        flex: 1 1 300px;
        position: relative;
        overflow: hidden;
    }

    .search-icon {
        padding: 0.5rem;
    }

    .search-button {
        background: #538AC5;
        border: 0;
        color: white;
        padding: 8px;
        border-radius: 0;
    }

    input[type=number] {
        padding: 8px;
        border: 1px solid #ccc;
        width: 205px;
    }

    input[type=text] {
        padding: 5px;
        border: 1px solid #ccc;
    }

    input[type=search] {
        padding: 4px;
        border: hidden;
        border-radius: 4px;
    }

    textarea {
        border: 1px solid #ccc;
    }

    select {
        padding: 8px;
        border: 1px solid #ccc;
        resize: vertical;
        width: 230px;
    }

    .action-btn {
        width: 100px;
        color: white;
    }

    .form-label {
        text-align: right;
    }

    td {
        padding: 5px;
    }

    .info-box {
        padding: 10px;
        background-color: #ECF3F8;
        text-align: center;
        border: 1px solid #ccc;
        border-radius: 5px;
    }

    #itemUL li {
        margin-left: -40px;
        border-bottom: 1px solid silver;
        height: 26px;
        padding-left: 5px;
        padding-top: 8px;
        cursor: pointer;
    }

    .redStar {
        color: red;
        font-size: 15px;
    }
</style>
<div id="content" style="margin: 5px;">
    <div class="row"></div>
    <!-- widget grid -->
    <section id="widget-grid" class="">
        <div class="row">
            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">

                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">

                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2> @ViewBag.Title</h2>
                    </header>

                    <div>
                        <div class="widget-body " style="padding-top:10px;width:100%">
                            <div class="row setup-content">
                    
                                @Html.AntiForgeryToken()
                                <form>
                                    <div class="form-horizontal">
                                        <div class="col-xs-12">
                                            <div class="col-md-12">
                                                <div class="form-group">
                                                    <label class="control-label col-md-2">Client Name<span class="redStar">*</span></label>
                                                    <div class="col-md-3">
                                                        @Html.DropDownList("ClientInformationId", Model.ClientList, "Select Client", new { @class = "form-control select2", @required = "required" })
                                                    </div>

                                                    <label class="control-label col-md-2">Financial Year<span class="redStar">*</span></label>
                                                    <div class="col-md-3">
                                                        @Html.TextBoxFor(model => model.FinancialYearId, new { @Class = "form-control select2", style = "width:100%;", @readonly = "readonly" })
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    <label class="control-label col-md-2">Auditable Area<span class="redStar">*</span></label>
                                                    <div class="col-md-8">
                                                        @Html.DropDownList("AuditableAreaId", Model.AuditableAreaList, "Select Auditable Area", new { @class = "form-control select2", @required = "required" })
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    <label class="control-label col-md-2">Auditable Item<span class="redStar">*</span></label>
                                                    <div class="col-md-3">
                                                        <select id="AuditableItemId"  name="AuditableItemId" class="form-control">

                                                            @if (ViewBag.AuditableAreaItemList != null)
                                                            {
                                                                foreach (var auditableAreaItem in ViewBag.AuditableAreaItemList)
                                                                {
                                                                    if (ViewBag.AuditableAreaItemId == auditableAreaItem.AuditableAreaItemId)
                                                                    {
                                                                        <option value='@auditableAreaItem.AuditableAreaItemId' selected>@auditableAreaItem.Name</option>
                                                                    }
                                                                    else
                                                                    {
                                                                        <option value='@auditableAreaItem.AuditableAreaItemId'>
                                                                            @auditableAreaItem.Name
                                                                        </option>
                                                                    }
                                                                }
                                                            }
                                                        </select>
                                                    </div>

                                                    <label class="control-label col-md-2">Item Description<span class="redStar"></span></label>
                                                    <div class="col-md-3">
                                                        @Html.TextBoxFor(model => model.Description, new { @Class = "input", style = "width:100%; " })
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    <label class="control-label col-md-2">Status<span class="redStar">*</span></label>
                                                    <div class="col-md-3">
                                                        @Html.DropDownList("Status", new List<SelectListItem>{
                                                          new SelectListItem{ Text="--Select ---", Value = "" },
                                                          new SelectListItem{ Text="Active", Value = "Active" },
                                                          new SelectListItem{ Text="Inactive", Value = "Inactive" },
                                                           }, new { @class = "form-control", @required = "required" })
                                                        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </form>
                                <div class="col-md-2"></div>
                                <div class="col-md-3">
                                    <a href="@Url.Action("AuditableAreaAssignmentList", "AuditableAreaAssignment")" style="margin-right:5px" type="submit" class="btn btn-info pull-left"><i class="glyphicon glyphicon-arrow-left"></i> Back  </a>
                                    <button type="submit" class="btn btn-info" id="updateAuditableAreaAssign">
                                        <i class="fa fa-save"></i>Update
                                        <img src="~/Content/img/loading.gif" class="loadingImg" id="saveLoader" />
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </article>
        </div>
    </section>
</div>
@section pagespecific {
    <script type="text/javascript">
        $(document).ajaxStart(function () {
            $(".loadingImg").show();

        });
        //HIDE LOADER ICON
        $(document).ajaxStop(function () {
            $(".loadingImg").hide();
        });

         var financialYearId = null;
        var financialYearName = null;
        document.getElementById("FinancialYearId").style.backgroundColor = 'white';
         $("#ClientInformationId").change(function () {
            var clientInformationId = $(this).val();
            $.ajax({
                url: '@Url.Action("GetFinancialYearByClientInformationId", "AuditableAreaAssignment")/?clientInformationId=' + clientInformationId,
                type: "GET",
                dataType: "json",
                success: function (response) {
                    financialYearId = response.accountingFinancialYearId;
                    financialYearName = response.financialYearName;
                    document.getElementById("FinancialYearId").value = response.financialYearName;
                }
            });
         });

        $(document).ready(function () {
             $.ajax({
                url: '@Url.Action("GetFinancialYearByClientInformationId", "AuditableAreaAssignment")/?clientInformationId=' + '@ViewBag.ClientInformationId',
                type: "GET",
                dataType: "json",
                success: function (response) {
                    financialYearId = response.accountingFinancialYearId;
                    financialYearName = response.financialYearName;
                    document.getElementById("FinancialYearId").value = response.financialYearName;
                }
             });
        });

        $("#AuditableAreaId").change(function () {
            var id = $(this).val();
            if (id != "") {

                var option = [];
                $.ajax({
                    url: '@Url.Action("GetAuditableItemById", "AuditableAreaAssignment")/?id=' + id,
                    type: "GET",
                    dataType: "json",
                    success: function (data) {
                        option.empty;
                        option.push('<option value="">Select Auditable Item </option>');
                        data.data.forEach(d => {
                            option.push('<option value=' + d["itemId"] + '>' + d["Name"] + '</option>');
                        });
                        option = option.toString().replace(",", "").replace("[", "").replace("]", "");
                        $("#AuditableItemId").html(option);
                    }
                });
            }
        });


        $("#saveLoader").toggle(false);
        $("#updateAuditableAreaAssign").click(function ()
        {
            debugger;
            var clientInformationId = $("#ClientInformationId").val();
            var clientName = $("#ClientInformationId option:selected").text();
            var auditableAreaId = $("#AuditableAreaId").val();
            var auditableAreaName = $("#AuditableAreaId option:selected").text();
            var description = $("#Description").val();
            var auditableItemId = $("#AuditableItemId").val();
            var auditableItemName = $("#AuditableItemId option:selected").text();

            var status = $("#Status").val();

            if (clientInformationId == '' || financialYearId == '' || auditableAreaId == '' || auditableItemId == '' || status == '') {
                swal("Please Fill All the required Fields", { icon: "warning" });
                return false;
            }

            var formdata = new FormData();
            formdata.append("__RequestVerificationToken", $('[name=__RequestVerificationToken]').val());
            formdata.append("AuditableAreaAssignId", '@ViewBag.AuditableAreaAssignId');
            formdata.append("ClientInformId", clientInformationId);
            formdata.append("ClientName", clientName);
            formdata.append("FinancialYearId", financialYearId);
            formdata.append("FinancialYearName", financialYearName);
            formdata.append("AuditableAreaId", auditableAreaId);
            formdata.append("AuditableAreaName", auditableAreaName);
            formdata.append("Description", description);
            formdata.append("AuditableItemId", auditableItemId);
            formdata.append("AuditableItemName", auditableItemName);
            formdata.append("Status", status);

             var url = '@Url.Action("UpdateAuditableAreaAssignment", "AuditableAreaAssignment")';
            var urlList = '@Url.Action("AuditableAreaAssignmentList", "AuditableAreaAssignment")';
            $("#saveAuditableAreaAssign").prop('disabled', true);
            $("#saveLoader").toggle(true);

            $.ajax({
                url: url,
                data: formdata,
                type: 'POST',
                contentType: false,
                processData: false,
                success: function (response) {
                    $("#saveAuditableAreaAssign").prop('disabled', false);
                    $("#saveLoader").toggle(false);
                    if (response == "Success") {
                        swal("Assigned Successfully!", { icon: "success" })
                            .then((value) => {
                                window.location.href = urlList;
                            });
                    }
                    else {
                        swal(response);
                    }
                },
                failure: function (error) {
                    $("#saveAuditableAreaAssign").prop('disabled', false);
                    $("#saveLoader").toggle(false);
                    swal(error);
                }
            });
        })
    </script>
}