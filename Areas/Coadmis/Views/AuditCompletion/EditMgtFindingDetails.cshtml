@model IFMIS.Areas.Coadmis.DTO.AuditCompletionVM
@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "recommendationsEditForm", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
<div class="form-horizontal">
    <div class="form-group">
        @Html.HiddenFor(model => model.ManagementAuditorCommentId)
        @Html.ValidationMessageFor(model => model.ClientName, "", new { @class = "text-danger" })
        @Html.LabelFor(model => model.ClientName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ClientName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.ClientName, "", new { @class = "text-danger" })
        </div>
    </div>
    <hr/>
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.AuditableAreaId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.AuditableAreaName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.AuditableAreaId, "", new { @class = "text-danger" })
        </div>
        @Html.LabelFor(model => model.FwSummaryFindingId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.FindingName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.FwSummaryFindingId, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">        
        @Html.LabelFor(model => model.Criteria, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.TextAreaFor(model => model.Criteria, new { @class = "form-control", @cols = 10, @rows = 3, @style = "resize:both;" })
            @*@Html.EditorFor(model => model.Recomendation, new { htmlAttributes = new { @class = "form-control", @readOnly = true } })*@
            @Html.ValidationMessageFor(model => model.Criteria, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Causes, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.TextAreaFor(model => model.Causes, new { @class = "form-control", @cols = 10, @rows = 3, @style = "resize:both;" })
            @Html.ValidationMessageFor(model => model.Causes, "", new { @class = "text-danger" })
        </div>
        @Html.LabelFor(model => model.Condition, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.TextAreaFor(model => model.Condition, new { @class = "form-control", @cols = 10, @rows = 3, @style = "resize:both;" })
            @Html.ValidationMessageFor(model => model.Condition, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Consequence, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.TextAreaFor(model => model.Consequence, new { @class = "form-control", @cols = 10, @rows = 3, @style = "resize:both;" })
            @*@Html.EditorFor(model => model.Consequence, new { htmlAttributes = new { @class = "form-control", @readOnly = true } })*@
            @Html.ValidationMessageFor(model => model.Consequence, "", new { @class = "text-danger" })
        </div>
        @Html.LabelFor(model => model.Recomendation, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.TextAreaFor(model => model.Recomendation, new { @class = "form-control", @cols = 10, @rows = 3, @style = "resize:both;" })
            @*@Html.EditorFor(model => model.Recomendation, new { htmlAttributes = new { @class = "form-control", @readOnly = true } })*@
            @Html.ValidationMessageFor(model => model.Recomendation, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ManagementResponse, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.TextAreaFor(model => model.ManagementResponse, new { @class = "form-control", @cols = 10, @rows = 3, @style = "resize:both;" })
            @*@Html.TextAreaFor(model => model.ManagementResponse, new { htmlAttributes = new { @class = "form-control" } })*@
            @Html.ValidationMessageFor(model => model.ManagementResponse, "", new { @class = "text-danger" })
        </div>
        @Html.LabelFor(model => model.AuditorComment, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.TextAreaFor(model => model.AuditorComment, new { @class = "form-control", @cols = 10, @rows = 3, @style = "resize:both;" })
            @*@Html.TextAreaFor(model => model.AuditorComment, new { htmlAttributes = new { @class = "form-control" } })*@
            @Html.ValidationMessageFor(model => model.AuditorComment, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FindingStatusId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.DropDownListFor(model => model.FindingStatusId, ViewBag.FindingStatus as SelectList, "Select status", new { @class = "form-control select2" })
            @Html.ValidationMessageFor(model => model.FindingStatusId, "", new { @class = "text-danger" })
        </div>
    </div>
</div>
}
@section pagespecific {
    <script type="text/javascript">

    </script>
}