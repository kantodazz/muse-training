@model IFMIS.Areas.Coadmis.DTO.MgtSummaryResponseVM
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div id="content" style="margin: 5px; padding-top: 30px">
    <div id="divLoader"></div>
    <br/>
    <div class="row">
        <div class="col-xs-12 col-sm-3 col-md-3 col-lg-3">
            <!-- Button trigger modal -->
            <!--<a data-toggle="modal" href="#myModal" class="btn btn-success btn-lg pull-right header-btn hidden-mobile"><i class="fa fa-circle-arrow-up fa-lg"></i> Launch form modal</a>-->
        </div>
    </div>
    <!--
    <div class="alert alert-block alert-success">
        <a class="close" data-dismiss="alert" href="#">×</a>
        <h4 class="alert-heading"><i class="fa fa-check-square-o"></i> Check validation!</h4>
        <p>
            You may also check the form validation by clicking on the form action button. Please try and see the results below!
        </p>
    </div>
        -->
    <!-- widget grid -->
    <section id="widget-grid" class="">
        <!----->
        <!-- START ROW -->

        <div class="row">

            <!-- NEW COL START -->
            <div class="col-sm-12 col-md-12 col-lg-12">

                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">
                    <!-- widget options:
                        usage: <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false">
                        data-widget-colorbutton="false"
                        data-widget-editbutton="false"
                        data-widget-togglebutton="false"
                        data-widget-deletebutton="false"
                        data-widget-fullscreenbutton="false"
                        data-widget-custombutton="false"
                        data-widget-collapsed="true"
                        data-widget-sortable="false"
                    -->
                    <header>
                        <span class="widget-icon"> <i class="fa fa-table"></i> </span>
                        <h2> Modify Management Response </h2>
                    </header>
                    <!-- widget div-->
                    <div>
                        <!-- widget edit box -->
                        <div class="jarviswidget-editbox">
                            <!-- This area used as dropdown edit box -->
                        </div>
                        <!-- end widget edit box -->
                        <!-- widget content -->
                        <div class="widget-body">
                            @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "recommendationsForm", enctype = "multipart/form-data" }))
                            {
                                @Html.AntiForgeryToken()
                                <div class="form-horizontal">
                                    <div class="form-group">
                                        @Html.HiddenFor(model => model.MgtSummaryResponseId)
                                        @Html.ValidationMessageFor(model => model.ClientName, "", new { @class = "text-danger" })
                                        @Html.LabelFor(model => model.ClientName, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-9">
                                            @Html.EditorFor(model => model.ClientName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                            @Html.ValidationMessageFor(model => model.ClientName, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <hr />
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.AuditableAreaId, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-4">
                                            @Html.DropDownListFor(model => model.AuditableAreaId, ViewBag.Auditable as SelectList, "Select auditable area", new { @class = "form-control select2" })
                                            @Html.ValidationMessageFor(model => model.AuditableAreaId, "", new { @class = "text-danger" })
                                        </div>
                                        @Html.LabelFor(model => model.FwSummaryFindingId, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-4">
                                            @Html.DropDownListFor(model => model.FwSummaryFindingId, new SelectList(""), "Select finding", new { @class = "form-control select2" })
                                            @Html.ValidationMessageFor(model => model.FwSummaryFindingId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Consequence, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-4">
                                            @Html.TextAreaFor(model => model.Consequence, new { @class = "form-control", @cols = 10, @rows = 3, @style = "resize:both;"})
                                            @*@Html.EditorFor(model => model.Consequence, new { htmlAttributes = new { @class = "form-control", @readOnly = true } })*@
                                            @Html.ValidationMessageFor(model => model.Consequence, "", new { @class = "text-danger" })
                                        </div>                  
                                        @Html.LabelFor(model => model.Recomendation, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-4">
                                            @Html.TextAreaFor(model => model.Recomendation, new { @class = "form-control", @cols = 10, @rows = 3, @style = "resize:both;" })
                                            @*@Html.EditorFor(model => model.Recomendation, new { htmlAttributes = new { @class = "form-control", @readOnly = true } })*@
                                            @Html.ValidationMessageFor(model => model.Recomendation, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.ManagementResponse, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-9">
                                            @Html.TextAreaFor(model => model.ManagementResponse, new { @class = "form-control", @cols = 10, @rows = 3, @style = "resize:both;" })
                                            @*@Html.TextAreaFor(model => model.ManagementResponse, new { htmlAttributes = new { @class = "form-control" } })*@
                                            @Html.ValidationMessageFor(model => model.ManagementResponse, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.AuditorComment, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-9">
                                            @Html.TextAreaFor(model => model.AuditorComment, new { @class = "form-control", @cols = 10, @rows = 3, @style = "resize:both;" })
                                            @*@Html.TextAreaFor(model => model.AuditorComment, new { htmlAttributes = new { @class = "form-control" } })*@
                                            @Html.ValidationMessageFor(model => model.AuditorComment, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.FindingStatusId, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-4">
                                            @Html.DropDownListFor(model => model.FindingStatusId, new SelectList(""), "Select status", new { @class = "form-control select2" })
                                            @Html.ValidationMessageFor(model => model.FindingStatusId, "", new { @class = "text-danger" })
                                        </div>
                                        <button class="btn btn-info" id="saveFinding" type="button" style="float: right;margin-right:100px">
                                            <i class="fa fa-save"></i>
                                            Save
                                        </button>
                                    </div>
                                    <hr />
                                    <div id="itemList">

                                    </div>
                                    <div class="form-group">
                                        <div class="col-md-offset-2 col-md-10">
                                            <a href="@Request.UrlReferrer" style="margin-right:5px" type="button" class="btn btn-info pull-left"><i class="glyphicon glyphicon-arrow-left"></i> Back  </a>
                                            &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>

<!------------------END ADD ATTACHMENT MODAL--------------->
<!-- Start of modal -->
<div id="modal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="lblmodal">
    <div class="modal-dialog" style="width: 70%">
        <div class="modal-content">
            <div class="modal-header alert alert-info" style="font:bold 16px Trebuchet MS, Lucida Sans Unicode, Lucida Grande, Lucida Sans, Arial, sans-serif">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title">Details</h4>
            </div>
            <div id="modal-body" class="modal-body" style="padding:5px"></div>
            <div class="modal-footer">
                <button class="btn btn-info" id="btnSave">
                    <span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"></span>
                    Save
                </button>
                <button class="btn btn-info role-dismiss" data-dismiss="modal">
                    <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>
                    Close
                </button>
            </div>
        </div>
    </div>
</div>
<!-- End of modal -->
@section pagespecific {
    <script type="text/javascript">

        $("#AuditableAreaId").change(function () {
            debugger
            $("#divLoader").show();
            var id = $(this).val();
            var url = '@Url.Action("GetFindings", "AuditCompletion")';
                url += '?id=' + id;
            $.ajax({
            type: "POST",
            url: url,
            contentType: "html",
                success: function (response) {
                        $("#FwSummaryFindingId").empty();
                        $("#FwSummaryFindingId").append(response);
                },
                complete: function () {
                    $("#divLoader").hide();
                },
            error: function (err) {
                alert(err.statusText);
            },
          })
        });

    $("#FwSummaryFindingId").change(function () {
        debugger
        var url = "@Url.Action("GetResponse", "AuditCompletion")";
        var id = $("#FwSummaryFindingId").val();

        $.ajax({
            type: "POST",
            url: url,
            data: {
                id: id
            },
            success: function(data, status, jqXHR) {
                if (data.success) {
                    //document.getElementById('AuditableAreaName').value = data.auditableAreaName;
                    document.getElementById('Consequence').value = data.consequence;
                    document.getElementById('Recomendation').value = data.recomendation;
                    getStatus(id);
                } else {
                    swal('This does not exist!');
                    //document.getElementById('AuditableAreaName').value = "";
                    document.getElementById('Consequence').value = "";
                    document.getElementById('Recomendation').value = "";
                }
            }
          });
    });

    function getStatus(id) {
            debugger
            $("#divLoader").show();
            var url = '@Url.Action("GetFindingstatus", "AuditCompletion")';
                url += '?id=' + id;
            $.ajax({
            type: "POST",
            url: url,
            contentType: "html",
                success: function (response) {
                    $("#FindingStatusId").empty();
                    $("#FindingStatusId").append(response);
                },
                complete: function () {
                    $("#divLoader").hide();
                },
            error: function (err) {
                alert(err.statusText);
            },
        })
     };

    $("#ClientInformationId").change(function () {
            $("#divLoader").show();
            debugger
            var id = $(this).val();
            var url = "GetClientInformation/?id=" + id;
            $.ajax({
                type: "POST",
                url: url,
                contentType: "html",
                success: function (data) {
                    $("#divLoader").hide();
                    console.log(data);
                    $("#ClientCategory").val(data.ClientCategory);
                },
                complete: function () {
                    $("#divLoader").hide();
                }
            });
        });

        var addrecommendations = function (id) {
          debugger;
            $("#divLoader").show();
            var id = $("#ClientInformationId").val();

            if (id == "") {
                $("#divLoader").hide();
                swal("Please select client before adding recomendations", { icon : "warning" });

                return false;
            }

            //var url = '@Url.Action("GetAuditableAreaFinding", "AuditCompletion")';
            var url = '@Url.Action("GetAuditableAreaFinding", "AuditCompletion")/' + id;

            $("#modal-body").load(url, function () {
                $("#modal").modal({
                    backdrop: "static",
                    keyboard: false
                });
                $("#divLoader").hide();
            });
        };

        $(function (){
            $("#saveFinding").on("click", function () {
                $("#saveFinding").attr("disabled", true);
                debugger
                $.validator.unobtrusive.parse("#recommendationsForm");
                if(!$("#recommendationsForm").valid()) {
                    $("#saveFinding").attr("disabled", false);
                    return false;
                }

            $("#divLoader").show();

            var url = '@Url.Action("SaveFinding", "AuditCompletion")';
            var model = $("#recommendationsForm").serialize();

            $.ajax({
                type: "POST",
                url: url,
                data: model,
                success: function (response) {
                    $("#saveFinding").attr("disabled", false);
                    if (response != "exist") {
                        $("#divLoader").hide();
                        $("#itemList").html("");
                        $("#itemList").html(response);
                        $("#ManagementResponse").val("");
                        $("#AuditorComment").val("");
                    } else {
                        swal({
                            text: "Finding already exist in this financial year",
                            icon: "warning",
                            button: "OK",
                        })
                    }
                },
                error: function () {
                    swal({
                        text: "An error occured while processing your request, please contact system support",
                        icon: "error",
                        button: "OK",
                    })
                },
                complete: function () {
                    $("#divLoader").hide();
                    $("#btnSave").prop("disabled", false);
                }
            });
          });
        });


        $("#btnSave").on("click", function () {
                $("#btnSave").attr("disabled", true);

                $.validator.unobtrusive.parse("#recommendationsEditForm");
                if (!$("#recommendationsEditForm").valid()) {
                  $("#btnSave").attr("disabled", false);
                  return false;
                }

            $("#divLoader").show();

            var url = '@Url.Action("SaveEditFinding", "AuditCompletion")';
            var model = $("#recommendationsEditForm").serialize();

            $.ajax({
                type: "POST",
                url: url,
                data: model,
                success: function (response) {
                    $("#btnSave").attr("disabled", false);
                    $("#divLoader").hide();
                    if (response != "exist") {
                        swal({
                            text: "Successfully Saved",
                            icon: "success",
                            button: "OK",
                        }).then(function () {
                            window.location.reload();
                        });
                    } else {
                        swal({
                            text: "Status does not exist",
                            icon: "info",
                            button: "OK",
                        })
                    }
                },
                error: function () {
                    swal({
                        text: "An error occured while processing your request, please contact system support",
                        icon: "error",
                        button: "OK",
                    })
                },
                complete: function () {
                    $("#divLoader").hide();
                    $("#btnSave").prop("disabled", false);
                }
            });
          });


        $(document).ready(function (){
            getitemList();
        });

        function getitemList() {
            $("#divLoader").show();
              var id = $("#MgtSummaryResponseId").val();
              var url = '@Url.Action("GetFindingsview", "AuditCompletion")';
              url += '?id=' + id;
                $.ajax({
                    type: "POST",
                    url: url,
                    //contentType: "html",
                    success: function (response){
                        $("#itemList").html("");
                        $("#itemList").html(response);
                    },
                    error: function () {
                        swal({
                            text: "An error occured while processing your request, please contact system support",
                            icon: "error",
                            button: "Ok",
                        })
                    },
                    complete: function () {
                        $("#divLoader").hide();
                        $("#btnSave").prop("disabled", false);
                    }
                });
        }

       var deleteFndingDetails = function (id) {
                        swal({
                            title: 'Confirmation',
                            text: "Do you want to cancel this entry",
                            buttons: [
                                'No',
                                'Yes'
                            ],
                        }).then(function (isConfirm) {
                            if (isConfirm) {
                        var url = '@Url.Action("DeleteRecommendation", "AuditCompletion")';
                        $.ajax({
                        type: "POST",
                        url: url,
                        data: { id: id },
                        success: function (response) {
                            if (response == "Success") {
                                swal("Cancelled  successfully!", { icon: "success" })
                                             .then((value) => {
                                                location.reload();
                                             });
                            }
                            else {
                                swal(response);
                            }
                        },
                        error: function (xhr) {
                            //console.log(xhr.responseText);
                            swal("An error has occured, contact system support");
                        },
                    });
                    } else {
                        swal("Cancelled", "No change was made");
                    }
                });
        }
    </script>
}