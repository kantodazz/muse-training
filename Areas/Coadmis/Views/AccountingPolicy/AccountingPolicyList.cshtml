@model IFMIS.Areas.Coadmis.Models.AccountingPolicy
@{
    ViewBag.Title = "Accounting Policy List";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div id="divLoader"></div>
<!-- MAIN CONTENT -->
<div id="content">

    <div class="row">

        <div class="col-xs-12 col-sm-3 col-md-3 col-lg-3">
            <!-- Button trigger modal -->
            <!--<a data-toggle="modal" href="#myModal" class="btn btn-success btn-lg pull-right header-btn hidden-mobile"><i class="fa fa-circle-arrow-up fa-lg"></i> Launch form modal</a>-->
        </div>
    </div>

    <!-- widget grid -->
    <section id="widget-grid" class="">


        <!-- START ROW -->

        <div class="row">

            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">

                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">

                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2> Accounting Policy List </h2>

                    </header>

                    <!-- widget div-->
                    <div>
                        <a href="#" class="btn btn-info" onclick="showPolicyModal()">
                            <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>
                            Add Policy
                        </a>

                        <hr />
                        <!-- widget edit box -->
                        <div class="jarviswidget-editbox">
                            <!-- This area used as dropdown edit box -->
                        </div>
                        <!-- end widget edit box -->
                        <!-- widget content -->
                        <div class="widget-body">
                            <table class="table table-striped table-bordered table-hover table-condensed" id="tblAccountPolicy">
                                <thead>
                                    <tr>
                                        <th>#</th>
                                        <th>Name</th>
                                        <th>Area of Accounts</th>
                                        <th>Client</th>
                                        <th>Auditor Comments</th>
                                        <th>Action</th>
                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                        </div>
                        <!-- end widget content -->
                    </div>
                    <!-- end widget div -->

                </div>
                <!-- end widget -->

            </article>
            <!-- END COL -->

        </div>

        <!-- END ROW -->

    </section>
    <!-- end widget grid -->

</div>
<!-- END MAIN CONTENT -->
<!-- Start of Aproval modal -->
<div class="modal fade" id="divModal" tabindex="-1" role="dialog" aria-labelledby="lblmodal">
    <div class="modal-dialog" style="width: 750px">
        <div class="modal-content">
            <div class="modal-header alert alert-info" style="font:bold 16px Trebuchet MS, Lucida Sans Unicode, Lucida Grande, Lucida Sans, Arial, sans-serif">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title" id="lblmodal">Add Accounting Policy</h4>
            </div>
            <div class="modal-body" id="divModalBody"></div>
            <div class="modal-footer">
                <button class="btn btn-info role-save" onclick="savePolicy()">
                    <i class="fa fa-save"></i>
                    <img src="~/Content/img/loading.gif" id="saveLoader" />
                    Save
                </button>
                <button class="btn btn-default role-cancel" data-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>
<!-- End of Aproval modal -->
<!-- Start of edit modal -->
<div class="modal fade" id="divEditModal" tabindex="-1" role="dialog" aria-labelledby="lblmodal">
    <div class="modal-dialog" style="width: 750px">
        <div class="modal-content">
            <div class="modal-header alert alert-info" style="font:bold 16px Trebuchet MS, Lucida Sans Unicode, Lucida Grande, Lucida Sans, Arial, sans-serif">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title" id="lblmodal">Update Accounting Policy</h4>
            </div>
            <div class="modal-body" id="divEditModalBody"></div>
            <div class="modal-footer">
                <button class="btn btn-info role-save" onclick="updatePolicy()">
                    <i class="fa fa-save"></i>
                    <img src="~/Content/img/loading.gif" id="saveEditLoader" />
                    Save
                </button>
                <button class="btn btn-default role-cancel" data-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>
<!-- End of edit modal -->
@section pagespecific {
    <!-- PAGE RELATED PLUGIN(S) -->
    <script>
        var datatable = $("#tblAccountPolicy").dataTable();

        var showPolicyModal = function () {
            $("#saveLoader").hide();
            var url = '@Url.Action("Create", "AccountingPolicy")';
            $("#divLoader").show();

            $("#divModalBody").load(url, function (response, status, xhr) {
                if (status == "error") {
                    if (!$(".modal-header").hasClass("alert-danger")) {
                        $(".modal-header").removeClass("alert-info").addClass("alert-danger");
                        $(".role-save").css("display", "none");
                    }
                    $("#divModalBody").html("Error on creating accounting policy, contact system support");
                }
                $("#divModal").modal("show");
                $("#divLoader").hide();
            });
        };

        var showEditPolicyModel = function (id) {

            var url = '@Url.Action("Edit", "AccountingPolicy")?id='+id;

            $("#divEditModalBody").load(url, function (response, status, xhr) {
                if (status == "error") {
                    if (!$(".modal-header").hasClass("alert-danger")) {
                        $(".modal-header").removeClass("alert-info").addClass("alert-danger");
                        $(".role-save").css("display", "none");
                    }
                    $("#divEditModalBody").html("Error on updating accounting policy, contact system support");
                }
                $("#divEditModal").modal("show");
                $("#saveEditLoader").hide();
            });
        };

        //function to reset bootstrap modal popups
        $("#divModal").on("hidden.bs.modal", function () {
            $(".modal-header").removeClass("alert-danger").addClass("alert-info");
            $(".role-save").css("display", "inline-block");
            $("#divModalBody").html("");
        });

         $.ajax({
            type: "get",
            url: '@Url.Action("GetAccountingPolicy", "AccountingPolicy")',
            contenttype: "application/json; charset=utf-8",
            datatype: "json",
            success: function (response) {
                data = response.data;
                datatable.fnClearTable();
                for (var i = 0; i < data.length; i++)
                    {
                        datatable.fnAddData([i + 1,
                            data[i]["AccountingPolicyName"],
                            data[i]["AreaOfAccount"],
                            data[i]["ClientInformation"],
                            data[i]["AuditorComment"],
                            '<div class="btn-group" id="drop-' + i + '">\
                                <button type="button" class="btn btn-info btn-xs dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\
                                 <span class="caret"></span\
                                     <span class="sr-only"></span>\
                                </button>\
                                <ul class="dropdown-menu">\
                                    <li><a href="#" onclick="deletePolicy('+ data[i]["AccountingPolicyId"] + ')">Delete</a></li>\
                             <li><a href="#" onclick="showEditPolicyModel('+ data[i]["AccountingPolicyId"]+')">Edit</a></li>\
                                </ul>\
                            </div>\ '
                        ]);
                }
            },
            failure: function (error)
            {
                swal(error);
            }
         });

         function savePolicy() {
             var AreaOfAccountId = $("#AreaOfAccountId").val();
             var AccountingPolicyName = $("#AccountingPolicyName").val();
             var AuditorComment = $("#AuditorComment").val();
             var ClientInformationId = $("#ClientInformationId").val();

             if (AreaOfAccountId == '') {
                swal("Please select area of account");
                return false;
            }

             if (AccountingPolicyName == '') {
                swal("Please enter name");
                return false;
            }

             if (ClientInformationId == '') {
                swal("Please select client");
                return false;
            }

            var formData = new FormData()
            formData.append('__RequestVerificationToken', $('[name=__RequestVerificationToken]').val());
             formData.append('AreaOfAccountId', AreaOfAccountId);
             formData.append('AccountingPolicyName', AccountingPolicyName);
             formData.append('AuditorComment', AuditorComment);
             formData.append('ClientInformationId', ClientInformationId);

            postFormData(formData);
        }

        function postFormData(formData) {
            $("#saveLoader").show();
            $("#saveLoader").toggle(true);
            var url = '@Url.Action("create", "AccountingPolicy")';
            $.ajax({
                url: url,
                data: formData,
                type: 'POST',
                contentType: false,
                processData: false,
                success: function (response) {
                    $('#divModal').modal('hide');
                    $("#saveLoader").toggle(true);
                    if (response == "Success") {
                        swal("Accounting policy created successfully", { icon: "success" })
                            .then((m) => {
                                window.location.replace('@Url.Action("AccountingPolicyList", "AccountingPolicy")');
                            });
                    } else if (response == "Duplicate") {
                        swal("Accounting policy already exist", { icon: "warning" })
                            .then((m) => {
                                return;
                            });
                    } else if (response == "Invalid") {
                        swal("Operation Failed. Please contact System Administrator!", { icon: "warning" })
                            .then((m) => {
                                return;
                            });
                    } else {
                        $("#saveLoader").toggle(false);
                        swal("Failed to create accounting policy", { icon: "warning" });
                    }
                },
                failure: function (error) {
                    swal(error);
                }
            });
        }

        function updatePolicy() {
            debugger;
            var AreaOfAccountId = $("#AreaOfAccountId").val();
            var AccountingPolicyName = $("#AccountingPolicyName").val();
            var AuditorComment = $("#AuditorComment").val();
            var ClientInformationId = $("#ClientInformationId").val();
            var AccountingPolicyId = $("#AccountingPolicyId").val();

            if (AreaOfAccountId == '') {
                swal("Please select area of account");
                return false;
            }

            if (AccountingPolicyName == '') {
                swal("Please enter name");
                return false;
            }

            if (ClientInformationId == '') {
                swal("Please select client");
                return false;
            }

            var formData = new FormData()
            formData.append('__RequestVerificationToken', $('[name=__RequestVerificationToken]').val());
            formData.append('AreaOfAccountId', AreaOfAccountId);
            formData.append('AccountingPolicyName', AccountingPolicyName);
            formData.append('AuditorComment', AuditorComment);
            formData.append('ClientInformationId', ClientInformationId);
            formData.append('AccountingPolicyId', AccountingPolicyId);

            putFormData(formData);
        }

        function putFormData(formData) {
            $(".saveLoader").show();
            $(".saveLoader").toggle(true);
            var url = '@Url.Action("Edit", "AccountingPolicy")';
            $.ajax({
                url: url,
                data: formData,
                type: 'POST',
                contentType: false,
                processData: false,
                success: function (response) {
                    $('#divEditModalBody').modal('hide');
                    $(".saveLoader").toggle(true);
                    if (response == "Success") {
                        swal("Accountinf policy updated successfully", { icon: "success" })
                            .then((m) => {
                                window.location.replace('@Url.Action("AccountingPolicyList", "AccountingPolicy")');
                            });
                    } else if (response == "Duplicate") {
                        swal("Accounting policy already exist", { icon: "warning" })
                            .then((m) => {
                                return;
                            });
                    } else if (response == "Invalid") {
                        swal("Operation Failed. Please contact System Administrator!", { icon: "warning" })
                            .then((m) => {
                                return;
                            });
                    } else if (response == "Not Found") {
                        swal("Accounting policy not found", { icon: "warning" })
                            .then((m) => {
                                return;
                            });
                    } else {
                        $(".saveLoader").toggle(false);
                        swal("Failed to update accounting policy", { icon: "warning" });
                    }
                },
                failure: function (error) {
                    swal(error);
                }
            });
        }

        //Delete action start here
        function deletePolicy(id) {
            swal({
                text: "Are you Sure you want to delete this policy",
                buttons: [
                    'No',
                    'Yes'
                ],
            }).then(function (isConfirm) {
                if (isConfirm) {
                    deleteAccountPolicy(id);
                } else {
                    swal("Cancelled", "No changes was made");
                }
            });

        }

        function deleteAccountPolicy(id) {
             var url = '@Url.Action("Delete", "AccountingPolicy")';
            $.ajax({
                type: "post",
                url: url,
                data: { "id": id },
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {
                    if (response == "Success") {
                        swal("Accounting policy deleted Successfully!", { icon: "success" })
                            .then((value) => {
                                window.location.reload();
                            });
                    }
                    else {
                        swal(response);
                    }

                },
                failure: function (error) {
                    swal(error);
                }
            });
        }

    </script>
}


