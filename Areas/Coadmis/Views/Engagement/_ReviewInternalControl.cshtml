@model IFMIS.Areas.Coadmis.Models.EngagementVM
@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "reviewOfInternalControl" }))
{
    @Html.AntiForgeryToken()
<div class="form-horizontal">
    @Html.HiddenFor(model => model.EngagementId)
    @*@Html.HiddenFor(model => model.InternalControlId)*@
    @Html.HiddenFor(model => model.ClientFinancialYear)
    @Html.HiddenFor(model => model.ClientInformationId)
    @*<div class="form-group">
        @Html.LabelFor(model => model.BusinessAreaName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-8">
            @Html.EditorFor(model => model.BusinessAreaName, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
            @Html.ValidationMessageFor(model => model.BusinessAreaName, "", new { @class = "text-danger" })
        </div>*@
        
        @*@Html.LabelFor(model => model.RefICE, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @Html.EditorFor(model => model.RefICE, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.RefICE, "", new { @class = "text-danger" })
        </div>*@
       
    @*</div>*@
    <div class="form-group">
        @Html.LabelFor(model => model.BusinessAreaId, htmlAttributes: new { @class = "control-label col-md-2" })
        <span class="redStar">*</span>
        <div class="col-md-8">
            @Html.DropDownListFor(model => model.BusinessAreaId, Model.InternalControlList, "Select Business Area", new { @class = "form-control form-control select2", @autocomplete = "off" })
            @Html.ValidationMessageFor(model => model.BusinessAreaId, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @*@Html.LabelFor(model => model.ControlName, htmlAttributes: new { @class = "control-label col-md-2 required" })
        <div class="col-md-8">
            @Html.TextAreaFor(model => model.ControlName, new { maxlength = 250, @class = "form-control", @rows = 2, @cols = 2, @readonly = true })
            @Html.ValidationMessageFor(model => model.ControlName, "", new { @class = "text-danger" })
        </div>*@

        <label class="control-label col-md-2">Control Name<span class="redStar">*</span></label>
        <div class="col-md-8 collateralUsage">
            <select id="ControlName" name="ControlName" class="form-control select2" required="required">
                <option>Select Control</option>
            </select>
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.ImpControl, htmlAttributes: new { @class = "control-label col-md-2 required" })
        (<span style="font-weight:bold;" id="ImpControlCount">150</span>)
        <div class="col-md-8">
            @Html.TextAreaFor(model => model.ImpControl, new { maxlength = 150, @class = "form-control", @rows = 2, @cols = 2 })
            @Html.ValidationMessageFor(model => model.ImpControl, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.isKeyControl, htmlAttributes: new { @class = "control-label col-md-2 required" })
        <div class="col-md-3">
            @Html.DropDownList("isKeyControl", new List<SelectListItem>{
                                new SelectListItem{ Text="--Select  ---", Value = "" },
                                new SelectListItem{ Text="Yes", Value = "true" },
                                new SelectListItem{ Text="No", Value = "false" },
                                }, new { @class = "form-control select2", @required = "required" })
            @Html.ValidationMessageFor(model => model.isKeyControl, "", new { @class = "text-danger" })
        </div>
        
        @Html.LabelFor(model => model.isFurtherTest, htmlAttributes: new { @class = "control-label col-md-2 required" })
        <div class="col-md-3">
            @Html.DropDownList("isFurtherTest", new List<SelectListItem>{
                                new SelectListItem{ Text="--Select ---", Value = "" },
                                new SelectListItem{ Text="Yes", Value = "true" },
                                new SelectListItem{ Text="No", Value = "false" },
                                }, new { @class = "form-control select2", @required = "required" })
            @Html.ValidationMessageFor(model => model.isFurtherTest, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.RefICE, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-8">
            @Html.EditorFor(model => model.RefICE, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.RefICE, "", new { @class = "text-danger" })
        </div>
    </div>
</div>
}
<script>
    $(document).ready(function () {

        $(function () {
            $('#AccountEstimateId, #OverallAssessement, #BusinessAreaId, #ControlName, #isKeyControl, #isFurtherTest').select2({
                dropdownParent: $('#modalEditAccountEst')
            });

        });
    });

     @*$("#BusinessAreaId").change(function () {
            debugger;
         var businessAreaId = $("#BusinessAreaId").val();
         var clientId = $("#ClientInformationId").val();
         document.getElementById('ControlName').value = "";
         if (!(businessAreaId == null)) {
             if (!(businessAreaId == "")) {
                    $("#divLoader").show();

                    var url = '@Url.Action("GetInternalControlByArea", "Engagement")';
                    $.ajax({
                        type: "POST",
                        url: url,
                        data: { id: clientId, businessId: businessAreaId },
                        success: function (data, status, jqXHR) {
                            $("#divLoader").hide();
                            if (data.success) {
                                document.getElementById('ControlName').value = data.ClientYearEndDate;

                            } else {
                                swal("Please Add Client Year End", { icon: "warning" });
                                document.getElementById('ControlName').value = "";
                            }
                        }
                    });
                }
            }

     });*@

    $("#BusinessAreaId").change(function () {
        debugger;
         var id = $("#BusinessAreaId").val();
         var clientId = $("#ClientInformationId").val();
        if (id != "") {

            var url = '@Url.Action("GetInternalControlByArea", "Engagement")';
            var option = [];
            $.ajax({
                url: url,
                type: "POST",
                data: { bId: id, cId: clientId },
                dataType: "json",
                success: function (data) {

                    console.log('select', data);
                    option.empty;
                    option.push('<option value="">Select Internal Control</option>');
                    data.data.forEach(d => {
                        option.push('<option value=' + d["InternalControlId"] + '>' + d["ControlName"] + '</option>');
                    });
                    option = option.toString().replace(",", "").replace("[", "").replace("]", "");
                    $("#ControlName").html(option);
                }
            });
        }
    })

    //Count input char
    $('#ImpControl').on("keyup", function () {
        var count = $('#ImpControl').val().split('');
        var numChars = 150 - parseInt(count.length);
        $('#ImpControlCount').text(parseInt(numChars));
    });
    $("#reviewInternalControl").click(function () {
        debugger;
        ///$.validator.unobtrusive.parse("#updateByEdit");
        //if (!$("#updateByEdit").valid()) {
        //    return false;
        //}
        $("#reviewInternalControl").prop('disabled', true);
        var internalControlId = $("#InternalControlId").val();
        var impControl = $("#ImpControl").val();
        var isKeyControl = $("#isKeyControl").val();
        var isFurtherTest = $("#isFurtherTest").val();
        var refICE = $("#RefICE").val();
        var businessAreaId = $("#BusinessAreaId").val();
        var businessAreaName = $("#BusinessAreaId option:selected").text();
        var controlName = $("#ControlName option:selected").text();


        if (internalControlId == '' || impControl == '' || isKeyControl == '' || isFurtherTest == '' ) {
            swal("Please Fill All the required Fields", { icon: "warning" });
            return false;
        }

        var formData = new FormData();
        formData.append("__RequestVerificationToken", $('[name=__RequestVerificationToken]').val());
        formData.append("ClientInformationId", $('#ClientInformationId').val());
        formData.append("EngagementId", $('#EngagementId').val());
        formData.append("BusinessAreaId", $('#BusinessAreaId').val());
        formData.append("ClientFinancialYear", $('#ClientFinancialYear').val());
        formData.append("BusinessAreaName", businessAreaName);
        formData.append("ControlName", controlName);

        formData.append("ImpControl", $('#ImpControl').val());
        formData.append("isKeyControl", $('#isKeyControl').val());
        formData.append("isFurtherTest", $('#isFurtherTest').val());
        formData.append("RefICE", $('#RefICE').val());


        for (const value of formData.values()) {
            console.log(value);
        }
        var urlList = '@Url.Action("ReviewInternalControlPerYr", "Engagement")';

        $.ajax({
            url: urlList,
            type: "POST",
            contentType: false,
            processData: false,
            data: formData,
            success: function (response) {
                if (response == "Success") {
                    $("#reviewInternalControl").prop('disabled', false);
                    swal("Review Internal Control Successfully!", { icon: "success" })
                        .then((_) => window.location.reload());
                }
                else {
                    swal(response);
                }
            },
            error: function () {
                alert('Error Please try again');
                $("#reviewInternalControl").prop('disabled', false);
                $('#btnSave').val('Save');
            }
        });
    });
</script>
