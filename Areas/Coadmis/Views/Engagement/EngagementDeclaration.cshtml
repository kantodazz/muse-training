@model IFMIS.Areas.Coadmis.Models.EngagementVM
@{
    ViewBag.Title = "Engagement Declaration";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<style type="text/css">
    .loadingImg {
        display: none;
    }

    body {
        margin-top: 40px;
    }

    .search-btn {
        border: 1px solid #ccc;
        border-radius: 4px;
        padding: 5px;
        padding-right: 10px;
    }

    .search-container {
        display: inline-flex;
        flex: 1 1 300px;
        position: relative;
        border: 1px solid #ccc;
        border-radius: 5px;
        overflow: hidden;
        padding-left: 10px;
    }

    .name-input-container {
        display: inline-flex;
        flex: 1 1 300px;
        position: relative;
        overflow: hidden;
    }

    .search-icon {
        padding: 0.5rem;
    }

    .search-button {
        background: #538AC5;
        border: 0;
        color: white;
        padding: 8px;
        border-radius: 0;
    }

    input[type=number] {
        padding: 8px;
        border: 1px solid #ccc;
        width: 205px;
    }

    input[type=text] {
        padding: 5px;
        border: 1px solid #ccc;
    }

    input[type=search] {
        padding: 4px;
        border: hidden;
        border-radius: 4px;
    }

    textarea {
        border: 1px solid #ccc;
    }

    select {
        padding: 8px;
        border: 1px solid #ccc;
        resize: vertical;
        width: 230px;
    }

    .action-btn {
        width: 100px;
        color: white;
    }

    .form-label {
        text-align: right;
    }

    td {
        padding: 5px;
    }

    .info-box {
        padding: 10px;
        background-color: #ECF3F8;
        text-align: center;
        border: 1px solid #ccc;
        border-radius: 5px;
    }

    #itemUL li {
        margin-left: -40px;
        border-bottom: 1px solid silver;
        height: 26px;
        padding-left: 5px;
        padding-top: 8px;
        cursor: pointer;
    }

    .redStar {
        color: red;
        font-size: 15px;
    }
</style>
<div id="content" style="margin: 5px; padding-top: 50px">
    <div class="row"></div>
    <!-- widget grid -->
    <section id="widget-grid" class="">
        <div class="row">
            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">

                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">

                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2> @ViewBag.Title</h2>
                    </header>

                    <div>
                        <div class="widget-body " style="padding-top:10px;width:100%">
                            <div class="row setup-content">
                                <form>
                                    @Html.HiddenFor(model => model.EngagementId)
                                    @Html.HiddenFor(model => model.EngagementTeamMemberId)
                                    @Html.HiddenFor(model => model.ClientInformationId)
                                    @Html.HiddenFor(model => model.ClientFinancialYear)
                                    @Html.HiddenFor(model => model.ClientName)
                                    @Html.HiddenFor(model => model.AuditorId)
                                    @Html.HiddenFor(model => model.AuditorName)
                                    @Html.HiddenFor(model => model.DeclaredDate)
                                    <div class="form-horizontal">
                                        <div class="col-xs-12">
                                            <div align="center">
                                                <img src="~/Media/Images/ajax_loader.gif" class="loadingImg" />
                                            </div>
                                            <div class="col-md-12">
                                                <div class="form-group">
                                                    <label class="control-label col-md-2">Engagement Name</label>
                                                    <div class="col-md-8">
                                                        @Html.EditorFor(model => model.EngagementName, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label class="control-label col-md-2">Client Name</label>
                                                    <div class="col-md-3">
                                                        @Html.EditorFor(model => model.ClientName, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                                    </div>

                                                    <label class="control-label col-md-2">Client Year End:</label>
                                                    <div class="col-md-3">
                                                        @*<strong>@string.Format("{0:dd/MM/yyyy}", Model.ClientFinancialYear)</strong>*@
                                                        @Html.EditorFor(model => model.ClientFinancialYear, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                                        @*@Html.EditorFor(model => model.ClientYearEnd, new { htmlAttributes = new { @class = "form-control", @readonly = true } })*@
                                                    </div>

                                                </div>
                                                <div class="form-group">
                                                    <label class="control-label col-md-2">Declaration Status<span class="redStar">*</span></label>
                                                    <div class="col-md-3">
                                                        @Html.DropDownList("IsDeclared", new List<SelectListItem>{
                                                          new SelectListItem{ Text="--Select ---", Value = "" },
                                                          new SelectListItem{ Text="Declared", Value ="true" },
                                                          new SelectListItem{ Text="Not Declared", Value = "false" },
                                                           }, new { @class = "form-control select2", @required = "required" })
                                                        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                                                    </div>

                                                    <label class="control-label col-md-2">Date <span class="redStar">*</span></label>
                                                    @*<div class="col-md-3">
                                                            <strong>@string.Format("{0:dd/MM/yyyy}", Model.DeclaredDate)</strong>
                                                        </div>*@
                                                    <div class="col-md-3">
                                                        @Html.TextBoxFor(model => model.DeclaredDate, new { @Class = "input", @readonly = true, @required = "required" })
                                                    </div>
                                                </div>


                                                <div id="divDeclaration" style="display: none">
                                                    <div class="form-group">
                                                        <div class="col-md-2"></div>
                                                        <div class="col-md-8">
                                                            <p align="justify">
                                                                I <strong>@Html.DisplayFor(model => model.AuditorName)</strong> understand the requirements and responsibilities
                                                                contained in the Code of Ethics. Where applicable, I have documented the circumstances which may impair my independence.
                                                                In addition, should any circumstances arise during the audit to impair my compliance with any of the above provisions;
                                                                I undertake to communicate them without delay.
                                                            </p>
                                                        </div>
                                                    </div>
                                                </div>

                                                <div id="divIsNotDeclaration" style="display: none">
                                                    <div class="form-group">
                                                        <label class="control-label col-md-2">Circumstances Which May Impair My Compliance <span class="redStar">*</span></label>
                                                        (<span style="font-weight:bold;" id="CircumstancesCount">250</span>)
                                                        <div class="col-md-8">
                                                            @Html.TextAreaFor(model => model.Circumstances, new { maxlength = 250, @class = "form-control", @rows = 5, @cols = 30 })
                                                            @Html.ValidationMessageFor(model => model.Circumstances, "", new { @class = "text-danger" })
                                                        </div>

                                                    </div>
                                                    <div class="form-group">
                                                        <label class="control-label col-md-2">Safeguard Applied <span class="redStar">*</span></label>
                                                        (<span style="font-weight:bold;" id="SafeguardAppliedCount">250</span>)
                                                        <div class="col-md-8">
                                                            @Html.TextAreaFor(model => model.SafeguardApplied, new { maxlength = 250, @class = "form-control", @rows = 5, @cols = 30 })
                                                            @Html.ValidationMessageFor(model => model.SafeguardApplied, "", new { @class = "text-danger" })
                                                        </div>

                                                    </div>

                                                    <div class="form-group">
                                                        <div class="col-md-2"></div>
                                                        <div class="col-md-8">
                                                            <p align="justify">
                                                                I <strong>@Html.DisplayFor(model => model.AuditorName)</strong> understand the requirements and responsibilities contained in the Code of Ethics.
                                                                Where applicable, I have documented the circumstances which impair my compliance and independent on this assignment.
                                                                Therefore I declare not to be independent on this engagement for this auditee. (In case of declining the assignment)
                                                            </p>
                                                        </div>
                                                    </div>
                                                </div>


                                            </div>

                                        </div>
                                    </div>
                                </form>
                                <div class="col-md-2"></div>
                                <div class="col-md-3">
                                    <a href="@Url.Action("MemberdecrationList", "Engagement")" style="margin-right:5px" type="submit" class="btn btn-info pull-left"><i class="glyphicon glyphicon-arrow-left"></i> Back  </a>
                                    <button type="submit" class="btn btn-info" id="saveDeclarationForm">
                                        <i class="fa fa-save"></i> Save
                                        <img src="~/Content/img/loading.gif" class="loadingImg" />
                                    </button>
                                </div>

                            </div>
                        </div>
                    </div>
                </div>
            </article>
        </div>
    </section>
</div>
@section pagespecific{
    <script type="text/javascript">
       


        $("#IsDeclared").change(function () {
            debugger;
            var selectedValue = $('#IsDeclared option:selected').val();

            if (selectedValue == "true") {
                $("#divDeclaration").show();
                $("#divIsNotDeclaration").hide();
            }
            else {
                $("#divDeclaration").hide();
                $("#divIsNotDeclaration").show();
            }
        });


        $('#Circumstances').on("keyup", function () {
            var count = $('#Circumstances').val().split('');
            var numChars = 250 - parseInt(count.length);
            $('#CircumstancesCount').text(parseInt(numChars));
        });

        $('#SafeguardApplied').on("keyup", function () {
            var count = $('#SafeguardApplied').val().split('');
            var numChars = 250 - parseInt(count.length);
            $('#SafeguardAppliedCount').text(parseInt(numChars));
        });

        $("#saveLoader").toggle(false);
        $("#saveDeclarationForm").click(function () {
            debugger;
            var circumstances = $("#Circumstances").val();
            var safeguardApplied = $("#SafeguardApplied").val();
            var isDeclared = $("#IsDeclared").val();
            var declaredDate = $("#DeclaredDate").val();

            if ( isDeclared == '' ) {
                swal("Please Fill All the required Fields", { icon: "warning" });
                return false;
            }
            if (isDeclared ==false) {
                if (circumstances == '' || safeguardApplied == '' || isDeclared == '' || declaredDate == '') {
                    swal("Please Fill All the required Fields", { icon: "warning" });
                    return false;
                }
            }


            var formdata = new FormData();
            formdata.append("__RequestVerificationToken", $('[name=__RequestVerificationToken]').val());
                formdata.append("Circumstances", $("#Circumstances").val());
                formdata.append("SafeguardApplied", $("#SafeguardApplied").val());
                formdata.append("IsDeclared", $("#IsDeclared").val());
                formdata.append("DeclaredDate", $("#DeclaredDate").val());
                formdata.append("ClientFinancialYear", $("#ClientFinancialYear").val());
                formdata.append("EngagementId", $("#EngagementId").val());
                formdata.append("EngagementTeamMemberId", $("#EngagementTeamMemberId").val());
                formdata.append("ClientInformationId", $("#ClientInformationId").val());
                formdata.append("ClientName", $("#ClientName").val());
                formdata.append("AuditorId", $("#AuditorId").val());
                formdata.append("AuditorName", $("#AuditorName").val());

            for (const value of formdata.values()) {
                console.log(value);
            }

            var url = '@Url.Action("SaveDeclarationpEntry", "Engagement")';
            var urlList = '@Url.Action("MemberdecrationList", "Engagement")';
            $("#saveDeclarationForm").prop('disabled', true);
            $("#saveLoader").toggle(true);

            $.ajax({
                url: url,
                data: formdata,
                type: 'POST',
                contentType: false,
                processData: false,
                success: function (response) {
                    $("#saveDeclarationForm").prop('disabled', false);
                    $("#saveLoader").toggle(false);
                    if (response == "Success") {
                        swal("Declaration Saved Successfully!", { icon: "success" })
                            .then((value) => {
                                window.location.href = urlList;
                            });
                    }
                    else {
                        swal(response);
                    }
                },
                failure: function (error) {
                    $("#saveDeclarationForm").prop('disabled', false);
                    $("#saveLoader").toggle(false);
                    swal(error);
                }
            });
        })

    </script>
}

