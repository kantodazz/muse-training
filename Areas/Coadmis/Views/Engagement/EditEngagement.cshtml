@model IFMIS.Areas.Coadmis.Models.EngagementVM
@{
    ViewBag.Title = "Edit Engagement";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<style type="text/css">
    .loadingImg {
        display: none;
    }

    body {
        margin-top: 40px;
    }

    .search-btn {
        border: 1px solid #ccc;
        border-radius: 4px;
        padding: 5px;
        padding-right: 10px;
    }

    .search-container {
        display: inline-flex;
        flex: 1 1 300px;
        position: relative;
        border: 1px solid #ccc;
        border-radius: 5px;
        overflow: hidden;
        padding-left: 10px;
    }

    .name-input-container {
        display: inline-flex;
        flex: 1 1 300px;
        position: relative;
        overflow: hidden;
    }

    .search-icon {
        padding: 0.5rem;
    }

    .search-button {
        background: #538AC5;
        border: 0;
        color: white;
        padding: 8px;
        border-radius: 0;
    }

    input[type=number] {
        padding: 8px;
        border: 1px solid #ccc;
        width: 205px;
    }

    input[type=text] {
        padding: 5px;
        border: 1px solid #ccc;
    }

    input[type=search] {
        padding: 4px;
        border: hidden;
        border-radius: 4px;
    }

    textarea {
        border: 1px solid #ccc;
    }

    select {
        padding: 8px;
        border: 1px solid #ccc;
        resize: vertical;
        width: 230px;
    }

    .action-btn {
        width: 100px;
        color: white;
    }

    .form-label {
        text-align: right;
    }

    td {
        padding: 5px;
    }

    .info-box {
        padding: 10px;
        background-color: #ECF3F8;
        text-align: center;
        border: 1px solid #ccc;
        border-radius: 5px;
    }

    #itemUL li {
        margin-left: -40px;
        border-bottom: 1px solid silver;
        height: 26px;
        padding-left: 5px;
        padding-top: 8px;
        cursor: pointer;
    }

    .redStar {
        color: red;
        font-size: 15px;
    }
</style>
<div id="divLoader"></div>
<div id="content" style="margin: 5px; padding-top: 50px">
    <div class="row"></div>
    <!-- widget grid -->
    <section id="widget-grid" class="">
        <div class="row">
            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">

                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">

                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2> @ViewBag.Title</h2>
                    </header>

                    <div>
                        <div class="widget-body " style="padding-top:10px;width:100%">
                            <div class="row setup-content">

                                <form>
                                    @Html.HiddenFor(model => model.RoleName)
                                    @Html.HiddenFor(model => model.EngagementId)
                                    <div class="form-horizontal">
                                        <div class="col-xs-12">
                                            <div align="center">
                                                <img src="~/Media/Images/ajax_loader.gif" class="loadingImg" />
                                            </div>
                                            <div class="col-md-12">
                                                @*<div class="form-group">
                                                    <label class="control-label col-md-2">Client Type<span class="redStar">*</span></label>
                                                    <div class="col-md-3">
                                                        @Html.DropDownListFor(model => model.ClientTypeId, Model.ClientTypeList, "Select Client Type", new { @class = "form-control form-control select2", @autocomplete = "off" })
                                                        @Html.ValidationMessageFor(model => model.ClientTypeId, "", new { @class = "text-danger" })
                                                    </div>
                                                    <label class="control-label col-md-2">Client Category<span class="redStar">*</span></label>
                                                    <div class="col-md-3">
                                                        @Html.DropDownListFor(model => model.ClientCategoryId, Model.ClientCategoryList, "Select Client Category", new { @class = "form-control form-control select2", @autocomplete = "off" })
                                                        @Html.ValidationMessageFor(model => model.ClientCategoryId, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>*@

                                                <div class="form-group">
                                                    <label class="control-label col-md-2">Client Name<span class="redStar">*</span></label>
                                                    <div class="col-md-8">
                                                        @Html.DropDownListFor(model => model.ClientInformationId, Model.ClientNameList, "Select Client Name", new { @class = "form-control form-control select2", @autocomplete = "off" })
                                                        @Html.ValidationMessageFor(model => model.ClientInformationId, "", new { @class = "text-danger" })
                                                    </div>
                                                   
                                                </div>
                                                <div class="form-group">
                                                    <label class="control-label col-md-2">Engagement Name<span class="redStar">*</span></label>
                                                    <div class="col-md-3">
                                                        @Html.TextBoxFor(model => model.EngagementName, new { @Class = "input", @required = "required", style = "width:100%; display:block;border:1px solid #ccc;padding:8px;" })
                                                    </div>

                                                    <label class="control-label col-md-2">Engagement Location<span class="redStar">*</span></label>
                                                    <div class="col-md-3">
                                                        @Html.DropDownListFor(model => model.RegionId, Model.RegionList, "Select Region", new { @class = "form-control form-control select2", @autocomplete = "off" })
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    @*<label class="control-label col-md-2">Financial Year<span class="redStar">*</span></label>
                                                    <div class="col-md-3 collateralUsage">
                                                        @Html.DropDownListFor(model => model.FinanicialYearId, Model.FinancialYearList, "Select Financial Year", new { @class = "form-control form-control select2", @autocomplete = "off", @readonly = true })
                                                    </div>*@

                                                    <label class="control-label col-md-2">Client Financial Year<span class="redStar">*</span></label>
                                                    <div class="col-md-3">
                                                        @Html.EditorFor(model => model.FinancialYearName, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                                        @*<input type="text" id="FinancialYearName" placeholder="dd/mm/YYYY" disabled="disabled" autocomplete="off" class="form-control datepicker" required name="ClientYearEnd" />*@
                                                    </div>

                                                    <label class="col-md-2 control-label" style="font-weight:normal;text-align:right">Add Attachments<i class="fa fa-times" style="color:white"></i><span class="redStar">*</span></label>
                                                    <div class="col-md-3">
                                                        <a class="search-btn" onclick="ShowAddMoreAttachment()" id="searchbtn" href="#" style="display:block;border:1px solid #ccc;padding:8px">
                                                            <i class="fa fa-paperclip search-icon"></i>
                                                            &nbsp; Add Attachment(s) <span id="added_attachments"></span>
                                                        </a>
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    <label class="col-md-2 control-label" style="font-weight:normal;text-align:right">Start Date<i class="fa fa-times" style="color:white" id="ProjectStartDate_1"></i><span class="redStar">*</span></label>
                                                    <div class="col-md-3">
                                                        @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control datepicker", autocomplete = "off", placeholder = "dd/mm/YYYY", @readonly = true } })
                                                        @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })

                                                    </div>
                                                    <label class="col-md-2 control-label" style="font-weight:normal;text-align:right">End Date<i class="fa fa-times" style="color:white" id="ProjectEndDate_1"></i><span class="redStar">*</span></label>
                                                    <div class="col-md-3">
                                                        @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control datepicker", autocomplete = "off", placeholder = "dd/mm/YYYY", @readonly = true } })
                                                        @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                                @*<div class="form-group">
                                                    
                                                </div>*@
                                            </div>
                                        </div>
                                    </div>
                                </form>
                                <div class="col-md-2"></div>
                                <div class="col-md-3">
                                    <a href="@Url.Action("EngagementList", "Engagement")" style="margin-right:5px" type="submit" class="btn btn-info pull-left"><i class="glyphicon glyphicon-arrow-left"></i> Back  </a>
                                    <button type="submit" class="btn btn-info" id="editEngagementForm">
                                        <i class="fa fa-save"></i>Update
                                        <img src="~/Content/img/loading.gif" class="loadingImg" />
                                    </button>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            </article>

        </div>
    </section>
</div>

<!---Start here Add Attachment Model-->
<div class="modal fade" id="AddAttachment" style="left:4%">
    <div class="modal-dialog" style="width:80%;">
        <div class="modal-content panel-info">
            <div class="modal-header panel-heading">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h3 class="modal-title"> Attachments For Engagement </h3>
            </div>
            <div class="modal-body" style="overflow-x: auto;">
                <div class="row">
                    <div class="col-sm-6">
                        <div style="padding-left:5%;padding-right:1%">
                            <table style="margin-left: 2%;padding:4px;width:700px">
                                <tr>
                                    <td>
                                        Attachment Name
                                        <i class="fa fa-times" style="color:white" id="Name_1"></i>
                                    </td>
                                    <td>
                                        File
                                    </td>
                                    <td></td>
                                </tr>
                                <tr>
                                    <td style="width:700px">
                                        <div class="col-md-8" style="width:500px;">
                                            <select id="Attachment" name="Attachment" class="form-control select2" required="required">
                                                <option value="">Select Attachment Type</option>
                                                @foreach (var item in Model.AttachementList)
                                                {
                                                    <option value=@item.Value>@item.Text</option>
                                                }
                                            </select>

                                        </div>
                                    </td>
                                    <td style="width:50px"></td>
                                    <td style="width:600px">
                                        <div class="name-input-container">
                                            <input type="file" class="form-control" style="width:300px;" name="FileName" id="FileName" accept=".pdf" />
                                        </div>
                                    </td>

                                    <td style="width:50px"></td>
                                    <td style="width:600px">
                                        <div class="name-input-container">
                                            <a class="btn btn-info" href="#" id="saveAttachments" onclick="addAttachmentsz()">
                                                <i class="glyphicon glyphicon-plus"></i>Add
                                            </a>
                                        </div>
                                    </td>
                                </tr>
                            </table>
                        </div>
                    </div>
                </div>
                <br />
                @*<div id="divAttachments"></div>*@
                <table class="table" id="dt_attachments">
                    <thead>
                        <tr>
                            <th>#</th>
                            <th>Attachment Name</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>

            </div>
            <div class="modal-footer">
                <button class="btn btn-info" data-dismiss="modal">
                    <i class="fa  fa-times"></i>Close
                </button>
            </div>
        </div>
    </div>
</div>
<!--End Attachment Model-->

@section pagespecific{
    <script>

        $(document).ready(function () {
            var engId = $("#EngagementId").val();
            GetAttachedDocument(engId);
        });

        function ShowAddMoreAttachment() {
            $("#AddAttachment").modal("show");
        };

        var dt_attachments = $('#dt_attachments').dataTable();
        $("#dt_attachments_wrapper .dt-toolbar").remove();
        $("#dt_attachments_wrapper .dt-toolbar-footer").remove();

        function GetAttachedDocument(pid)
        {
            debugger;
            $("#divLoader").show();
            var url = '@Url.Action("GetAttachments", "Engagement")';
            var params = { "id": pid };

            $.ajax({
                type: "get",
                url: url,
                data: params,
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {
                    $("#divLoader").hide();
                    data = response.data;
                    datalength = data.length;
                    dt_attachments.fnClearTable();
                    for (var i = 0; i < data.length; i++) {
                        dt_attachments.fnAddData([i+1,
                            data[i]["AttachmentName"],
                            '<a href="#" onclick="attachmentRemove(' + i + ',' + data[i]["AttachmentId"] + ')">\
                           <i class="glyphicon glyphicon-trash"></i></a>'
                        ]);
                    }
                    $("#added_attachments").text("(" + data.length + ")");
                    countAttachment =  data.length;
                },
                failure: function (error) {
                    swal(error);
                }
            });
        }

         function attachmentRemove(index,id) {
            var params = {"id":  id };
            var idp = $("#EngagementId").val();
             var url = '@Url.Action("RemoveUploadedAttachments", "Engagement")';
             $("#divLoader").show();
            $.ajax({
                type: "get",
                url: url,
                data: params,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    $("#divLoader").hide();
                        if (response == "Success") {
                            swal("File Removed Successfull", { icon: "success" })
                                .then((value) => {
                                allattachments.splice(index, 1);
                                attachments.splice(index, 1);
                                    GetAttachedDocument(idp);
                                })

                        } else if (response == "InUser") {
                            swal("Unable to Delete, Core Attachment is In Uses!", {icon: "info"})
                        }
                        else {
                            swal(response, { icon: " warning" });
                        }
                },
                failure: function (response) {
                    $("#divLoader").hide();
                    alert(response.d);
                }
            });
        }
        var allattachments = []
        var attachments = []
        var countAttachment = 0;

        function addAttachmentsz() {
            debugger;
            if ($("#Attachment").val() == "" || $("#FileName").val() == "") {
                return false;
            }

            var attachmentId = $('#Attachment').val().trim();
            var fileName = $('#FileName').get(0).files[0];
            var attachment = $("#Attachment option:selected").text();
            var derivedAttachmentName = attachment + ':-' + fileName.name;

            attachments.push({
                AttachmentId: attachmentId,
                AttachmentType: derivedAttachmentName,
                FileName: fileName,
            });

            GenerateAttachmentsTable();
        }

        function GenerateAttachmentsTable() {
            if (attachments.length > 0) {
                var $table = $('<table class="table table-condensed table-stripped table-hover table-bordered"/>');
                $table.append('<thead>' +
                    '<tr><th colspan="4">Attachment Type</th>' +
                    '<tr><th>#</th><th style="display:none;">Id</th><th style="text-align: center">Attachment Name</th><th style="text-align: center">Action</th></tr>' +
                    '</thead>');
                var $tbody = $('<tbody/>');
                var j = 0;
                $.each(attachments, function (i, val) {
                    ++j;
                    var $row = $('<tr/>');
                    $row.append($('<td/>').html(j));
                    $row.append($('<td style="display:none;"/>').html(val.AttachmentId));
                    $row.append($('<td/>').html(val.AttachmentType));
                    var $remove = $('<a href="#"><span class="glyphicon glyphicon-trash" aria-hidden="true"></span></a>');
                    $remove.click(function (e) {
                        e.preventDefault();
                        attachments.splice(i, 1);
                        GenerateAttachmentsTable();
                    });
                    $row.append($('<td/>').html($remove));
                    $tbody.append($row);
                });
                $table.append($tbody);
                $('#divAttachments').html($table);
                $("#FileName").val("");
                $("#saveAttachments").attr("disabled", false);
            } else {
                $('#divAttachments').html('');
                $("#saveAttachments").attr("disabled", true);
            }

            $("#added_attachments").text(attachments.length);
        }


         function addAttachmentsz() {
             debugger;
             var engId = $("#EngagementId").val();
            var attachmentId = $("#Attachment").val().trim();

             var fileName = $('#FileName').get(0).files[0];
             var attachment = $("#Attachment option:selected").text();
             var derivedAttachmentName = attachment + ':-' + fileName.name;

             if (!attachments.includes(attachmentId)) {
                $("#divLoader").show();
                var formData = new FormData();
                formData.append('FileName', $('#FileName')[0].files[0]);
                formData.append('EngagementId', $("#EngagementId").val());
                formData.append('AttachmentId', attachmentId);
                formData.append('AttachmentName', derivedAttachmentName);
                //formData.append('Attachment',$("#Attachment").val());

                var url = '@Url.Action("UploadFile", "Engagement")';
                $.ajax({
                    type: "POST",
                    url: url,
                    data: formData,
                    contentType: false,
                    processData: false,
                    success: function (response) {
                        $("#divLoader").hide();
                        if (response == "Success") {
                            swal("File Uploaded Successfully", { icon: "success" })
                                .then((value) => {
                                    allattachments.push({
                                        FileName: $("#FileName").val()
                                    })
                                    attachments.push($("#FileName").val());
                                    GetAttachedDocument(engId);

                                })

                        } else {
                            swal(response, { icon: " warning" });
                        }
                      },
                    failure: function (response) {
                        alert(response.d);
                    }
                });

            }
            else {
                    swal("Attachment Details required");
            }

         }


        $("#saveLoader").toggle(false);
        $("#editEngagementForm").click(function () {
            debugger;
            //var clientId = $("#ClientTypeId").val();
            //var category = $("#Category").val();
            var clientId = $("#ClientInformationId").val();
            var clientName = $("#ClientInformationId option:selected").text();
            var startDate = $("#StartDate").val();
            var endDate = $("#EndDate").val();
            var financialYearId = $("#FinancialYearId").val();
            var regionId = $("#RegionId").val();
            var regionName = $("#RegionId option:selected").text();

            if (clientId == '' ||  clientName == '' || startDate == '' || endDate == '' || regionId=='') {
                swal("Please Fill All the required Fields", {icon: "warning"});
                return false;
            }
            if (countAttachment.length == 0) {
                swal("Please Attachment is Required", { icon: "warning" });
                return false;
            }

            var roleName = $("#RoleName").val();
            var engagementLevel;
            if (roleName =="Director Of Audit") {
                engagementLevel = "HQ";
            } else {
                engagementLevel = "Other";
            }
            //var regionName = $("#FinancialYearId option:selected").text();
            //var engagmentLocation = $("#RegionId option:selected").text();
            //var clientInfoName = $("#ClientNameId option:selected").text();
            //var clientType = $("#ClientTypeId option:selected").text();
            //var clientCategory = $("#Category option:selected").text();

            var formdata = new FormData();
            formdata.append("__RequestVerificationToken", $('[name=__RequestVerificationToken]').val());
            formdata.append("RegionId", $("#RegionId").val());
            formdata.append("EngagementLocation", $("#RegionId option:selected").text());
            formdata.append("EngagementId", $("#EngagementId").val());
            formdata.append("EngagementName", $("#EngagementName").val());
            formdata.append("ClientInformationId", $("#ClientInformationId").val());
            formdata.append("ClientName", $("#ClientInformationId option:selected").text());
            formdata.append("FinancialYearName", $("#FinancialYearName").val());
            formdata.append("StartDate", $("#StartDate").val());
            formdata.append("EndDate", $("#EndDate").val());

            //formdata.append("ClientName", clientInfoName);
            //formdata.append("ClientTypeId", $("#ClientTypeId").val());
            //formdata.append("ClientTypeName", clientType);
            //formdata.append("ClientCategoryId", $("#Category").val());
            //formdata.append("ClientCategoryName", clientCategory);
            /* formdata.append("FinancialYearName", regionName);*/

            //formdata.append("FinancialYearId", $("#FinancialYearId").val());
            //formdata.append("EngagementLocationId", $("#RegionId").val());
            //formdata.append("EngagementLevel", engagementLevel);
            //formdata.append("EngagementLocation", engagmentLocation);


            //for (var i = 0; i < attachments.length; i++) {
            //    formdata.append("AttachmentDatas[" + i + "].AttachmentId", attachments[i].AttachmentId);
            //    formdata.append("AttachmentDatas[" + i + "].AttachmentType", attachments[i].AttachmentType);
            //    formdata.append("AttachmentDatas[" + i + "].FileName", attachments[i].FileName);
            //}

            for (const value of formdata.values()) {
                console.log(value);
            }

            var url = '@Url.Action("UpdateEntryEngagement", "Engagement")';
            var urlList = '@Url.Action("EngagementList", "Engagement")';
            $("#editEngagementForm").prop('disabled', true);
            $("#divLoader").toggle(true);

            $.ajax({
                url: url,
                data: formdata,
                type: 'POST',
                contentType: false,
                processData: false,
                success: function (response) {
                    $("#editEngagementForm").prop('disabled', false);
                    $("#divLoader").toggle(false);
                    if (response == "Success") {
                        swal("Update Engagement Successfully!", { icon: "success" })
                            .then((value) => {
                                window.location.href = urlList;
                            });
                    }
                    else {
                        swal(response, {icon:"warning"});
                    }
                },
                failure: function (error) {
                    $("#editEngagementForm").prop('disabled', false);
                    $("#divLoader").toggle(false);
                    swal(error, { icon: "warning" });
                }
            });
        })

    </script>
}
