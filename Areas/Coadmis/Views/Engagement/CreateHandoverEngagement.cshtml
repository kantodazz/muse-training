@model IFMIS.Areas.Coadmis.Models.HandoverInforVM
@{
    ViewBag.Title = "Create Handover Infor";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<style type="text/css">
    .loadingImg {
        display: none;
    }

    body {
        margin-top: 40px;
    }

    .search-btn {
        border: 1px solid #ccc;
        border-radius: 4px;
        padding: 5px;
        padding-right: 10px;
    }

    .search-container {
        display: inline-flex;
        flex: 1 1 300px;
        position: relative;
        border: 1px solid #ccc;
        border-radius: 5px;
        overflow: hidden;
        padding-left: 10px;
    }

    .name-input-container {
        display: inline-flex;
        flex: 1 1 300px;
        position: relative;
        overflow: hidden;
    }

    .search-icon {
        padding: 0.5rem;
    }

    .search-button {
        background: #538AC5;
        border: 0;
        color: white;
        padding: 8px;
        border-radius: 0;
    }

    input[type=number] {
        padding: 8px;
        border: 1px solid #ccc;
        width: 205px;
    }

    input[type=text] {
        padding: 5px;
        border: 1px solid #ccc;
    }

    input[type=search] {
        padding: 4px;
        border: hidden;
        border-radius: 4px;
    }

    textarea {
        border: 1px solid #ccc;
    }

    select {
        padding: 8px;
        border: 1px solid #ccc;
        resize: vertical;
        width: 230px;
    }

    .action-btn {
        width: 100px;
        color: white;
    }

    .form-label {
        text-align: right;
    }

    td {
        padding: 5px;
    }

    .info-box {
        padding: 10px;
        background-color: #ECF3F8;
        text-align: center;
        border: 1px solid #ccc;
        border-radius: 5px;
    }

    #itemUL li {
        margin-left: -40px;
        border-bottom: 1px solid silver;
        height: 26px;
        padding-left: 5px;
        padding-top: 8px;
        cursor: pointer;
    }

    .redStar {
        color: red;
        font-size: 15px;
    }
</style>
@*<div id="divLoader"></div>*@
<div id="content" style="margin: 5px; padding-top: 50px">
    <div class="row"></div>
    <!-- widget grid -->
    <section id="widget-grid" class="">
        <div class="row">
            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">

                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">
                    @Html.HiddenFor(model => model.UserId)
                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2> @ViewBag.Title</h2>
                    </header>

                    <div>
                        <div class="widget-body " style="padding-top:10px;width:100%">
                            <div class="row setup-content">

                                <form>
                                    <div class="form-horizontal">
                                        <div class="col-xs-12">
                                            <div align="center">
                                                <img src="~/Media/Images/ajax_loader.gif" class="loadingImg" />
                                            </div>
                                            <div class="col-md-12">
                                                <div class="form-group">
                                                    <div class="col-md-1"></div>
                                                    <label class="control-label col-md-2">Engagement Name<span class="redStar">*</span></label>
                                                    <div class="col-md-7 collateralUsage">
                                                        @Html.DropDownList("EngagementId", Model.EngagementList, "Select Engagement Name", new { @class = "form-control select2", @required = "required" })
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    <div class="col-md-2"></div>
                                                    <div class="col-md-8">
                                                        <div id="MemberList" style="margin-top: 20px; display: none"></div>
                                                    </div>
                                                    <div class="col-md-2"></div>
                                                </div>

                                            </div>
                                        </div>
                                    </div>
                                </form>
                                <div class="col-md-3">
                                    <a href="@Url.Action("EngagementHandoverList", "Engagement")" style="margin-right:5px" type="submit" class="btn btn-info pull-left"><i class="glyphicon glyphicon-arrow-left"></i> Back  </a>
                                    @*<button type="submit" class="btn btn-info" id="saveEngagementForm">
                                            <i class="fa fa-save"></i>Save
                                            <img src="~/Content/img/loading.gif" class="loadingImg" />
                                        </button>*@
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            </article>

        </div>
    </section>
</div>

<!---Start here HandoverModal Model-->
<div class="modal fade" id="HandoverModal">
    <div class="modal-dialog" style="width:70%;">
        <div class="modal-content panel-info">
            <div class="modal-header panel-heading">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h3 class="modal-title"> </h3>
            </div>
            <div class="modal-body" style="overflow-x: auto;">
                @Html.HiddenFor(model => model.EngagementTeamMemberId)
                @*////@Html.HiddenFor(model => model.UserId)*@
                @Html.HiddenFor(model => model.SelectedUserId)
                <div class="form-horizontal">
                    <div class="form-group">
                        <label class="control-label col-md-2">Auditor<span class="redStar">*</span></label>
                        <div class="col-md-8">
                            @if (ViewBag.auditor != null)
                            {
                                @Html.DropDownListFor(model => model.NewMemberId, ViewBag.auditor as SelectList, "Select Auditor Name", new { @class = "form-control select2" })
                                @Html.ValidationMessageFor(model => model.NewMemberId, "", new { @class = "text-danger" })
                            }
                            else
                            {
                                @Html.DropDownList("AuditorId", null, "Select Auditor Name", new { @class = "form-control select2" })

                            }
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.HandoverReason, htmlAttributes: new { @class = "control-label col-md-2 required" })
                        (<span style="font-weight:bold;" id="HandoverReasonCount">250</span>)
                        <div class="col-md-8">
                            @Html.TextAreaFor(model => model.HandoverReason, new { maxlength = 250, @class = "form-control", @rows = 2, @cols = 2 })
                            @Html.ValidationMessageFor(model => model.HandoverReason, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-info" id="handOverTeamMember">
                    <i class="fa fa-save"></i> Handover
                    <img src="~/Content/img/loading.gif" class="loadingImg" />
                </button>
                <button class="btn btn-info" data-dismiss="modal">
                    <i class="fa  fa-times"></i>Close
                </button>
            </div>
        </div>
    </div>
</div>
<!--End Attachment Model-->

@section pagespecific {
    <!-- PAGE RELATED PLUGIN(S) -->
    <script type="text/javascript">
        //SHOW LOADER ICON

        $(function () {
            $('#NewMemberId').select2({
                dropdownParent: $('#HandoverModal')
            });
            /// $("#dt_ebasic").DataTable();
        });
        $(document).ajaxStart(function () {
            $(".loadingImg").show();

        });
        //HIDE LOADER ICON
        $(document).ajaxStop(function () {
            $(".loadingImg").hide();
        });



        $("#EngagementId").change(function (){
            debugger
            var engagementId = $("#EngagementId").val();
            //var financialYearId = $("#FinancialYearId").val();

            var url = '@Url.Action("GetEngagementMemberList", "Engagement")';
            url += '?id=' + engagementId;
            $("#divLoader").show();
            var option = [];
            $.ajax({
                type: "POST",
                url: url,
                success: function (response) {
                    $("#MemberList").show();
                    $("#MemberList").html(response);
                    if (response == "No Data Available") {
                        swal("Sorry! Selected Ref Code Does not Exist.Try Again", {icon: "warning"});
                        location.reload();
                    }
                    else {
                        $("#divLoader").hide();
                    };

                },
                error: function (err) {
                    swal(err.statusText, {icon: "warning"});
                },
            });
        });

        function Handover(id, selectedUserId) {
            swal({
                title: 'Handover?',
                text: "Are you sure you want to handover Selected Member:",
                buttons: [
                    'No',
                    'Yes'
                ],
            }).then(function (isConfirm) {
                if (isConfirm) {
                    HandoverProcessedInfor(id, selectedUserId);
                } else {
                    swal("Cancelled", "No change was made");
                }
            });

        }
        function HandoverProcessedInfor(i, selectedUserId) {
            debugger;
            $("#HandoverModal").modal("show");
            $(".modal-title").text("Handover User");
            $(".modal-body #EngagementTeamMemberId").val(i);
            $(".modal-body #SelectedUserId").val(selectedUserId);
        }

        //Count input char
        $('#HandoverReason').on("keyup", function () {
            var count = $('#HandoverReason').val().split('');
            var numChars = 250 - parseInt(count.length);
            $('#HandoverReasonCount').text(parseInt(numChars));
            if (numChars == 0) {
                $("#handOverTeamMember").prop('disabled', true);
            } else {
                $("#handOverTeamMember").prop('disabled', false);
            }
        });


        $("#handOverTeamMember").click(function () {
            debugger;
            var auditorId = $("#NewMemberId").val();
            var engagementId = $("#EngagementId").val();
            var handoverReason = $("#HandoverReason").val();
            var oldUserId = $("#SelectedUserId").val();
            var userId = $("#UserId").val();

            if (auditorId == '' || engagementId == '' || handoverReason=='') {
                swal("Please Fill All the required Fields", {icon: "warning"});
                return false;
            }

            var formdata = new FormData();
            formdata.append("__RequestVerificationToken", $('[name=__RequestVerificationToken]').val());
            formdata.append("NewMemberId", $("#NewMemberId").val());
            formdata.append("NewMemberFullName", $("#NewMemberId option:selected").text());
            formdata.append("EngagementId", $("#EngagementId").val());
            formdata.append("EngagementTeamMemberId", $("#EngagementTeamMemberId").val());
            formdata.append("UserId", $("#UserId").val());
            formdata.append("HandoverReason", $("#HandoverReason").val());
            formdata.append("SelectedUserId", $("#SelectedUserId").val());


            for (const value of formdata.values()) {
                console.log(value);
            }

            var url = '@Url.Action("SaveHandoverTeamMember", "Engagement")';
            var backUrl = '@Url.Action("EngagementHandoverList", "Engagement")';
            $("#handOverTeamMember").prop('disabled', true);
            $("#divLoader").toggle(true);

            $.ajax({
                url: url,
                data: formdata,
                type: 'POST',
                contentType: false,
                processData: false,
                success: function (response) {
                    console.log('response', response)
                    $("#handOverTeamMember").prop('disabled', false);
                    $("#divLoader").toggle(false);
                    if (response == "Success") {
                        swal("Saved Successfully!", { icon: "success" })
                            .then((value) => {
                                window.location.href=backUrl;
                            });
                    } 
                    else {
                        swal(response);
                    }
                },
                failure: function (error) {
                    $("#saveEngagementForm").prop('disabled', false);
                    $("#divLoader").toggle(false);
                    swal(error);
                }
            });
        })
        @*$("#Category").change(function () {
            var id = $(this).val();
            if (id != "") {

               var option = [];
                $.ajax({
                    url: '@Url.Action("GetClient", "Engagement")/?id=' + id,
                    type: "GET",
                    dataType: "json",
                    success: function (data) {

                        console.log('select', data);
                        option.empty;
                        option.push('<option value="">Select Client </option>');
                        data.data.forEach(d => {
                            option.push('<option value=' + d["ClientInformationId"] + '>' + d["ClientName"] + '</option>');
                        });
                        option = option.toString().replace(",", "").replace("[", "").replace("]", "");
                        $("#ClientNameId").html(option);
                    }
                });
            }
        })*@

        $("#ClientInformationId").change(function () {
            debugger;
            //var donorId = $(this).val();
            var clientId = $("#ClientInformationId").val();
            document.getElementById('ClientYearEnd').value = "";
            if (!(clientId == null)) {
                if (!(clientId == "")) {
                    $("#divLoader").show();

                    var url = '@Url.Action("GetClientYearEnd", "Engagement")';
                    $.ajax({
                        type: "POST",
                        url: url,
                        data: { id: clientId },
                        success: function (data, status, jqXHR) {
                            $("#divLoader").hide();
                            if (data.success) {
                                //var dateValue = ToJavaScriptDate(data.ClientYearEndDate);
                                //document.getElementById('ClientYearEnd').value = dateValue;
                                document.getElementById('ClientYearEnd').value = data.ClientYearEndDate;

                            } else {
                                //alert('No record found!');
                                swal("Please Add Client Year End", { icon: "warning" });

                                //document.getElementById('ClientYearEnd').style.color ="red";
                                document.getElementById('ClientYearEnd').value = "";
                                $("#saveEngagementForm").prop('disabled', true);
                            }
                        }
                    });
                }
            }

        });

        function ToJavaScriptDate(value) {
            if (value != null && value != '') {
                var pattern = /Date\(([^)]+)\)/;
                var results = pattern.exec(value);
                var dt = new Date(parseFloat(results[1]));
                return dt.getDate() + "/" + (dt.getMonth() + 1) + "/" + dt.getFullYear();
            }
        }

        var dateDifferenceInDays = function (date1, date2) {
            const oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds
            var datearray = date1.split("/");
            var newdate1 = datearray[1] + '/' + datearray[0] + '/' + datearray[2];

            var datearray2 = date2.split("/");
            var newdate2 = datearray2[1] + '/' + datearray2[0] + '/' + datearray2[2];

            const firstDate = new Date(newdate1);
            const secondDate = new Date(newdate2);

            const diffDays = Math.round((secondDate - firstDate) / oneDay);
            return diffDays;
        }


        function ShowAddMoreAttachment() {
            $("#AddAttachment").modal("show");
        };

        /// ADDING ATTACHMENTS DIALOG STARTS HERE
        var dt_attachments = $('#dt_attachments').dataTable();
        $("#dt_attachments_wrapper .dt-toolbar").remove();
        $("#dt_attachments_wrapper .dt-toolbar-footer").remove();

        var allattachments = []
        var attachments = []
        var countAttachment = 0;

        function addAttachmentsz() {
            debugger;
            if ($("#Attachment").val() == "" || $("#FileName").val() == "") {
                return false;
            }

            var attachmentId = $('#Attachment').val().trim();
            var fileName = $('#FileName').get(0).files[0];
            var attachment = $("#Attachment option:selected").text();
            var derivedAttachmentName = attachment + ':-' + fileName.name;

            attachments.push({
                AttachmentId: attachmentId,
                AttachmentType: derivedAttachmentName,
                FileName: fileName,

            });

            GenerateAttachmentsTable();
        }

        function GenerateAttachmentsTable() {
            if (attachments.length > 0) {
                var $table = $('<table class="table table-condensed table-stripped table-hover table-bordered"/>');
                $table.append('<thead>' +
                    '<tr><th colspan="4">Attachment Type</th>' +
                    '<tr><th>#</th><th style="display:none;">Id</th><th style="text-align: center">Attachment Name</th><th style="text-align: center">Action</th></tr>' +
                    '</thead>');
                var $tbody = $('<tbody/>');
                var j = 0;
                $.each(attachments, function (i, val) {
                    ++j;
                    var $row = $('<tr/>');
                    $row.append($('<td/>').html(j));
                    $row.append($('<td style="display:none;"/>').html(val.AttachmentId));
                    $row.append($('<td/>').html(val.AttachmentType));
                    var $remove = $('<a href="#"><span class="glyphicon glyphicon-trash" aria-hidden="true"></span></a>');
                    $remove.click(function (e) {
                        e.preventDefault();
                        attachments.splice(i, 1);
                        GenerateAttachmentsTable();
                    });
                    $row.append($('<td/>').html($remove));
                    $tbody.append($row);
                });
                $table.append($tbody);
                $('#divAttachments').html($table);
                $("#FileName").val("");
                $("#saveAttachments").attr("disabled", false);
            } else {
                $('#divAttachments').html('');
                $("#saveAttachments").attr("disabled", false);
            }

            $("#added_attachments").text(attachments.length);
        }

        $("#saveLoader").toggle(false);
        $("#saveEngagementForm").click(function () {
            debugger;
            var clientId = $("#ClientInformationId").val();
          /*  var category = $("#Category").val();*/
            var clientName = $("#ClientNameId").val();
            var startDate = $("#StartDate").val();
            var endDate = $("#EndDate").val();
            var financialYearId = $("#FinancialYearId").val();
            var regionId = $("#RegionId").val();
            var yearEnd = $("#ClientYearEnd").val();
            var engagementName = $("#EngagementName").val();

            if (clientId == '' ||  engagementName == '' || clientName == ''
                || startDate == '' || endDate == '' || regionId=='' || yearEnd=='') {
                swal("Please Fill All the required Fields", {icon: "warning"});
                return false;
            }
            if (attachments.length == 0) {
                swal("Please Attachment is Required", { icon: "warning" });
                return false;
            }

            var roleName = $("#RoleName").val();
            var engagementLevel;
            if (roleName =="Director Of Audit") {
                engagementLevel = "HQ";
            } else {
                engagementLevel = "Other";
            }
            var regionName = $("#FinancialYearId option:selected").text();
            var engagmentLocation = $("#RegionId option:selected").text();
            var clientInfoName = $("#ClientInformationId option:selected").text();
            var clientType = $("#ClientTypeId option:selected").text();
            var clientCategory = $("#Category option:selected").text();

            var formdata = new FormData();
            formdata.append("__RequestVerificationToken", $('[name=__RequestVerificationToken]').val());
            formdata.append("ClientTypeId", $("#ClientTypeId").val());
            formdata.append("ClientTypeName", clientType);
            formdata.append("ClientCategoryId", $("#Category").val());
            formdata.append("ClientCategory", clientCategory);
            formdata.append("ClientInformationId", $("#ClientInformationId").val());
            formdata.append("ClientName", clientInfoName);
            formdata.append("EngagementName", $("#EngagementName").val());
            formdata.append("StartDate", $("#StartDate").val());
            formdata.append("EndDate", $("#EndDate").val());
            formdata.append("FinancialYearId", $("#FinancialYearId").val());
            formdata.append("FinancialYearName", regionName);
            formdata.append("RegionId", $("#RegionId").val());
            formdata.append("EngagementLevel", engagementLevel);
            formdata.append("EngagementLocation", engagmentLocation);
            //formdata.append("EngagementLocation", engagmentLocation);
            formdata.append("ClientFinancialYear", yearEnd);


            for (var i = 0; i < attachments.length; i++) {
                formdata.append("AttachmentDatas[" + i + "].AttachmentId", attachments[i].AttachmentId);
                formdata.append("AttachmentDatas[" + i + "].AttachmentType", attachments[i].AttachmentType);
                formdata.append("AttachmentDatas[" + i + "].FileName", attachments[i].FileName);
            }

            for (const value of formdata.values()) {
                console.log(value);
            }

            var url = '@Url.Action("SaveEntryEngagement", "Engagement")';
            var urlList = '@Url.Action("EngagementList", "Engagement")';
            $("#saveEngagementForm").prop('disabled', true);
            $("#saveLoader").toggle(true);

            $.ajax({
                url: url,
                data: formdata,
                type: 'POST',
                contentType: false,
                processData: false,
                success: function (response) {
                    $("#form_submision").prop('disabled', false);
                    $("#saveLoader").toggle(false);
                    if (response == "Success") {
                        swal("Saved Successfully!", { icon: "success" })
                            .then((value) => {
                                window.location.href = urlList;
                            });
                    }
                    else {
                        swal(response);
                    }
                },
                failure: function (error) {
                    $("#saveEngagementForm").prop('disabled', false);
                    $("#saveLoader").toggle(false);
                    swal(error);
                }
            });
        })





    </script>
}

