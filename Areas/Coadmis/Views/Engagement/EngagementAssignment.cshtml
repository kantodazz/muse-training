
@{@model IFMIS.Areas.Coadmis.Models.EngagementVM
ViewBag.Title = "Engagement Assignment";
Layout = "~/Views/Shared/_Layout.cshtml";
}

<style type="text/css">
    .loadingImg {
        display: none;
    }

    tr.group,
    tr.group:hover {
        background-color: #ddd !important;
    }

    body {
        margin-top: 40px;
    }

    .search-btn {
        border: 1px solid #ccc;
        border-radius: 4px;
        padding: 5px;
        padding-right: 10px;
    }

    .search-container {
        display: inline-flex;
        flex: 1 1 300px;
        position: relative;
        border: 1px solid #ccc;
        border-radius: 5px;
        overflow: hidden;
        padding-left: 10px;
    }

    .name-input-container {
        display: inline-flex;
        flex: 1 1 300px;
        position: relative;
        overflow: hidden;
    }

    .search-icon {
        padding: 0.5rem;
    }

    .search-button {
        background: #538AC5;
        border: 0;
        color: white;
        padding: 8px;
        border-radius: 0;
    }

    input[type=number] {
        padding: 8px;
        border: 1px solid #ccc;
        width: 205px;
    }

    input[type=text] {
        padding: 5px;
        border: 1px solid #ccc;
    }

    input[type=search] {
        padding: 4px;
        border: hidden;
        border-radius: 4px;
    }

    textarea {
        border: 1px solid #ccc;
    }

    select {
        padding: 8px;
        border: 1px solid #ccc;
        resize: vertical;
        width: 230px;
    }

    .action-btn {
        width: 100px;
        color: white;
    }

    .form-label {
        text-align: right;
    }

    td {
        padding: 5px;
    }

    .info-box {
        padding: 10px;
        background-color: #ECF3F8;
        text-align: center;
        border: 1px solid #ccc;
        border-radius: 5px;
    }

    #itemUL li {
        margin-left: -40px;
        border-bottom: 1px solid silver;
        height: 26px;
        padding-left: 5px;
        padding-top: 8px;
        cursor: pointer;
    }

    .redStar {
        color: red;
        font-size: 15px;
    }

    button#saveAnswerForm {
        margin-left: 90%;
    }

    .tabs-left li.active {
        background-color: #5bc0de;
    }

    .tabs-left li.active a:after {
        content: "";
        width: 30px;
        height: 30px;
        background: linear-gradient(225deg,#5bc0de 49%, transparent 50%);
        position: absolute;
        top: 50%;
        right: -16px;
        transform: translateY(-50%) rotate(45deg);
    }

    .tab-content li.active a:after {
        content: "";
        width: 30px;
        /* height: 30px; */
        background: linear-gradient(225deg,#5bc0de 30%, transparent 50%);
        /* position: absolute; */
        /* align-content: center; */
        /* top: 50%; */
        /* right: -16px; */
        transform: translateY(-50%) rotate(135deg);
    }
</style>
<div id="divLoader"></div>
<div id="content" style="margin: 5px; padding-top: 50px">
    <div class="row"></div>
    <!-- widget grid -->
    <section id="widget-grid" class="">
        <div class="row">
            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">

                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">

                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2> @ViewBag.Title For: @Model.EngagementName | @Model.EngagementRefNo</h2>
                    </header>

                                @*@Html.HiddenFor(model => model.EngagementId)
                    <div class="alert alert-info fade in">
                        <button class="close" data-dismiss="alert">x</button>
                        <i class="fa-fw fa fa-info"></i>
                        Engagement Name: @Model.EngagementName | @Model.EngagementRefNo
                    </div>*@
                    <br />
                    <div class="widget-body">
                        <div class="row">
                            <div class="tabs-left">
                                <ul class="nav nav-tabs tabs-left" id="engagementPlanning">
                                    <li class="active"><a href="#tab-p1" data-toggle="tab"><i class="fa fa-fw fa-lg fa-comments-o" aria-hidden="true"></i>Client Background</a></li>
                                    <li><a href="#tab-p2" data-toggle="tab"><i class="fa fa-fw fa-lg fa-users" aria-hidden="true"></i>Team Selections</a></li>
                                </ul>
                                <div class="tab-content">
                                    <div class="tab-pane active" id="tab-p1">
                                        <div class="row">
                                            @Html.Partial("_ClientBackground")
                                        </div>
                                    </div>
                                    <div class="tab-pane" id="tab-p2">
                                        <div class="row">
                                            @Html.Partial("_TeamSelection")
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="form-actions row" style="margin:10px">
                            <div class="col-md-1">
                                <a class="btn btn-default" href='@Url.Action("EngagementList", "Engagement")'><i class="fa fa-fw fa-lg fa-backward"></i>Back</a>
                            </div>
                        </div>

                        
                    </div>
                </div>
            </article>

        </div>
    </section>
</div>
<!--Modal for the Edit of the Memorandamu-->
<div id="memoradamu" class="modal fade" style="left:4%">
    <div class="modal-dialog" style="width:70%;">
        <div class="modal-content panel-info">
            <div class="modal-header alert alert-info">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h3 class="modal-title">Edit Memorandum</h3>
            </div>
            <div class="modal-body" id="memorandamBody"></div>
            <div class="modal-footer">

                <button class="btn btn-info" id="editMemoradamu">
                    <i class="fa fa-save"> Update</i>
                </button>
                <button class="btn btn-info" data-dismiss="modal">
                    <i class="fa fa-times"> Close</i>
                </button>
            </div>
        </div>
    </div>
</div>
@section pagespecific {
    <!-- PAGE RELATED PLUGIN(S) -->
    <script type="text/javascript">
        $(document).ready(function () {
            $('#hide-menu > span > a').trigger('click');
        });

        $('a[data-toggle="tab"]').on('shown.bs.tab', function (e) {
            localStorage.setItem('lastTab', $(this).attr('href'));
        });
        var lastTab = localStorage.getItem('lastTab');

        if (lastTab) {
            $('[href="' + lastTab + '"]').tab('show');
            if (lastTab = "#tab-p2") {

            }
        }


        // Order by the grouping
        $('#example tbody').on('click', 'tr.group', function () {
            var currentOrder = table.order()[0];
            if (currentOrder[0] === groupColumn && currentOrder[1] === 'asc') {
                table.order([groupColumn, 'desc']).draw();
            } else {
                table.order([groupColumn, 'asc']).draw();
            }
        });

        //Count input char
        $('#AuditApproach').on("keyup", function () {
            var count = $('#AuditApproach').val().split('');
            var numChars = 250 - parseInt(count.length);
            $('#AuditApproachCount').text(parseInt(numChars));
        });

        //Count input char
        $('#Method').on("keyup", function () {
            var count = $('#Method').val().split('');
            var numChars = 250 - parseInt(count.length);
            $('#UncertintyCount').text(parseInt(numChars));
        });


        $("#saveAnswerForm").click(function (){
            debugger;
            var data = example.DataTable().rows().data();
        });


        $("#saveLoader").toggle(false);
        $("#addEngTeamMember").click(function () {
            debugger;
            var auditorId = $("#AuditorId").val();
            var engagementId = $("#EngagementId").val();
            var engagementRoleId = $("#EngagementRoleId").val();

            if (auditorId == '' || engagementId == '' || engagementRoleId=='') {
                swal("Please Fill All the required Fields", {icon: "warning"});
                return false;
            }

            var formdata = new FormData();
            formdata.append("__RequestVerificationToken", $('[name=__RequestVerificationToken]').val());
            formdata.append("AuditorId", $("#AuditorId").val());
            formdata.append("AuditorName", $("#AuditorId option:selected").text());
            formdata.append("EngagementId", $("#EngagementId").val());
            formdata.append("EngagementRoleId", $("#EngagementRoleId").val());
            formdata.append("MemberLevel", $("#EngagementRoleId option:selected").text());



            for (const value of formdata.values()) {
                console.log(value);
            }

            var url = '@Url.Action("SaveEngagementTeamMember", "Engagement")';
            @*var urlReturn = '@Url.Action("engagementassignment", "Engagement")/?id=' + engagementId;*@
            $("#saveEngagementForm").prop('disabled', true);
            $("#saveLoader").toggle(true);

            $.ajax({
                url: url,
                data: formdata,
                type: 'POST',
                contentType: false,
                processData: false,
                success: function (response) {
                    console.log('response', response)
                    $("#saveEngagementForm").prop('disabled', false);
                    $("#saveLoader").toggle(false);
                    if (response == "Success") {
                        swal("Saved Successfully!", { icon: "success" })
                            .then((value) => {
                                /*window.location.href = urlReturn;*/
                                window.location.reload();
                            });
                    } else if(response =="Dublicate") {
                        swal("Dublicate Team Member Registered!", { icon: "warning" })
                            .then((value) => {
                                window.location.reload();
                            });
                    } else if (response =="Existing") {
                        swal("Team Member already Registered!", { icon: "warning" })
                            .then((value) => {
                                window.location.reload();
                            });
                    } else if (response =="Role Existing") {
                        swal("Only one Member with Team Leader Role!", { icon: "warning" })
                            .then((value) => {
                                window.location.reload();
                            });
                    }
                    else {
                        swal(response);
                    }
                },
                failure: function (error) {
                    $("#saveEngagementForm").prop('disabled', false);
                    $("#saveLoader").toggle(false);
                    swal(error);
                }
            });
        })


        function RemoveMember(id) {
            swal({
                title: "Are you sure?",
                text: "Once Remove, You will not be able to recover",
                buttons: ["Yes", "No"],
                closeOnClickOutside: false,
            }).then(function (isConfirm) {
                if (isConfirm) {
                    swal("Cancelled", "No change was made");
                } else {
                    RemoveSelectedMember(id);
                }
            });
        }

        function RemoveSelectedMember(id, index) {
            var params = { "id": id };
            var url = '@Url.Action("RemoveSelectedMember", "Engagement")';
            $.ajax({
                type: "get",
                url: url,
                data: params,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    if (response = "Success") {
                        swal("Selected Member Removed Successfully", { icon: "success" })
                            .then((value) => {
                                window.location.reload();
                            });
                    } else { 
                        swal("Error", { icon: "infor" })
                            .then((value) => {
                                window.location.reload();
                            });
                    }
                },
                failure: function (response) {
                    alert(response.d);
                }
            });
        }

        $("#saveMemorandamBackgrd").on('click', function () {
        debugger;
            var moduleType = $("#ModuleType").val();
            var remarks = $("#Remarks").val();
            var clientId = $("#ClientInformationId").val();
            var financialYear = $("#ClientFinancialYear").val();


            if (moduleType == '' || remarks == '') {
                swal("Please Fill All the required Fields", { icon: "warning" });
                return false;
            }

            var formdata = new FormData();
            formdata.append("__RequestVerificationToken", $('[name=__RequestVerificationToken]').val());
            formdata.append("ModuleType", moduleType);
            formdata.append("Remarks", remarks);
            formdata.append("ClientInformationId", clientId);
            formdata.append("ClientFinancialYear", financialYear);

            $("#saveLoader").toggle(true);
            var url = '@Url.Action("CreatePlanningMemorandom", "PlanningEngagement")';
            $.ajax({
                url: url,
                data: formdata,
                type: 'POST',
                contentType: false,
                processData: false,
                success: function (response) {
                    console.log('response', response)
                    $("#addRiskAssertionData").prop('disabled', false);
                    $("#saveLoader").toggle(false);
                    if (response == "Success") {
                        swal("Memorandom Saved Successfully!", { icon: "success" })
                            .then((value) => {
                                window.location.reload();
                            });
                    } else if (response == "Duplicate") {
                        swal("Duplicate Memorandom Information save!", { icon: "warning" })
                            .then((value) => {
                                return false;
                            });
                    }
                    else {
                        swal(response);
                    }
                },
                failure: function (error) {
                    $("#addRiskAssertionData").prop('disabled', false);
                    $("#saveLoader").toggle(false);
                    swal(error);
                }
            });
        });

         function DeleteMemorandamu(id) {
            swal({
                title: "Are you sure?",
                text: "Once Remove, You will not be able to recover",
                buttons: ["Yes", "No"],
                closeOnClickOutside: false,
            }).then(function (isConfirm) {
                if (isConfirm) {
                    swal("Cancelled", "No change was made");
                } else {
                    RemoveMemorandamu(id);
                }
            });
        }

        function RemoveMemorandamu(id, index) {
            var params = { "id": id };
            var url = '@Url.Action("RemoveSelectedMemorandamu", "Engagement")';
            $.ajax({
                type: "get",
                url: url,
                data: params,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    if (response = "success") {
                        swal("Selected Memorandamu Removed Successfully", { icon: "success" })
                            .then((value) => {
                                window.location.reload();
                            });
                    }
                },
                failure: function (response) {
                    alert(response.d);
                }
            });
        }


        var EditMemorandamu = function (id) {
            debugger

           var url = '@Url.Action("GetMemoradamu", "Engagement")';
           url += '?id=' + id;
           $("#editMemoradamu").show();
            $("#memorandamBody").load(url, function () {
                $("#memoradamu").modal({
                    backdrop: "static",
                    keyboard: false
                })
            });
        }

    </script>
}
