@model IFMIS.Areas.Coadmis.Models.RiskAssessementVM
@{
    ViewBag.Title = "Risk Identification Process";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style type="text/css">
    .loadingImg {
        display: none;
    }

    body {
        margin-top: 40px;
    }

    .search-btn {
        border: 1px solid #ccc;
        border-radius: 4px;
        padding: 5px;
        padding-right: 10px;
    }

    .search-container {
        display: inline-flex;
        flex: 1 1 300px;
        position: relative;
        border: 1px solid #ccc;
        border-radius: 5px;
        overflow: hidden;
        padding-left: 10px;
    }

    .name-input-container {
        display: inline-flex;
        flex: 1 1 300px;
        position: relative;
        overflow: hidden;
    }

    .search-icon {
        padding: 0.5rem;
    }

    .search-button {
        background: #538AC5;
        border: 0;
        color: white;
        padding: 8px;
        border-radius: 0;
    }

    input[type=number] {
        padding: 8px;
        border: 1px solid #ccc;
        width: 205px;
    }

    input[type=text] {
        padding: 5px;
        border: 1px solid #ccc;
    }

    input[type=search] {
        padding: 4px;
        border: hidden;
        border-radius: 4px;
    }

    textarea {
        border: 1px solid #ccc;
    }

    /* select {
        padding: 8px;
        border: 1px solid #ccc;
        resize: vertical;
        width: 230px;
    }*/

    .action-btn {
        width: 100px;
        color: white;
    }

    .form-label {
        text-align: right;
    }

    td {
        padding: 5px;
    }

    .info-box {
        padding: 10px;
        background-color: #ECF3F8;
        text-align: center;
        border: 1px solid #ccc;
        border-radius: 5px;
    }

    #itemUL li {
        margin-left: -40px;
        border-bottom: 1px solid silver;
        height: 26px;
        padding-left: 5px;
        padding-top: 8px;
        cursor: pointer;
    }

    .redStar {
        color: red;
        font-size: 15px;
    }

    select2-choice {
        height: 0px !important;
        position: initial !important;
        border: none !important;
        overflow: visible !important;
        line-height: inherit !important;
    }

    .select2-choice .select2-arrow b {
        line-height: 2 !important;
    }

    .dropdown-left-manual {
        right: 0;
        left: auto;
        padding-left: 1px;
        padding-right: 1px;
        min-width: 5px
    }
</style>
<div id="divLoader"></div>
<div id="content" style="margin: 5px; padding-top: 50px">
    <div class="row"></div>
    <!-- widget grid -->
    <section id="widget-grid" class="">
        <div class="row">
            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">

                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">

                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2> @ViewBag.Title</h2>
                    </header>

                    <div>
                        <div class="widget-body " style="padding-top:10px;width:100%">
                            <div class="row setup-content">
                                @Html.HiddenFor(model => model.PlanningEngagementId)
                                @*@Html.HiddenFor(model=>model.FinancialYear)*@
                                @Html.HiddenFor(model => model.ClientName)
                                @Html.HiddenFor(model => model.ClientId)
                                <div class="form-horizontal">
                                    <div class="form-group">
                                        <label class="control-label col-md-2">Question<span class="redStar">*</span></label>
                                        <div class="col-md-8">
                                            <select id="QuestionnaireId" name="QuestionnaireId" class="form-control select2" required="required">
                                                <option value="">Select Question</option>
                                                @foreach (var item in ViewBag.QuestionnaireList)
                                                {
                                                    <option value="@item.QuestionnaireId">@item.QuestionnairName</option>
                                                }
                                            </select>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-md-2">Question Response<span class="redStar">*</span></label>
                                        <div class="col-md-3">
                                            @Html.DropDownList("QuestionnairResponse", new List<SelectListItem>{
                                                                    new SelectListItem{ Text="--Select Answer Type ---", Value = "" },
                                                                    new SelectListItem{ Text="Yes", Value = "Yes" },
                                                                    new SelectListItem{ Text="No", Value = "No" },
                                                                    }, new { @class = "form-control select2", @required = "required" })
                                            @Html.ValidationMessageFor(model => model.QuestionnairResponse, "", new { @class = "text-danger" })
                                        </div>
                                        <div id="riskAssign" style="display: none">
                                            <label class="col-md-2 control-label" style="font-weight:normal;text-align:right">Risk Identified<i class="fa fa-times" style="color:white"></i><span class="redStar">*</span></label>
                                            <div class="col-md-3">
                                                <a class="search-btn" onclick="ShowAddMoreRiskIdentify()" id="searchbtn" href="#" style="display:block;border:1px solid #ccc;padding:8px">
                                                    <i class="fa fa-paperclip search-icon"></i>
                                                    &nbsp; Add Risk(s) <span id="added_riskIdentify"></span>
                                                </a>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="col-md-8"></div>
                                        <div class="col-md-3">
                                            @*<a href="@Url.Action("PlanningEngagementlist", "PlanningEngagement")" style="margin-right:5px" type="submit" class="btn btn-info pull-left">
                                                <i class="glyphicon glyphicon-arrow-left"></i> Back
                                            </a>*@
                                            <a href="javascript:history.back()" style="margin-right:5px" class="btn btn-info pull-left">
                                                <span class="glyphicon glyphicon-arrow-left" aria-hidden="true"></span>
                                                Back
                                            </a>

                                            <button type="submit" class="btn btn-info" id="saveRiskAssertationForm">
                                                <i class="fa fa-save"></i>Save
                                                <img src="~/Content/img/loading.gif" class="loadingImg" />
                                            </button>
                                        </div>
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </article>
        </div>
    </section>
</div>

<!--Add Risk Identified model-->
<div class="modal fade" id="AddRiskModel" style="left:4%">
    <div class="modal-dialog" style="width:80%;">
        <div class="modal-content panel-info">
            <div class="modal-header panel-heading">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h3 class="modal-title"> Add Risks </h3>
            </div>
            <div class="modal-body" style="overflow-x: auto;">
                <div class="form-horizontal">

                    <div class="form-group">
                        <label class="control-label col-md-2">Risk Name<span class="redStar">*</span></label>
                        <div class="col-md-8">
                            @Html.TextBoxFor(model => model.RiskName, new { @Class = "input", @required = "required", style = "width:100%; display:block;border:1px solid #ccc;padding:8px;" })
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-2">Risk Category<span class="redStar">*</span></label>
                        <div class="col-md-3">
                            @Html.DropDownList("RiskCategory", new List<SelectListItem>{
                              new SelectListItem{ Text="--Select ---", Value = "" },
                              new SelectListItem{ Text="Financial", Value ="Financial" },
                              new SelectListItem{ Text="Non Financial", Value = "Non Financial" },
                               }, new { @class = "form-control select2", @required = "required" })
                            @Html.ValidationMessageFor(model => model.RiskCategory, "", new { @class = "text-danger" })
                        </div>

                        <label class="control-label col-md-2">Risk Ranking<span class="redStar">*</span></label>
                        <div class="col-md-3">
                            @Html.DropDownList("RiskRanking", new List<SelectListItem>{
                              new SelectListItem{ Text="--Select ---", Value = "" },
                              new SelectListItem{ Text="High", Value ="H" },
                              new SelectListItem{ Text="Medium", Value = "M" },
                              new SelectListItem{ Text="Low", Value = "L" },
                               }, new { @class = "form-control select2", @required = "required" })
                            @Html.ValidationMessageFor(model => model.RiskRanking, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    @*<div class="form-group">
                            <label class="control-label col-md-2">Auditable Area Affected<span class="redStar">*</span></label>
                            <div class="col-md-8" style="padding-left: 5px">
                                @Html.ListBoxFor(m => m.SelectedAuditableAreaId, new MultiSelectList(Model.AuditableAreaToList, "AuditableAreaId", "AuditableAreaName"), new { @class = "form-control select2", multiple = "multiple" })
                                @Html.ValidationMessageFor(model => model.SelectedAuditableAreaId, "", new { @class = "text-danger" })
                            </div>
                        </div>*@

                    @*<div class="form-group">
                        <label class="control-label col-md-2">Auditable Area Affected<span class="redStar">*</span></label>
                        <div class="col-md-8" style="padding-left: 5px">
                            @Html.ListBoxFor(m => m.SelectedAuditableAreaId, new MultiSelectList(Model.AuditableAreaToList, "AuditableAreaId", "AuditableAreaName"), new { @class = "form-control select2", multiple = "multiple" })
                            @Html.ValidationMessageFor(model => model.SelectedAuditableAreaId, "", new { @class = "text-danger" })
                        </div>
                    </div>*@

                    <div class="form-group">
                        <label class="control-label col-md-2">Auditable Area Affected<span class="redStar">*</span></label>
                        <div class="col-md-8">
                            <select id="SelectedAuditableAreaId" name="SelectedAuditableAreaId" class="form-control select2" required="required" multiple>
                                <option>Select Client Category</option>
                            </select>
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-md-2">Risk Description<span class="redStar">*</span></label>
                        (<span style="font-weight:bold;" id="RiskDescriptionCount">250</span>)
                        <div class="col-md-8">
                            @Html.TextAreaFor(model => model.RiskDescription, new { maxlength = 250, @class = "form-control", @rows = 3, @cols = 15 })
                            @Html.ValidationMessageFor(model => model.RiskDescription, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-md-2">How to Manage Risk?<span class="redStar">*</span></label>
                        (<span style="font-weight:bold;" id="AuditorManageRiskCount">250</span>)
                        <div class="col-md-8">
                            @Html.TextAreaFor(model => model.AuditorManageRisk, new { maxlength = 250, @class = "form-control", @rows = 3, @cols = 15 })
                            @Html.ValidationMessageFor(model => model.AuditorManageRisk, "", new { @class = "text-danger" })
                        </div>
                    </div>



                    <div class="form-group">

                        <div class="col-md-3">
                            <a class="btn btn-info" href="#" id="saveRisks" onclick="addRiskz()">
                                <i class="glyphicon glyphicon-plus"></i>Add
                            </a>
                        </div>
                    </div>
                </div>

                <br />
                <div id="divRiskTable"></div>

            </div>
            <div class="modal-footer">
                <button class="btn btn-info" data-dismiss="modal">
                    <i class="fa  fa-times"></i>Close
                </button>
            </div>
        </div>
    </div>
</div>
@section pagespecific {
    <script src="~/Scripts/chosen.jquery.min.js"></script>
    <!-- PAGE RELATED PLUGIN(S) -->
    <script type="text/javascript">
        $(document).ajaxStart(function () {
            $(".loadingImg").show();

        });
       
        $(function () {
            //$("#SelectedAuditableAreaId").chosen({
            //    //dropdownParent: $("#AddRiskModel"),
            //    with: "100%"
            //});

        });

        $("#RiskCategory").change(function () {
            debugger;
            var category = $(this).val();
             if (category != "") {

               var option = [];
                $.ajax({
                    url: '@Url.Action("GetAuditableByCategoryType", "PlanningEngagement")/?category=' + category,
                    type: "GET",
                    dataType: "json",
                    success: function (data) {

                        console.log('select', data);
                        option.empty;
                        option.push('<option value="">Select Auditable Area</option>');
                        data.data.forEach(d => {
                            option.push('<option value=' + d["AuditableAreaId"] + '>' + d["AuditableAreaName"] + '</option>');
                        });
                        option = option.toString().replace(",", "").replace("[", "").replace("]", "");
                        $("#SelectedAuditableAreaId").html(option);
                    }
                });
            }
        })

        $("#QuestionnairResponse").change(function () {
            debugger;
            var selectedValue = $("#QuestionnairResponse").val();

            if (selectedValue == "Yes") {
                $("#riskAssign").show();
            }
            else {
                $("#riskAssign").hide();
            }
        });

        function ShowAddMoreRiskIdentify() {
            $("#AddRiskModel").modal("show");
        };


        $('#RiskDescription').on("keyup", function () {
            var count = $('#RiskDescription').val().split('');
            var numChars = 250 - parseInt(count.length);
            $('#RiskDescriptionCount').text(parseInt(numChars));
        });

        $('#AuditorManageRisk').on("keyup", function () {
            var count = $('#AuditorManageRisk').val().split('');
            var numChars = 250 - parseInt(count.length);
            $('#AuditorManageRiskCount').text(parseInt(numChars));
        });

        var allRisks = []
        var risks = []
        var countRisks = 0;

        function addRiskz() {
            debugger;
            var auditableArea = $("select#SelectedAuditableAreaId").val();
            var auditableAreaId = $("#SelectedAuditableAreaId").val();
            var auditableAreaName = $("#SelectedAuditableAreaId option:selected").text();
            var riskName = $("#RiskName").val();
            var riskDesc = $("#RiskDescription").val();
            var auditableManRisk = $("#AuditorManageRisk").val();
            var riskCategory = $("#RiskCategory").val();
            var riskRanging = $("#RiskRanking").val();


            if (riskName == "" || riskDesc == "" || auditableManRisk == "" || riskCategory == "" || riskRanging == "" || auditableArea=="" ) {
                swal("Please Fill All the required Fields", { icon: "warning" });
                return false;
            }

            //var splitAuditableArea = auditableAreaId.split(",");
            risks.push({
                RiskName: riskName,
                RiskCategory: riskCategory,
                RiskRanking: riskRanging,
                AffectedAuditableAreaIds: auditableAreaId,
                AffectedAuditableArea: auditableAreaName,
                IdentifyAuditorMngRisk: auditableManRisk,
                IdentifyRiskDescription: riskDesc
            });

            GenerateRiskTable();
        }

        function GenerateRiskTable() {
            debugger;
            if (risks.length > 0) {
                var $table = $('<table class="table table-condensed table-stripped table-hover table-bordered"/>');
                $table.append('<thead>' +
                    '<tr><th colspan="5">Identified Risk</th>' +
                    '<tr><th>#</th><th style="display:none;">Id</th><th style="text-align: center">Risk Name</th><th>Risk Category</th><th>Risk Ranking</th><th>Auditable Area</th><th style="text-align: center">Action</th></tr>' +
                    '</thead>');
                var $tbody = $('<tbody/>');
                var j = 0;
                $.each(risks, function (i, val) {
                    ++j;
                    var $row = $('<tr/>');
                    $row.append($('<td/>').html(j));
                    $row.append($('<td style="display:none"/>').html(val.AffectedAuditableAreaIds));
                    $row.append($('<td style="display:none"/>').html(val.IdentifyAuditorMngRisk));
                    $row.append($('<td style="display:none"/>').html(val.IdentifyRiskDescription));
                    $row.append($('<td/>').html(val.RiskName));
                    $row.append($('<td/>').html(val.RiskCategory));
                    $row.append($('<td/>').html(val.RiskRanking));
                    $row.append($('<td/>').html(val.AffectedAuditableArea));
                    var $remove = $('<a href="#"><span class="glyphicon glyphicon-trash" aria-hidden="true"></span></a>');
                    $remove.click(function (e) {
                        e.preventDefault();
                        risks.splice(i, 1);
                        GenerateRiskTable();
                    });
                    $row.append($('<td/>').html($remove));
                    $tbody.append($row);
                });
                $table.append($tbody);
                $('#divRiskTable').html($table);
                $("#RiskName").val("");
                $("#RiskDescription").val("");
                $("#AuditorManageRisk").val("");
                $("#SelectedAuditableAreaId").val(null).trigger('change');
                $("#RiskCategory").val(null).trigger('change');
                $('#RiskRanking').val(null).trigger('change');
                $("#saveRisks").attr("disabled", false);
            } else {
                $('#divRiskTable').html('');
                $("#saveRisks").attr("disabled", false);
            }

            $("#added_riskIdentify").text(risks.length);
        }

        $("#divLoader").toggle(false);
        $("#saveRiskAssertationForm").click(function () {
            debugger;
            var questionnaireId = $("#QuestionnaireId").val();
            var questionnaireName = $("#QuestionnaireId option:selected").text();
            var questionnairResponse = $("#QuestionnairResponse").val();
            var planningEngagementId = $("#PlanningEngagementId").val();
            /*var financialYearName = $("#FinancialYear").val();*/
            var clientId = $("#ClientId").val();
            var clientName = $("#ClientName").val();


            if (questionnaireId == '' || questionnairResponse == '' ) {
                swal("Please Fill All the required Fields", {icon: "warning"});
                return false;
            }
            if (questionnairResponse =="Yes") {
                if (risks.length == 0) {
                    swal("Please, Add Atleast One Risk with at least one auditable Area Affected", { icon: "warning" });
                    return false;
                }
            }


            var formdata = new FormData();
            formdata.append("__RequestVerificationToken", $('[name=__RequestVerificationToken]').val());
            formdata.append("QuestionnaireId", questionnaireId);
            formdata.append("QuestionnairName", questionnaireName);
            formdata.append("QuestionnairResponse", questionnairResponse);
            formdata.append("PlanningEngagementId", planningEngagementId);
            formdata.append("ClientId", clientId);
            formdata.append("ClientName", clientName);
            //formdata.append("FinancialYear", financialYearName);

            for (var i = 0; i < risks.length; i++) {
                formdata.append("RiskAssignedAuditableAreas[" + i + "].AffectedAuditableAreaIds", risks[i].AffectedAuditableAreaIds);
                formdata.append("RiskAssignedAuditableAreas[" + i + "].IdentifyRiskName", risks[i].RiskName);
                formdata.append("RiskAssignedAuditableAreas[" + i + "].IdentifyRiskCategory", risks[i].RiskCategory);
                formdata.append("RiskAssignedAuditableAreas[" + i + "].IdentifyRiskRanking", risks[i].RiskRanking);
                formdata.append("RiskAssignedAuditableAreas[" + i + "].AffectedAuditableArea", risks[i].AffectedAuditableArea);
                formdata.append("RiskAssignedAuditableAreas[" + i + "].IdentifyAuditorMngRisk", risks[i].IdentifyAuditorMngRisk);
                formdata.append("RiskAssignedAuditableAreas[" + i + "].IdentifyRiskDescription", risks[i].IdentifyRiskDescription);
            }

            for (const value of formdata.values()) {
                console.log(value);
            }

            var url = '@Url.Action("SaveIdentifiedRiskDetail", "PlanningEngagement")';

            $("#saveRiskAssertationForm").prop('disabled', true);
            $("#divLoader").toggle(true);

            $.ajax({
                url: url,
                data: formdata,
                type: 'POST',
                contentType: false,
                processData: false,
                success: function (resultData) {
                    $("#saveRiskAssertationForm").prop('disabled', false);
                    $("#divLoader").toggle(false);
                    if (resultData.response == "Success") {
                        swal("Saved Risk Successfully!", { icon: "success" })
                            .then((value) => {
                                window.location.href = '@Url.Action("CreatePlanningEngagement", "PlanningEngagement")/' + "?id=" + resultData.id + "&clientYearEnd=" + resultData.clientEndYear;
                                @*window.location.href = '@Url.Action("planningengagementlist", "PlanningEngagement")/' + "?id=" + resultData.id + "&clientYearEnd=" + resultData.clientEndYear;*@
                            });
                    } else if (resultData.response =="Dublicate") {
                        swal("Dublicate Risk Registered", { icon: "warning" })
                            .then((value) => {
                                window.location.reload();
                            });
                    }
                    else {
                        swal(response);
                    }
                },
                failure: function (error) {
                    $("#saveRiskAssertationForm").prop('disabled', false);
                    $("#divLoader").toggle(false);
                    swal(error);
                }
            });
        })
    </script>
}