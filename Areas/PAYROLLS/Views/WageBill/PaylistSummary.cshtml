@model IEnumerable<IFMIS.Areas.PAYROLLS.Models.PaylistVM>

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div id="divLoader"></div>
<div id="content" style="margin: 5px; padding-top: 50px">



    <!-- widget grid -->
    <section id="widget-grid" class="">


        <!-- START ROW -->

        <div class="row">

            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">

                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">

                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2>Paylist Summary</h2>

                    </header>


                    <div>
                        <div class="widget-body " style="padding-top:10px;width:100%">

                            <table class="table  table-bordered table-hover table-condensed" id="dt_salaries">
                                <thead>
                                    <tr>
                                        <th></th>
                                        <th>Check Date</th>
                                        <th>Received Stop Pay</th>
                                        <th>Received Net Pay</th>
                                        <th>Negative/zero amount</th>
                                        <th>Received Total Employees</th>
                                        <th>Expected Total Employees</th>
                                        <th>Difference in Employees</th>
                                        <th>Overall Status</th>
                                        <th style="text-align:center;width:7%"></th>
                                    </tr>
                                </thead>

                                <tbody>
                                    @{var i = 0;}
                                    @foreach (var item in Model)
                                    {
                                        i++;
                                        <tr>
                                            <td style="text-align:right">
                                                @i
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.CheckDate)
                                            </td>
                                            <td>
                                                @string.Format("{0:#,0}", item.ReceivedStopPay)
                                            </td>
                                            <td style="text-align:right">
                                                @string.Format("{0:#,0.00}", item.ReceivedNetPay)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.Negative_or_zero_Amount)
                                            </td>
                                            <td style="text-align:right">
                                                @string.Format("{0:#,0}", item.ReceivedTotalEmployees)
                                            </td>
                                            <td style="text-align:right">
                                                @string.Format("{0:#,0}", item.ExpectedTotalNoEmployees)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.DiffTotalEmployees)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.ProcessingStatus)
                                            </td>
                                            <td style="text-align:center">

                                                <div class="btn-group">

                                                    <button type="button" class="btn btn-info btn-xs dropdown-toggle" data-toggle="dropdown" style="width:40px;border-radius:1px;" aria-haspopup="true" aria-expanded="false">
                                                        <span class="caret"></span>
                                                        <span class="sr-only">Toggle Dropdown</span>
                                                    </button>
                                                    <ul class="dropdown-menu">
                                                        @if (item.ProcessingStatus == "Pending")
                                                        {
                                                            <li><a href="#" onclick="processPaylist()" class="btn-xs edit">Process </a></li>
                                                        }
                                                        @if (item.ProcessingStatus == "Processed")
                                                        {
                                                            <li><a href="#" onclick="sendToAcgen()" class="btn-xs edit">Send to Acgen </a></li>
                                                        }
                                                        @if (item.ProcessingStatus == "Pending")
                                                        {
                                                            <li><a href="#" onclick="clearData()" class="btn-xs edit"> Clear Data</a></li>
                                                        }
                                                        <li>
                                                            @*<a href="@Url.Action("PaylistDetails", "Wagebill",new {checkDate=item.CheckDate})" class="btn-xs edit">
                                                                    View
                                                                </a>*@
                                                            <a href="@Url.Action("PaylistDetails", "Wagebill")" class="btn-xs edit">
                                                                View
                                                            </a>
                                                        </li>
                                                    </ul>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>


                </div>
            </article>

        </div>
    </section>

</div>

@section pagespecific {
    <!-- PAGE RELATED PLUGIN(S) -->

    <script type="text/javascript">


        $(document).ready(function () {
            /* // DOM Position key index //
     l - Length changing (dropdown)
     f - Filtering input (search)
     t - The Table! (datatable)
     i - Information (records)
     p - Pagination (paging)
     r - pRocessing
     < and > - div elements
     <"#id" and > - div with an id
     <"class" and > - div with a class
     <"#id.class" and > - div with an id and class
     Also see: http://legacy.datatables.net/usage/features
     */
            /* BASIC ;*/
            var responsiveHelper_dt_salaries = undefined;
            var responsiveHelper_datatable_fixed_column = undefined;
            var responsiveHelper_datatable_col_reorder = undefined;
            var responsiveHelper_datatable_tabletools = undefined;

            var breakpointDefinition = {
                tablet: 1024,
                phone: 480
            };

            var dt_search_change_account = $('#dt_salaries').dataTable({
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-12 hidden-xs'l>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_dt_salaries) {
                        responsiveHelper_dt_salaries = new ResponsiveDatatablesHelper($('#dt_salaries'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_dt_salaries.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_dt_salaries.respond();
                }
            });

            /* END BASIC */

            /* COLUMN FILTER  */
            var otable = $('#datatable_fixed_column').DataTable({
                //"bFilter": false,
                //"bInfo": false,
                //"bLengthChange": false
                //"bAutoWidth": false,
                //"bPaginate": false,
                //"bStateSave": true // saves sort state using localStorage
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6 hidden-xs'f><'col-sm-6 col-xs-12 hidden-xs'<'toolbar'>>r>" +
                        "t" +
                        "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_fixed_column) {
                        responsiveHelper_datatable_fixed_column = new ResponsiveDatatablesHelper($('#datatable_fixed_column'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_datatable_fixed_column.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_datatable_fixed_column.respond();
                }
            });

            // custom toolbar
            $("div.toolbar").html('<div class="text-right"><img src="/Content/img/logo.png" alt="SmartAdmin" style="width: 111px; margin-top: 3px; margin-right: 10px;"></div>');

            // Apply the filter
            $("#datatable_fixed_column thead th input[type=text]").on('keyup change', function () {
                otable
                    .column($(this).parent().index() + ':visible')
                    .search(this.value)
                    .draw();
            });
            /* END COLUMN FILTER */

            /* COLUMN SHOW - HIDE */
            $('#datatable_col_reorder').dataTable({
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'C>r>" +
                        "t" +
                        "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_col_reorder) {
                        responsiveHelper_datatable_col_reorder = new ResponsiveDatatablesHelper($('#datatable_col_reorder'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_datatable_col_reorder.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_datatable_col_reorder.respond();
                }
            });

            /* END COLUMN SHOW - HIDE */

            /* TABLETOOLS */
            $('#datatable_tabletools').dataTable({

                // Tabletools options:
                //   https://datatables.net/extensions/tabletools/button_options
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'T>r>" +
                        "t" +
                        "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
                "oTableTools": {
                    "aButtons": [
                    "copy",
                    "csv",
                    "xls",
                       {
                           "sExtends": "pdf",
                           "sTitle": "SmartAdmin_PDF",
                           "sPdfMessage": "SmartAdmin PDF Export",
                           "sPdfSize": "letter"
                       },
                       {
                           "sExtends": "print",
                           "sMessage": "Generated by SmartAdmin <i>(press Esc to close)</i>"
                       }
                    ],
                    "sSwfPath": "/Scripts/plugin/datatables/swf/copy_csv_xls_pdf.swf"
                },
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_tabletools) {
                        responsiveHelper_datatable_tabletools = new ResponsiveDatatablesHelper($('#datatable_tabletools'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_datatable_tabletools.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_datatable_tabletools.respond();
                }
            });
            /* END TABLETOOLS */


        });

        //SHOW LOADER ICON
        $(document).ajaxStart(function () {
            $(".loadingImg").show();

        });
        //HIDE LOADER ICON
        $(document).ajaxStop(function () {
            $(".loadingImg").hide();
        });

        var processPaylist = function () {
            swal({
                title: 'Confirmation',
                text: "Are you sure you want to process ?",
                buttons: [
                  'No',
                  'Yes'
                ],
            }).then(function (isConfirm) {
                if (isConfirm) {
                    $("#divLoader").show();
                    var url = '@Url.Action("ProcessPaylist", "WageBill")';
                    $.ajax(
        {
            type: "POST",
            url: url,
            success: function (response) {
                if (response == "Success") {
                    $("#divLoader").hide();
                    swal("Salary Processing Initiated successfully!", { icon: "success" })
                        .then((value) => {
                            location.reload();
                        });
                }
               
                else {
                    $("#divLoader").hide();
                    swal("Failed to Process,Please consult System Admin");
                }
            },
            error: function (xhr) {
                swal(error);
                $("#divLoader").hide();
            },
        });
                } else {
                    swal("Cancelled", "No change was made");
                }
            });
        };

         var sendToAcgen = function () {
            swal({
                title: 'Confirmation',
                text: "Are you sure you want to send ?",
                buttons: [
                  'No',
                  'Yes'
                ],
            }).then(function (isConfirm) {
                if (isConfirm) {
                    var url = '@Url.Action("SendPaylistToAcgen", "WageBill")';
                    $.ajax(
        {
            type: "POST",
            url: url,
            success: function (response) {
                if (response == "Success") {

                    swal("Sent successfully", { icon: "success" })
                        .then((value) => {
                            location.reload();
                        });
                }
                else {

                    swal("Failed to send,Please consult System Admin");
                }
            },
            error: function (xhr) {
                swal(error);
                $("#divLoader").hide();
            },
        });
                } else {
                    swal("Cancelled", "No change was made");
                }
            });
        };
          var clearData = function () {
            swal({
                title: 'Confirmation',
                text: "Are you sure you want to clear data ?",
                buttons: [
                  'No',
                  'Yes'
                ],
            }).then(function (isConfirm) {
                if (isConfirm) {
                    var url = '@Url.Action("ClearPaylistData", "WageBill")';
                    $.ajax(
        {
            type: "POST",
            url: url,
            success: function (response) {
                if (response == "Success") {

                    swal("Cleared successfully", { icon: "success" })
                        .then((value) => {
                            location.reload();
                        });
                }
                else {
                    $("#divLoader").hide();
                    swal("Failed to clear,Please consult System Admin");
                }
            },
            error: function (xhr) {
                swal(error);
                $("#divLoader").hide();
            },
        });
                } else {
                    swal("Cancelled", "No change was made");
                }
            });
        };

    </script>
}



