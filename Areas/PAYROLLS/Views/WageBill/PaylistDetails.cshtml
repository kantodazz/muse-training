

@model IEnumerable<IFMIS.Areas.PAYROLLS.Models.PaylistDetailsVM>

@{
    //ViewBag.Title = "Wagebill Summary - " + ViewBag.CurrentMonth;
    ViewBag.Title = "Paylist Details ";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div id="content" style="margin: 5px; padding-top: 50px">



    <!-- widget grid -->
    <section id="widget-grid" class="">


        <!-- START ROW -->

        <div class="row">

            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">

                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">

                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2>Paylist Details</h2>

                    </header>


                    <div>
                        <div class="widget-body " style="padding-top:10px;width:100%">

                            <div class="row">
                                <div class="col-md-8" style="text-align:left">
                                    <div>
                                        <b>&nbsp;&nbsp;Check Date:</b> <b>@ViewBag.CheckDate</b>
                                    </div>
                                </div>
                            </div>
                            <table class="table  table-bordered table-hover table-condensed" id="dt_salaries">
                                <thead>
                                    <tr>
                                        <th></th>
                                        <th>Vote Code</th>
                                        <th>Vote Name</th>
                                        <th>Total Employee</th>
                                        <th>Total Gross Amount</th>
                                        <th>Total Basic Salary</th>
                                        <th>Total Allowances</th>
                                        <th>Total Arrears</th>
                                        <th>Total Net Amount</th>
                                        <th>Net Amount Adjusted</th>
                                        <th>Funding Type</th>
                                    </tr>
                                </thead>

                                <tbody>
                                    @{
                                        var i = 0;
                                        decimal? totalGross = 0;
                                        decimal? totalBasic = 0;
                                        decimal? totalAllowance = 0;
                                        decimal? totalArrears = 0;
                                        decimal? totalNet = 0;
                                        decimal? totalNetAdjusted = 0;
                                        int totalEmployee = 0;
                                    }
                                    @foreach (var item in Model)
                                    {
                                        i++;
                                        totalGross += item.TotalGrossAmount;
                                        totalBasic += item.TotalBasicSalary;
                                        totalAllowance += item.TotalAllowances;
                                        totalArrears += item.TotalArrears;
                                        totalNet += item.TotalNetAmount;
                                        totalNetAdjusted += item.TotalNetAmountAdjusted;
                                        totalEmployee += item.TotalEmployees;
                                        <tr>
                                            <td style="text-align:right">
                                                @i
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.VoteCode)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.VoteName)
                                            </td>
                                            <td style="text-align:right">
                                                @string.Format("{0:#,0}", item.TotalEmployees)
                                            </td>
                                            <td>
                                                @string.Format("{0:#,0.00}", item.TotalGrossAmount)
                                            </td>
                                            <td>
                                                @string.Format("{0:#,0.00}", item.TotalBasicSalary)
                                            </td>
                                            <td style="text-align:right">
                                                @string.Format("{0:#,0.00}", item.TotalAllowances)
                                            </td>
                                            <td style="text-align:right">
                                                @string.Format("{0:#,0.00}", item.TotalArrears)
                                            </td>
                                            <td style="text-align:right">
                                                @string.Format("{0:#,0.00}", item.TotalNetAmount)
                                            </td>
                                            <td style="text-align:right">
                                                @string.Format("{0:#,0.00}", item.TotalNetAmountAdjusted)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.Funding)
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                                <tfoot>
                                    <tr style="background:#f5f5f5; color:#000000">
                                        <td colspan="3" style="text-align:right"><b>Grand Total</b></td>
                                        <td style="text-align: right"><b>@string.Format("{0:#,0}", totalEmployee)</b></td>
                                        <td style="text-align: right"><b>@string.Format("{0:#,0.00}", totalGross)</b></td>
                                        <td style="text-align: right"><b>@string.Format("{0:#,0.00}", totalBasic)</b></td>
                                        <td style="text-align: right"><b>@string.Format("{0:#,0.00}", totalAllowance)</b></td>
                                        <td style="text-align: right"><b>@string.Format("{0:#,0.00}", totalArrears)</b></td>
                                        <td style="text-align: right"><b>@string.Format("{0:#,0.00}", totalNet)</b></td>
                                        <td style="text-align: right"><b>@string.Format("{0:#,0.00}", totalNetAdjusted)</b></td>
                                    </tr>
                                </tfoot>
                            </table>
                            <div class="form-actions">
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="col-md-10">
                                            <a href="@Request.UrlReferrer" style="margin-right:-10px" type="submit" class="btn btn-info pull-left"><i class="glyphicon glyphicon-arrow-left"></i> Back  </a>
                                            &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
            </article>

        </div>
    </section>

</div>

@section pagespecific {
    <!-- PAGE RELATED PLUGIN(S) -->

    <script type="text/javascript">


        $(document).ready(function () {
            /* // DOM Position key index //
     l - Length changing (dropdown)
     f - Filtering input (search)
     t - The Table! (datatable)
     i - Information (records)
     p - Pagination (paging)
     r - pRocessing
     < and > - div elements
     <"#id" and > - div with an id
     <"class" and > - div with a class
     <"#id.class" and > - div with an id and class
     Also see: http://legacy.datatables.net/usage/features
     */
            /* BASIC ;*/
            var responsiveHelper_dt_salaries = undefined;
            var responsiveHelper_datatable_fixed_column = undefined;
            var responsiveHelper_datatable_col_reorder = undefined;
            var responsiveHelper_datatable_tabletools = undefined;

            var breakpointDefinition = {
                tablet: 1024,
                phone: 480
            };

            var dt_search_change_account = $('#dt_salaries').dataTable({
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-12 hidden-xs'l>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_dt_salaries) {
                        responsiveHelper_dt_salaries = new ResponsiveDatatablesHelper($('#dt_salaries'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_dt_salaries.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_dt_salaries.respond();
                }
            });

            /* END BASIC */

            /* COLUMN FILTER  */
            var otable = $('#datatable_fixed_column').DataTable({
                //"bFilter": false,
                //"bInfo": false,
                //"bLengthChange": false
                //"bAutoWidth": false,
                //"bPaginate": false,
                //"bStateSave": true // saves sort state using localStorage
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6 hidden-xs'f><'col-sm-6 col-xs-12 hidden-xs'<'toolbar'>>r>" +
                        "t" +
                        "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_fixed_column) {
                        responsiveHelper_datatable_fixed_column = new ResponsiveDatatablesHelper($('#datatable_fixed_column'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_datatable_fixed_column.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_datatable_fixed_column.respond();
                }
            });

            // custom toolbar
            $("div.toolbar").html('<div class="text-right"><img src="/Content/img/logo.png" alt="SmartAdmin" style="width: 111px; margin-top: 3px; margin-right: 10px;"></div>');

            // Apply the filter
            $("#datatable_fixed_column thead th input[type=text]").on('keyup change', function () {
                otable
                    .column($(this).parent().index() + ':visible')
                    .search(this.value)
                    .draw();
            });
            /* END COLUMN FILTER */

            /* COLUMN SHOW - HIDE */
            $('#datatable_col_reorder').dataTable({
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'C>r>" +
                        "t" +
                        "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_col_reorder) {
                        responsiveHelper_datatable_col_reorder = new ResponsiveDatatablesHelper($('#datatable_col_reorder'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_datatable_col_reorder.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_datatable_col_reorder.respond();
                }
            });

            /* END COLUMN SHOW - HIDE */

            /* TABLETOOLS */
            $('#datatable_tabletools').dataTable({

                // Tabletools options:
                //   https://datatables.net/extensions/tabletools/button_options
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'T>r>" +
                        "t" +
                        "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
                "oTableTools": {
                    "aButtons": [
                    "copy",
                    "csv",
                    "xls",
                       {
                           "sExtends": "pdf",
                           "sTitle": "SmartAdmin_PDF",
                           "sPdfMessage": "SmartAdmin PDF Export",
                           "sPdfSize": "letter"
                       },
                       {
                           "sExtends": "print",
                           "sMessage": "Generated by SmartAdmin <i>(press Esc to close)</i>"
                       }
                    ],
                    "sSwfPath": "/Scripts/plugin/datatables/swf/copy_csv_xls_pdf.swf"
                },
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_tabletools) {
                        responsiveHelper_datatable_tabletools = new ResponsiveDatatablesHelper($('#datatable_tabletools'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_datatable_tabletools.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_datatable_tabletools.respond();
                }
            });
            /* END TABLETOOLS */


        });

        //SHOW LOADER ICON
        $(document).ajaxStart(function () {
            $(".loadingImg").show();

        });
        //HIDE LOADER ICON
        $(document).ajaxStop(function () {
            $(".loadingImg").hide();
        });

    </script>
}





