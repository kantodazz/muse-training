@model IFMIS.Areas.Consolidation.Models.ConsoDataEntryVM
@{
 var i=0;
}
<style>
    .search-container {
        background-color: white;
        color: black;
        border: 1px solid #ccc;
        border-radius: 4px;
        padding: 3px;
        padding-right: 10px;
        padding-left: 10px;
    }

    input[type=number] {
        padding: 4px;
        border: hidden;
        border-radius: 4px;
    }

    input[type=text] {
        padding: 5px;
        border: 1px solid #ccc;
    }

    input[type=search] {
        padding: 4px;
        border: hidden;
        border-radius: 4px;
    }
</style>

<hr />
<p>
    @Html.DisplayNameFor(model => model.FinancialYearDesc) :<strong>@Html.DisplayFor(model => model.FinancialYearDesc)</strong><br>
    @Html.DisplayNameFor(model => model.Note) :<strong>@Html.DisplayFor(model => model.Note)</strong>
    @Html.DisplayNameFor(model => model.NoteDesc) :<strong>@Html.DisplayFor(model => model.NoteDesc)</strong>
    @Html.HiddenFor(model => model.SelectedFinancialYear)
    @Html.HiddenFor(model => model.SelectedNoteId)
</p>
<div class="row">
    <div class="col-md-2 col-md-offset-3" style="text-align:right">
        <strong>Total Amount</strong>
    </div>
    <div class="col-md-3">
        <div class="search-container" style="float:right">
            <input type="search" value="0.00" name="total_amount" readonly id="total_amount">
        </div>
    </div>
    <div class="col-md-4">
        <div class="search-container" style="float:right">
            <i class="fa fa-search"></i>
            <input type="search" name="search" placeholder="Search..." id="search-box">
        </div>
    </div>
</div>
<table class="table table-bordered table-hover table-condensed" id="dt_items">

    <thead>
        <tr>
            <th style="text-align:center;width:4%">#</th>
            <th style="text-align:center;width:15%">GFSCode</th>
            <th style="text-align:left;width:63%">Description</th>
            <th style="text-align:center;width:18%">Amount</th>

        </tr>
    </thead>

    <tbody>
        @foreach(var item in Model.ConsoItems){
        i++;
        <tr>
            <td style="text-align:center">@i</td>
            <td style="text-align:center">
                @Html.DisplayFor(modelItem => item.GFSCode)
            </td>
            <td style="text-align:left">
                @Html.DisplayFor(modelItem => item.GFSCodeDesc)
            </td>
            <td style="text-align:center">
                @Html.EditorFor(modelItem => item.Amount, new { htmlAttributes = new { @class = "form-control amount",@id=item.ItemId, @onfocusout = "amountEntry(this)", @autocomplete = "off" } })
            </td>
        </tr>
        }
    </tbody>
</table>
<script type="text/javascript">
    var dt_items_data = $('#dt_items').dataTable();
    $("#dt_items_wrapper .dt-toolbar").remove();
    $("#search-box").on("keyup search input paste cut", function () {
        $("#dt_items").DataTable().search(this.value).draw();
    });
    var totalAmount = 0;
    var enteredAmounts = [];

    function amountChanged(e) {
        var id = e.id;
        $input = $("#" + id);
        $input.autoNumeric('init');
       
        var typingTimer;                //timer identifier
        var doneTypingInterval = 1000;  //time in ms, 1 seconds for example

        clearTimeout(typingTimer);
        typingTimer = setTimeout(function () { doneTyping(id) }, doneTypingInterval);
        
        //on keydown, clear the countdown
        $input.on('keydown', function () {
            clearTimeout(typingTimer);
        });
    }

    function amountEntry(e) {
        var id = e.id;
        $input = $("#" + id);

        $input.autoNumeric('init');
        saveData(id);
    }

    function saveData(id) {
        
        var tbId = $("#ConsoTransactionSummaryId").val();
        var fy = $("#SelectedFinancialYear").val();      
        var noteId = $("#SelectedNoteId").val();
        $input = $("#" + id);
        var amount = $input.val();
        var amountVal = parseFloat(amount.split(",").join(""));
        if (amountVal >= 0) {
            //Valid Amount
        }
        else {
            amountVal = 0;
        }

        if (amountVal >= 0) {
            var url = '@Url.Action("SaveTransaction", "ConsoTransactions")';
            $.ajax({
                type: "POST",
                url: url,
                data: { ConsoTransactionSummaryId: tbId, Fy: fy, NoteId: noteId, ItemId: id, Amount: amount },
                success: function (response) {
                  
                    if (response == "Success") {
                        manageAmount(id, amountVal);
                    }
                    else {
                        swal(response);
                    }
                
                }
            });
        }
    }

    function manageAmount(id, amount) {
        var newAmount = 0;
        if (enteredAmounts.length > 0) {

            //CHECK IF EXIST IN THE ARRAY
            var found = false;
            for (var j = 0; j < enteredAmounts.length; j++) {
                if (enteredAmounts[j].Id == id) {
                    newAmount = amount - enteredAmounts[j].Amount;
                    enteredAmounts[j].Amount = amount;
                    found = true;
                }              
            }

            if (!found) {
                enteredAmounts.push({
                    "Id": id,
                    "Amount": amount
                });

                newAmount = amount;
            }


        }
        else {
            enteredAmounts.push({
                "Id": id,
                "Amount": amount
            });
            newAmount = amount;

        }
        totalAmount = totalAmount + newAmount;
        $("#total_amount").val(totalAmount.toLocaleString('en'));
    }
    $(".amount").autoNumeric('init');
</script>
