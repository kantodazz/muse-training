@model IFMIS.Areas.Consolidation.Models.ConsoDataEntryVM
@{
    var i = 0;
    ViewBag.Title = "Cash and Cash Equivalent Currency Entries";
}
<style>
    .search-container {
        background-color: white;
        color: black;
        border: 1px solid #ccc;
        border-radius: 4px;
        padding: 3px;
        padding-right: 10px;
        padding-left: 10px;
    }

    input[type=number] {
        padding: 8px;
        border: 1px solid #ccc;
    }

    input[type=text] {
        padding: 5px;
        border: 1px solid #ccc;
    }

    input[type=search] {
        padding: 4px;
        border: hidden;
        border-radius: 4px;
    }
</style>

<div id="divLoader"></div>
<div id="content" style="margin: 5px; padding-top: 30px">

    <div class="row">


    </div>


    <!-- widget grid -->
    <section id="widget-grid" class="">


        <!-- START ROW -->

        <div class="row">

            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">

                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">
                    <br />
                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2>@ViewBag.Title </h2>

                    </header>


                    <div>
                        <div class="widget-body " style="padding-top:10px;width:100%">
                            <p>
                                @Html.DisplayNameFor(model => model.Note) :<strong>@Html.DisplayFor(model => model.Note)</strong><br />
                                @Html.DisplayNameFor(model => model.NoteDesc) :<strong>@Html.DisplayFor(model => model.NoteDesc)</strong><br />
                            </p>
                            
                            <div class="row">
                            
                                 @*<div class="col-sm-4 col-md-3 col-lg-3 col-md-offset-6">
                                        <a href="#" onclick="reloadData(@Model.ConsoTransactionSummaryId)" class="btn btn-info" style="border-radius:1px;">
                                            <i class="fa fa-edit"></i>Reload New  Data
                                        </a>
                                 </div>*@                  
                                <div class="col-md-12">
                                    <div class="search-container" style="float:right">
                                        <i class="fa fa-search"></i>
                                        <input type="search" name="search" placeholder="Search..." id="search-box">
                                    </div>
                                </div>
                            </div>

                            <table class="table table-bordered table-hover table-condensed" id="dt_items">

                                <thead>
                                    <tr>
                                        <th style="text-align:center;width:4%">#</th>
                                        <th style="text-align:left">GFSCode</th>
                                        <th style="text-align:left">GFSCode Desc</th>
                                        <th style="text-align: right">Amount</th>
                                        <th style="text-align: center">Currencies</th>
                                        <th style="text-align: center">Action</th>
                                    </tr>
                                </thead>

                                <tbody>
                                    @foreach (var item in Model.ConsoItems)
                                    {
                                        i++;
                                        if (item.Amount < 0)
                                        {
                                            item.Amount = item.Amount * (-1);
                                        }
                                        <tr>
                                            <td style="text-align:center">@i</td>
                                            <td style="text-align:left">
                                                @Html.DisplayFor(modelItem => item.GFSCode)
                                            </td>
                                            <td style="text-align:left">
                                                @Html.DisplayFor(modelItem => item.GFSCodeDesc)
                                            </td>
                                            <td style="text-align:right">

                                                @Html.DisplayFor(modelItem => item.Amount)
                                            </td>
                                            <td>
                                                @if (item.CurrenciesList.Count() > 0)
                                                {
                                                    <table class="table">
                                                        @foreach (var currency in item.CurrenciesList)
                                                        {
                                                            <tr>
                                                                <td style="text-align: right">
                                                                    <a href="#" onclick="removeCancel(@currency.ConsoCurrencyEquivalentId)">
                                                                        @Html.DisplayFor(modelItem => currency.Currency)-@Html.DisplayFor(modelItem => currency.CurrencyCode)
                                                                    </a>
                                                                </td>
                                                                <th style="text-align: right">@Html.DisplayFor(modelItem => currency.Amount)</th>
                                                            </tr>
                                                        }
                                                        <tr>
                                                            <th style="text-align: right">Total</th>
                                                            <th style="text-align: right">@Convert.ToDecimal(item.CurrenciesList.Select(a => a.Amount).DefaultIfEmpty(0).Sum()).ToString("#,0.00")</th>
                                                        </tr>
                                                        <tr>
                                                            <th style="text-align: right">Balance</th>
                                                            <th style="text-align: right">@Convert.ToDecimal(item.Amount - item.CurrenciesList.Select(a => a.Amount).DefaultIfEmpty(0).Sum()).ToString("#,0.00")</th>
                                                        </tr>
                                                    </table>
                                                }
                                            </td>
                                            <td style="text-align: center">
                                                <div class="btn-group" style="text-align:left">
                                                    <button type="button" class="btn btn-info btn-xs dropdown-toggle" data-toggle="dropdown" style="width:40px;border-radius:1px;" aria-haspopup="true" aria-expanded="false">
                                                        <span class="caret"></span>
                                                        <span class="sr-only">Toggle Dropdown</span>
                                                    </button>
                                                    <ul class="dropdown-menu">
                                                        <li>
                                                            <a href="#" onclick="addCurrency(@item.TrxID)">
                                                                <i class="fa fa-edit"></i>Add Currency
                                                            </a>
                                                        </li>
                                                    </ul>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>


                            <div class="form-actions">
                                <div class="row">
                                    <div class="col-md-8 col-md-offset-1">
                                        <a onclick="window.history.back()" style="margin-right:5px" class="btn btn-info pull-left"><i class="glyphicon glyphicon-arrow-left"></i> Back  </a>
                                        <a onclick="window.history.back()" style="margin-right:5px" class="btn btn-info pull-left"> <i class="fa fa-save"></i>Finish  </a>
                                    </div>
                                </div>
                            </div>
                        </div>





                    </div>


                </div>
            </article>

        </div>
    </section>

</div>

<div class="modal fade" id="addCurrencyModal" style="left:4%">

    <div class="modal-dialog" style="width:35%;">
        <div class="modal-content panel-info">

            <div class="modal-header panel-heading">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h4 align="center"><span>Currency Disclosure Form</span></h4>
            </div>
            @using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = "return SubmitForm(this)" }))
            {
                @Html.AntiForgeryToken()
                <div class="modal-body form-horizontal">

                    <br />
                    @Html.HiddenFor(model => model.TrxID)
                    <div class="form-group">
                        @Html.LabelFor(model => model.CurrencyId, htmlAttributes: new { @class = "control-label   col-md-3", @style = "text-align:left" })
                        <div class="col-md-9">
                            @Html.DropDownListFor(model => model.CurrencyId, Model.CurrenciesList, "Select ---", new { @class = "form-control select2", @required = "required" })
                            @Html.ValidationMessageFor(model => model.CurrencyId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.Label("Amount", htmlAttributes: new { @class = "control-label   col-md-3", @style = "text-align:left" })
                        <div class="col-md-9">
                            <div class="input-group">

                                <span class="input-group-addon">TZS</span>
                                @Html.EditorFor(model => model.TotalAmount, new { htmlAttributes = new { @class = "form-control", @required = "required", @autocomplete = "off" } })
                                @Html.ValidationMessageFor(model => model.TotalAmount, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                </div>
                <div class="modal-footer">
                    <a href="#" class="btn btn-default" data-dismiss="modal">Cancel</a>
                    <input class="btn btn-info" type="submit" id="save_button" value="Save" />
                </div>

            }
        </div>
    </div>
</div>

@section pagespecific {
    <!-- PAGE RELATED PLUGIN(S) -->

    <script type="text/javascript">
      var currentRowId = 0;
     var dt_items_data = $('#dt_items').dataTable();
    $("#dt_items_wrapper .dt-toolbar").remove();
    $("#search-box").on("keyup search input paste cut", function () {
        $("#dt_items").DataTable().search(this.value).draw();
    });

        $("#TotalAmount").autoNumeric('init');

        var addCurrency = function (id) {
            $(".modal-body #TrxID").val(id);
            $('#addCurrencyModal').modal('show');
        };

        var removeCancel = function (id) {
             swal({
                        title: 'Confirmation',
                        text: "Do you want to remeove this Currecny ?",
                        buttons: [
                          'No',
                          'Yes'
                        ],
                    }).then(function (isConfirm) {
                        if (isConfirm) {
                            var url = '@Url.Action("RemoveCurrency", "ConsoTransactions")';
                            $.ajax(
                {
                    type: "POST",
                    url: url,
                    data: { id: id},
                    success: function (response) {
                        if (response == "Success") {
                            swal("Removed  successfully!", { icon: "success" })
                                         .then((value) => {
                                             location.reload();
                                         });
                        }
                        else {
                            swal(response);
                        }
                    },
                    error: function (xhr) {
                        //console.log(xhr.responseText);
                        swal("An error has occured, contact system support");

                    },

                });
                        } else {
                            swal("Cancelled", "No change was made");
                        }
                    });

        };

        var reloadData = function (id) {
             swal({
                        title: 'Confirmation',
                        text: "Do you reload new data ?,All previous inserted data  will be cleared",
                        buttons: [
                          'No',
                          'Yes'
                        ],
                    }).then(function (isConfirm) {
                        if (isConfirm) {
                            var url = '@Url.Action("ReloadCurrencies", "ConsoTransactions")';
                            $.ajax(
                {
                    type: "POST",
                    url: url,
                    data: { id: id},
                    success: function (response) {
                        if (response == "Success") {
                            swal("Data cleared  successfully!", { icon: "success" })
                                         .then((value) => {
                                             location.reload();
                                         });
                        }
                        else {
                            swal(response);
                        }
                    },
                    error: function (xhr) {
                        //console.log(xhr.responseText);
                        swal("An error has occured, contact system support");

                    },

                });
                        } else {
                            swal("Cancelled", "No change was made");
                        }
                    });

        };


           function SubmitForm(formData) {
             $("#save_button").prop('disabled', true);
            var url = '@Url.Action("SaveCurrency", "ConsoTransactions")';
            var ajaxConfig = {
                type: "post",
                url: url,
                data: new FormData(formData),
                success: function (response) {
                      $("#save_button").prop('disabled', false);
                    if (response == "Success") {
                        swal("Data saved successfully", { icon: "Success" })
                                    .then((value) => {
                                        location.reload();
                                });
                    }
                    else {
                        swal(response);
                    }
                }
            }

            if ($(formData).attr('enctype') == "multipart/form-data") {
                ajaxConfig["contentType"] = false;
                ajaxConfig["processData"] = false;
            }
            $.ajax(ajaxConfig);
            return false;
        }
        //SHOW LOADER ICON
        $(document).ajaxStart(function () {
            $("#divLoader").show();
        });
        //HIDE LOADER ICON
        $(document).ajaxStop(function () {
            $("#divLoader").hide();
        });

    </script>
}
