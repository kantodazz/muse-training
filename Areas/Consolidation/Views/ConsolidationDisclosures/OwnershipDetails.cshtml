@model IFMIS.Areas.Consolidation.Models.DisclosureSummaryVM
@{
    var i = 0;
    ViewBag.Title = "Ownership Disclosures Details";
}
<style>
    .search-container {
        background-color: white;
        color: black;
        border: 1px solid #ccc;
        border-radius: 4px;
        padding: 3px;
        padding-right: 10px;
        padding-left: 10px;
    }

    input[type=number] {
        padding: 8px;
        border: 1px solid #ccc;
    }

    input[type=text] {
        padding: 5px;
        border: 1px solid #ccc;
    }

    input[type=search] {
        padding: 4px;
        border: hidden;
        border-radius: 4px;
    }
</style>

<div id="divLoader"></div>
<div id="content" style="margin: 5px; padding-top: 30px">

    <div class="row">


    </div>


    <!-- widget grid -->
    <section id="widget-grid" class="">


        <!-- START ROW -->

        <div class="row">

            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">

                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">
                    <br />
                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2>@ViewBag.Title </h2>

                    </header>


                    <div>
                        <div class="widget-body " style="padding-top:10px;width:100%">
                            <p>
                                @Html.HiddenFor(model => model.ConsoTransactionSummaryId)
                                @Html.HiddenFor(model => model.DisclosureCategory)
                                @Html.DisplayNameFor(model => model.DisclosureCategory) : <strong>@Html.DisplayFor(model => model.DisclosureCategory)</strong><br />
                                @Html.DisplayNameFor(model => model.FinancialYear) : <strong>@Html.DisplayFor(model => model.FinancialYear)</strong><br />
                                @Html.DisplayNameFor(model => model.NoteNo) : <strong>@Html.DisplayFor(model => model.NoteNo)</strong><br />
                                @Html.DisplayNameFor(model => model.NoteDesc) : <strong>@Html.DisplayFor(model => model.NoteDesc)</strong>
                            </p>

                            <div class="row">
                                <div class="col-sm-4 col-md-3 col-lg-3 col-md-offset-6">
                                    @*@if (Model.Note == "89")
                                        {*@
                                    @*<a href="#" onclick="reloadData(@Model.ConsoTransactionSummaryId,@Model.Note)" class="btn btn-info" style="border-radius:1px;">
                                            <i class="fa fa-edit"></i>Reload New  Data
                                        </a>*@
                                    @*  }*@
                                </div>
                                <div class="col-md-3">
                                    @*<div class="search-container" style="float:right">
                                            <i class="fa fa-search"></i>
                                            <input type="search" name="search" placeholder="Search..." id="search-box">
                                        </div>*@
                                </div>
                            </div>
                            <div class="table-striped table-condensed table-responsive">
                                <table class="table table-bordered table-hover table-condensed" id="dt_basic">

                                    <thead>
                                        <tr>
                                            <th style="text-align:center;width:4%">#</th>
                                            <th style="text-align:left;width:15%">GFSCode</th>
                                            <th style="text-align: center; width: 13%">Percent(%)</th>
                                            <th style="text-align: center;width:13%">Status</th>

                                        </tr>
                                    </thead>

                                    <tbody>
                                        @foreach (var item in Model.PercentOwnershipList)
                                        {
                                            i++;
                                            <tr id=@item.FAEntityOwnershipId class=@item.FAEntityOwnershipId>
                                                <td style="text-align:center">@i</td>
                                                <td style="text-align:left">
                                                    @*@if (item.GfsCode != null)
                                                    {
                                                        <span>@Html.DisplayFor(modelItem => item.GfsCode)-@Html.DisplayFor(modelItem => item.GfsCodedesc)</span>
                                                    }
                                                    else
                                                    {*@
                                                        <span>@Html.DisplayFor(modelItem => item.GfsCodedesc)</span>
                                                    @*}*@

                                                </td>
                                                <td style="text-align:center">
                                                    @item.PercOwnership%
                                                </td>
                                                <td style="text-align:center">
                                                    @Html.DisplayFor(modelItem => item.OverAllStatus)
                                                    @*@Html.DropDownList("OverAllStatus", null, "Select Status", new { @class = "form-control  select2", style = "width:100px;text-align:left", @onfocusout = "saveEntry(this," + @item.FAEntityOwnershipId + ",2)" })*@
                                                </td>

                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>

                            <div class="form-actions">
                                <div class="row">
                                    <div class="col-md-8 col-md-offset-1">
                                        <a href="@Url.Action("ApprovedDisclosures","ConsolidationDisclosures")" style="margin-right:5px" class="btn btn-info pull-left"><i class="fa fa-arrow-left"></i> Back  </a>
                                        @*<a onclick="Confirm()" style="margin-right:5px" class="btn btn-info pull-left"> <i class="fa fa-save"></i>Finish  </a>*@
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
            </article>

        </div>
    </section>

</div>

@section pagespecific {
    <!-- PAGE RELATED PLUGIN(S) -->

    <script type="text/javascript">
        var currentRowId = 0;
        var dt_items_data = $('#dt_items').dataTable();
        $("#dt_items_wrapper .dt-toolbar").remove();
        $("#search-box").on("keyup search input paste cut", function () {
            $("#dt_items").DataTable().search(this.value).draw();
        });

        

        $(document).ready(function () {
            $(".amount").autoNumeric('init');

            var responsiveHelper_dt_basic = undefined;
            var responsiveHelper_datatable_fixed_column = undefined;
            var responsiveHelper_datatable_col_reorder = undefined;
            var responsiveHelper_datatable_tabletools = undefined;

            var breakpointDefinition = {
                tablet: 1024,
                phone: 480
            };

            $('#dt_basic').dataTable({
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-12 hidden-xs'l>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_dt_basic) {
                        responsiveHelper_dt_basic = new ResponsiveDatatablesHelper($('#dt_basic'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_dt_basic.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_dt_basic.respond();
                }
            });

            /* END BASIC */

            /* COLUMN FILTER  */
            var otable = $('#datatable_fixed_column').DataTable({
                //"bFilter": false,
                //"bInfo": false,
                //"bLengthChange": false
                //"bAutoWidth": false,
                //"bPaginate": false,
                //"bStateSave": true // saves sort state using localStorage
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6 hidden-xs'f><'col-sm-6 col-xs-12 hidden-xs'<'toolbar'>>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_fixed_column) {
                        responsiveHelper_datatable_fixed_column = new ResponsiveDatatablesHelper($('#datatable_fixed_column'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_datatable_fixed_column.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_datatable_fixed_column.respond();
                }

            });

            // custom toolbar
            $("div.toolbar").html('<div class="text-right"><img src="/Content/img/logo.png" alt="SmartAdmin" style="width: 111px; margin-top: 3px; margin-right: 10px;"></div>');

            // Apply the filter
            $("#datatable_fixed_column thead th input[type=text]").on('keyup change', function () {

                otable
                    .column($(this).parent().index() + ':visible')
                    .search(this.value)
                    .draw();

            });
            /* END COLUMN FILTER */

            /* COLUMN SHOW - HIDE */
            $('#datatable_col_reorder').dataTable({
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'C>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_col_reorder) {
                        responsiveHelper_datatable_col_reorder = new ResponsiveDatatablesHelper($('#datatable_col_reorder'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_datatable_col_reorder.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_datatable_col_reorder.respond();
                }
            });

            /* END COLUMN SHOW - HIDE */

            /* TABLETOOLS */
            $('#datatable_tabletools').dataTable({

                // Tabletools options:
                //   https://datatables.net/extensions/tabletools/button_options
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'T>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
                "oTableTools": {
                    "aButtons": [
                        "copy",
                        "csv",
                        "xls",
                        {
                            "sExtends": "pdf",
                            "sTitle": "SmartAdmin_PDF",
                            "sPdfMessage": "SmartAdmin PDF Export",
                            "sPdfSize": "letter"
                        },
                        {
                            "sExtends": "print",
                            "sMessage": "Generated by SmartAdmin <i>(press Esc to close)</i>"
                        }
                    ],
                    "sSwfPath": "/Scripts/plugin/datatables/swf/copy_csv_xls_pdf.swf"
                },
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_tabletools) {
                        responsiveHelper_datatable_tabletools = new ResponsiveDatatablesHelper($('#datatable_tabletools'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_datatable_tabletools.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_datatable_tabletools.respond();
                }
            });

        });

    </script>
}
