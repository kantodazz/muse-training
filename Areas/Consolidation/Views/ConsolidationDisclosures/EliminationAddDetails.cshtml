@model IFMIS.Areas.Consolidation.Models.DisclosureEliminationDetail
@{
    ViewBag.Title = "Disclosure Elimination Add Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .input[type="text"], select {
        border: 1px solid lightgray;
        width: 100%;
        height: 35px;
    }

    .textarea {
        border: 1px solid lightgray;
        width: 100%;
    }

    .input[type="text"]:focus {
        border: 1px solid lightblue;
    }

    th {
        text-align: left;
    }
</style>
<!-- widget grid -->
<div id="divLoader"></div>
<div id="content" style="margin: 5px; padding-top: 50px">

    <section id="widget-grid" class="">
        <div class="row">

            <article class="col-sm-12 col-md-12 col-lg-12">

                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">
                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>

                        <h2 style="color:black;">Disclosure Elimination Add Details</h2>

                    </header>
                    <div>
                        <div class="widget-body" style="padding-top:10px; width:100%;">

                            <table style="width:100%;">
                                <tr>
                                    <td colspan="1">
                                        @using (Html.BeginForm(null, null, FormMethod.Post, new { @class = "form-horizontal" }))
                                        {
                                            <div class="form-horizontal" style="text-align: center">
                                                @Html.AntiForgeryToken()
                                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                                @Html.HiddenFor(Model => Model.EliminSummaryId)
                                                <input type="hidden" id="TBAmount" value="@ViewBag.list.TBAmount" />
                                                <input type="hidden" id="TotaleliminationAmount" value="@ViewBag.list.EliminationAmount" />
                                                <div class="form-group">
                                                    <label class="col-md-2 control-label">TB Amount:</label>
                                                    <div class="col-md-4">
                                                        <input type="text" id="TBAmount" value="@ViewBag.list.TBAmount" Class="form-control amount" style="width:300px;" readonly />
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label class="col-md-2 control-label">Balance Amount:</label>
                                                    <div class="col-md-4">
                                                        <input type="text" id="Balance" Class="form-control amount" style="width:300px;" readonly />
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label class="col-md-2 control-label">Counterpart Entity:</label>
                                                    <div class="col-md-4">
                                                        @Html.DropDownList("CounterpartEntityCode", ViewBag.CounterpartEntityCode as SelectList, "Select Counterpart Entity", new { @class = "form-control  select2", style = "width:370px;text-align:left", required = "required" })
                                                        @Html.ValidationMessageFor(model => model.CounterpartEntityCode, "", new { @class = "text-danger", style = "width:300px;" })
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label class="col-md-2 control-label">Elimination Amount:</label>
                                                    <div class="col-md-4">
                                                        @Html.TextBoxFor(model => model.EliminationAmount, new { @Class = "form-control", style = "width:200px;", @onkeyup = "entryAmount(this)", @onfocusout = "amountEntry(this)", required = "required" })
                                                        @Html.ValidationMessageFor(model => model.EliminationAmount, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row" style="padding-bottom:20px">
                                                <div class="col-md-2"></div>
                                                <div class="col-md-6">
                                                    <button type="submit" class="btn btn-info" id="submit">
                                                        <i class="fa fa-save"></i>Save
                                                        <img src="~/Content/img/loading.gif" id="saveLoader" />
                                                    </button>
                                                </div>
                                            </div>
                                        }
                                    </td>
                                    <td colspan="1"></td>
                                </tr>
                            </table>

                        </div>
                        <table id="dt_basic" class="table table-condensed table-bordered">
                            <thead>
                                <tr>
                                    <th> No.</th>
                                    @*<th> Institution Name</th>*@
                                    <th style="text-align:left"> Counterpart EntityCode</th>
                                    <th style="text-align:left"> Counterpart Entity Description</th>
                                    <th style="text-align:left"> Elimination Amount</th>
                                    <th style="text-align:Center">Action</th>
                                </tr>
                            </thead>
                            @{ int i = 0;}
                            @{var group = ((IEnumerable<IFMIS.Areas.Consolidation.Models.DisclosureEliminationDetailVM>)ViewBag.list.DisclosureEliminationDetailList); }

                            <tbody>
                                @foreach (var item in group)
                                {
                                    i++;
                                    <tr>
                                        <td>@i</td>
                                        @*<td style="text-align:left"> @item.InstitutionCode - @item.InstitutionName</td>*@
                                        <td style="text-align:left"> @item.CounterpartEntityCode</td>
                                        <td style="text-align:left"> @item.CounterpartEntityDesc</td>
                                        <td style="text-align:right"> @((item.EliminationAmount ?? 0).ToString("N2"))</td>
                                        <td style="text-align:center; width:15%;">

                                            <div class="btn-group">
                                                <button type="button" class="btn btn-info btn-xs dropdown-toggle" data-toggle="dropdown" style="width:40px;border-radius:1px;" aria-haspopup="true" aria-expanded="false">
                                                    <span class="caret"></span>
                                                    <span class="sr-only">Toggle Dropdown</span>
                                                </button>
                                                <ul class="dropdown-menu">

                                                    <li>
                                                        <a href="@Url.Action("DisclosureEliminationDetailEdit", "ConsolidationDisclosures",new {id=item.DtlId })" class="btn-xs edit">
                                                            <i class="fa fa-edit"></i>  Edit
                                                        </a>
                                                    </li>
                                                    <li>
                                                        <a href="#" Onclick="Cancel(@item.DtlId)" class="btn-xs edit">
                                                            <i class="fa fa-edit"></i> Cancel
                                                        </a>
                                                    </li>
                                                    @*<li>
                                        <a href="#" Onclick="Cancel(@item.FAEntityOwnershipId)" class="btn-xs edit">
                                            <i class="fa fa-trash-o"></i>  Cancel
                                        </a>
                                    </li>*@

                                                </ul>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                        <br />
                        <br />
                        <div class="form-actions">
                            <div class="row">
                                <div class="col-md-8 col-md-offset-1">
                                    <a href="@Url.Action("Elimination", "ConsolidationDisclosures",new {id=ViewBag.list.ConsoTransactionSummaryId})" style="margin-right:5px" class="btn btn-info pull-left"><i class="fa fa-arrow-left"></i> Back  </a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </article>
        </div>
    </section>
</div>

@section pagespecific {
    <script type="text/javascript">
        var id = $("#EliminSummaryId").val();
        if ('@TempData["Success"]' == 'Success') {
            swal("Successfully Saved", { icon: 'success'})
        } else if ('@TempData["Success"]' == 'Error') {
            swal("Something went wrong, please contact system administrator!", { icon: 'warning'})
                .then(Ok => {
                   window.location.href = '@Url.Action("EliminationAddDetails", "ConsolidationDisclosures")';
                });
        } else if ('@TempData["Success"]' == 'Duplicate') {
            swal("Entity already exist!", { icon: 'warning'})
                .then(Ok => {
                    window.location.href = '@Url.Action("EliminationAddDetails", "ConsolidationDisclosures")';
                });
        };

        var totalAmounts = parseFloat($("#TBAmount").val().split(",").join(""));
        var totalEliminationAmounts = parseFloat($("#TotaleliminationAmount").val().split(",").join(""));
        var balance = totalAmounts - totalEliminationAmounts;
        document.getElementById("Balance").value = balance.toLocaleString('en');

        function amountEntry(e) {
            debugger
            
            var totalAmount = parseFloat($("#TBAmount").val().split(",").join(""));
            var totalEliminationAmount = parseFloat($("#TotaleliminationAmount").val().split(",").join(""));
            var value = parseFloat(e.value.split(",").join(""));
            var total = totalEliminationAmount + value;
            if (total > totalAmount) 
            {
                swal("Amount can not exceed " + totalAmount.toLocaleString('en'), { icon: "warning" }).then((a) => {
                    e.value = 0;
                    balance = totalAmount - totalEliminationAmount;
                    document.getElementById("Balance").value = balance.toLocaleString('en');
                });
            }
        }

        function entryAmount(e) {
            debugger
            
            var totalAmount = parseFloat($("#TBAmount").val().split(",").join(""));
            var totalEliminationAmount = parseFloat($("#TotaleliminationAmount").val().split(",").join(""));
            var value = parseFloat(e.value.split(",").join(""));
            var total = totalEliminationAmount + value;
            var balance = totalAmount - total;
            document.getElementById("Balance").value = balance.toLocaleString('en');
            
        }

        

        //$("#EliminationAmount").autoNumeric('init');
        $('#EliminationAmount').autoNumeric('init', {
            vMax: '1000000000000000.00',
            vMin: '-1000000000000000.00',
        });
        $("form").submit(function () {
            if (!$("#CounterpartEntityCode").val() || !$("#EliminationAmount").val() ) {
                return false;
            }
            $("#saveLoader").toggle(true);
            $('#submit').attr("disabled", true);
        });

        $("#saveLoader").toggle(false);
        $("#submit").prop('disabled', false);

        $("#PercOwnership").change(function () {
            debugger
            var PercOwnership = $("#PercOwnership").val();
            PercOwnership = PercOwnership.replace(/,/g, '');
            PercOwnership = parseFloat(PercOwnership);
            if (PercOwnership > 100) {
                swal("Percent can not exceed 100!", { icon: 'warning' })
                    .then(Ok => {
                        document.getElementById("PercOwnership").value = "";
                    });
            }
        });


        $(document).ready(function () {
            $('.amount').autoNumeric('init', {
                vMax: '1000000000000000.00',
                vMin: '-1000000000000000.00',
            });
            var responsiveHelper_dt_basic = undefined;
            var responsiveHelper_datatable_fixed_column = undefined;
            var responsiveHelper_datatable_col_reorder = undefined;
            var responsiveHelper_datatable_tabletools = undefined;

            var breakpointDefinition = {
                tablet: 1024,
                phone: 480
            };
            $('#dt_basic').dataTable({
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-12 hidden-xs'l>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_dt_basic) {
                        responsiveHelper_dt_basic = new ResponsiveDatatablesHelper($('#dt_basic'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_dt_basic.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_dt_basic.respond();
                }
            });

            var otable = $('#datatable_fixed_column').DataTable({

                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6 hidden-xs'f><'col-sm-6 col-xs-12 hidden-xs'<'toolbar'>>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_fixed_column) {
                        responsiveHelper_datatable_fixed_column = new ResponsiveDatatablesHelper($('#datatable_fixed_column'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_datatable_fixed_column.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_datatable_fixed_column.respond();
                }

            });

            // custom toolbar
            $("div.toolbar").html('<div class="text-right"><img src="/Content/img/logo.png" alt="SmartAdmin" style="width: 111px; margin-top: 3px; margin-right: 10px;"></div>');
            $("#datatable_fixed_column thead th input[type=text]").on('keyup change', function () {

                otable
                    .column($(this).parent().index() + ':visible')
                    .search(this.value)
                    .draw();

            });
            $('#datatable_col_reorder').dataTable({
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'C>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_col_reorder) {
                        responsiveHelper_datatable_col_reorder = new ResponsiveDatatablesHelper($('#datatable_col_reorder'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_datatable_col_reorder.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_datatable_col_reorder.respond();
                }
            });

            $('#datatable_tabletools').dataTable({

                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'T>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
                "oTableTools": {
                    "aButtons": [
                        "copy",
                        "csv",
                        "xls",
                        {
                            "sExtends": "pdf",
                            "sTitle": "SmartAdmin_PDF",
                            "sPdfMessage": "SmartAdmin PDF Export",
                            "sPdfSize": "letter"
                        },
                        {
                            "sExtends": "print",
                            "sMessage": "Generated by SmartAdmin <i>(press Esc to close)</i>"
                        }
                    ],
                    "sSwfPath": "/Scripts/plugin/datatables/swf/copy_csv_xls_pdf.swf"
                },
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_tabletools) {
                        responsiveHelper_datatable_tabletools = new ResponsiveDatatablesHelper($('#datatable_tabletools'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_datatable_tabletools.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_datatable_tabletools.respond();
                }
            });

            /* END TABLETOOLS */

        })


        function Cancel(i) {
            status = "Cancelled";
            swal({
                title: "Are you sure?",
                text: "Entity will be Cancelled!",
                buttons: [
                    'No',
                    'Yes'
                ],
            }).then(function (isConfirm) {
                if (isConfirm) {
                    RemoveEntity(i);

                } else {
                    swal("Cancelled", "No change was made");
                }
            });
        }


        function RemoveEntity(i) {
            $("#divLoader").show();
                var url = '@Url.Action("CancelEntityElimination", "ConsolidationDisclosures")';
                $.ajax({
                    type: "post",
                    url: url,
                    data: {
                        id: i
                    },
                    contenttype: "application/json; charset=utf-8",
                    datatype: "json",
                    success: function (response) {
                        $("#divLoader").hide();
                        if (response == "Success") {
                            swal("Cancelled Successfully!", { icon: "success" })
                                .then((value) => {
                                    window.location.reload();
                                });
                        }
                        else {
                            swal(response);
                        }

                    },
                    failure: function (error) {
                        swal(error);
                    }
                });
            }
    </script>
}
