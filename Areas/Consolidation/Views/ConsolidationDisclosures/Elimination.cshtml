@model IFMIS.Areas.Consolidation.Models.DisclosureSummaryVM
@{
    var i = 0;
    ViewBag.Title = "Elimination Disclosures Data Entries";
}
<style>
    .search-container {
        background-color: white;
        color: black;
        border: 1px solid #ccc;
        border-radius: 4px;
        padding: 3px;
        padding-right: 10px;
        padding-left: 10px;
    }

    input[type=number] {
        padding: 8px;
        border: 1px solid #ccc;
    }

    input[type=text] {
        padding: 5px;
        border: 1px solid #ccc;
    }

    input[type=search] {
        padding: 4px;
        border: hidden;
        border-radius: 4px;
    }
</style>

<div id="divLoader"></div>
<div id="content" style="margin: 5px; padding-top: 30px">

    <div class="row">


    </div>


    <!-- widget grid -->
    <section id="widget-grid" class="">


        <!-- START ROW -->

        <div class="row">

            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">

                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">
                    <br />
                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2>@ViewBag.Title </h2>

                    </header>


                    <div>
                        <div class="widget-body " style="padding-top:10px;width:100%">
                            <p>
                                @Html.HiddenFor(model => model.ConsoTransactionSummaryId)
                                @Html.DisplayNameFor(model => model.DisclosureCategory) : <strong>@Html.DisplayFor(model => model.DisclosureCategory)</strong><br />
                                @Html.DisplayNameFor(model => model.FinancialYear) : <strong>@Html.DisplayFor(model => model.FinancialYear)</strong><br />
                                @Html.DisplayNameFor(model => model.NoteNo) : <strong>@Html.DisplayFor(model => model.NoteNo)</strong><br />
                                @Html.DisplayNameFor(model => model.NoteDesc) : <strong>@Html.DisplayFor(model => model.NoteDesc)</strong>
                            </p>
                            @*<div class="row">
                                    <div class="col-sm-4 col-md-3 col-lg-3 col-md-offset-6">
                                        <a href="#" onclick="reloadData(@Model.ConsoTransactionSummaryId)" class="btn btn-info" style="border-radius:1px;">
                                            <i class="fa fa-edit"></i>Reload New  Data
                                        </a>
                                    </div>
                                </div>*@
                            <div class="table-striped table-condensed table-responsive">
                                <table class="table table-bordered table-hover table-condensed" id="dt_basic">

                                    <thead>
                                        <tr>
                                            <th style="text-align:center">#</th>
                                            <th style="text-align:left;width:30%">Institution</th>
                                            <th style="text-align: left">GfsCode</th>
                                            <th style="text-align: right">TB Amount</th>
                                            <th style="text-align: right">Elimination Amount</th>
                                            <th style="text-align:center">Action</th>
                                        </tr>
                                    </thead>

                                    <tbody>
                                        @foreach (var item in Model.DisclosureEliminationList)
                                        {
                                            i++;
                                            <tr id=@item.Id>
                                                <td style="text-align: center">@i</td>
                                                <td style="text-align: left; width:30%">
                                                    @Html.DisplayFor(modelItem => item.InstitutionCode)-@Html.DisplayFor(modelItem => item.InstitutionName)
                                                </td>
                                                <td style="text-align:left">
                                                    @Html.DisplayFor(modelItem => item.GfsCode)-@Html.DisplayFor(modelItem => item.GfsCodeDesc)
                                                </td>
                                                <td style="text-align:right">
                                                    @Html.DisplayFor(modelItem => item.TBAmount)
                                                </td>
                                                <td style="text-align:right">
                                                    @Html.DisplayFor(modelItem => item.EliminationAmount)
                                                </td>
                                                <td style="text-align:center">
                                                    <div class="btn-group">
                                                        <button type="button" class="btn btn-info btn-xs dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                            <span class="caret"></span>
                                                            <span class="sr-only">Toggle Dropdown</span>
                                                        </button>
                                                        <ul class="dropdown-menu">
                                                            @if (item.EliminationAmount == 0)
                                                            {
                                                                <li><a href="@Url.Action("EliminationAddDetails", "ConsolidationDisclosures", new { id = item.Id })">Add Disclosure</a></li>
                                                            }
                                                            else { 
                                                                <li><a href="@Url.Action("EliminationAddDetails", "ConsolidationDisclosures", new { id = item.Id })">Edit Disclosure</a></li>
                                                            }
                                                        </ul>
                                                    </div>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>

                            <div class="form-actions">
                                <div class="row">
                                    <div class="col-md-8 col-md-offset-1">
                                        <a href="@Url.Action("PendingDisclosures","ConsolidationDisclosures", new {id=1})" style="margin-right:5px" class="btn btn-info pull-left"><i class="glyphicon glyphicon-arrow-left"></i> Back  </a>
                                        @*<a onclick="window.history.go(-3)" style="margin-right:5px" class="btn btn-info pull-left"><i class="glyphicon glyphicon-arrow-left"></i> Back  </a>*@
                                        <a onclick="Confirm()" style="margin-right:5px" class="btn btn-info pull-left"> <i class="fa fa-save"></i>Finish  </a>
                                    </div>
                                </div>
                            </div>
                        </div>





                    </div>


                </div>
            </article>

        </div>
    </section>

</div>

@section pagespecific {
    <!-- PAGE RELATED PLUGIN(S) -->

    <script type="text/javascript">
      var currentRowId = 0;
     var dt_items_data = $('#dt_items').dataTable();
    $("#dt_items_wrapper .dt-toolbar").remove();
    $("#search-box").on("keyup search input paste cut", function () {
        $("#dt_items").DataTable().search(this.value).draw();
    });


    function Confirm() {
        //debugger
        $("#divLoader").show();
        var id = $("#ConsoTransactionSummaryId").val()
        var url = '@Url.Action("ConfirmDisclosure", "ConsolidationDisclosures")';
        var urlto = '@Url.Action("PendingDisclosures", "ConsolidationDisclosures", new { id = 1 })';
        $.ajax({
            type: "POST",
            url: url,
            data: { id: id },
            success: function (response) {
                //debugger
                $("#divLoader").hide();
                if (response == "Success") {
                    //valid
                    swal("Confirmed  successfully!", { icon: "success" })
                        .then((value) => {
                            //location.reload();
                            location.href = urlto;
                            //window.history.back();
                        });

                }
                else if (response == "Partial") {
                    swal("Partial Confirmed,some Elimination Amount did not match TB Amount!", { icon: "success" })
                        .then((value) => {
                            //location.reload();
                            location.href = urlto;
                            //window.history.back();
                        });
                }
                else {
                    swal(response, { icon: "warning" });
                    return;
                }

            }
        });
    }

        //function amountEntry(e, rowId, num) {
        //    //debugger
        //    //$("#" + e.id).autoNumeric('init');
        //    var $row = $("#" + rowId);
        //    var totalAmount = parseFloat($row.find('input[name="item.TBAmount"]').val().split(",").join(""));
        //    var value = parseFloat(e.value.split(",").join(""));
            

        //}

        function saveEntry(e, rowId,num) {
            debugger
            //var $row = $("#" + rowId);
            //var value = parseFloat(e.value.split(",").join(""));
            var id = parseInt(rowId);
            var $row = $("#" + rowId);
            
            if (num == 1) {
                saveDisclosure(id, e.value, num);
            }
            else {
                var totalAmount = parseFloat($row.find('input[name="item.TBAmount"]').val().split(",").join(""));
                var value = parseFloat(e.value.split(",").join(""));
                if (value <= totalAmount) {
                    saveDisclosure(id, e.value, num);
                }
                else {
                    swal("Amount can not exceed " + totalAmount.toLocaleString('en'), { icon: "warning" }).then((a) => {
                        e.value = 0;
                    });
                }

            }

            
        }
        function saveDisclosure(id, value,num) {
            debugger
            var form_data = {
                "id": id,
                "institution": num == 1 ? value : "",
                "Amount": num==1?0:value,
                "disclosureNum": num,
            };
            if (num == 1) {
                $("#divLoader").show();
            }
             var url = '@Url.Action("SaveEliminationDisclosure", "ConsolidationDisclosures")';
            $.ajax({
                type: "POST",
                url: url,
                data: form_data,
                success: function (response) {
                    $("#divLoader").hide();
                    if (response == "Success") {
                        //valid
                        if (num == 1) {
                            location.reload();
                        }
                    }
                    else {
                        swal(response);
                        return;
                    }

                }
            });
        }

        $(document).ready(function () {
            $('.amount').autoNumeric('init', {
                vMax: '1000000000000000.00',
                vMin: '-1000000000000000.00',
            });

            var responsiveHelper_dt_basic = undefined;
            var responsiveHelper_datatable_fixed_column = undefined;
            var responsiveHelper_datatable_col_reorder = undefined;
            var responsiveHelper_datatable_tabletools = undefined;

            var breakpointDefinition = {
                tablet: 1024,
                phone: 480
            };

            $('#dt_basic').dataTable({
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-12 hidden-xs'l>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_dt_basic) {
                        responsiveHelper_dt_basic = new ResponsiveDatatablesHelper($('#dt_basic'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_dt_basic.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_dt_basic.respond();
                }
            });

            /* END BASIC */

            /* COLUMN FILTER  */
            var otable = $('#datatable_fixed_column').DataTable({
                //"bFilter": false,
                //"bInfo": false,
                //"bLengthChange": false
                //"bAutoWidth": false,
                //"bPaginate": false,
                //"bStateSave": true // saves sort state using localStorage
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6 hidden-xs'f><'col-sm-6 col-xs-12 hidden-xs'<'toolbar'>>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_fixed_column) {
                        responsiveHelper_datatable_fixed_column = new ResponsiveDatatablesHelper($('#datatable_fixed_column'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_datatable_fixed_column.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_datatable_fixed_column.respond();
                }

            });

            // custom toolbar
            $("div.toolbar").html('<div class="text-right"><img src="/Content/img/logo.png" alt="SmartAdmin" style="width: 111px; margin-top: 3px; margin-right: 10px;"></div>');

            // Apply the filter
            $("#datatable_fixed_column thead th input[type=text]").on('keyup change', function () {

                otable
                    .column($(this).parent().index() + ':visible')
                    .search(this.value)
                    .draw();

            });
            /* END COLUMN FILTER */

            /* COLUMN SHOW - HIDE */
            $('#datatable_col_reorder').dataTable({
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'C>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_col_reorder) {
                        responsiveHelper_datatable_col_reorder = new ResponsiveDatatablesHelper($('#datatable_col_reorder'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_datatable_col_reorder.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_datatable_col_reorder.respond();
                }
            });

            /* END COLUMN SHOW - HIDE */

            /* TABLETOOLS */
            $('#datatable_tabletools').dataTable({

                // Tabletools options:
                //   https://datatables.net/extensions/tabletools/button_options
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'T>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
                "oTableTools": {
                    "aButtons": [
                        "copy",
                        "csv",
                        "xls",
                        {
                            "sExtends": "pdf",
                            "sTitle": "SmartAdmin_PDF",
                            "sPdfMessage": "SmartAdmin PDF Export",
                            "sPdfSize": "letter"
                        },
                        {
                            "sExtends": "print",
                            "sMessage": "Generated by SmartAdmin <i>(press Esc to close)</i>"
                        }
                    ],
                    "sSwfPath": "/Scripts/plugin/datatables/swf/copy_csv_xls_pdf.swf"
                },
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_tabletools) {
                        responsiveHelper_datatable_tabletools = new ResponsiveDatatablesHelper($('#datatable_tabletools'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_datatable_tabletools.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_datatable_tabletools.respond();
                }
            });

        });

    </script>
}
