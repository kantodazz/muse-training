@model IFMIS.Areas.Consolidation.Models.ConsoBudgetSummaryVM
@{
    ViewBag.Title = "Budget Details";
    var i = 0;
}

<style>
    .search-container {
        background-color: white;
        color: black;
        border: 1px solid #ccc;
        border-radius: 4px;
        padding: 3px;
        padding-right: 10px;
        padding-left: 10px;
    }

    input[type=number] {
        padding: 8px;
        border: 1px solid #ccc;
    }

    input[type=text] {
        padding: 5px;
        border: 1px solid #ccc;
    }

    input[type=search] {
        padding: 4px;
        border: hidden;
        border-radius: 4px;
    }
</style>

<div id="divLoader"></div>
<div id="content" style="margin: 5px; padding-top: 30px">

    <div class="row">


    </div>


    <!-- widget grid -->
    <section id="widget-grid" class="">


        <!-- START ROW -->

        <div class="row">

            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">

                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">
                    <br />
                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2>@ViewBag.Title </h2>

                    </header>


                    <div>
                        <div class="widget-body " style="padding-top:10px;width:100%">
                            <p>
                                @Html.DisplayNameFor(model => model.FinancialYear) :<strong>@Html.DisplayFor(model => model.FinancialYear)</strong><br />
                                @Html.DisplayNameFor(model => model.BudgetType) :<strong>@Html.DisplayFor(model => model.BudgetType)</strong><br />
                                @Html.DisplayNameFor(model => model.TotalAmount) :<strong>@Html.DisplayFor(model => model.TotalAmount)</strong><br />
                                @Html.DisplayNameFor(model => model.TrxNo) :<strong>@Html.DisplayFor(model => model.TrxNo)</strong>

                            </p>

                            <div class="row">
                                <div class="col-md-12">
                                    <div class="search-container" style="float:right">
                                        <i class="fa fa-search"></i>
                                        <input type="search" name="search" placeholder="Search..." id="search-box">
                                    </div>
                                </div>
                            </div>
                            <table class="table table-bordered table-hover table-condensed" id="dt_summary">
                                <thead>
                                    <tr>
                                        <th style="text-align:right">
                                            #
                                        </th>

                                        <th style="text-align:center">
                                            GFS Code
                                        </th>
                                        <th style="text-align:left">
                                            GFS Code Desc
                                        </th>
                                        <th style="text-align:right">
                                            Amount
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.BudgetDetails)
                                    {
                                        i++;

                                        <tr>
                                            <td style="text-align:right">
                                                @i
                                            </td>

                                            <td style="text-align:center">
                                                @Html.DisplayFor(modelItem => item.GFSCode)
                                            </td>
                                            <td style="text-align:left">
                                                @Html.DisplayFor(modelItem => item.GFSCodeDesc)
                                            </td>
                                            <td style="text-align:right">
                                                @Html.DisplayFor(modelItem => item.OperationalAmount)
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>



                            <div class="form-actions">
                                <div class="row">
                                    <div class="col-md-8 col-md-offset-1">
                                        @if (Model.OverallStatus == "Confirmed")
                                        {
                                            <a href="@Url.Action("BudgetApproval","ConsoBudget")" style="margin-right:5px" class="btn btn-info pull-left"><i class="glyphicon glyphicon-arrow-left"></i> Back  </a>

                                        }
                                        else
                                        {
                                            <a href="@Url.Action("PendingBudget","ConsoBudget")" style="margin-right:5px" class="btn btn-info pull-left"><i class="glyphicon glyphicon-arrow-left"></i> Back  </a>

                                        }
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>





                </div>



            </article>

        </div>
    </section>

</div>
<div class="modal fade" id="uploadModal" style="left:4%">

    <div class="modal-dialog" style="width:35%;">
        <div class="modal-content panel-info">

            <div class="modal-header panel-heading">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h4 align="center">Financial Year  <span id="fy"></span></h4>
            </div>
            @using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = "return SubmitFile(this)" }))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.ConsoBudgetSummaryId)
                <div class="modal-body form-horizontal">

                    <br />
                    <div class="form-group">
                        @Html.LabelFor(model => model.BudgetType, htmlAttributes: new { @class = "control-label col-md-4", @style = "text-align:left" })
                        <div class="col-md-8">
                            @Html.DropDownListFor(model => model.BudgetType, new List<SelectListItem>{
                        new SelectListItem{ Text="--Select--", Value = "" },
                        new SelectListItem{ Text="Expenditure", Value = "Expenditure" },
                        new SelectListItem{ Text="Revenue", Value = "Revenue" },
                }, new { @class = "form-control select2", @required = "required" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.Label("Excel", htmlAttributes: new { @class = "control-label col-md-4", @style = "text-align:left" })

                        <div class="col-md-8">
                            <input type="file" class="form-control btn btn-default" id="UploadFile" name="UploadFile" required="required">

                        </div>
                    </div>

                </div>
                <div class="modal-footer">
                    <a href="#" class="btn btn-default" data-dismiss="modal">Cancel</a>
                    <input class="btn btn-info" type="submit" id="save_button" value="Save" />
                </div>

            }
        </div>
    </div>
</div>
@section Scripts {
    <script type="text/javascript">

        var dt_search_summary = $('#dt_summary').dataTable();
        $("#dt_summary_wrapper .dt-toolbar").remove();
        $("#search-box").on("keyup search input paste cut", function () {
            $("#dt_summary").DataTable().search(this.value).draw();
        });

        function SubmitFile(formData) {
             $("#save_button").prop('disabled', true);
            var url = '@Url.Action("SaveImportation", "ConsoBudget")';
            var ajaxConfig = {
                type: "post",
                url: url,
                data: new FormData(formData),
                success: function (response) {
                      $("#save_button").prop('disabled', false);
                    if (response == "Success") {
                        swal("Data imported  successfully", { icon: "Success" })
                                    .then((value) => {
                                        location.reload();
                                });
                    }
                    else {
                        swal(response);
                    }
                }
            }

            if ($(formData).attr('enctype') == "multipart/form-data") {
                ajaxConfig["contentType"] = false;
                ajaxConfig["processData"] = false;
            }
            $.ajax(ajaxConfig);
            return false;
        }

        var uploagFile = function (fy) {
            $("#fy").text(fy);
            $('#uploadModal').modal('show');

        };

         var processEntry = function (id) {
             swal({
                        title: 'Confirmation',
                        text: "Do you finish this importation?",
                        buttons: [
                          'No',
                          'Yes'
                        ],
                    }).then(function (isConfirm) {
                        if (isConfirm) {
                            var url = '@Url.Action("ApproveImportation", "ConsoTransactions")';
                            $.ajax(
                {
                    type: "POST",
                    url: url,
                    data: { id: id},
                    success: function (response) {
                        if (response == "Success") {
                            swal("New Notes formed successfully!", { icon: "success" })
                                         .then((value) => {
                                             var url = '@Url.Action("PendingTB", "ConsoTransactions")';
                                             window.location.replace(url);
                                         });
                        }
                        else {
                            swal(response);
                        }
                    },
                    error: function (xhr) {
                        //console.log(xhr.responseText);
                        swal("An error has occured, contact system support");

                    },

                });
                        } else {
                            swal("Cancelled", "No change was made");
                        }
                    });

        };


        var cancelEntry = function (id) {
             swal({
                        title: 'Confirmation',
                        text: "Do you cancel this importation?",
                        buttons: [
                          'No',
                          'Yes'
                        ],
                    }).then(function (isConfirm) {
                        if (isConfirm) {
                            var url = '@Url.Action("CancelImportation", "ConsoTransactions")';
                            $.ajax(
                {
                    type: "POST",
                    url: url,
                    data: { id: id},
                    success: function (response) {
                        if (response == "Success") {
                            swal("Cancelled  successfully!", { icon: "success" })
                                         .then((value) => {
                                             location.reload();
                                         });
                        }
                        else {
                            swal(response);
                        }
                    },
                    error: function (xhr) {
                        //console.log(xhr.responseText);
                        swal("An error has occured, contact system support");

                    },

                });
                        } else {
                            swal("Cancelled", "No change was made");
                        }
                    });

        };

        //SHOW LOADER ICON
        $(document).ajaxStart(function () {
            $("#divLoader").show();
        });
        //HIDE LOADER ICON
        $(document).ajaxStop(function () {
            $("#divLoader").hide();
        });
    </script>
}