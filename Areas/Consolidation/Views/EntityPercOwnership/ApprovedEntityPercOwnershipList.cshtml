@{
    ViewBag.Title = "Entity Percent Ownership";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .input[type="text"], select {
        border: 1px solid lightgray;
        width: 100%;
        height: 35px;
    }

    .textarea {
        border: 1px solid lightgray;
        width: 100%;
    }

    .input[type="text"]:focus {
        border: 1px solid lightblue;
    }

    th {
        text-align: left;
    }
</style>
<!-- widget grid -->
<div id="divLoader"></div>
<div id="content" style="margin: 5px; padding-top: 50px">

    <section id="widget-grid" class="">
        <div class="row">

            <article class="col-sm-12 col-md-12 col-lg-12">

                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">
                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>

                        <h2 style="color:black;">Entity Percent Ownership</h2>

                    </header>
                    <div>
                        @*<div class="widget-body" style="padding-top:10px; width:100%;">

                        </div>*@
                        <table id="dt_basic" class="table table-condensed table-bordered">
                            <thead>
                                <tr>
                                    <th> No.</th>
                                    @*<th> Institution Name</th>*@
                                    <th style="text-align:left"> Note Number</th>
                                    <th style="text-align:left"> Note Description</th>
                                    <th style="text-align:left"> GfsCode</th>
                                    <th style="text-align:left"> GfsCode Description</th>
                                    <th style="text-align:left"> Percent Ownership</th>
                                    <th style="text-align:left"> Overallstatus</th>
                                    <th style="text-align:Center">Action</th>
                                </tr>
                            </thead>
                            @{ int i = 0;}
                            @foreach (var group in ((IEnumerable<IFMIS.Areas.Consolidation.Models.FAEntityPercentOwnership>)ViewBag.list).GroupBy(a => a.FAEntityOwnershipId))
                            {

                                <tbody>
                                    @foreach (var item in group)
                                    {
                                        i++;
                                        <tr>
                                            <td>@i</td>
                                            @*<td style="text-align:left"> @item.InstitutionCode - @item.InstitutionName</td>*@
                                            <td style="text-align:left"> @item.NoteNo</td>
                                            <td style="text-align:left"> @item.NoteDesc</td>
                                            <td style="text-align:left"> @item.GfsCode</td>
                                            <td style="text-align:left"> @item.GfsCodedesc</td>
                                            <td style="text-align:left"> @item.PercOwnership%</td>
                                            <td style="text-align:left"> @item.OverAllStatus</td>
                                            <td style="text-align:center; width:15%;">
                                                @if (item.OverAllStatus != "Approved")
                                                {
                                                    <div class="btn-group">
                                                        <button type="button" class="btn btn-info btn-xs dropdown-toggle" data-toggle="dropdown" style="width:40px;border-radius:1px;" aria-haspopup="true" aria-expanded="false">
                                                            <span class="caret"></span>
                                                            <span class="sr-only">Toggle Dropdown</span>
                                                        </button>
                                                        <ul class="dropdown-menu">
                                                            @if (item.OverAllStatus == "Confirmed")
                                                            {
                                                                <li>
                                                                    <a href="#" Onclick="Approve(@item.FAEntityOwnershipId)" class="btn-xs edit">
                                                                        <i class="fa fa-edit"></i> Approve
                                                                    </a>
                                                                </li>
                                                                <li>
                                                                    <a href="#" Onclick="Reject(@item.FAEntityOwnershipId)" class="btn-xs edit">
                                                                        <i class="fa fa-edit"></i> Reject
                                                                    </a>
                                                                </li>
                                                            }

                                                        </ul>
                                                    </div>
                                                }
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            }
                        </table>
                        <br />
                        <br />
                    </div>
                </div>
            </article>
        </div>
    </section>
</div>

@section pagespecific {
    <script type="text/javascript">

        var Approve = function (id) {
            swal({
                   title: 'Approval',
                   text: "Do you approve this ownership?",
                   buttons: [
                     'No',
                     'Yes'
                   ],
               }).then(function (isConfirm) {
                   if (isConfirm) {
                       $("#divLoader").show();
                       var url = '@Url.Action("ConfirmOwnership", "EntityPercOwnership")';
                       $.ajax(
                       {
                           type: "POST",
                           url: url,
                           data: { id: id,status:"approve"},
                               success: function (response) {
                                   $("#divLoader").hide();
                               if (response == "Success") {
                                   swal("Approved  successfully!", { icon: "success" })
                                        .then((value) => {
                                            location.reload();
                                        });
                               }
                               else {
                                   swal(response, { icon: "warning" });
                               }
                           },
                           error: function (xhr) {
                               //console.log(xhr.responseText);
                               swal("An error has occured, contact system support");

                           },

                       });
                   } else {
                       swal("Cancelled", "No change was made");
                   }
               });
        }

        var Reject = function (id) {
            swal({
                   title: 'Rejection',
                   text: "Do you reject this ownership?",
                   buttons: [
                     'No',
                     'Yes'
                   ],
               }).then(function (isConfirm) {
                   if (isConfirm) {
                       $("#divLoader").show();
                       var url = '@Url.Action("ConfirmOwnership", "EntityPercOwnership")';
                       $.ajax(
                       {
                           type: "POST",
                           url: url,
                           data: { id: id,status:"reject"},
                               success: function (response) {
                                   $("#divLoader").hide();
                               if (response == "Success") {
                                   swal("Rejected  successfully!", { icon: "success" })
                                        .then((value) => {
                                            location.reload();
                                        });
                               }
                               else {
                                   swal(response, { icon: "warning" });
                               }
                           },
                           error: function (xhr) {
                               //console.log(xhr.responseText);
                               swal("An error has occured, contact system support");

                           },

                       });
                   } else {
                       swal("Cancelled", "No change was made");
                   }
               });
        }

        $("#PercOwnership").autoNumeric('init');
        
        $(document).ready(function () {

            var responsiveHelper_dt_basic = undefined;
            var responsiveHelper_datatable_fixed_column = undefined;
            var responsiveHelper_datatable_col_reorder = undefined;
            var responsiveHelper_datatable_tabletools = undefined;

            var breakpointDefinition = {
                tablet: 1024,
                phone: 480
            };
            $('#dt_basic').dataTable({
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-12 hidden-xs'l>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_dt_basic) {
                        responsiveHelper_dt_basic = new ResponsiveDatatablesHelper($('#dt_basic'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_dt_basic.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_dt_basic.respond();
                }
            });

            var otable = $('#datatable_fixed_column').DataTable({

                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6 hidden-xs'f><'col-sm-6 col-xs-12 hidden-xs'<'toolbar'>>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_fixed_column) {
                        responsiveHelper_datatable_fixed_column = new ResponsiveDatatablesHelper($('#datatable_fixed_column'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_datatable_fixed_column.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_datatable_fixed_column.respond();
                }

            });

            // custom toolbar
            $("div.toolbar").html('<div class="text-right"><img src="/Content/img/logo.png" alt="SmartAdmin" style="width: 111px; margin-top: 3px; margin-right: 10px;"></div>');
            $("#datatable_fixed_column thead th input[type=text]").on('keyup change', function () {

                otable
                    .column($(this).parent().index() + ':visible')
                    .search(this.value)
                    .draw();

            });
            $('#datatable_col_reorder').dataTable({
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'C>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_col_reorder) {
                        responsiveHelper_datatable_col_reorder = new ResponsiveDatatablesHelper($('#datatable_col_reorder'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_datatable_col_reorder.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_datatable_col_reorder.respond();
                }
            });

            $('#datatable_tabletools').dataTable({

                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'T>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
                "oTableTools": {
                    "aButtons": [
                        "copy",
                        "csv",
                        "xls",
                        {
                            "sExtends": "pdf",
                            "sTitle": "SmartAdmin_PDF",
                            "sPdfMessage": "SmartAdmin PDF Export",
                            "sPdfSize": "letter"
                        },
                        {
                            "sExtends": "print",
                            "sMessage": "Generated by SmartAdmin <i>(press Esc to close)</i>"
                        }
                    ],
                    "sSwfPath": "/Scripts/plugin/datatables/swf/copy_csv_xls_pdf.swf"
                },
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_tabletools) {
                        responsiveHelper_datatable_tabletools = new ResponsiveDatatablesHelper($('#datatable_tabletools'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_datatable_tabletools.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_datatable_tabletools.respond();
                }
            });

            /* END TABLETOOLS */

        })


        function Cancel(i) {
            status = "Cancelled";
            swal({
                title: "Are you sure?",
                text: "Note Activity will be Cancelled!",
                buttons: [
                    'No',
                    'Yes'
                ],
            }).then(function (isConfirm) {
                if (isConfirm) {
                    RemoveNoteActivityItem(i, status);

                } else {
                    swal("Cancelled", "No change was made");
                }
            });
        }

        $("#NoteNo").change(function () {
            debugger;
            $("#saveLoader").toggle(true);
            var noteNo = $(this).val();
            var url = "GetGfscodeByNote/?noteNo=" + noteNo;

            $.ajax({
                type: "POST",
                url: url,
                contentType: "html",
                success: function (response) {
                    $("#saveLoader").toggle(false);
                    $("#GfsCode").empty();
                    $("#GfsCode").append(response);
                },
                complete: function () {
                    $("#divLoader").hide();
                }
            })
        });

        function RemoveNoteActivityItem(i, status) {
                var url = '@Url.Action("NoteItemsRemove", "GfscodeSetup")';
                $.ajax({
                    type: "post",
                    url: url,
                    data: {
                        Status: status,
                        SubSectorId: i
                    },
                    contenttype: "application/json; charset=utf-8",
                    datatype: "json",
                    success: function (response) {

                        if (response == "Success") {
                            swal("Changed Successfully!", { icon: "success" })
                                .then((value) => {
                                    window.location.reload();
                                });
                        }
                        else {
                            swal(response);
                        }

                    },
                    failure: function (error) {
                        swal(error);
                    }
                });
            }
    </script>
}
