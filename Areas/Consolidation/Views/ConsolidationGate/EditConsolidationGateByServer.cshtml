@model IFMIS.Areas.Consolidation.Models.EditConsolidationGateVM

<div id="divLoader">
</div>
<!-- MAIN CONTENT -->
<div id="content">

    <div class="row">
        @*<div class="col-xs-12 col-sm-9 col-md-9 col-lg-9">
            <h1 class="page-title txt-color-blueDark">

            <!-- PAGE HEADER -->
            <!--
            <i class="fa-fw fa fa-pencil-square-o"></i>
            Payments
            <span>
            >
            Bills
            </span>
            -->
            </h1>
            </div>*@

        <div class="col-xs-12 col-sm-3 col-md-3 col-lg-3">
            <!-- Button trigger modal -->
            <!--<a data-toggle="modal" href="#myModal" class="btn btn-success btn-lg pull-right header-btn hidden-mobile"><i class="fa fa-circle-arrow-up fa-lg"></i> Launch form modal</a>-->
        </div>
    </div>

    <!--
    <div class="alert alert-block alert-success">
        <a class="close" data-dismiss="alert" href="#">×</a>
        <h4 class="alert-heading"><i class="fa fa-check-square-o"></i> Check validation!</h4>
        <p>
            You may also check the form validation by clicking on the form action button. Please try and see the results below!
        </p>
    </div>
        -->
    <!-- widget grid -->
    <section id="widget-grid" class="">


        <!-- START ROW -->

        <div class="row">

            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">

                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">
                    <!-- widget options:
                        usage: <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false">

                        data-widget-colorbutton="false"
                        data-widget-editbutton="false"
                        data-widget-togglebutton="false"
                        data-widget-deletebutton="false"
                        data-widget-fullscreenbutton="false"
                        data-widget-custombutton="false"
                        data-widget-collapsed="true"
                        data-widget-sortable="false"

                    -->
                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2>Change Consolidation Gate Status </h2>

                    </header>

                    <!-- widget div-->
                    <div>

                        <!-- widget edit box -->
                        <div class="jarviswidget-editbox">
                            <!-- This area used as dropdown edit box -->

                        </div>
                        <!-- end widget edit box -->
                        <!-- widget content -->
                        <div class="widget-body">
                            <form action="EditConsolidationGateByServer" method="post" class="form-horizontal" name="editConsolidationGateByServerForm" id="editConsolidationGateByServerForm">
                                @Html.AntiForgeryToken()
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                @Html.HiddenFor(model => model.ConsolidationGateId)
                                @Html.HiddenFor(model => model.ServerName)

                                <div class="form-group">
                                    @Html.LabelFor(model => model.FinancialYear, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4">

                                        @Html.EditorFor(model => model.FinancialYear, new { htmlAttributes = new { @readonly = "readonly", @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.FinancialYear, "", new { @class = "text-danger" })
                                    </div>
                                </div>


                                <div class="form-group">
                                    @Html.LabelFor(model => model.InstitutionCode, "Institution Code", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4">

                                        @Html.DropDownListFor(model => model.InstitutionCode, Model.InstitutionList, "Select Institution Code", new { @class = "select2 form-control" })
                                        @Html.ValidationMessageFor(model => model.InstitutionCode, "", new { @class = "text-danger" })
                                    </div>

                                    @Html.LabelFor(model => model.OverallStatus, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4">
                                        @Html.DropDownListFor(model => model.OverallStatus, Model.StatusList, "Select Status", new { @class = "select2 form-control" })
                                        @Html.ValidationMessageFor(model => model.OverallStatus, "", new { @class = "text-danger" })
                                    </div>
                                </div>



                                <div id="tarehe" class="form-group">
                              
                                    @Html.LabelFor(model => model.EffectiveStartDate, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4">
                                        @Html.EditorFor(model => model.EffectiveStartDate, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.EffectiveStartDate, "", new { @class = "text-danger" })
                                    </div>

                                    @Html.LabelFor(model => model.EffectiveEndDate, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4">
                                        @Html.EditorFor(model => model.EffectiveEndDate, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.EffectiveEndDate, "", new { @class = "text-danger" })
                                    </div>
                                </div>


                                <div class="form-actions">
                                    <div class="row">
                                        <div class="col-md-8 col-md-offset-2">
                                            <button class="btn btn-info" type="button" style="float: left" id="btnSave">
                                                <i class="fa fa-save"></i>
                                                Save
                                            </button>
                                            <a onclick="window.history.back()" class="btn btn-info" style="float: left; margin-left: 5px">
                                                <i class="fa fa-arrow-left"></i>
                                                Back
                                            </a>

                                            @*<div class="form-actions">
                    <div class="row">
                        <div class="col-md-8 col-md-offset-2">*@
                                            <!--<a class="btn btn-info" onclick="window.history.back()">
                    <i class="fa fa-arrow-left"></i>Back
                </a>-->
                                            @*</div>
                        </div>
                    </div>*@


                                        </div>
                                    </div>
                                </div>
                            </form>
                        </div>
                        <!-- end widget content -->
                    </div>
                    <!-- end widget div -->

                </div>
                <!-- end widget -->

            </article>
            <!-- END COL -->

        </div>

        <!-- END ROW -->

    </section>
    <!-- end widget grid -->

</div>
<!-- END MAIN CONTENT -->
<!-- Start of Aproval modal -->
<div class="modal fade" id="divModal" tabindex="-1" role="dialog" aria-labelledby="lblmodal">
    <div class="modal-dialog" style="width: 80%">
        <div class="modal-content">
            <div class="modal-header alert alert-info" style="font:bold 16px Trebuchet MS, Lucida Sans Unicode, Lucida Grande, Lucida Sans, Arial, sans-serif">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title" id="lblmodal">Add GL Item</h4>
            </div>
            <div class="modal-body" id="divModalBody"></div>
            <div class="modal-footer">
                <button class="btn btn-success role-save" id="btnAddGlItem" style="float: left" onclick="addGlItems()">Add</button>
                <button class="btn btn-default role-cancel" style="float: left" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section pagespecific {
    <script type="text/javascript">
        $('#tarehe').toggle(false);
        var overallStatus = $("#OverallStatus").val();
        if (overallStatus == "Opened") {
            $('#tarehe').toggle(true);
        }

        $("#OverallStatus").change(function () {
            var overallStatus1 = $("#OverallStatus").val();
            if (overallStatus1 == "Opened") {
                $('#tarehe').toggle(true);

            } else {
                $('#tarehe').toggle(false);
            }
        });


        $("#InstitutionCode").change(function () {

            var institutionCode = $("#InstitutionCode").val();
            var financialYear = $("#FinancialYear").val();

            $.ajax({
                url: '@Url.Action("getInstitutionConsolidation", "ConsolidationGate")/?institutionCode=' + institutionCode + "&&financialYear="+ financialYear + '',
                type: "GET",
                dataType: "json",
                success: function (dataGate) {

                    $("#ConsolidationGateId").val(dataGate.consolidationGateId);
                    $("#InstitutionCode").val(dataGate.institutionCode);
                    $("#FinancialYear").val(dataGate.financialYear);
                    $("#OverallStatus").val(dataGate.overallStatus);
                    $("#EffectiveStartDate").val(ConvertJsonDate(dataGate.effectiveStartDate));
                    $("#EffectiveEndDate").val(ConvertJsonDate(dataGate.effectiveEndDate));
                    $("#ServerName").val(dataGate.serverName);
                }
            });
        });


        $("#btnSave").click(function () {

            let currentDate = '@ViewBag.CurrentDate';
            let effectiveStartDate = $("#EffectiveStartDate").val();
            let effectiveEndDate = $("#EffectiveEndDate").val();
            let overallstatus = $("#OverallStatus").val();

            if (overallstatus == "Opened") {
                $("#EffectiveStartDate").css({ 'border-color': '' });
                $("#EffectiveEndDate").css({ 'border-color': '' });

                if (effectiveStartDate < currentDate) {

                    swal("Invalid effective Start Date,The valid date Start is " + currentDate, { icon: "warning" })
                        .then((j) => {
                            $("#EffectiveStartDate").focus();
                            $("#EffectiveStartDate").css({ 'border-color': 'red' });

                        });
                    return false

                } else if (effectiveEndDate < currentDate) {

                    swal("Invalid effective End Date,The valid date Start is " + currentDate, { icon: "warning" })
                        .then((j) => {
                            $("#EffectiveEndDate").focus();
                            $("#EffectiveEndDate").css({ 'border-color': 'red' });
                        });
                    return false
                }
            }

            $("#divLoader").show();
            $('#btnSave').prop("disabled", true);

            if (!$("#editConsolidationGateByServerForm").valid()) {

                $("#divLoader").hide();
                $('#btnSave').prop("disabled", false);
                return false;
            }

            var token = $("[name='__RequestVerificationToken']").val();
            var data = {
                __RequestVerificationToken: token,
                ConsolidationGateId: $('#ConsolidationGateId').val(),
                ServerName: $('#ServerName').val(),
                InstitutionCode: $('#InstitutionCode').val().trim(),
                FinancialYear: $('#FinancialYear').val().trim(),
                OverallStatus: $('#OverallStatus').val().trim(),
                EffectiveStartDate: $('#EffectiveStartDate').val(),
                EffectiveEndDate: $('#EffectiveEndDate').val()
            }
            //console.log(data);
            var url = '@Url.Action("EditConsolidationGateByServer", "ConsolidationGate")';
            $.ajax({
                url: url,
                type: "POST",
                //data: JSON.stringify(data),
                data: data,
                dataType: "JSON",
                //contentType: "application/json",
                contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                success: function (response) {
                    //check is successfully save to database
                    if (response == "Success") {
                        //will send status from server side
                        swal({
                            text: "Successfully saved.",
                            icon: "success",
                            button: "OK",
                        }).then(function () {
                            var url = '@Url.Action("PendingConsolidationGateListByServer", "ConsolidationGate")';
                            window.location.href = `${url}/?serverName=${data.ServerName}&financialYear=${data.FinancialYear}`
                        });

                    } else if (response == "Error") {
                        swal({
                            text: "An error occured while processing your request, contact system support",
                            icon: "warning",
                            button: "OK",
                        })
                    }
                    else {
                        swal(response);
                    }
                },
                error: function (response) {
                    swal({
                        text: "An error occured while processing your request, contact system support",
                        icon: "error",
                        button: "OK",
                    })
                },
                complete: function () {
                    $("#divLoader").hide();
                    $('#btnSave').prop("disabled", false);
                }
            });
        });

        function ConvertJsonDate(inputDate) {
            debugger
            var dx = new Date(parseInt(inputDate.substr(6)));
            //alert(dx.toDateString());
            var dd = ("0" + dx.getDate()).slice(-2);
            var mm = ("0" + (dx.getMonth() + 1)).slice(-2);
            var yy = dx.getFullYear();
            var HH = ("0" + dx.getHours()).slice(-2);
            var m = ("0" + dx.getMinutes()).slice(-2);
            var ss = ("0" + dx.getSeconds()).slice(-2);
            return yy + "-" + mm + "-" + dd;
            //return dx.toDateString() + "  " + HH + ":" + m + ":" + ss;
        }

        function ToJavaScriptDate(value) {
            var months = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
            var pattern = /Date\(([^)]+)\)/;
            var results = pattern.exec(value);
            var dt = new Date(parseFloat(results[1]));
            return dt.getDate() + "/" + (dt.getMonth() + 1) + "/" + dt.getFullYear();
        }
    </script>
}
