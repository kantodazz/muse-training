
@model IEnumerable<IFMIS.Areas.RecurrentPayment.Models.PayMasterVM>
@{
    string imgSrc = "";

    if (Model.Select(a => a.GroupLogo != null).FirstOrDefault())
    {
        imgSrc = "~/Media/Images/bunge.jpg";     
    }
}

<style type="text/css">
    * {
        box-sizing: border-box;
    }

    body {
        font-family: 'Gill Sans','lucida grande', helvetica, arial, sans-serif;
    }

    table {
        width: 100%;
        border-collapse: collapse;
        border-spacing: 0;
        margin: 0px;
    }

    td, th {
        border: 1px solid;
        padding: 8px;
    }

    .alinearDerecha {
        text-align: right;
    }

    .negrita {
        font-weight: bold;
    }

    thead {
        display: table-row-group;
    }

    tr {
        page-break-inside: avoid;
    }
</style>


<div class="row">
    <div class="col-md-8" style="text-align: center">

        <img src="@Server.MapPath(imgSrc)" width="150" height="150" class="img-responsive" />
        <h2>
            @Model.Select(a => a.GroupName).FirstOrDefault()
        </h2>
        <h3>PAYROLL DETAILS - @ViewBag.CheckDate</h3>
        <h3>
            Beneficiary Category- @ViewBag.BenCategory
        </h3>
    </div>
</div>

<div id="content">
    <div class="panel panel-default">
        <!-- Default panell contents -->

        <div class="panel-body">


            <div class="panel-body">
                <table class="table" id="tblDataList">
                    <thead>
                        <tr>
                            <th>#</th>
                            <th>
                                @Html.DisplayNameFor(model => model.BeneficiaryCode)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.BeneficiaryName)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.OriginalNetAmount)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.TotalAllowanceAmount)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.TotalDeductionAmount)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.FinalNetAmount)
                            </th>
                        </tr>
                    </thead>

                    @{
                        int i = 0;
                        decimal? totalAllowance = 0, originalNetAmount = 0, totalDeductionAmount = 0, finalNetAmount = 0;
                    }
                    <tbody>
                        @foreach (var item in Model)
                        {
                            i++;
                            totalAllowance += item.TotalAllowanceAmount != null ? item.TotalAllowanceAmount : 0;
                            originalNetAmount += item.OriginalNetAmount != null ? item.OriginalNetAmount : 0;
                            totalDeductionAmount += item.TotalDeductionAmount != null ? item.TotalDeductionAmount : 0;
                            finalNetAmount += item.FinalNetAmount != null ? item.FinalNetAmount : 0;

                            <tr>
                                <td>
                                    @i
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.BeneficiaryCode)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.BeneficiaryName)
                                </td>
                                <td style="text-align: right">
                                    @Html.DisplayFor(modelItem => item.OriginalNetAmount)
                                </td>
                                <td style="text-align: right">
                                    @Html.DisplayFor(modelItem => item.TotalAllowanceAmount)
                                </td>
                                <td style="text-align: right">
                                    @Html.DisplayFor(modelItem => item.TotalDeductionAmount)
                                </td>
                                <td style="text-align: right">
                                    @Html.DisplayFor(modelItem => item.FinalNetAmount)
                                </td>
                            </tr>

                        }
                        <tr>
                            <td></td>
                            <td></td>
                            <td><b>Grand Total</b></td>
                            <td style="text-align: right"><b>@string.Format("{0:#,0.00}", originalNetAmount)</b></td>
                            <td style="text-align: right"><b>@string.Format("{0:#,0.00}", totalAllowance)</b></td>
                            <td style="text-align: right"><b>@string.Format("{0:#,0.00}", totalDeductionAmount)</b></td>
                            <td style="text-align: right"><b>@string.Format("{0:#,0.00}", finalNetAmount)</b></td>
                        </tr>
                    </tbody>

                </table>
            </div>
        </div>
    </div>
</div>
