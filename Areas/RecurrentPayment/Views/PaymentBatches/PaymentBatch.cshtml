@model IFMIS.Areas.RecurrentPayment.Models.PaymentVM

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div id="content">
    <div class="row"></div>
    <section id="widget-grid">
        <div class="row">
            <article class="col-sm-12 col-md-12 col-lg-12">

                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">

                    <header>
                        <span class="widget-icon"> <i class="fa fa-table"></i> </span>
                        <h2>Payments Form</h2>
                    </header>

                    <div>
                        <div class="widget-body">

                            @using (Html.BeginForm("", "", FormMethod.Post, new { id = "paymentForm" }))
                            {
                                @Html.AntiForgeryToken()

                                <div class="form-horizontal">
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    @Html.HiddenFor(model => model.PaymentBatchID)
                                    @Html.HiddenFor(model => model.BatchNo)
                                    @Html.HiddenFor(model => model.BatchDesc)
                                    @Html.HiddenFor(model => model.PaymentCategory)
                                    @Html.HiddenFor(model => model.OverallStatus)
                                    @Html.HiddenFor(model => model.BeneficiaryID)
                                    @Html.HiddenFor(model => model.BenName)
                                    @Html.HiddenFor(model => model.PayStationId)
                                    @Html.HiddenFor(model => model.PayStationName)
                                    @Html.HiddenFor(model => model.BankID)
                                    @Html.HiddenFor(model => model.BeneficiaryDeptId)
                                    @Html.HiddenFor(model => model.BeneficiaryDept)

                                    <div class="table-responsive" style="border: 1px solid #D9EDF7; border-radius: 4px">
                                        <table class="table table-condensed table-hover table-striped">
                                            <thead>
                                                <tr style="background-color: #D9EDF7">
                                                    <th colspan="6" style="text-align: left">
                                                        Payment Summary
                                                    </th>
                                                </tr>
                                                <tr>
                                                    <th>
                                                        @Html.LabelFor(model => model.BatchNo, htmlAttributes: new { @class = "control-label" })
                                                    </th>
                                                    <th>
                                                        @Html.LabelFor(model => model.BatchDesc, htmlAttributes: new { @class = "control-label" })
                                                    </th>
                                                    <th>
                                                        @Html.LabelFor(model => model.PayStationName, htmlAttributes: new { @class = "control-label" })
                                                    </th>
                                                    <th>
                                                        @Html.LabelFor(model => model.NumOfTrxs, htmlAttributes: new { @class = "control-label" })
                                                    </th>
                                                    <th>
                                                        @Html.LabelFor(model => model.TotalBatchAmount, htmlAttributes: new { @class = "control-label" })
                                                    </th>
                                                    <th>
                                                        @Html.LabelFor(model => model.OverallStatus, htmlAttributes: new { @class = "control-label" })
                                                    </th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <tr>
                                                    <td>
                                                        @Model.BatchNo
                                                    </td>
                                                    <td>
                                                        @Model.BatchDesc
                                                    </td>
                                                    <td>
                                                        @Model.PayStationName
                                                    </td>
                                                    <td style="text-align: right">
                                                        @String.Format("{0:#,0}", Model.NumOfTrxs)
                                                    </td>
                                                    <td style="text-align: right">
                                                        @String.Format("{0:#,0.00}", Model.TotalBatchAmount)
                                                    </td>
                                                    <td>
                                                        @Model.OverallStatus
                                                    </td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </div>

                                    <div class="panel panel-info" style="margin-top: 20px">
                                        <div class="panel-heading">Payment Entry Form</div>
                                        <div class="panel-body">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.BeneficiaryName, htmlAttributes: new { @class = "control-label col-md-2", @style = "padding-right: 5px" })
                                                <div class="col-md-4" style="padding-left: 5px">
                                                    @Html.TextBoxFor(model => model.BeneficiaryName, new { @class = "form-control", @placeholder = "Select Beneficiary" })
                                                </div>
                                                @Html.ValidationMessageFor(model => model.BeneficiaryName, "", new { @class = "text-danger" })
                                            </div>

                                            <div class="form-group">
                                                @Html.LabelFor(model => model.BeneficiaryCode, htmlAttributes: new { @class = "control-label col-md-2", @style = "padding-right: 5px" })
                                                <div class="col-md-2" style="padding-left: 5px">
                                                    @Html.EditorFor(model => model.BeneficiaryCode, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                                </div>
                                                @Html.ValidationMessageFor(model => model.BeneficiaryCode, "", new { @class = "text-danger" })
                                            </div>

                                            <div class="form-group">
                                                @Html.LabelFor(model => model.BankBic, htmlAttributes: new { @class = "control-label col-md-2", @style = "padding-right: 5px" })
                                                <div class="col-md-2" style="padding-left: 5px">
                                                    @Html.EditorFor(model => model.BankBic, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                                </div>
                                                @Html.ValidationMessageFor(model => model.BankBic, "", new { @class = "text-danger" })
                                            </div>

                                            <div class="form-group">
                                                @Html.LabelFor(model => model.BankName, htmlAttributes: new { @class = "control-label col-md-2", @style = "padding-right: 5px" })
                                                <div class="col-md-4" style="padding-left: 5px">
                                                    @Html.EditorFor(model => model.BankName, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                                </div>
                                                @Html.ValidationMessageFor(model => model.BankName, "", new { @class = "text-danger" })
                                            </div>

                                            <div class="form-group">
                                                @Html.LabelFor(model => model.BeneficiaryAccountNo, htmlAttributes: new { @class = "control-label col-md-2", @style = "padding-right: 5px" })
                                                <div class="col-md-2" style="padding-left: 5px">
                                                    @Html.EditorFor(model => model.BeneficiaryAccountNo, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                                </div>
                                                @Html.ValidationMessageFor(model => model.BeneficiaryAccountNo, "", new { @class = "text-danger" })
                                            </div>

                                            <div class="form-group">
                                                @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2", @style = "padding-right: 5px" })
                                                <div class="col-md-2" style="padding-left: 5px">
                                                    @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                                                </div>
                                                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
                                            </div>

                                            <div class="form-group">
                                                @Html.LabelFor(model => model.PaymentDescription, htmlAttributes: new { @class = "control-label col-md-2", @style = "padding-right: 5px" })
                                                <div class="col-md-5" style="padding-left: 5px">
                                                    @Html.EditorFor(model => model.PaymentDescription, new { htmlAttributes = new { @class = "form-control" } })
                                                </div>
                                                @Html.ValidationMessageFor(model => model.PaymentDescription, "", new { @class = "text-danger" })
                                            </div>

                                            <div class="form-group">
                                                <div class="col-md-1 col-md-offset-2" style="padding-left: 5px">
                                                    @*<input type="button" id="btnSave" value="Save" class="btn btn-default" onclick="addPaymentToBatch()" />*@
                                                    <button type="submit" class="btn btn-info" id="btnSave" onclick="addPaymentToBatch()" style="float: left">
                                                        <span class="glyphicon glyphicon-floppy-save" aria-hidden="true"></span>
                                                        Save
                                                    </button>
                                                </div>
                                                <div class="col-md-2" style="text-align: center">
                                                    <a href="@Request.UrlReferrer" class="btn btn-info" style="float: left; margin-left: 5px">
                                                        <span class="glyphicon glyphicon-backward" aria-hidden="true"></span>
                                                        Back
                                                    </a>
                                                    @*@Html.ActionLink("Back", "PaymentBatches", new { paymentCategory = Model.PaymentCategory }, new { @class = "btn btn-default" })*@
                                                </div>
                                                <div class="col-md-2" style="text-align: left">
                                                    @Html.ActionLink("View List", "PaymentsPerBatch", new { id = Model.PaymentBatchID }, new { @class = "btn btn-info" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                </div>
                            }
                        </div>
                    </div>
                </div>
            </article>
        </div>
    </section>
</div>

@section Scripts{
    <script>

        $(document).ready(function () {

            if ($("#OverallStatus").val() != "PENDING") {
                $("#btnSave").prop("disabled", true);
            }

            var url = '@Url.Action("GetBeneficiariesPerPayStation", "PaymentBatches")';
            var payStationId = $("#PayStationId").val();

            $("#BeneficiaryName").select2({
                minimumInputLength: 2,  // minimumInputLength for sending ajax request to server
                width: 'resolve',   // to adjust proper width of select2 wrapped elements
                ajax: {
                    url: url,
                    type: "POST",
                    dataType: 'json',
                    data: function (searchQuery) {
                        return {
                            searchQuery: searchQuery,
                            payStationId: payStationId
                        };
                    },
                    results: function (data, page) {
                        return { results: data.beneficiaries }; // data.beneficiaries returning json data from Controller
                    }
                }
            });

            $("#BeneficiaryName").change(function () {
                var url = '@Url.Action("PopulateBeneficiaryFields", "PaymentBatches")';
                var beneficiaryId = $("#BeneficiaryName").val();

                $.ajax({
                    type: "POST",
                    url: url,
                    data: { 'beneficiaryId': beneficiaryId },
                    success: function (data, status, jqXHR) {
                        if (data.success) {
                            document.getElementById('BeneficiaryID').value = data.beneficiaryId;
                            document.getElementById('BeneficiaryCode').value = data.beneficiaryCode;
                            document.getElementById('BenName').value = data.beneficiaryName;
                            document.getElementById('BeneficiaryDeptId').value = data.beneficiaryDeptId;
                            document.getElementById('BeneficiaryDept').value = data.beneficiaryDept;
                            document.getElementById('BankID').value = data.bankId;
                            document.getElementById('BankBic').value = data.bankBic;
                            document.getElementById('BankName').value = data.bankName;
                            document.getElementById('BeneficiaryAccountNo').value = data.beneficiaryAccountNo;
                            document.getElementById('Amount').value = "";
                            document.getElementById('PaymentDescription').value = "";
                        } else {
                            alert('This beneficiary does not exist!');
                            document.getElementById('BeneficiaryID').value = "";
                            document.getElementById('BeneficiaryCode').value = "";
                            document.getElementById('BenName').value = "";
                            document.getElementById('BeneficiaryDeptId').value = "";
                            document.getElementById('BeneficiaryDept').value = "";
                            document.getElementById('BankID').value = "";
                            document.getElementById('BankBic').value = "";
                            document.getElementById('BankName').value = "";
                            document.getElementById('BeneficiaryAccountNo').value = "";
                            document.getElementById('Amount').value = "";
                            document.getElementById('PaymentDescription').value = "";
                        }
                    }
                })
            });
        });

        var addPaymentToBatch = function () {
            var data = $("#paymentForm").serialize();
            var url = '@Url.Action("AddPaymentToBatch", "PaymentBatches")';

            if (!$("#paymentForm").valid()) {
                return false;
            }

            $.ajax({
                type: "POST",
                url: url,
                data: data,
                success: function (response) {
                    if (response == "success") {
                        alert("Payment saved successfully!");
                        location.reload(true);
                    }
                    else if (response == "duplicate") {
                        alert("Beneficiary already exist in this payment batch!");
                    }
                    else if (response == "error") {
                        alert("Error during save, contact system support");
                    } else {
                        alert(response);
                    }
                }
            });
        }

    </script>
}
