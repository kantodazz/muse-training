@model IEnumerable<IFMIS.Areas.RecurrentPayment.Models.PaymentBatchVM>
@using IFMIS.Areas.RecurrentPayment.Libraries;

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div id="content">
    <div class="row"></div>
    <section id="widget-grid">
        <div class="row">
            <article class="col-sm-12 col-md-12 col-lg-12">

                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">

                    <header>
                        <span class="widget-icon"> <i class="fa fa-table"></i> </span>
                        <h2>Payment Entry</h2>
                    </header>

                    <div>
                        <div class="widget-body">

                            <div>
                                <a href="@Url.Action("CreatePaymentBatch")" class="btn btn-info btn-flat">
                                    <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>
                                    Add New
                                </a>
                                <hr />
                            </div>

                            @if (Model.Count() > 0)
                            {
                                <div>
                                    <table class="table table-bordered table-condensed table-hover table-responsive table-striped" style="font: 14px Trebuchet MS, Lucida Sans Unicode, Lucida Grande, Lucida Sans, Arial, sans-serif">
                                        <tr>
                                            <th style="text-align: center">
                                                #
                                            </th>
                                            <th style="text-align: center">
                                                @Html.DisplayNameFor(model => model.BatchNo)
                                            </th>
                                            <th style="text-align: center">
                                                @Html.DisplayNameFor(model => model.BatchDesc)
                                            </th>
                                            <th style="text-align: center">
                                                @Html.DisplayNameFor(model => model.PayStationId)
                                            </th>
                                            <th style="text-align: center">
                                                @Html.DisplayNameFor(model => model.PaymentCategory)
                                            </th>
                                            <th style="text-align: center">
                                                @Html.DisplayNameFor(model => model.NumOfTrxs)
                                            </th>
                                            <th style="text-align: center">
                                                @Html.DisplayNameFor(model => model.TotalBatchAmount)
                                            </th>
                                            <th style="text-align: center">
                                                @Html.DisplayNameFor(model => model.OverallStatus)
                                            </th>
                                            <th></th>
                                        </tr>

                                        @{
                                            int i = 0;
                                            int numOfBeneficiaries = 0;
                                            decimal? totalAmount = 0;
                                        }
                                        @foreach (var item in Model)
                                        {
                                            i++;
                                            numOfBeneficiaries += int.Parse(item.NumOfTrxs.ToString());
                                            if (!string.IsNullOrEmpty(item.TotalBatchAmount.ToString()))
                                            {
                                                totalAmount += decimal.Parse(item.TotalBatchAmount.ToString());
                                            }

                                            <tr>
                                                <td>
                                                    @i
                                                </td>
                                                <td>
                                                    <a href="@Url.Action("PaymentBatch","PaymentBatches", new { id = item.PaymentBatchID })">
                                                        @Html.DisplayFor(modelItem => item.BatchNo)
                                                    </a>
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(modelItem => item.BatchDesc)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(modelItem => item.PayStationName)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(modelItem => item.PaymentCategory)
                                                </td>
                                                <td style="text-align: right">
                                                    @string.Format("{0:#,0}", item.NumOfTrxs)
                                                </td>
                                                <td style="text-align: right">
                                                    @string.Format("{0:#,0.00}", item.TotalBatchAmount)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(modelItem => item.OverallStatus)
                                                </td>
                                                <td style="text-align: center">
                                                    <div class="btn-group">
                                                        <button type="button" class="btn btn-info btn-xs dropdown-toggle" data-toggle="dropdown" style="width:40px;border-radius:1px;" aria-haspopup="true" aria-expanded="false">
                                                            <span class="caret"></span>
                                                            <span class="sr-only">Toggle Dropdown</span>
                                                        </button>
                                                        <ul class="dropdown-menu">
                                                            @if (item.OverallStatus.ToUpper() == EnumsList.PaymentStatus.PENDING.ToString())
                                                            {
                                                                <li>
                                                                    <a href="@Url.Action("EditPaymentBatch","PaymentBatches", new { id = item.PaymentBatchID })" class="btn-xs edit">
                                                                        <i class="fa fa-edit"></i>  Edit
                                                                    </a>
                                                                </li>
                                                                <li>
                                                                    <a href="#" onclick="confirmPaymentBatch(@item.PaymentBatchID)" class="btn-xs edit">
                                                                        <i class="fa fa-edit"></i>  Confirm
                                                                    </a>
                                                                </li>
                                                            }
                                                            <li>
                                                                <a href="@Url.Action("PaymentBatch","PaymentBatches", new { id = item.PaymentBatchID })" class="btn-xs edit">
                                                                    <i class="fa fa-edit"></i>  Add More
                                                                </a>
                                                            </li>
                                                            <li>
                                                                <a href="@Url.Action("PaymentBatchDetails","PaymentBatches", new { id = item.PaymentBatchID })" class="btn-xs edit">
                                                                    <i class="fa fa-edit"></i>  Details
                                                                </a>
                                                            </li>
                                                            @if (item.OverallStatus.ToUpper() == EnumsList.PaymentStatus.PENDING.ToString())
                                                            {
                                                                <li>
                                                                    <a href="#" onclick="deletePaymentBatch(@item.PaymentBatchID)" class="btn-xs edit">
                                                                        <i class="fa fa-trash-o"></i>  Cancel
                                                                    </a>
                                                                </li>
                                                            }
                                                        </ul>
                                                    </div>
                                                </td>
                                            </tr>
                                        }

                                        <tr>
                                            <th colspan="5" style="text-align: right">
                                                Total
                                            </th>
                                            <th style="text-align: right">
                                                @string.Format("{0:#,0}", numOfBeneficiaries)
                                            </th>
                                            <th style="text-align: right">
                                                @string.Format("{0:#,0.00}", totalAmount)
                                            </th>
                                            <th colspan="3"></th>
                                        </tr>
                                    </table>
                                </div>
                            }
                            else
                            {
                                <div class="alert alert-info" role="alert">
                                    <span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>
                                    <span class="sr-only">Info:</span>
                                    No Pending Payment Batch Available!
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </article>
        </div>
    </section>
</div>

<!--Start of delete confirmation modal section-->

<div class="modal fade" id="responseModal" tabindex="-1" role="dialog" aria-labelledby="lblmodal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header alert alert-danger" style="font:bold 16px Trebuchet MS, Lucida Sans Unicode, Lucida Grande, Lucida Sans, Arial, sans-serif">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>

                <h4 class="modal-title" id="lblmodal">Confirm Delete</h4>
            </div>
            <div class="modal-body">
                <p class="success-message">Are you sure you want to delete this record ? </p>
            </div>
            <div class="modal-footer">
                <button class="btn btn-success delete-confirm">Ok</button>
                <button class="btn btn-default delete-cancel" data-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>

<!--End of delete confirmation modal section-->

@section Scripts {
    <script>

        var confirmPaymentBatch = function (id) {
            var url = '@Url.Action("ConfirmPaymentBatch", "PaymentBatches")';


            swal({
                title: 'Confirmation',
                text: "Are you sure you want to confirm this batch?",
                buttons: [
                    'No',
                    'Yes'
                ],
            }).then(function (isConfirm) {
                if (isConfirm) {
                    //pageLoading("true");
                    $("#divLoader").show();
                    $.ajax(
                    {
                    type: "POST",
                    url: url,
                    data: { id: id },
                    success: function (response) {
                        //pageLoading("false");
                        $("#divLoader").hide();
                        if (response == "Success") {
                            swal("Batch successfully confirmed!", { icon: "success" })
                                        .then((value) => {
                                            location.reload();
                                        });
                        }
                        else {
                            swal(response, { icon: "warning" });
                        }
                    },
                    error: function (xhr) {
                        //pageLoading("false");
                        $("#divLoader").hide();
                        console.log('errorResp', xhr.responseText)
                        swal(xhr.responseText, { icon: "warning" });
                    },

                });
                } else {
                    swal("Cancelled", "No change was made");
                }
            });
        }
        var deletePaymentBatch = function (id) {
            //$("#responseModal").modal('show');
            var url = '@Url.Action("Delete", "PaymentBatches")';
            swal({
                title: 'Cancelation',
                text: "Are you sure you want to cancel this batch?",
                buttons: [
                    'No',
                    'Yes'
                ],
            }).then(function (isConfirm) {
                if (isConfirm) {
                    //pageLoading("true");
                    $("#divLoader").show();
                    $.ajax(
                        {
                            type: "POST",
                            url: url,
                            data: { id: id },
                            success: function (response) {
                                //pageLoading("false");
                                $("#divLoader").hide();
                                if (response == "Success") {
                                    swal("Batch successfully canceled!", { icon: "success" })
                                        .then((value) => {
                                            location.reload();
                                        });
                                }
                                else {
                                    swal(response, { icon: "warning" });
                                }
                            },
                            error: function (xhr) {
                                //pageLoading("false");
                                $("#divLoader").hide();
                                console.log('errorResp', xhr.responseText)
                                swal(xhr.responseText, { icon: "warning" });
                            },

                        });
                } else {
                    swal("Cancelled", "No change was made");
                }
            });
            
        };

        //function to reset bootstrap modal popups
        $("#responseModal").on("hidden.bs.modal", function () {
            $(".modal-header").removeClass(' ').addClass('alert-danger');
            $('.delete-confirm').css('display', 'inline-block');
            $('.success-message').html('').html('Are you sure you want to delete this record ?');
        });

    </script>
}