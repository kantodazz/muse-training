@model IEnumerable<IFMIS.Areas.RecurrentPayment.Models.PaymentBatchVM>
@using IFMIS.Areas.RecurrentPayment.Libraries;

@{
    ViewBag.Title = "Index";
}

<div id="content">
    <div class="panel panel-default">

        <!-- Default panell contents -->
        <div class="panel-heading">Unapplied Payments</div>
        <div class="panel-body">
            @if (Model.Count() > 0)
        {
                <table class="table table-bordered table-condensed table-hover table-responsive table-striped" style="font: bold 14px Trebuchet MS, Lucida Sans Unicode, Lucida Grande, Lucida Sans, Arial, sans-serif">
                    <tr style="background-color: #395870; color: whitesmoke">
                        <th style="text-align: center">
                            #
                        </th>
                        <th style="text-align: center">
                            @Html.DisplayNameFor(model => model.BatchNo)
                        </th>
                        <th style="text-align: center">
                            @Html.DisplayNameFor(model => model.BatchDesc)
                        </th>
                        <th style="text-align: center">
                            @Html.DisplayNameFor(model => model.PayStationId)
                        </th>
                        <th style="text-align: center">
                            @Html.DisplayNameFor(model => model.NumOfTrxs)
                        </th>
                        <th style="text-align: center">
                            @Html.DisplayNameFor(model => model.TotalBatchAmount)
                        </th>
                        <th style="text-align: center">
                            @Html.DisplayNameFor(model => model.OverallStatus)
                        </th>
                    </tr>

                    @{
                int i = 0;
                int numOfBeneficiaries = 0;
                decimal? totalAmount = 0;
                    }
                    @foreach (var item in Model)
            {
                i++;
                numOfBeneficiaries += int.Parse(item.NumOfTrxs.ToString());
                if (!string.IsNullOrEmpty(item.TotalBatchAmount.ToString()))
                {
                    totalAmount += decimal.Parse(item.TotalBatchAmount.ToString());
                }

                <tr>
                    <td>
                        @i
                    </td>
                    <td>
                        <a href="@Url.Action("PaymentBatch", new { id = item.PaymentBatchID })">
                            @Html.DisplayFor(modelItem => item.BatchNo)
                        </a>
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.BatchDesc)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PayStationName)
                    </td>
                    <td style="text-align: right">
                        @String.Format("{0:#,0}", item.NumOfTrxs)
                    </td>
                    <td style="text-align: right">
                        @String.Format("{0:#,0.00}", item.TotalBatchAmount)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.OverallStatus)
                    </td>
                </tr>
            }
                    <tr>
                        <th colspan="4" style="text-align: right">
                            Total
                        </th>
                        <th style="text-align: right">
                            @String.Format("{0:#,0}", numOfBeneficiaries)
                        </th>
                        <th style="text-align: right">
                            @String.Format("{0:#,0.00}", totalAmount)
                        </th>
                        <th colspan="2"></th>
                    </tr>

                </table>
                    }
                    else
                    {
                            <div class="alert alert-info" role="alert">
                                <span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>
                                <span class="sr-only">Info:</span>
                                No Pending Payment Batch Available!
                            </div>
                    }
        </div>
    </div>
</div>