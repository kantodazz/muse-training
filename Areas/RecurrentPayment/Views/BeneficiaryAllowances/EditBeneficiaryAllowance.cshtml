@model IFMIS.Areas.RecurrentPayment.Models.BeneficiaryAllowanceVM

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .input {
        border: 1px solid lightgray;
        width: 100%;
        height: 35px;
    }

    .textarea {
        border: 1px solid lightgray;
        width: 100%;
    }

    .input[type="text"]:focus {
        border: 1px solid lightblue;
    }
</style>
<div id="divLoader"></div>
<div id="content" style="margin: 5px; padding-top: 5%">

    <section id="widget-grid" class="">
        <div class="row">

            <article class="col-sm-12 col-md-12 col-lg-12">

                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">
                    <header>
                        <span class="widget-icon"> <i class="fa fa-table"></i> </span>

                        <h2 style="color:black;">Edit Beneficiary Allowance</h2>

                    </header>
                    <div>
                        <div class="widget-body" style="padding-top:10px; width:100%;">

                            <table style="width:100%;">
                                <tr>
                                    <td>
                                        @using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = "return SubmitData(this)", id = "AddBeneficiary" }))
                                        {
                                            @Html.AntiForgeryToken()
                                            <div class="form-horizontal">
                                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                                @Html.HiddenFor(model => model.BeneficiaryAllowanceId)

                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.BeneficiaryId, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-5">
                                                        @Html.TextBoxFor(model => model.BeneficiaryId, new { @class = "form-control" })
                                                        @Html.ValidationMessageFor(model => model.BeneficiaryId, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.BeneficiaryName, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-5">
                                                        @Html.TextBoxFor(model => model.BeneficiaryName, new { @class = "form-control", @readonly = true })
                                                        @Html.ValidationMessageFor(model => model.BeneficiaryName, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.BeneficiaryCode, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-5">
                                                        @Html.EditorFor(model => model.BeneficiaryCode, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                                        @Html.ValidationMessageFor(model => model.BeneficiaryCode, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.BeneficiaryCategory, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-5">
                                                        @Html.EditorFor(model => model.BeneficiaryCategory, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                                        @Html.ValidationMessageFor(model => model.BeneficiaryCategory, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.BankName, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-5">
                                                        @Html.EditorFor(model => model.BankName, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                                        @Html.ValidationMessageFor(model => model.BankName, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.BankAccount, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-5">
                                                        @Html.EditorFor(model => model.BankAccount, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                                        @Html.ValidationMessageFor(model => model.BankAccount, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.AllowanceListId, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-5">
                                                        @Html.DropDownListFor(model => model.AllowanceListId, ViewBag.AllowanceList as SelectList, "Select Allowance", new { @class = "form-control" })
                                                        @Html.ValidationMessageFor(model => model.AllowanceListId, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.AllowanceDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-5">
                                                        @Html.TextAreaFor(model => model.AllowanceDescription, new { @class = "form-control", @readonly = true })
                                                        @Html.ValidationMessageFor(model => model.AllowanceDescription, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.AllowanceAmount, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-5">
                                                        @Html.EditorFor(model => model.AllowanceAmount, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                                        @Html.ValidationMessageFor(model => model.AllowanceAmount, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-5">
                                                        @Html.EnumDropDownListFor(model => model.Status, "Select Status", new { @class = "form-control" })
                                                        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                
                                                <div class="form-group">
                                                    <div class="col-md-offset-2 col-md-10">
                                                        <button type="submit" class="btn btn-info" id="submit" style="float: left">
                                                            <span class="glyphicon glyphicon-floppy-save" aria-hidden="true"></span>
                                                            Save
                                                        </button>

                                                        <a href="@Url.Action("BeneficiaryAllowanceList","BeneficiaryAllowances")" class="btn btn-info" style="float: left; margin-left: 5px">
                                                            <span class="glyphicon glyphicon-backward" aria-hidden="true"></span>
                                                            Back
                                                        </a>
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                    </td>
                                    <td colspan="1"></td>
                                </tr>
                            </table>

                        </div>

                    </div>
                </div>
            </article>
        </div>
    </section>
</div>

@section Scripts{
    <script>
        $(document).ready(function () {

            var url = '@Url.Action("GetBeneficiaries", "BeneficiaryAllowances")';

            $("#BeneficiaryId").select2({
                minimumInputLength: 2,  // minimumInputLength for sending ajax request to server
                width: 'resolve',   // to adjust proper width of select2 wrapped elements
                ajax: {
                    url: url,
                    type: "POST",
                    dataType: 'json',
                    data: function (searchQuery) {
                        return {
                            searchQuery: searchQuery
                        };
                    },
                    results: function (data, page) {
                        return { results: data.beneficiaries }; // data.beneficiaries returning json data from Controller
                    }
                }
            });

        });

        function SubmitData(formData) {
            debugger;
            if (!$("#AddBeneficiary").valid()) {
                swal("Please fill required area");
                return false;
            }
            var url = '@Url.Action("EditBeneficiaryAllowance", "BeneficiaryAllowances")';
            $("#divLoader").show();
            var ajaxConfig = {
                type: "post",
                url: url,
                data: new FormData(formData),
                success: function (response) {
                    $("#divLoader").hide();
                    if (response == "Success") {
                        swal("Beneficiary Allowance saved successfully", { icon: "success" })
                            .then((value) => {
                                var url = '@Url.Action("BeneficiaryAllowanceList", "BeneficiaryAllowances")';
                                window.location.replace(url);
                            });
                    }
                    else {
                        //pageLoading("false");
                        swal(response, { icon: "warning" });
                    }
                }
            }

            if ($(formData).attr('enctype') == "multipart/form-data") {
                ajaxConfig["contentType"] = false;
                ajaxConfig["processData"] = false;
            }
            $.ajax(ajaxConfig);
            return false;
        }

        $("#BeneficiaryId").change(function () {
            debugger
            var url = '@Url.Action("PopulateBeneficiaryFields", "BeneficiaryAllowances")';
            var beneficiaryId = $("#BeneficiaryId").val();

            $.ajax({
                type: "POST",
                url: url,
                data: { 'beneficiaryId': beneficiaryId },
                success: function (data, status, jqXHR) {
                    if (data.success) {
                        document.getElementById('BeneficiaryCode').value = data.beneficiaryCode;
                        document.getElementById('BeneficiaryName').value = data.beneficiaryName;
                        document.getElementById('BeneficiaryCategory').value = data.beneficiaryCategory;
                    } else {
                        document.getElementById('BeneficiaryCode').value = "";
                        document.getElementById('BeneficiaryName').value = "";
                        document.getElementById('BeneficiaryCategory').value = "";
                    }
                }
            })
        });

        $("#AllowanceListId").change(function () {
            var url = '@Url.Action("PopulateAllowanceFields", "BeneficiaryAllowances")';
            var allowanceListId = $("#AllowanceListId").val();

            $.ajax({
                type: "POST",
                url: url,
                data: { 'allowanceListId': allowanceListId },
                success: function (data, status, jqXHR) {
                    if (data.success) {
                        document.getElementById('AllowanceDescription').value = data.allowanceDescription;
                        document.getElementById('AllowanceAmount').value = data.allowanceAmount;
                    } else {
                        document.getElementById('AllowanceDescription').value = "";
                        document.getElementById('AllowanceAmount').value = "";
                    }
                }
            })
        });

    </script>
}

