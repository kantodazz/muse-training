@model IEnumerable<IFMIS.Areas.RecurrentPayment.Models.BeneficiaryAllowanceListVM>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div id="divLoader"></div>
<div id="content">
    <div class="row"></div>
    <section id="widget-grid">
        <div class="row">
            <article class="col-sm-12 col-md-12 col-lg-12">

                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">

                    <header>
                        <span class="widget-icon"> <i class="fa fa-table"></i> </span>
                        <h2>Beneficiary Allowances</h2>
                    </header>

                    <div>
                        <div class="widget-body">

                            <table class="table table-bordered table-condensed" id="tblDataList">
                                <thead>
                                    <tr>
                                        <th>#</th>
                                        <th>
                                            @Html.DisplayNameFor(model => model.BeneficiaryId)
                                        </th>
                                        <th>
                                            Employee Code
                                        </th>
                                        <th>
                                            Employee Category
                                        </th>
                                        <th>
                                            Allowance Name
                                        </th>
                                        <th>
                                            Allowance Amount
                                        </th>
                                        <th>
                                            @Html.DisplayNameFor(model => model.ApprovalStatus)
                                        </th>
                                        <th>Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @{
                                        int i = 0;
                                    }
                                    @foreach (var item in Model)
                                    {
                                        i++;
                                        <tr>
                                            <td>@i</td>

                                            <td>
                                                @Html.DisplayFor(modelItem => item.BeneficiaryName)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.BeneficiaryCode)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.BeneficiaryCategory)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.AllowanceName)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.AllowanceAmount)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.ApprovalStatus)
                                            </td>
                                            <td>
                                                <div class="btn-group">
                                                    <button type="button" class="btn btn-info btn-xs dropdown-toggle" data-toggle="dropdown" style="width:40px;border-radius:1px;" aria-haspopup="true" aria-expanded="false">
                                                        <span class="caret"></span>
                                                        <span class="sr-only">Toggle Dropdown</span>
                                                    </button>
                                                    <ul class="dropdown-menu">
                                                        <li>
                                                            <a href="#" onclick="approveBeneficiaryAllowance(@item.BeneficiaryAllowanceId)" class="btn-xs edit">
                                                                <i class="fa fa-edit"></i>  Approve
                                                            </a>
                                                        </li>
                                                        <li>
                                                            <a href="#" onclick="rejectBeneficiaryAllowance(@item.BeneficiaryAllowanceId)" class="btn-xs edit">
                                                                <i class="fa fa-edit"></i>  Reject
                                                            </a>
                                                        </li>
                                                    </ul>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </article>
        </div>
    </section>
</div>

@section Scripts{
    <script>
        $(document).ready(function () {
            var responsiveHelper_tblDataList = undefined;
            var responsiveHelper_datatable_fixed_column = undefined;
            var responsiveHelper_datatable_col_reorder = undefined;
            var responsiveHelper_datatable_tabletools = undefined;

            var breakpointDefinition = {
                tablet: 1024,
                phone: 480
            };
            $('#tblDataList').dataTable({
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-12 hidden-xs'l>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_tblDataList) {
                        responsiveHelper_tblDataList = new ResponsiveDatatablesHelper($('#tblDataList'), breakpointDefinition);
                    }
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_dt_basic.respond();
                }

            }); 
        });

        $(".cbCheckAll").click(function () {
            $(".checkBoxApprove").prop('checked',
                $(this).prop('checked'));
        });

        var approveBeneficiaryAllowance = function (Id) {
            debugger
            var url = '@Url.Action("ApproveBeneficiaryAllowance", "BeneficiaryAllowances")';


            swal({
                title: 'Approval',
                text: "Are you sure you want to approve this beneficiary?",
                buttons: [
                    'No',
                    'Yes'
                ],
            }).then(function (isConfirm) {
                if (isConfirm) {
                    //pageLoading("true");
                    $("#divLoader").show();
                    $.ajax(
                    {
                    type: "POST",
                    url: url,
                            data: { id: Id },
                    success: function (response) {
                        //pageLoading("false");
                        $("#divLoader").hide();
                        if (response == "Success") {
                            swal("Beneficiary successfully approved!", { icon: "success" })
                                        .then((value) => {
                                            location.reload();
                                        });
                        }
                        else {
                            swal(response, { icon: "warning" });
                        }
                    },
                    error: function (xhr) {
                        //pageLoading("false");
                        $("#divLoader").hide();
                        console.log('errorResp', xhr.responseText)
                        swal(xhr.responseText, { icon: "warning" });
                    },

                });
                } else {
                    swal("Cancelled", "No change was made");
                }
            });
        }

        var rejectBeneficiaryAllowance = function (Id) {
            debugger
            var url = '@Url.Action("RejectBenefiaryAllowance", "BeneficiaryAllowances")';


            swal({
                title: 'Rejection',
                text: "Are you sure you want to reject this beneficiary?",
                buttons: [
                    'No',
                    'Yes'
                ],
            }).then(function (isConfirm) {
                if (isConfirm) {
                    //pageLoading("true");
                    $("#divLoader").show();
                    $.ajax(
                    {
                    type: "POST",
                    url: url,
                            data: { id: Id },
                    success: function (response) {
                        //pageLoading("false");
                        $("#divLoader").hide();
                        if (response == "Success") {
                            swal("Beneficiary successfully rejected!", { icon: "success" })
                                        .then((value) => {
                                            location.reload();
                                        });
                        }
                        else {
                            swal(response, { icon: "warning" });
                        }
                    },
                    error: function (xhr) {
                        //pageLoading("false");
                        $("#divLoader").hide();
                        console.log('errorResp', xhr.responseText)
                        swal(xhr.responseText, { icon: "warning" });
                    },

                });
                } else {
                    swal("Cancelled", "No change was made");
                }
            });
        }

    </script>
}


