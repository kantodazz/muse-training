@model IFMIS.Areas.RecurrentPayment.Models.LoanVM

@{
    ViewBag.Title = "View";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .input {
        border: 1px solid lightgray;
        width: 100%;
        height: 35px;
    }

    .textarea {
        border: 1px solid lightgray;
        width: 100%;
    }

    .input[type="text"]:focus {
        border: 1px solid lightblue;
    }
</style>
<div id="divLoader"></div>
<div id="content" style="margin: 5px; padding-top: 5%">

    <section id="widget-grid" class="">
        <div class="row">

            <article class="col-sm-12 col-md-12 col-lg-12">

                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">
                    <header>
                        <span class="widget-icon"> <i class="fa fa-table"></i> </span>

                        <h2 style="color:black;">Edit Deduction form</h2>

                    </header>
                    <div>
                        <div class="widget-body" style="padding-top:10px; width:100%;">

                            <table style="width:100%;">
                                <tr>
                                    <td>
                                        @using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = "return SubmitData(this)", id = "AddDeduction" }))
                                        {
                                            @Html.AntiForgeryToken()
                                        <div class="form-horizontal">
                                            @Html.HiddenFor(model => model.LoanId)

                                            <div class="form-group">
                                                @Html.LabelFor(model => model.BeneficiaryName, htmlAttributes: new { @class = "control-label col-md-2", @style = "padding-right: 5px" })
                                                <div class="col-md-3" style="padding-left: 5px">
                                                    @Html.TextBoxFor(model => model.BeneficiaryName, new { @class = "form-control", @ReadOnly = true })
                                                </div>
                                                @Html.ValidationMessageFor(model => model.BeneficiaryName, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.BeneficiaryCode, htmlAttributes: new { @class = "control-label col-md-2", @style = "padding-right: 5px" })
                                                <div class="col-md-3" style="padding-left: 5px">
                                                    @Html.EditorFor(model => model.BeneficiaryCode, new { htmlAttributes = new { @class = "form-control", @ReadOnly = true } })
                                                </div>
                                                @Html.ValidationMessageFor(model => model.BeneficiaryCode, "", new { @class = "text-danger" })

                                                @Html.LabelFor(model => model.AccountNo, htmlAttributes: new { @class = "control-label col-md-2", @style = "padding-right: 5px" })
                                                <div class="col-md-3" style="padding-left: 5px">
                                                    @Html.EditorFor(model => model.AccountNo, new { htmlAttributes = new { @class = "form-control", @ReadOnly = true } })
                                                </div>
                                                @Html.ValidationMessageFor(model => model.AccountNo, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.BeneficiaryCategory, htmlAttributes: new { @class = "control-label col-md-2", @style = "padding-right: 5px" })
                                                <div class="col-md-3" style="padding-left: 5px">
                                                    @Html.EditorFor(model => model.BeneficiaryCategory, new { htmlAttributes = new { @class = "form-control", @ReadOnly = true } })
                                                </div>
                                                @Html.ValidationMessageFor(model => model.BeneficiaryCategory, "", new { @class = "text-danger" })

                                                @Html.LabelFor(model => model.SalaryAmount, htmlAttributes: new { @class = "control-label col-md-2", @style = "padding-right: 5px" })
                                                <div class="col-md-3" style="padding-left: 5px">
                                                    @Html.EditorFor(model => model.SalaryAmount, new { htmlAttributes = new { @class = "form-control", @ReadOnly = true } })
                                                </div>
                                                @Html.ValidationMessageFor(model => model.SalaryAmount, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.BankID, "Institution Name", htmlAttributes: new { @class = "control-label col-md-2", @style = "padding-right: 5px" })
                                                <div class="col-md-3" style="padding-left: 5px">
                                                    @Html.DropDownListFor(model => model.BankID, Model.Banks, "Select Bank", new { @class = "form-control select2" })
                                                </div>
                                                @Html.ValidationMessageFor(model => model.BankID, "", new { @class = "text-danger" })
                                                @Html.LabelFor(model => model.DedCode, htmlAttributes: new { @class = "control-label col-md-2", @style = "padding-right: 5px" })
                                                <div class="col-md-3" style="padding-left: 5px">
                                                    @Html.DropDownListFor(model => model.DeductionCodeId, ViewBag.DedCodes as SelectList, "Select Ded Codes", new { @class = "form-control select2" })
                                                </div>
                                                @Html.ValidationMessageFor(model => model.DedCode, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.PaymentMode, htmlAttributes: new { @class = "control-label col-md-2", @style = "padding-right: 5px" })
                                                <div class="col-md-3" style="padding-left: 5px">
                                                    @Html.EditorFor(model => model.PaymentMode, new { htmlAttributes = new { @class = "form-control", @ReadOnly = true } })
                                                </div>
                                                @Html.ValidationMessageFor(model => model.PaymentMode, "", new { @class = "text-danger" })

                                                @Html.LabelFor(model => model.DeductionPercent, htmlAttributes: new { @class = "control-label col-md-2", @style = "padding-right: 5px" })
                                                <div class="col-md-3" style="padding-left: 5px">
                                                    @Html.EditorFor(model => model.DeductionPercent, new { htmlAttributes = new { @class = "form-control", @ReadOnly = true } })
                                                </div>
                                                @Html.ValidationMessageFor(model => model.DeductionPercent, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.LoanAmount, htmlAttributes: new { @class = "control-label col-md-2", @style = "padding-right: 5px" })
                                                <div class="col-md-3" style="padding-left: 5px">
                                                    @Html.EditorFor(model => model.LoanAmount, new { htmlAttributes = new { @class = "form-control" } })
                                                </div>
                                                @Html.ValidationMessageFor(model => model.LoanAmount, "", new { @class = "text-danger" })

                                                @Html.LabelFor(model => model.PaybackPeriod, htmlAttributes: new { @class = "control-label col-md-2", @style = "padding-right: 5px" })
                                                <div class="col-md-3" style="padding-left: 5px">
                                                    @Html.EditorFor(model => model.PaybackPeriod, new { htmlAttributes = new { @class = "form-control" } })
                                                </div>
                                                @Html.ValidationMessageFor(model => model.PaybackPeriod, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.BalanceAmount, htmlAttributes: new { @class = "control-label col-md-2", @style = "padding-right: 5px" })
                                                <div class="col-md-3" style="padding-left: 5px">
                                                    @Html.EditorFor(model => model.BalanceAmount, new { htmlAttributes = new { @class = "form-control" } })
                                                </div>
                                                @Html.ValidationMessageFor(model => model.BalanceAmount, "", new { @class = "text-danger" })

                                                @Html.LabelFor(model => model.MonthlyDeductionAmount, htmlAttributes: new { @class = "control-label col-md-2", @style = "padding-right: 5px" })
                                                <div class="col-md-3" style="padding-left: 5px">
                                                    @Html.EditorFor(model => model.MonthlyDeductionAmount, new { htmlAttributes = new { @class = "form-control" } })
                                                </div>
                                                @Html.ValidationMessageFor(model => model.MonthlyDeductionAmount, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.RegistrationNumber, htmlAttributes: new { @class = "control-label col-md-2", @style = "padding-right: 5px" })
                                                <div class="col-md-3" style="padding-left: 5px">
                                                    @Html.EditorFor(model => model.RegistrationNumber, new { htmlAttributes = new { @class = "form-control" } })
                                                </div>
                                                @Html.ValidationMessageFor(model => model.RegistrationNumber, "", new { @class = "text-danger" })

                                                @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2", @style = "padding-right: 5px" })
                                                <div class="col-md-3" style="padding-left: 5px">
                                                    @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })
                                                </div>
                                                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.LoanStatus, htmlAttributes: new { @class = "control-label col-md-2", @style = "padding-right: 5px" })
                                                <div class="col-md-3" style="padding-left: 5px">
                                                    @Html.EnumDropDownListFor(model => model.LoanStatus, "--Select--", new { @class = "form-control select2" })
                                                </div>
                                                @Html.ValidationMessageFor(model => model.LoanStatus, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="form-group">
                                                <div class="col-md-offset-2 col-md-10">
                                                    <button type="submit" class="btn btn-info" id="submit" style="float: left">
                                                        <span class="glyphicon glyphicon-floppy-save" aria-hidden="true"></span>
                                                        Save
                                                    </button>

                                                    <a href="@Url.Action("DeductionList")" class="btn btn-info" style="float: left; margin-left: 5px">
                                                        <span class="glyphicon glyphicon-backward" aria-hidden="true"></span>
                                                        Back
                                                    </a>
                                                </div>
                                            </div>
                                            
                                        </div>
                                        }
                                    </td>
                                    <td colspan="1"></td>
                                </tr>
                            </table>

                        </div>

                    </div>
                </div>
            </article>
        </div>
    </section>
</div>

@section Scripts{
    <script>

        $("#StartDate")
            .wrap('<div class="input-group">')
            .datepicker({
                dateFormat: "dd/M/yy",
                changeMonth: true,
                changeYear: true,
                yearRange: "-60:+0",
                showOn: "both",
                buttonImage: "/Media/Images/calendar.gif",
                maxDate: "+0D"
            })
            .next("button").button({
                icons: { primary: "ui-icon-calendar" },
                label: "Select a date",
                text: false
            })
            .addClass("btn btn-default")
            .wrap('<span class="input-group-btn">')
            .find('.ui-button-text')
            .css({
                'visibility': 'hidden',
                'display': 'inline'
            });

        $("#BankID").change(function () {

            var id = $(this).val();

            var url = "GetDeductionCodesPerInstitution/" + id;

            $.ajax({
                type: "POST",
                url: url,
                contentType: "html",
                success: function (response) {
                    $("#DeductionCodeId").empty();
                    $("#DeductionCodeId").append(response);
                }
            })
        });

        $("#DeductionCodeId").change(function () {
            var url = '@Url.Action("PopulateDeductionCodeFields", "Deductions")';
            var deductionCodeId = $("#DeductionCodeId").val();

            $.ajax({
                type: "POST",
                url: url,
                data: { 'deductionCodeId': deductionCodeId },
                success: function (data, status, jqXHR) {
                    if (data.success) {
                        document.getElementById('PaymentMode').value = data.paymentMode;
                        document.getElementById('PercentageDeduction').value = data.percentageDeduction;
                    } else {

                        alert('This deduction code does not exist!');
                        document.getElementById('PaymentMode').value = "";
                        document.getElementById('PercentageDeduction').value = "";
                    }
                }
            })
        });

        function SubmitData(formData) {
            debugger;
            if (!$("#AddDeduction").valid()) {
                swal("Please fill required area");
                return false;
            }
            var url = '@Url.Action("EditDeduction", "Deductions")';
            $("#divLoader").show();
            var ajaxConfig = {
                type: "post",
                url: url,
                data: new FormData(formData),
                success: function (response) {
                    $("#divLoader").hide();
                    if (response == "success") {
                        swal("Deduction saved successfully", { icon: "success" })
                        .then((value) => {
                            var url = '@Url.Action("DeductionList", "Deductions")';
                            window.location.replace(url);
                        });
                        //window.location.href = 'Url.Action("DeductionList", "Deductions")';
                    }
                    else if (response == "duplicate") {
                        swal("Deduction Already Exist!", { icon: "warning" });
                    }
                    else if (response == "error") {
                        swal("Error during save, contact system support!", { icon: "warning" });
                    } else {
                        swal(response, { icon: "warning" });
                    }
                }
            }

            if ($(formData).attr('enctype') == "multipart/form-data") {
                ajaxConfig["contentType"] = false;
                ajaxConfig["processData"] = false;
            }
            $.ajax(ajaxConfig);
            return false;
        }

        

    </script>
}
