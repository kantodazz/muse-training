@model IFMIS.Areas.RecurrentPayment.Models.PrefundingVM
@{
    ViewBag.Title = "Pre-funding Entry";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div id="divLoader"></div>
<div id="content">
    <div class="row">
        @*<div class="col-xs-12 col-sm-9 col-md-9 col-lg-9">
                    <h1 class="page-title txt-color-blueDark">
                        <!-- PAGE HEADER -->
                        <!--
                        <i class="fa-fw fa fa-pencil-square-o"></i>
                        Payments
                        <span>
                            >
                            Bills
                        </span>
                            -->
                    </h1>
            </div>*@
        <div class="col-xs-12 col-sm-3 col-md-3 col-lg-3">
            <!-- Button trigger modal -->
            <!--<a data-toggle="modal" href="#myModal" class="btn btn-success btn-lg pull-right header-btn hidden-mobile"><i class="fa fa-circle-arrow-up fa-lg"></i> Launch form modal</a>-->
        </div>
    </div>

    <!--
    <div class="alert alert-block alert-success">
        <a class="close" data-dismiss="alert" href="#">×</a>
        <h4 class="alert-heading"><i class="fa fa-check-square-o"></i> Check validation!</h4>
        <p>
            You may also check the form validation by clicking on the form action button. Please try and see the results below!
        </p>
    </div>
        -->
    <!-- widget grid -->
    <section id="widget-grid" class="">
        <!-- START ROW -->
        <div class="row">
            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">
                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">
                    <!-- widget options:
                        usage: <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false">
                        data-widget-colorbutton="false"
                        data-widget-editbutton="false"
                        data-widget-togglebutton="false"
                        data-widget-deletebutton="false"
                        data-widget-fullscreenbutton="false"
                        data-widget-custombutton="false"
                        data-widget-collapsed="true"
                        data-widget-sortable="false"
                    -->
                    <header>
                        <span class="widget-icon"> <i class="fa fa-table"></i> </span>
                        <h2> @ViewBag.Title </h2>
                    </header>
                    <!-- widget div-->
                    <div>
                        <!-- widget edit box -->
                        <div class="jarviswidget-editbox">
                            <!-- This area used as dropdown edit box -->
                        </div>
                        <!-- end widget edit box -->
                        <!-- widget content -->
                        <div class="widget-body">
                            @using (Html.BeginForm())
                            {
                                @Html.AntiForgeryToken()
                                @Html.HiddenFor(model => model.SelectedBatches)
                                @Html.HiddenFor(model => model.BatchFundedAmounts)
                            <div class="form-horizontal">
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class="form-group">
                                    @Html.LabelFor(model => model.PayStationID, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-6">
                                        @Html.DropDownListFor(model => model.PayStationID, Model.PayStations, "Select Pay Station", new { @class = "form-control select2" })
                                        @Html.ValidationMessageFor(model => model.PayStationID, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.PaymentCategory, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-6">
                                        @Html.DropDownList("PaymentCategory", new List<SelectListItem>()
                                          {
                                              new SelectListItem(){ Text= "PAYMENT", Value = "PAYMENT"},
                                              new SelectListItem(){ Text= "UNAPPLIED", Value = "UNAPPLIED"}
                                          }, "Select Payment Category", new { @class = "form-control select2" })
                                        @Html.ValidationMessageFor(model => model.PaymentCategory, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.PrefundingType, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-6">
                                        @Html.DropDownList("PrefundingType", new List<SelectListItem>()
                                                                 {

                                                                     new SelectListItem(){ Text= "Prefunded through TISS", Value = "TISS"},
                                                                     new SelectListItem(){ Text= "Prefund by EFT", Value = "EFT"},
                                                                     new SelectListItem(){ Text= "Prefund by Letter", Value = "LETTER"}
                                                                 }, "Select Prefunding Type", new { @class = "form-control col-md-5 select2" })
                                        @Html.ValidationMessageFor(model => model.PrefundingType, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.AccountIdFrom, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-6">
                                        <select class="form-control select2 col-md-4" data-val="true" data-val-required="Prefunding Account Source field is required." id="AccountIdFrom" name="AccountIdFrom">
                                            <option value="">Select Prefunding Source Account</option>
                                        </select>
                                        @Html.ValidationMessageFor(model => model.AccountIdFrom, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.AccountIdTo, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-6">
                                        <select class="form-control select2 col-md-4" data-val="true" data-val-required="Prefunding account destination field is required." id="AccountIdTo" name="AccountIdTo">
                                            <option value="">Select Prefunding Destination Account</option>
                                        </select>
                                        @Html.ValidationMessageFor(model => model.AccountIdTo, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.PrefundingRef, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-6">                                       
                                        <input class="form-control select2" type="text" id="PrefundingRef" name="PrefundingRef" />
                                        @Html.ValidationMessageFor(model => model.PrefundingRef, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-md-2">Prefunding Amount</label>
                                    <div class="col-md-5">                                      
                                        <input class="form-control" type="text" id="prefundingAmount" name="prefundingAmount" readonly="readonly" disabled="disabled" value="0.00" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-offset-5 col-md-5">
                                        <input id="prefundingBtn" type="submit" value="Submit Prefunding" class="btn btn-info" />
                                    </div>
                                </div>
                            </div>
                            <div id="tblPayStationBatches">
                                @Html.ValidationMessageFor(model => model.SelectedBatches, "", new { @class = "text-danger" })
                                <div class="alert alert-success" role="alert">
                                    <span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>
                                    <span class="sr-only">Success:</span>
                                    No outstanding Prefunding Transactions found!
                                </div>
                            </div>
                            }
                            <div>
                                <a href="@Url.Action("PaymentPrefunding")" class="btn btn-default">
                                    <i class="fa fa-arrow-left"></i>
                                    Back
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            </article>
        </div>
    </section>
</div>

@section Scripts{
    <script>

        $(document).ready(function () {

            function updateDataView() {
                $("#prefundingAmount").val("0.00");
                if ($("#PayStationID").val() != "" && $("#PaymentCategory").val() != "") {

                    var payStationId = $("#PayStationID").val();
                    var paymentCategory = $("#PaymentCategory").val();
                    var url = "GetPayStationBatches";

                    $.ajax({
                        type: "GET",
                        url: url,
                        data: { payStationId: payStationId, paymentCategory: paymentCategory },
                        contentType: "html",
                        success: function (response) {
                            $("#tblPayStationBatches").html(response);
                        }
                    });

                    /** Update Account From ***/
                    url = "GetPaystationAccounts";

                    $.ajax({
                        type: "GET",
                        url: url,
                        data: { payStationId: payStationId, accountType: "Prefunding Source", paymentCategory: paymentCategory },
                        contentType: "html",
                        success: function (response) {
                            $("#AccountIdFrom").empty();
                            $("#AccountIdFrom").append(response);
                        }
                    });

                    /** Update Account To ***/

                    url = "GetPaystationAccounts";

                    $.ajax({
                        type: "GET",
                        url: url,
                        data: { payStationId: payStationId, accountType: "Prefunding Destination", paymentCategory: paymentCategory },
                        contentType: "html",
                        success: function (response) {
                            $("#AccountIdTo").empty();
                            $("#AccountIdTo").append(response);
                        }
                    });
                }
            }

            $("#PayStationID").change(function () {
                updateDataView();
            });

            $("#PaymentCategory").change(function () {
                updateDataView();
            });
        });

        function updateTotals() {
            var grandTotal = 0;
            var idList = "";
            var BatchFundedAmounts = "";
            var amount;
            $.each($("input[name='checkBox']:checked").closest("tr"),

                function () {

                    amount = parseFloat($(this).find(".totalAmount").text().split(',').join(''));

                    grandTotal += amount;
                    //Fetch all the selected IDs
                    if (idList != "") {
                        idList = idList + ",";
                        BatchFundedAmounts = BatchFundedAmounts + ",";
                    }

                    idList = idList + $(this).find(".checkBoxRowID").val();
                    //BatchFundedAmounts = BatchFundedAmounts + $(this).find(".totalAmount").text();
                    BatchFundedAmounts = BatchFundedAmounts + amount;
                });

            $("#prefundingAmount").val(grandTotal);
            $("#SelectedBatches").val(idList);
            $("#BatchFundedAmounts").val(BatchFundedAmounts);
        }
    </script>
}
