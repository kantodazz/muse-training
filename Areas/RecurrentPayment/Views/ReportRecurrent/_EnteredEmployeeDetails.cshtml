@model IEnumerable<IFMIS.Areas.RecurrentPayment.Models.PaymentDetailReportVM>

<style type="text/css">
    * {
        box-sizing: border-box;
    }

    body {
        font-family: 'Gill Sans','lucida grande', helvetica, arial, sans-serif;
    }

    table {
        width: 100%;
        border-collapse: collapse;
        border-spacing: 0;
        margin: 0px;
    }

    td, th {
        border: 1px solid;
        padding: 8px;
    }

    .alinearDerecha {
        text-align: right;
    }

    .negrita {
        font-weight: bold;
    }

    thead {
        display: table-row-group;
    }

    tr {
        page-break-inside: avoid;
    }
</style>

@{
    string imgSrc = "";

    if (Model.Select(a => a.GroupLogo != null).FirstOrDefault())
    {
        imgSrc = "/Media/Images/" + Model.Select(a => a.GroupLogo).FirstOrDefault();
    }
}


<div class="row">
    <div class="col-md-8" style="text-align: center">

        <img src="@Server.MapPath(imgSrc)" width="150" height="150" class="img-responsive" />
        <h2>
            @Model.Select(a => a.GroupName).FirstOrDefault()
        </h2>
        <h3>ENTERED EMPLOYEE PAYMENT DETAILS -@ViewBag.Date</h3>
        <h3>
            Batch No: @ViewBag.BatchNo
        </h3>
        <h3>
            Batch Name: @ViewBag.BatchName
        </h3>
    </div>
</div>

<div id="content">
    <div class="panel panel-default">
        <!-- Default panell contents -->
        <div class="panel-body">

            <table class="table table-bordered table-condensed table-hover table-responsive table-striped">
                <tr>
                    <th>#</th>
                    <th>
                        @Html.DisplayNameFor(model => model.BeneficiaryCode)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.BeneficiaryName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.BenDepartment)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.BeneficiaryAccountNo)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Amount)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.ApprovedAt)
                    </th>
                </tr>

                @{
                    int i = 0;
                    decimal? totalAmount = 0;
                }
                @foreach (var item in Model)
                {
                    i++;
                    totalAmount += item.Amount;

                    <tr>
                        <td>
                            @i
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.BeneficiaryCode)
                        </td>

                        <td>
                            @Html.DisplayFor(modelItem => item.BeneficiaryName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.BenDepartment)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.BeneficiaryAccountNo)
                        </td>
                        <td style="text-align: right">
                            @string.Format("{0:#,0.00}", item.Amount)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ApprovedAt)
                        </td>
                    </tr>
                }
                <tr colospan="5">
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td>Total Amount</td>
                    <td style="text-align: right"><b>@string.Format("{0:#,0.00}", totalAmount)</b></td>
                    <td></td>
                </tr>

            </table>
        </div>
    </div>
</div>
