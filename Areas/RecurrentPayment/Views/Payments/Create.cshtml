@model IFMIS.Areas.RecurrentPayment.Models.PaymentVM

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Payment</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.PayStationID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.PayStationID, Model.PayStations, "Select Pay Station", new { @class = "form-control" } )
                @Html.ValidationMessageFor(model => model.PayStationID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BeneficiaryID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.BeneficiaryID, new SelectList(""), "Select Beneficiary", new { @class = "form-control" } )
                @Html.ValidationMessageFor(model => model.BeneficiaryID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BeneficiaryCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BeneficiaryCode, new { htmlAttributes = new { @class = "form-control", @readonly=true } })
                @Html.ValidationMessageFor(model => model.BeneficiaryCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BeneficiaryName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BeneficiaryName, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                @Html.ValidationMessageFor(model => model.BeneficiaryName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.HiddenFor(model => model.BankID)
            @Html.LabelFor(model => model.BankBic, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BankBic, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                @Html.ValidationMessageFor(model => model.BankBic, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BankName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BankName, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                @Html.ValidationMessageFor(model => model.BankName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BeneficiaryAccountNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BeneficiaryAccountNo, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                @Html.ValidationMessageFor(model => model.BeneficiaryAccountNo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PaymentDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PaymentDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PaymentDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts{
    <script>

        $(document).ready(function () {

            $("#PayStationID").change(function () {

                var Id = $(this).val();

                var url = "GetBeneficiariesPerPayStation/" + Id;

                $.ajax({
                    type: "POST",
                    url: url,
                    contentType: "html",
                    success: function (response) {
                        $("#BeneficiaryID").empty();
                        $("#BeneficiaryID").append(response);
                    }
                })
            });

            $("#BeneficiaryID").change(function () {

                var Id = $(this).val();

                var url = "PopulateBeneficiaryFields/" + Id;

                $.ajax({
                    type: "POST",
                    url: url,
                    contentType: "html",
                    success: function (data, status, jqXHR) {
                        if (data.success) {
                            document.getElementById('BeneficiaryCode').value = data.BeneficiaryCode;
                            document.getElementById('BeneficiaryName').value = data.BeneficiaryName;
                            document.getElementById('BankID').value = data.BankID;
                            document.getElementById('BankBic').value = data.BankBic;
                            document.getElementById('BankName').value = data.BankName;                           
                            document.getElementById('BeneficiaryAccountNo').value = data.BeneficiaryAccountNo;
                        } else {                            
                            document.getElementById('BeneficiaryCode').value = "";
                            document.getElementById('BeneficiaryName').value = "";
                            document.getElementById('BankID').value = "";
                            document.getElementById('BankBic').value = "";
                            document.getElementById('BankName').value = "";
                            document.getElementById('BeneficiaryAccountNo').value = "";
                        }
                    }
                })
            });

        })

    </script>
}
