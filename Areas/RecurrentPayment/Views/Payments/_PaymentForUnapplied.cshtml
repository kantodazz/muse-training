@model IEnumerable<IFMIS.Areas.RecurrentPayment.Models.Payment>

@{
    string imgSrc = "";

    if (Model.Select(a => a.GroupLogo != null).FirstOrDefault())
    {
        imgSrc = "/Media/Images/" + Model.Select(a => a.GroupLogo).FirstOrDefault();
    }
}

<style type="text/css">
    * {
        box-sizing: border-box;
    }

    body {
        font-family: 'Gill Sans','lucida grande', helvetica, arial, sans-serif;
    }

    table {
        width: 100%;
        border-collapse: collapse;
        border-spacing: 0;
        margin: 0px;
    }

    td, th {
        border: 1px solid;
        padding: 8px;
    }

    .alinearDerecha {
        text-align: right;
    }

    .negrita {
        font-weight: bold;
    }

    thead {
        display: table-row-group;
    }

    tr {
        page-break-inside: avoid;
    }
</style>


<div class="row">
    <div class="col-md-8" style="text-align: center">

        <img src="@Server.MapPath(imgSrc)" width="150" height="150" class="img-responsive" />
        <h2>
            @Model.Select(a => a.GroupName).FirstOrDefault()
        </h2>
        <h3>PENDING UNAPPLIED LIST</h3>
    </div>
</div>

<div id="content">
    <div class="panel panel-default">
        <!-- Default panell contents -->
        <div class="panel-body">

            @if (Model.Count() > 0)
            {
                <table class="table table-bordered table-condensed table-hover table-responsive table-striped">
                    <tr>
                        <th>#</th>

                        <th>
                            @Html.DisplayNameFor(model => model.BeneficiaryCode)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.BeneficiaryName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.BeneficiaryAccountNo)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.BankBic)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.BankName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Amount)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.UnappliedDescription)
                        </th>
                        <th>
                            Unapplied Date
                        </th>
                    </tr>

                    @{
                        int i = 0;
                    }
                    @foreach (var item in Model)
                {
                    i++;

                        <tr>
                            <td>
                                @i
                            </td>

                            <td>
                                @Html.DisplayFor(modelItem => item.BeneficiaryCode)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.BeneficiaryName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.BeneficiaryAccountNo)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.BankBic)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.BankName)
                            </td>
                            <td align="right">
                                @Html.DisplayFor(modelItem => item.Amount)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.UnappliedDescription)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.UnappliedAt)
                                @*@{ DateTime unapplied = (DateTime)item.UnappliedAt;

                                    }
                                    @unapplied.ToString("ddMMMyyyy HH:mm")*@
                            </td>
                        </tr>
                    }
                </table>
                        }
                        else
                        {
                            <div class="alert alert-info" role="alert">
                                <span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>
                                <span class="sr-only">Info:</span>
                                No Pending Unapplied Payments Available!
                            </div>
                        }
        </div>
    </div>
</div>