@model IFMIS.Areas.ALS.Models.CreateALS_VendorVM

<!-- MAIN CONTENT -->
<div id="content" style="margin: 5px; padding-top: 30px">
    <div class="row">
        <div class="col-xs-12 col-sm-3 col-md-3 col-lg-3">
        </div>
    </div>
    <section id="widget-grid" class="">
        <div class="row">
            <article class="col-sm-12 col-md-12 col-lg-12">
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">
                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2> Create Vendor </h2>
                    </header>
                    <div>
                        <div class="jarviswidget-editbox">
                        </div>
                        <div class="widget-body">
                            <form method="post" class="form-horizontal" enctype="multipart/form-data">
                                @Html.AntiForgeryToken()
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class="form-group">
                                    @Html.LabelFor(model => model.VendorID,"Search Vendor", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.VendorID, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.VendorID, "", new { @class = "text-danger" })
                                    </div>
                                    @Html.LabelFor(model => model.Vote, "Beneficiary Vote",htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.Vote, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Vote, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                        @Html.LabelFor(model => model.SalaryScale, "Salary Scale", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-3">
                                            @Html.EditorFor(model => model.SalaryScale, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.SalaryScale, "", new { @class = "text-danger" })
                                        </div>
                                    @Html.LabelFor(model => model.BenAccountNum,"Beneficiary Account No", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.BenAccountNum, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.BenAccountNum, "", new { @class = "text-danger" })
                                    </div>
                                   
                                </div>
                                <div class="form-group">
                                        @Html.LabelFor(model => model.GrossSalary, "Gross Salary", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-3">
                                            @Html.EditorFor(model => model.GrossSalary, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.GrossSalary, "", new { @class = "text-danger" })
                                    </div>
                                    @Html.LabelFor(model => model.BenAccountName, "Beneficiary Account Name", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.BenAccountName, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.BenAccountName, "", new { @class = "text-danger" })
                                    </div>
                                
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.NetSalary,"Net Salary", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.NetSalary, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.NetSalary, "", new { @class = "text-danger" })
                                    </div>
                                    @Html.LabelFor(model => model.BenBankName, "Beneficiary Bank Name", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-3">
                                        @Html.DropDownListFor(model => model.BenBankName, ViewBag.Banks as SelectList, "--Select--", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.BenBankName, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.RequireControlNum, "Require Control Number?", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-3">
                                        <select class="form-control" name="RequireControlNum" id="RequireControlNum">
                                            <option selected="selected" value="">---Select---</option>
                                            <option value="true"> Yes</option>
                                            <option value="false"> No</option>
                                        </select>
                                        @Html.ValidationMessageFor(model => model.RequireControlNum, "", new { @class = "text-danger" })
                                    </div>
                                    @Html.LabelFor(model => model.InstitutionCode,"Allocation Vote", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.InstitutionCode, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.InstitutionCode, "", new { @class = "text-danger" })
                                    </div>
                                    </div>
                                    <div class="form-group">
                                        <div id="divControlNumber">
                                            @Html.LabelFor(model => model.ControlNumber, "Control Number", htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-3">
                                                @Html.EditorFor(model => model.ControlNumber, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.ControlNumber, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-6">
                                        <a class="btn btn-info" style="margin-right:5px" onclick="window.history.back()">
                                            <i class="glyphicon glyphicon-arrow-left"></i>Back
                                        </a>
                                        <button type="submit" class="btn btn-info" id="btnSave">
                                            <span class="glyphicon glyphicon-floppy-save" aria-hidden="true"></span>Save
                                            <img src="~/Content/img/loading.gif" id="saveLoader" style="display: none" />
                                        </button>
                                    </div>
                                </div>
                            </form>
                        </div>
                        <!-- end widget content -->
                    </div>
                    <!-- end widget div -->

                </div>
                <!-- end widget -->

            </article>
            <!-- END COL -->

        </div>

        <!-- END ROW -->

    </section>
    <!-- end widget grid -->

</div>
<!-- END MAIN CONTENT -->
<style type="text/css">
    .required:after {
        content: "*";
        font-weight: bold;
        color: red;
    }
</style>

@section Scripts{
    <script>
        $(function () {
            var url = '@Url.Action("SearchVendor", "ALS_Vendor")';

            $("#VendorID").select2({
                minimumInputLength: 2,  // minimumInputLength for sending ajax request to server
                width: 'resolve',   // to adjust proper width of select2 wrapped elements
                ajax: {
                    url: url, // Controller - Select2Demo and Action -AccessRemoteData
                    type: "GET",
                    dataType: 'json',
                    data: function (term) {
                        return {
                            term: term
                        };
                    },
                    results: function (data, page) {
                        return { results: data.vendorList }; // data.CountryList returning json data from Controlle
                    }
                }
            });
        });

        $("#VendorID").change(function () {
            var id = $(this).val();

            $.ajax({
                type: "get",
                url: '@Url.Action("GetVendorDetails", "ALS_Vendor")',
                data: { id: id },
                success: function (response) {
                    $("#CheckNo").val(response.CheckNo);
                    $("#VendorName").val(response.VendorName);
                    $("#Vote").val(response.Vote);
                    $("#NetSalary").val(response.NetSalary);
                    $("#SalaryScale").val(response.SalaryScale);
                    $("#GrossSalary").val(response.GrossSalary);
                    $("#BenAccountNum").val(response.BankAccountNo);
                    $("#BenBankName").val(response.BankName);
                    $("#BenAccountName").val(response.VendorName);

                    $("#NetSalary").autoNumeric({ aNeg: "-" }).trigger("change");
                    $("#GrossSalary").autoNumeric({ aNeg: "-" }).trigger("change");
                },

                error: function (response) {
                    swal(response);
                    return false;
                }

            });

        });

        $("#RequireControlNum").on("change", function () {
            if (this.value =="true") {
                $("#divControlNumber").show();
            }
            else {
                $("#divControlNumber").hide();
            }
        })

        $(function () {
            var url = '@Url.Action("SearchInstitution", "ALS_Vendor")';

            $("#InstitutionCode").select2({
                minimumInputLength: 2,  // minimumInputLength for sending ajax request to server
                width: 'resolve',   // to adjust proper width of select2 wrapped elements
                ajax: {
                    url: url, // Controller - Select2Demo and Action -AccessRemoteData
                    type: "GET",
                    dataType: 'json',
                    data: function (term) {
                        return {
                            term: term
                        };
                    },
                    results: function (data, page) {
                        return { results: data.instList }; // data.CountryList returning json data from Controlle
                    }
                }
            });
        });
        $("#InstitutionCode").change(function () {
            var id = $(this).val();

            $.ajax({
                type: "get",
                url: '@Url.Action("GetInstitutionDetails", "ALS_Vendor")',
                data: { id: id },
                success: function (response) {
                    $("#InstitutionCode").val(response.InstitutionCode);
                    //$("#InstitutionName").val(response.InstitutionName);

                },

                error: function (response) {
                    swal(response);
                    return false;
                }

            });

        });
    </script>
}