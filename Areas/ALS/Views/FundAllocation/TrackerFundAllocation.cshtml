
@model IFMIS.Areas.ALS.Models.AllocationTrackerVm
@{
    ViewBag.Title = "Allocation Tracker";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var i = 0;
}

@*<style>
    .required::after {
        content: "*";
        font-weight: bold;
        font-size: 16px;
        color: red;
    }

    .search-btn {
        background: #538AC5;
        border: 0;
        color: white;
        padding: 8px;
        border-radius: 0;
    }

    .submit-btn {
        background-color: white;
        color: black;
        border: 1px solid #538AC5;
        border-radius: 12px;
        padding: 3px;
        padding-right: 10px;
    }

    .searchContainer {
        display: inline-flex;
        flex: 1 1 300px;
        position: relative;
        border: 1px solid #ccc;
        border-radius: 5px;
        overflow: hidden;
        padding-left: 10px;
    }

    .searchIcon {
        padding: 0.5rem;
    }

    .searchBox {
        border: 0;
        /*padding: 0.5rem 0.5rem 0.5rem 0;*/
        padding: 8px;
        flex: 1;
    }

    .name-input-container {
        display: inline-flex;
        flex: 1 1 300px;
        position: relative;
        overflow: hidden;
    }

    .searchButton {
        background: #538AC5;
        border: 0;
        color: white;
        /*padding: 0.5rem;*/
        padding: 8px;
        border-radius: 0;
    }

    input[type=text] {
        padding: 8px;
        border: 1px solid #ccc;
        border-radius: 4px;
        resize: vertical;
    }

    select {
        padding: 8px;
        border: 1px solid #ccc;
        resize: vertical;
        width: 230px;
    }

    input[type=search] {
        padding: 4px;
        border: hidden;
        border-radius: 4px;
    }

    .action-btn {
        width: 100px;
        border-radius: 10px;
    }

    .info-box {
        padding: 10px;
        background-color: #ECF3F8;
        text-align: center;
        border: 1px solid #ccc;
        border-radius: 5px;
    }

    .info-box {
        padding: 10px;
        background-color: #ECF3F8;
        text-align: center;
        border: 1px solid #ccc;
        border-radius: 5px;
    }

    input {
        padding: 8px;
        border: 1px solid #ccc;
    }


    .alert-secondary {
        background-color: lightgrey;
        color: black;
    }
</style>*@

<!--Main Content start Here-->
<div id="content">
    <section id="widget-grid" class="">
        <div class="row">
            <article class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                <div class="jarviswidget jarviswidget-color-white" id="wid-id-0" data-widget-editbutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">
                    <header>
                        <span class="widget-icon"><i class="fa fa-table"></i></span>
                        <h2>@ViewBag.Title</h2>
                    </header>
                    <!--Start of Widget Div here-->
                    <div>
                        
                        <div class="widget-body">
                            @*@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "formAddRequest" }))
                                {*@
                            <div class="panel-body">
                                <form name="trackForm" id="trackForm" class="form-horizontal">
                                    @Html.AntiForgeryToken()
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                    <div class="form-group">
                                        <div class="col-md-3">
                                            @Html.LabelFor(model => model.OverallStatus, htmlAttributes: new { @class = "control-label required" })
                                            @Html.DropDownListFor(model => model.OverallStatus, Model.OverallStatue, "---Select Status---", new { @class = "form-control select2", @required = "required" })
                                            @Html.ValidationMessageFor(model => model.OverallStatus, "", new { @class = "text-danger" })
                                        </div>

                                        <div class="col-md-2">
                                            @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label" })
                                            @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                            @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                                        </div>

                                        <div class="col-md-2">
                                            @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label" })
                                            @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                            @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                                        </div>

                                        <div class="col-md-4">
                                            @Html.LabelFor(model => model.SearchKeyword, htmlAttributes: new { @class = "control-label" })
                                            <div class="input-group">
                                                <input type="text" class="form-control" name="SearchKeyword" placeholder="Search for...">
                                                <span class="input-group-btn">
                                                    <button class="btn btn-default" type="button" onclick="trackProforma()">Search</button>
                                                </span>
                                            </div>
                                            @Html.ValidationMessageFor(model => model.SearchKeyword, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </form>

                            </div>
                            <hr />
                            <div id="searchResults" style="margin-top: 20px; display: none"></div>

                        </div>
                        <!--End of Widget content-->
                        <!--Modal start here-->
                        <!--Modal  end here-->
                    </div>
                    <!--Widget Div end here-->
                    <br />
                </div>
            </article>
        </div>
    </section>
</div>
<!--End Main Content here -->
@section Scripts{
    <script>

        $(function () {

            $("#StartDate")
                .wrap('<div class="input-group">')
                .datepicker({
                    dateFormat: "yy-mm-dd",
                    changeMonth: true,
                    changeYear: true,
                    showOn: "both",
                    buttonImage: "../../Media/Images/calendar.gif",
                    maxDate: "+0D"
                })
                .next("button").button({
                    icons: { primary: "ui-icon-calendar" },
                    //label: "Select a date",
                    text: false
                })
                .addClass("btn btn-default")
                .wrap('<span class="input-group-btn">')
                .find('.ui-button-text')
                .css({
                    'visibility': 'hidden',
                    'display': 'inline'
                });

            $("#EndDate")
                .wrap('<div class="input-group">')
                .datepicker({
                    dateFormat: "yy-mm-dd",
                    changeMonth: true,
                    changeYear: true,
                    showOn: "both",
                    buttonImage: "../../Media/Images/calendar.gif",

                    maxDate: "+0D"
                })
                .next("button").button({
                    icons: { primary: "ui-icon-calendar" },
                    //label: "Select a date",
                    text: false
                })
                .addClass("btn btn-default")
                .wrap('<span class="input-group-btn">')
                .find('.ui-button-text')
                .css({
                    'visibility': 'hidden',
                    'display': 'inline'
                });
        });

         var trackProforma = function () {

            var url = '@Url.Action("GetAllocationStatus", "FundAllocation")';
            var model = $("#trackForm").serialize();

            $.ajax({
                type: "get",
                url: url,
                data: model,
                success: function (response) {
                    $("#searchResults").show();
                    $("#searchResults").html(response);
                }
            });
         }

    </script>
}