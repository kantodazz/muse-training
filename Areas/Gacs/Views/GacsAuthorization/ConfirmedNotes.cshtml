@model IEnumerable<IFMIS.Areas.Gacs.Models.gacsTrialBalanceTrxVm>

@{
    ViewBag.Title = "Data Confirmation";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div id="content" style="margin: 5px; padding-top: 30px">
    <div id="divLoader"></div>
    <div class="row">
        @*<div class="col-xs-12 col-sm-9 col-md-9 col-lg-9">
                <h1 class="page-title txt-color-blueDark">

                    <!-- PAGE HEADER -->
                    <!--
                    <i class="fa-fw fa fa-pencil-square-o"></i>
                    Payments
                    <span>
                        >
                        Bills
                    </span>
                        -->
                </h1>
            </div>*@

        <div class="col-xs-12 col-sm-3 col-md-3 col-lg-3">
            <!-- Button trigger modal -->
            <!--<a data-toggle="modal" href="#myModal" class="btn btn-success btn-lg pull-right header-btn hidden-mobile"><i class="fa fa-circle-arrow-up fa-lg"></i> Launch form modal</a>-->
        </div>
    </div>

    <!--
    <div class="alert alert-block alert-success">
        <a class="close" data-dismiss="alert" href="#">×</a>
        <h4 class="alert-heading"><i class="fa fa-check-square-o"></i> Check validation!</h4>
        <p>
            You may also check the form validation by clicking on the form action button. Please try and see the results below!
        </p>
    </div>
        -->
    <!-- widget grid -->
    <section id="widget-grid" class="">
        <!----->
        <!-- START ROW -->

        <div class="row">

            <!-- NEW COL START -->
            <div class="col-sm-12 col-md-12 col-lg-12">

                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">
                    <!-- widget options:
                        usage: <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false">

                        data-widget-colorbutton="false"
                        data-widget-editbutton="false"
                        data-widget-togglebutton="false"
                        data-widget-deletebutton="false"
                        data-widget-fullscreenbutton="false"
                        data-widget-custombutton="false"
                        data-widget-collapsed="true"
                        data-widget-sortable="false"

                    -->
                    <header>
                        <span class="widget-icon"> <i class="fa fa-table"></i> </span>
                        <h2> Trial Balance </h2>

                    </header>

                    <!-- widget div-->
                    <div>

                        <!-- widget edit box -->
                        <div class="jarviswidget-editbox">
                            <!-- This area used as dropdown edit box -->

                        </div>
                        <!-- end widget edit box -->
                        <!-- widget content -->
                        <div class="widget-body">

                            @*<a href="#" onclick="confirmModal()" class="btn btn-info">
                                    <span class="glyphicon glyphicon-ok"></span>
                                    Confirm
                                </a>
                                <hr class="simple" />*@

                            <table id="dt_basic" class="table table-bordered table-hover table-condensed" width="100%">
                                <thead>
                                    <tr style="text-align:right;white-space:nowrap">
                                        <th data-hide="phone"> ID </th>
                                        <th style="text-align:left"> Entity Description </th>
                                        <th data-class="expand" style="text-align:left"> Fiscal Year </th>
                                        <th data-class="expand" style="text-align:right">Debit Amount </th>
                                        <th data-class="expand" style="text-align:right">Credit Amount</th>
                                        <th data-class="expand" style="text-align:right">Diff Amount </th>
                                        <th data-hide="phone,tablet" style="text-align:right"> Status </th>
                                        <th>Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @{
                                       int i = 0;

                                       foreach (var item in Model) {
                                        i++;
                                                                        <tr>

                                                                            <td style="text-align:right">@i</td>
                                                                            <td>
                                                                                @Html.DisplayFor(modelItem => item.EntityDescription)
                                                                            </td>
                                                                            <td>
                                                                                @Html.DisplayFor(modelItem => item.FiscalYear)
                                                                            </td>
                                                                            <td style="text-align:right">
                                                                                @string.Format("{0:#,0.00}", item.DebitAmount)
                                                                            </td>
                                                                            <td style="text-align:right">
                                                                                @string.Format("{0:#,0.00}", item.CreditAmount)
                                                                            </td>

                                                                            <td style="text-align:right">
                                                                                @*@Html.DisplayFor(modelItem => item.DiffAmount)*@
                                                                                @string.Format("{0:#,0.00}", item.DiffAmount)
                                                                            </td>
                                                                            <td style="text-align:right">
                                                                                @Html.DisplayFor(modelItem => item.OverallStatus)
                                                                            </td>
                                                                            <td>
                                                                                <div class="btn-group">
                                                                                    <button type="button" class="btn btn-info btn-xs dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                                                        <span class="caret"></span>
                                                                                        <span class="sr-only">Toggle Dropdown</span>
                                                                                    </button>
                                                                                    <ul class="dropdown-menu" style="white-space:nowrap">

                                                                                        <li><a href="#" onclick="confirmModal('@item.InstitutionCode',@item.FiscalYear,'UnConfirm')"> UnConfirm </a></li>
                                                                                        @if (item.OverallStatus == "Approved")
                                                                                        {
                                                                                            <li><a href="#" onclick="confirmModal('@item.InstitutionCode',@item.FiscalYear,'Posted')"> Post </a></li>
                                                                                        }
                                                                                        @if (item.OverallStatus == "Confirmed" && @item.DiffAmount == 0)
                                                                                        {
                                                                                            <li><a href="#" onclick="confirmModal('@item.InstitutionCode',@item.FiscalYear,'Approved')"> Approve </a></li>
                                                                                        }
                                                                                    </ul>
                                                                                </div>

                                                                            </td>
                                                                        </tr>
                                    }
                                    }
                                </tbody>

                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>

<div class="modal fade" id="RemarksModal">
    <div class="modal-dialog">
        <div class="modal-content ">

            <div class="modal-header" style="background-color:#b3e5fc;">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h3 class="modal-title"> </h3>

            </div>
            @using (Html.BeginForm("SaveConfirmation", "GacsAuthorization", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
            @Html.AntiForgeryToken()
            <div class="modal-body">

                <div class="form-horizontal">
                    <div class="form-group">
                        <div class="col-md-3">  </div>
                        <div class="col-md-8">
                            <input type="hidden" id="OverallStatuz" name="OverallStatus" readonly="readonly" class="form-control" />
                            <input type="hidden" id="InstCodez" name="InstCode" readonly="readonly" class="form-control" />
                            <input type="hidden" id="Url" value="ConfirmedNotes" name="Url" readonly="readonly" class="form-control" />
                        </div>

                    </div>

                    <div class="form-group">
                        <div class="col-md-3"> </div>
                        <div class="col-md-8">
                            <input type="hidden" readonly="readonly" class="form-control" id="FiscalYearz" name="FiscalYear"/>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-3"> Remarks </div>
                        <div class="col-md-8">
                            @Html.TextArea("Remarks", new { @class = "form-control" })
                        </div>
                    </div>
                </div>

            </div>
            <div class="modal-footer">
                <div class="form-group" style="float:left;margin:0px 0px 0px 85px">
                    <div class="col-md-offset-3 col-md-7">
                        &nbsp;&nbsp; <input type="submit" id="btnSaveConfirm" value="Confirm" class="btn btn-info" />
                    </div>
                </div>

            </div>
            }
        </div>

    </div>

</div>

@section pagespecific {
    <script type="text/javascript">

        $('#btnSaveConfirm').click(function () {
            $("#divLoader").show();
        });

        $(document).ready(function () {

            /* // DOM Position key index //

            l - Length changing (dropdown)
            f - Filtering input (search)
            t - The Table! (datatable)
            i - Information (records)
            p - Pagination (paging)
            r - pRocessing
            < and > - div elements
            <"#id" and > - div with an id
            <"class" and > - div with a class
            <"#id.class" and > - div with an id and class

            Also see: http://legacy.datatables.net/usage/features
            */

            /* BASIC ;*/
            var responsiveHelper_dt_basic = undefined;
            var responsiveHelper_datatable_fixed_column = undefined;
            var responsiveHelper_datatable_col_reorder = undefined;
            var responsiveHelper_datatable_tabletools = undefined;

            var breakpointDefinition = {
                tablet: 1024,
                phone: 480
            };

            $('#dt_basic').dataTable({
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-12 hidden-xs'l>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_dt_basic) {
                        responsiveHelper_dt_basic = new ResponsiveDatatablesHelper($('#dt_basic'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_dt_basic.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_dt_basic.respond();
                }
            });

            /* END BASIC */

            /* COLUMN FILTER  */
            var otable = $('#datatable_fixed_column').DataTable({
                //"bFilter": false,
                //"bInfo": false,
                //"bLengthChange": false
                //"bAutoWidth": false,
                //"bPaginate": false,
                //"bStateSave": true // saves sort state using localStorage
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6 hidden-xs'f><'col-sm-6 col-xs-12 hidden-xs'<'toolbar'>>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_fixed_column) {
                        responsiveHelper_datatable_fixed_column = new ResponsiveDatatablesHelper($('#datatable_fixed_column'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_datatable_fixed_column.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_datatable_fixed_column.respond();
                }

            });

            // custom toolbar
            $("div.toolbar").html('<div class="text-right"><img src="/Content/img/logo.png" alt="SmartAdmin" style="width: 111px; margin-top: 3px; margin-right: 10px;"></div>');

            // Apply the filter
            $("#datatable_fixed_column thead th input[type=text]").on('keyup change', function () {

                otable
                    .column($(this).parent().index() + ':visible')
                    .search(this.value)
                    .draw();

            });
            /* END COLUMN FILTER */

            /* COLUMN SHOW - HIDE */
            $('#datatable_col_reorder').dataTable({
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'C>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_col_reorder) {
                        responsiveHelper_datatable_col_reorder = new ResponsiveDatatablesHelper($('#datatable_col_reorder'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_datatable_col_reorder.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_datatable_col_reorder.respond();
                }
            });

            /* END COLUMN SHOW - HIDE */

            /* TABLETOOLS */
            $('#datatable_tabletools').dataTable({

                // Tabletools options:
                //   https://datatables.net/extensions/tabletools/button_options
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'T>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
                "oTableTools": {
                    "aButtons": [
                        "copy",
                        "csv",
                        "xls",
                        {
                            "sExtends": "pdf",
                            "sTitle": "SmartAdmin_PDF",
                            "sPdfMessage": "SmartAdmin PDF Export",
                            "sPdfSize": "letter"
                        },
                        {
                            "sExtends": "print",
                            "sMessage": "List of Recurrent Componet Details <i>(press Esc to close)</i>"
                        }
                    ],
                    "sSwfPath": "/Scripts/plugin/datatables/swf/copy_csv_xls_pdf.swf"
                },
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_tabletools) {
                        responsiveHelper_datatable_tabletools = new ResponsiveDatatablesHelper($('#datatable_tabletools'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_datatable_tabletools.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_datatable_tabletools.respond();
                }
            });

        /* END TABLETOOLS */


            var urlvalue = getUrlVars()["remark"];
            if (urlvalue == "Success") {
                $("#divLoader").hide();
                swal("Successfully ", { icon: "success" })
                    .then((value) => {
                        window.location.href = '@Url.Action("ConfirmedNotes", "GacsAuthorization")';
                    })
            }
            else {
                $("#divLoader").hide();
                swal(urlvalue, { icon: "warning" })
                    .then((value) => {
                        window.location.href = '@Url.Action("ConfirmedNotes", "GacsAuthorization")';
                    })
            }




        });


        var confirmModal = function (institutioncode, fiscalYear, overallstatus) {
            debugger;
            $(".modal-title").text("Remarks");
            $("#InstCodez").val(institutioncode);
            $("#OverallStatuz").val(overallstatus);
            $("#FiscalYearz").val(fiscalYear);
            $("#RemarksModal").modal("show");
        }



        function getUrlVars() {
            debugger;
            var vars = {};
            var parts = window.location.href.replace(/[?&]+([^=&]+)=([^&]*)/gi, function (m, key, value) {
                vars[key] = value;
            });
            return vars;
        }

    </script>
}