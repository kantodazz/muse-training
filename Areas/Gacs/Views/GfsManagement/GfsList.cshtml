@model IEnumerable<IFMIS.Areas.Gacs.Models.GfsListVM>
@{

    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Global Periods List";
    var i=0;
}



<div id="content" style="margin: 5px; padding-top: 30px">

    <div class="row">


    </div>


    <!-- widget grid -->
    <section id="widget-grid" class="">


        <!-- START ROW -->

        <div class="row">

            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">

                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">

                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2> GACS GFS List </h2>

                    </header>


                    <div>
                        <div class="widget-body " style="padding-top:10px;width:100%">


                            <div class="row">

                                <div class="col-xs-9 col-sm-3 col-md-3 col-lg-3">
                                    <div class="input-group">
                                        <a href="@Url.Action("CreateGfs", "GfsManagement")" class="btn btn-info" style="width:120px;border-radius:1px;">
                                            <i class="fa fa-plus"></i>Add Period
                                        </a>

                                    </div>
                                </div>

                            </div>
                            <div align="center">
                                <img src="~/Media/Images/ajax_loader.gif" class="loadingImg" style="display:none" />
                            </div>
                            <table class="table  table-bordered table-hover table-condensed" id="dt_gfs">
                                <thead>
                                    <tr>
                                        <th></th>
                                        <th>
                                            @Html.DisplayNameFor(model => model.Chapter)
                                        </th>
                                        <th>
                                            @Html.DisplayNameFor(model => model.SubChapter)
                                        </th>
                                        <th>
                                            @Html.DisplayNameFor(model => model.Item)
                                        </th>
                                        <th>
                                            @Html.DisplayNameFor(model => model.ItemDescription)
                                        </th>
                                        <th>
                                            Action
                                        </th>

                                    </tr>
                                </thead>

                                <tbody>
                                    @foreach (var item in Model) {
                                    i++;
                                    <tr>
                                        <td>
                                            @i
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Chapter)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.SubChapter)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Item)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.ItemDescription)
                                        </td>

                                        <td style="text-align:center">

                                            <div class="btn-group">
                                                <button type="button" class="btn btn-info btn-xs dropdown-toggle" data-toggle="dropdown" style="width:40px;border-radius:1px;" aria-haspopup="true" aria-expanded="false">
                                                    <span class="caret"></span>
                                                    <span class="sr-only">Toggle Dropdown</span>
                                                </button>
                                                <ul class="dropdown-menu">

                                                    <li>
                                                        <a href="@Url.Action("EditGfs", "GfsManagement" ,new {id=item.ID })" class="btn-xs edit">
                                                            <i class="fa fa-edit"></i>  Edit
                                                        </a>
                                                    </li>
                                                    <li>
                                                        <a href="@Url.Action("PreviewGfs", "GfsManagement" ,new {id=item.ID })" class="btn-xs edit">
                                                            <i class="fa fa-search-minus"></i>  Preview
                                                        </a>
                                                    </li>
                                                    <li>
                                                        <a href="#" onclick="cancelEntry(@item.ID)">
                                                            <i class="fa fa-edit"></i>Cancel
                                                        </a>
                                                    </li>

                                                </ul>
                                            </div>
                                        </td>

                                    </tr>
}

                                </tbody>
                            </table>

                        </div>





                    </div>


                </div>
            </article>

        </div>
    </section>

</div>


@section pagespecific {
    <!-- PAGE RELATED PLUGIN(S) -->

    <script type="text/javascript">

            $(document).ready(function () {
                /* // DOM Position key index //
         l - Length changing (dropdown)
         f - Filtering input (search)
         t - The Table! (datatable)
         i - Information (records)
         p - Pagination (paging)
         r - pRocessing
         < and > - div elements
         <"#id" and > - div with an id
         <"class" and > - div with a class
         <"#id.class" and > - div with an id and class
         Also see: http://legacy.datatables.net/usage/features
         */
                /* BASIC ;*/
                var responsiveHelper_dt_gfs = undefined;
                var responsiveHelper_datatable_fixed_column = undefined;
                var responsiveHelper_datatable_col_reorder = undefined;
                var responsiveHelper_datatable_tabletools = undefined;

                var breakpointDefinition = {
                    tablet: 1024,
                    phone: 480
                };

                $('#dt_gfs').dataTable({
                    "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-12 hidden-xs'l>r>" +
                        "t" +
                        "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                    "autoWidth": true,
                    "preDrawCallback": function () {
                        // Initialize the responsive datatables helper once.
                        if (!responsiveHelper_dt_gfs) {
                            responsiveHelper_dt_gfs = new ResponsiveDatatablesHelper($('#dt_gfs'), breakpointDefinition);
                        }
                    },
                    "rowCallback": function (nRow) {
                        responsiveHelper_dt_gfs.createExpandIcon(nRow);
                    },
                    "drawCallback": function (oSettings) {
                        responsiveHelper_dt_gfs.respond();
                    }
                });

                /* END BASIC */

                /* COLUMN FILTER  */
                var otable = $('#datatable_fixed_column').DataTable({
                    //"bFilter": false,
                    //"bInfo": false,
                    //"bLengthChange": false
                    //"bAutoWidth": false,
                    //"bPaginate": false,
                    //"bStateSave": true // saves sort state using localStorage
                    "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6 hidden-xs'f><'col-sm-6 col-xs-12 hidden-xs'<'toolbar'>>r>" +
                            "t" +
                            "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                    "autoWidth": true,
                    "preDrawCallback": function () {
                        // Initialize the responsive datatables helper once.
                        if (!responsiveHelper_datatable_fixed_column) {
                            responsiveHelper_datatable_fixed_column = new ResponsiveDatatablesHelper($('#datatable_fixed_column'), breakpointDefinition);
                        }
                    },
                    "rowCallback": function (nRow) {
                        responsiveHelper_datatable_fixed_column.createExpandIcon(nRow);
                    },
                    "drawCallback": function (oSettings) {
                        responsiveHelper_datatable_fixed_column.respond();
                    }
                });

                // custom toolbar
                $("div.toolbar").html('<div class="text-right"><img src="/Content/img/logo.png" alt="SmartAdmin" style="width: 111px; margin-top: 3px; margin-right: 10px;"></div>');

                // Apply the filter
                $("#datatable_fixed_column thead th input[type=text]").on('keyup change', function () {
                    otable
                        .column($(this).parent().index() + ':visible')
                        .search(this.value)
                        .draw();
                });
                /* END COLUMN FILTER */

                /* COLUMN SHOW - HIDE */
                $('#datatable_col_reorder').dataTable({
                    "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'C>r>" +
                            "t" +
                            "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
                    "autoWidth": true,
                    "preDrawCallback": function () {
                        // Initialize the responsive datatables helper once.
                        if (!responsiveHelper_datatable_col_reorder) {
                            responsiveHelper_datatable_col_reorder = new ResponsiveDatatablesHelper($('#datatable_col_reorder'), breakpointDefinition);
                        }
                    },
                    "rowCallback": function (nRow) {
                        responsiveHelper_datatable_col_reorder.createExpandIcon(nRow);
                    },
                    "drawCallback": function (oSettings) {
                        responsiveHelper_datatable_col_reorder.respond();
                    }
                });

                /* END COLUMN SHOW - HIDE */

                /* TABLETOOLS */
                $('#datatable_tabletools').dataTable({

                    // Tabletools options:
                    //   https://datatables.net/extensions/tabletools/button_options
                    "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'T>r>" +
                            "t" +
                            "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
                    "oTableTools": {
                        "aButtons": [
                        "copy",
                        "csv",
                        "xls",
                           {
                               "sExtends": "pdf",
                               "sTitle": "SmartAdmin_PDF",
                               "sPdfMessage": "SmartAdmin PDF Export",
                               "sPdfSize": "letter"
                           },
                           {
                               "sExtends": "print",
                               "sMessage": "Generated by SmartAdmin <i>(press Esc to close)</i>"
                           }
                        ],
                        "sSwfPath": "/Scripts/plugin/datatables/swf/copy_csv_xls_pdf.swf"
                    },
                    "autoWidth": true,
                    "preDrawCallback": function () {
                        // Initialize the responsive datatables helper once.
                        if (!responsiveHelper_datatable_tabletools) {
                            responsiveHelper_datatable_tabletools = new ResponsiveDatatablesHelper($('#datatable_tabletools'), breakpointDefinition);
                        }
                    },
                    "rowCallback": function (nRow) {
                        responsiveHelper_datatable_tabletools.createExpandIcon(nRow);
                    },
                    "drawCallback": function (oSettings) {
                        responsiveHelper_datatable_tabletools.respond();
                    }
                });
                /* END TABLETOOLS */


                $("#ConfirmReason").on('submit', function (e) {
                    e.preventDefault();

                    swal({
                        title: 'Confirmation',
                        text: "Do you confirm this LPO ?",
                        buttons: [
                          'No',
                          'Yes'
                        ],
                    }).then(function (isConfirm) {
                        if (isConfirm) {
                            var url = '@Url.Action("ConfirmRejectedLPO", "Procurement")';
                            var id = $("#Id").val();
                            var reason = $("#Reason").val();
                            var formData = {
                                "Id": id,
                                "Reason": reason
                            }
                            $('#ComfirmLPO').modal('hide');
                            $.ajax(
                        {
                            type: "POST",
                            url: url,
                            data: formData,
                            success: function (result) {
                                if (result == "Success") {

                                    swal("LPO Confirmed  successfully!", { icon: "success" })
                                              .then((value) => {
                                           location.reload();
                                              });


                                }
                                else if (result.response == "Items") {
                                  swal("Failed to confirm ,Please enter items with total value of "+toLabel(result.amount)+" equals to Purchase Order Amount,currently you have entered items with value of "+toLabel(result.items_amount));
                                             }
                               else if (result.response == "glItems") {

                                 swal("Failed to confirm ,Please assign GL items with total value of "+toLabel(result.items_amount));

                                            }
                                else {

                                    swal("Failed to reject ,DbException");
                                }
                            },
                            error: function (xhr) {
                                swal(error);

                            },

                        });
                        } else {
                            swal("Cancelled", "No change was made");
                        }
                    });
                });


                        });

            //SHOW LOADER ICON
            $(document).ajaxStart(function () {
                $(".loadingImg").show();

            });
            //HIDE LOADER ICON
            $(document).ajaxStop(function () {
                $(".loadingImg").hide();
            });

      var showDetails = function (id) {
            debugger;
            var url = '@Url.Action("PurchaseOrderDetails", "Procurement")';
            $("#divModalBody").load(url, { id: id }, function (response, status, xhr) {
                if (status == "error") {
                    $("#divModalBody").html("Error on accessing this details, contact system support.");
                }
                $("#divModal").modal("show");
            });
        };

                
             var cancelEntry = function (id) {
                       swal({
                                    title: 'Confirmation',
                                    text: "Do you want to cancel this entry",
                                    buttons: [
                                      'No',
                                      'Yes'
                                    ],
                                }).then(function (isConfirm) {
                                    if (isConfirm) {
                                var url = '@Url.Action("CancelEntry", "GfsManagement")';
                                $.ajax(
                    {
                        type: "POST",
                        url: url,
                        data: { id: id },
                        success: function (response) {
                            if (response == "Success") {
                                swal("Cancelled  successfully!", { icon: "success" })
                                             .then((value) => {
                                                location.reload();
                                             });
                            }
                            else {
                                swal(response);
                            }
                        },
                        error: function (xhr) {
                            //console.log(xhr.responseText);
                            swal("An error has occured, contact system support");
                        },

                    });
                                    } else {
                                        swal("Cancelled", "No change was made");
                                    }
                                });
            }
    </script>
}
