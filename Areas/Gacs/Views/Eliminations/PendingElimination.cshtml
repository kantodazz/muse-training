@model IEnumerable<IFMIS.Areas.Gacs.Models.PendingEliminationDataVM>
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div id="divLoader">
</div>
<!-- MAIN CONTENT -->
<div id="content">

    <div class="row">
        @*<div class="col-xs-12 col-sm-9 col-md-9 col-lg-9">
                <h1 class="page-title txt-color-blueDark">

                    <!-- PAGE HEADER -->
                    <!--
                    <i class="fa-fw fa fa-pencil-square-o"></i>
                    Payments
                    <span>
                        >
                        Bills
                    </span>
                        -->
                </h1>
            </div>*@

        <div class="col-xs-12 col-sm-3 col-md-3 col-lg-3">
            <!-- Button trigger modal -->
            <!--<a data-toggle="modal" href="#myModal" class="btn btn-info btn-lg pull-right header-btn hidden-mobile"><i class="fa fa-circle-arrow-up fa-lg"></i> Launch form modal</a>-->
        </div>
    </div>

    <!--
    <div class="alert alert-block alert-info">
        <a class="close" data-dismiss="alert" href="#">×</a>
        <h4 class="alert-heading"><i class="fa fa-check-square-o"></i> Check validation!</h4>
        <p>
            You may also check the form validation by clicking on the form action button. Please try and see the results below!
        </p>
    </div>
        -->
    <!-- widget grid -->
    <section id="widget-grid" class="">


        <!-- START ROW -->

        <div class="row">

            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">

                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">
                    <!-- widget options:
                        usage: <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false">

                        data-widget-colorbutton="false"
                        data-widget-editbutton="false"
                        data-widget-togglebutton="false"
                        data-widget-deletebutton="false"
                        data-widget-fullscreenbutton="false"
                        data-widget-custombutton="false"
                        data-widget-collapsed="true"
                        data-widget-sortable="false"

                    -->
                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2> Pending Elimination </h2>

                    </header>

                    <!-- widget div-->
                    <div>

                        <!-- widget edit box -->
                        <div class="jarviswidget-editbox">
                            <!-- This area used as dropdown edit box -->

                        </div>
                        <!-- end widget edit box -->
                        <!-- widget content -->
                        <div class="widget-body">
                            <a href="@Url.Action("EliminationList2", "Eliminations")" class="btn btn-info">
                                <span class="glyphicon glyphicon-plus"></span>
                                Add New
                            </a>
                            <hr class="simple" />
                            <table id="dt_basic" class="table table-striped table-bordered table-hover table-condensed" width="100%">
                                <thead>
                                    <tr style="background-color: #f5f5f5; color:black">
                                        <th>#</th>


                                        @*<th>
                                                @Html.DisplayNameFor(model => model.FiscalYear)
                                            </th>*@
                                        <th>
                                            @Html.DisplayNameFor(model => model.InstCode)
                                        </th>

                                        <th>
                                            @Html.DisplayNameFor(model => model.GfsCode)
                                        </th>
                                        <th>
                                            @Html.DisplayNameFor(model => model.GfsDesc)
                                        </th>
                                        <th>
                                            @Html.DisplayNameFor(model => model.ActualTotal)
                                        </th>

                                        <th>
                                            @Html.DisplayNameFor(model => model.EntityDescription)
                                        </th>

                                  
                                        <th>
                                            @Html.DisplayNameFor(model => model.EliminatorInstCode)
                                        </th>
                                       
                                        <th>
                                            @Html.DisplayNameFor(model => model.EliminatorGfsCode)
                                        </th>
                                        <th>
                                            @Html.DisplayNameFor(model => model.EliminatorGfsDesc)
                                        </th>
                                        <th>
                                            @Html.DisplayNameFor(model => model.EliminatorActualTotal)
                                        </th>
                                   
                                        <th>
                                            @Html.DisplayNameFor(model => model.EliminatorEntityDescription)
                                        </th>
                                  
                                        @*<th>
                                            @Html.DisplayNameFor(model => model.EliminationMatchNo)
                                        </th>
                                        <th>
                                            @Html.DisplayNameFor(model => model.EliminationMatchDate)
                                        </th>*@

                                        <th>
                                            @Html.DisplayNameFor(model => model.OverallStatus)
                                        </th>
                                    </tr>
                                </thead>
                                @{int i = 0;}
                                @foreach (var item in Model)
                                {
                                    i++;
                                    <tr>
                                        <td>@i</td>

                                        @*<td>
                                                @Html.DisplayFor(modelItem => item.FiscalYear)
                                            </td>*@
                                        <td>
                                            @Html.DisplayFor(modelItem => item.InstCode)
                                        </td>

                                        <td>
                                            @Html.DisplayFor(modelItem => item.GfsCode)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.GfsDesc)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.ActualTotal)
                                        </td>
                                   
                                            <td>
                                                @Html.DisplayFor(modelItem => item.EntityDescription)
                                            </td>
                                       
                                        <td>
                                                @Html.DisplayFor(modelItem => item.EliminatorInstCode)
                                            </td>
                                           
                                            <td>
                                                @Html.DisplayFor(modelItem => item.EliminatorGfsCode)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.EliminatorGfsDesc)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.EliminatorActualTotal)
                                            </td>
                                       
                                            <td>
                                                @Html.DisplayFor(modelItem => item.EliminatorEntityDescription)
                                            </td>
                                        
                                            @*<td>
                                                @Html.DisplayFor(modelItem => item.EliminationMatchNo)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.EliminationMatchDate)
                                            </td>*@

                                        <td>
                                            @Html.DisplayFor(modelItem => item.OverallStatus)
                                        </td>
                                        <td style="text-align: center">
                                            <!-- Split button -->
                                            <div class="btn-group">
                                                <button type="button" class="btn btn-info btn-xs">Action</button>
                                                <button type="button" class="btn btn-info btn-xs dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                    <span class="caret"></span>
                                                    <span class="sr-only">Toggle Dropdown</span>
                                                </button>
                                                <ul class="dropdown-menu">
                                                    <li><a href="#" onclick="Details(@item.EliminId)">Details</a></li>
                                                    <li><a href="#" onclick="cancel(@item.EliminId)">Cancel</a></li>
                                                    <li><a href="#" onclick="confirm(@item.EliminId)">Confirm</a></li>
                                                </ul>
                                            </div>
                                        </td>
                                    </tr>
                                }

                            </table>
                        </div>
                        <!-- end widget content -->
                    </div>
                    <!-- end widget div -->

                </div>
                <!-- end widget -->

            </article>
            <!-- END COL -->

        </div>

        <!-- END ROW -->

    </section>
    <!-- end widget grid -->

</div>
<!-- END MAIN CONTENT -->
@section Scripts{
    <script>
        // DO NOT REMOVE : GLOBAL FUNCTIONS!

        $(document).ready(function () {

            /* // DOM Position key index //

            l - Length changing (dropdown)
            f - Filtering input (search)
            t - The Table! (datatable)
            i - Information (records)
            p - Pagination (paging)
            r - pRocessing
            < and > - div elements
            <"#id" and > - div with an id
            <"class" and > - div with a class
            <"#id.class" and > - div with an id and class

            Also see: http://legacy.datatables.net/usage/features
            */

            /* BASIC ;*/
            var responsiveHelper_dt_basic = undefined;
            var responsiveHelper_datatable_fixed_column = undefined;
            var responsiveHelper_datatable_col_reorder = undefined;
            var responsiveHelper_datatable_tabletools = undefined;

            var breakpointDefinition = {
                tablet: 1024,
                phone: 480
            };

            $('#dt_basic').dataTable({
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-12 hidden-xs'l>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_dt_basic) {
                        responsiveHelper_dt_basic = new ResponsiveDatatablesHelper($('#dt_basic'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_dt_basic.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_dt_basic.respond();
                }
            });

            /* END BASIC */

            /* COLUMN FILTER  */
            var otable = $('#datatable_fixed_column').DataTable({
                //"bFilter": false,
                //"bInfo": false,
                //"bLengthChange": false
                //"bAutoWidth": false,
                //"bPaginate": false,
                //"bStateSave": true // saves sort state using localStorage
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6 hidden-xs'f><'col-sm-6 col-xs-12 hidden-xs'<'toolbar'>>r>" +
                        "t" +
                        "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_fixed_column) {
                        responsiveHelper_datatable_fixed_column = new ResponsiveDatatablesHelper($('#datatable_fixed_column'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_datatable_fixed_column.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_datatable_fixed_column.respond();
                }

            });

            // custom toolbar
            $("div.toolbar").html('<div class="text-right"><img src="/Content/img/logo.png" alt="SmartAdmin" style="width: 111px; margin-top: 3px; margin-right: 10px;"></div>');

            // Apply the filter
            $("#datatable_fixed_column thead th input[type=text]").on('keyup change', function () {

                otable
                    .column($(this).parent().index() + ':visible')
                    .search(this.value)
                    .draw();

            });
            /* END COLUMN FILTER */

            /* COLUMN SHOW - HIDE */
            $('#datatable_col_reorder').dataTable({
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'C>r>" +
                        "t" +
                        "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_col_reorder) {
                        responsiveHelper_datatable_col_reorder = new ResponsiveDatatablesHelper($('#datatable_col_reorder'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_datatable_col_reorder.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_datatable_col_reorder.respond();
                }
            });

            /* END COLUMN SHOW - HIDE */

            /* TABLETOOLS */
            $('#datatable_tabletools').dataTable({

                // Tabletools options:
                //   https://datatables.net/extensions/tabletools/button_options
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'T>r>" +
                        "t" +
                        "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
                "oTableTools": {
                    "aButtons": [
                    "copy",
                    "csv",
                    "xls",
                       {
                           "sExtends": "pdf",
                           "sTitle": "SmartAdmin_PDF",
                           "sPdfMessage": "SmartAdmin PDF Export",
                           "sPdfSize": "letter"
                       },
                       {
                           "sExtends": "print",
                           "sMessage": "Generated by SmartAdmin <i>(press Esc to close)</i>"
                       }
                    ],
                    "sSwfPath": "/Scripts/plugin/datatables/swf/copy_csv_xls_pdf.swf"
                },
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_tabletools) {
                        responsiveHelper_datatable_tabletools = new ResponsiveDatatablesHelper($('#datatable_tabletools'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_datatable_tabletools.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_datatable_tabletools.respond();
                }
            });

            /* END TABLETOOLS */

        });

        var details = function (id) {
            $("#divLoader").show();
            $("#btnSaveComment").hide();
            var url = '@Url.Action("Details", "s")/' + id;

            $("#modal-body").load(url, function () {
                $("#modal").modal({
                    backdrop: "static",
                    keyboard: false
                });

                $("#divLoader").hide();
            });
        };

        var cancel = function (id) {
            swal({
                text: "Are you sure you want to cancel this record?",
                buttons: [
                    "Yes",
                    "No"
                ],
                closeOnClickOutside: false,
            }).then(function (isConfirm) {
                if (!isConfirm) {
                    $("#divLoader").show();
                    var url = '@Url.Action("Delete", "Eliminations")/' + id;
                    $.ajax({
                        type: "POST",
                        url: url,
                        data: { id: id },
                        success: function (response) {
                            if (response == "Success") {
                                swal({
                                    text: "Cancelled successfully!",
                                    icon: "success",
                                    button: "OK",
                                }).then(function () {
                                    location.reload();
                                });
                            }
                        },
                        error: function () {
                            swal({
                                text: "An error occured while processing your request, please contact system support",
                                icon: "error",
                                button: "OK",
                            })
                        },
                        complete: function () {
                            $("#divLoader").hide();
                        }
                    });
                }
            });
        };

        var confirm = function (id) {

            $(".modal-title").text("Confirm");
            $("#btnSaveComment").show();
            $("#divLoader").show();

            var url = '@Url.Action("Accept", "Eliminations")/' + id;

            $("#modal-body").load(url, function () {
                $("#modal").modal({
                    backdrop: "static",
                    keyboard: false
                });

                $("#divLoader").hide();
            });
        };
    </script>
}