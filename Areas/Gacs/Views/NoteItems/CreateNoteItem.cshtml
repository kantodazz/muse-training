@model IFMIS.Areas.Gacs.Models.GacsNoteItems

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Create";
}

<div id="content" style="margin: 5px; padding-top: 30px">

    <div class="row">


    </div>


    <!-- widget grid -->
    <section id="widget-grid" class="">


        <!-- START ROW -->

        <div class="row">

            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">

                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">

                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2> GACS Note Item </h2>

                    </header>


                    <div>
                        <div class="widget-body " style="padding-top:10px;width:100%">


                            @using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = "return SubmitData(this)" }))
                            {
                                @Html.AntiForgeryToken()

                                <div class="form-horizontal">
                                    <h4>Add New Note Item</h4>
                                    <hr />
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.NoteID, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-4">
                                            @Html.DropDownListFor(model => model.NoteID, Model.NotesList, "Select Sector", new { @class = "form-control select2", @required = "required" })
                                            @Html.ValidationMessageFor(model => model.NoteID, "", new { @class = "text-danger" })
                                        </div>
                                        @Html.LabelFor(model => model.GFSOpening, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-4">
                                            @Html.EditorFor(model => model.GFSOpening, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                            @Html.ValidationMessageFor(model => model.GFSOpening, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.GFSTransaction, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-4">
                                            @Html.EditorFor(model => model.GFSTransaction, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.GFSTransaction, "", new { @class = "text-danger" })
                                        </div>
                                        @Html.LabelFor(model => model.GFSHolding, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-4">
                                            @Html.EditorFor(model => model.GFSHolding, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.GFSHolding, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.GFSVolume, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-4">
                                            @Html.EditorFor(model => model.GFSVolume, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                            @Html.ValidationMessageFor(model => model.GFSVolume, "", new { @class = "text-danger" })
                                        </div>
                                        @Html.LabelFor(model => model.GFSStock, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-4">
                                            @Html.EditorFor(model => model.GFSStock, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.GFSStock, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.GFSDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-4">
                                            @Html.EditorFor(model => model.GFSDescription, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.GFSDescription, "", new { @class = "text-danger" })
                                        </div>
                                        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-4">
                                            @Html.DropDownListFor(model => model.Status, new List<SelectListItem>{
                                              new SelectListItem{ Text="Select Status", Value = "" },
                                              new SelectListItem{ Text="Active", Value = "Active" },
                                              new SelectListItem{ Text="InActive", Value = "InActive" },
                                              }, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.AdditionEntry, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-4">
                                            @Html.DropDownListFor(model => model.AdditionEntry, new List<SelectListItem>{
                                              new SelectListItem{ Text="Select Addition Entry", Value = "" },
                                              new SelectListItem{ Text="NA", Value = "NA" },
                                              new SelectListItem{ Text="NO", Value = "NO" },
                                              new SelectListItem{ Text="YES", Value = "YES" },
                                              }, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.AdditionEntry, "", new { @class = "text-danger" })
                                        </div>
                                        @Html.LabelFor(model => model.EliminationEntry, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-4">
                                            @Html.DropDownListFor(model => model.EliminationEntry, new List<SelectListItem>{
                                              new SelectListItem{ Text="Select EliminationEntry", Value = "" },
                                              new SelectListItem{ Text="NO", Value = "NO" },
                                              new SelectListItem{ Text="NA", Value = "NA" },
                                               new SelectListItem{ Text="YES", Value = "YES" },
                                              }, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.EliminationEntry, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.xFactorItem, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-4">
                                            @Html.DropDownListFor(model => model.xFactorItem, new List<SelectListItem>{
                                              new SelectListItem{ Text="Select xFactorItem", Value = "" },
                                              new SelectListItem{ Text="-1", Value = "-1" },
                                              new SelectListItem{ Text="1", Value = "1" },
                                              }, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.xFactorItem, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-actions">
                                        <div class="row">
                                            <div class="col-md-8 col-md-offset-2">
                                                <a href="@Url.Action("NoteItemsList","NoteItems")" style="margin-right:5px" class="btn btn-info pull-left"><i class="glyphicon glyphicon-arrow-left"></i> Back  </a>

                                                <button type="submit" class="btn btn-info" id="save_button" style="float: left; margin-left: 5px">
                                                    <i class="glyphicon glyphicon-floppy-disk"></i> Save
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }

                        </div>





                    </div>


                </div>
            </article>

        </div>
    </section>

</div>

@section Scripts {
    <script type="text/javascript">
        function SubmitData(formData) {
            $("#save_button").prop('disabled', true);
            var url = '@Url.Action("SaveNoteItem", "NoteItems")';
            var ajaxConfig = {
                type: "post",
                url: url,
                data: new FormData(formData),
                success: function (response) {
                    $("#save_button").prop('disabled', false);
                    if (response == "Success") {
                        swal("Note Item saved successfully", { icon: "success" })
                            .then((value) => {
                                var url = '@Url.Action("NoteItemsList", "NoteItems")';
                                window.location.replace(url);
                            });
                    }
                    else {
                        swal(response);
                    }
                }
            }
            if ($(formData).attr('enctype') == "multipart/form-data") {
                ajaxConfig["contentType"] = false;
                ajaxConfig["processData"] = false;
            }
            $.ajax(ajaxConfig);
            return false;
        }
    </script>
}