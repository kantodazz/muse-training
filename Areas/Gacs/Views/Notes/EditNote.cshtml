@model IFMIS.Areas.Gacs.Models.GacsNotes

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Create";
}

<div id="content" style="margin: 5px; padding-top: 30px">

    <div class="row">


    </div>


    <!-- widget grid -->
    <section id="widget-grid" class="">


        <!-- START ROW -->

        <div class="row">

            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">

                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">

                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2> GACS Note </h2>

                    </header>


                    <div>
                        <div class="widget-body " style="padding-top:10px;width:100%">

                            @using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = "return SubmitNote(this)" }))
                            {
                                @Html.AntiForgeryToken()

                                <div class="form-horizontal">
                                    <h4>Add New Note</h4>
                                    <hr />
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    @Html.HiddenFor(model => model.NoteID)
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.NoteNo, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-4">
                                            @Html.EditorFor(model => model.NoteNo, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.NoteNo, "", new { @class = "text-danger" })
                                        </div>
                                        @Html.LabelFor(model => model.NoteDesc, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-4">
                                            @Html.EditorFor(model => model.NoteDesc, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.NoteDesc, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-4">
                                            @Html.DropDownListFor(model => model.Status, new List<SelectListItem>{
                                              new SelectListItem{ Text="Select Status", Value = "" },
                                              new SelectListItem{ Text="Active", Value = "Active" },
                                              new SelectListItem{ Text="InActive", Value = "InActive" },
                                              }, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                                        </div>
                                        @Html.LabelFor(model => model.ReportCodeId, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-4">
                                            @Html.DropDownListFor(model => model.ReportCodeId, new List<SelectListItem>{
                                              new SelectListItem{ Text="Select Report Code", Value = "" },
                                              new SelectListItem{ Text="Cashflow", Value = "Cashflow" },
                                              new SelectListItem{ Text="Performance", Value = "Performance" },
                                              new SelectListItem{ Text="Position", Value = "Position" },
                                              }, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.ReportCodeId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-4">
                                            @Html.DropDownListFor(model => model.Status, new List<SelectListItem>{
                                              new SelectListItem{ Text="Select Status", Value = "" },
                                              new SelectListItem{ Text="Active", Value = "Active" },
                                              new SelectListItem{ Text="InActive", Value = "InActive" },
                                              }, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                                        </div>
                                        @Html.LabelFor(model => model.ReportCodeId, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-4">
                                            @Html.DropDownListFor(model => model.ReportCodeId, new List<SelectListItem>{
                                              new SelectListItem{ Text="Select Report Code", Value = "" },
                                              new SelectListItem{ Text="Cashflow", Value = "Cashflow" },
                                              new SelectListItem{ Text="Performance", Value = "Performance" },
                                              new SelectListItem{ Text="Position", Value = "Position" },
                                              }, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.ReportCodeId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.ReportCategory, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-4">
                                            @Html.DropDownListFor(model => model.ReportCategory, new List<SelectListItem>{
                                              new SelectListItem{ Text="Select Report Category", Value = "" },
                                              new SelectListItem{ Text="Asset", Value = "Asset" },
                                              new SelectListItem{ Text="Cash", Value = "Cash" },
                                             new SelectListItem{ Text="Cash Flow from Financing Activities", Value = "Cash Flow from Financing Activities" },
                                              new SelectListItem{ Text="Cash Flow from Investing Activities", Value = "Cash Flow from Investing Activities" },
                                             new SelectListItem{ Text="Cash Flow from Operating Activities", Value = "Cash Flow from Operating Activities" },
                                              new SelectListItem{ Text="Equity", Value = "Equity" },
                                             new SelectListItem{ Text="Expenses", Value = "Expenses" },
                                              new SelectListItem{ Text="Liability", Value = "Liability" },
                                             new SelectListItem{ Text="Revenue", Value = "Revenue" },
                                              new SelectListItem{ Text="Shares of Accociates", Value = "Shares of Accociates" },
                                              }, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.ReportCategory, "", new { @class = "text-danger" })
                                        </div>
                                        @Html.LabelFor(model => model.ReportSubCategory, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-4">
                                            @Html.DropDownListFor(model => model.ReportSubCategory, new List<SelectListItem>{
                                              new SelectListItem{ Text="Select Report Sub Category", Value = "" },
                                              new SelectListItem{ Text="Capital", Value = "Capital" },
                                              new SelectListItem{ Text="Cash and cash equivalent at beginning of period", Value = "Cash and cash equivalent at beginning of period" },
                                              new SelectListItem{ Text="Cash and cash equivalent at end of period", Value = "Cash and cash equivalent at end of period" },
                                             new SelectListItem{ Text="Effect of Foreign Currency Changes", Value = "Effect of Foreign Currency Changes" },
                                              new SelectListItem{ Text="Current Asset", Value = "Current Asset" },
                                              new SelectListItem{ Text="Current Liability", Value = "Current Liability" },
                                              new SelectListItem{ Text="Expense", Value = "Expense" },
                                             new SelectListItem{ Text="Financing Activities", Value = "Financing Activities" },
                                              new SelectListItem{ Text="Investing Activities", Value = "Investing Activities" },
                                              new SelectListItem{ Text="Non Current Asset", Value = "Non Current Asset" },
                                              new SelectListItem{ Text="Non Current Liability", Value = "Non Current Liability" },
                                             new SelectListItem{ Text="PAYMENTS", Value = "PAYMENTS" },
                                              new SelectListItem{ Text="RECEIPTS", Value = "RECEIPTS" },
                                              new SelectListItem{ Text="Revenue", Value = "Revenue" },
                                               new SelectListItem{ Text="Shares of Accociates surplus/deficit", Value = "Shares of Accociates surplus/deficit" },
                                              }, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.ReportSubCategory, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.EliminationEntry, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-4">
                                            @Html.DropDownListFor(model => model.EliminationEntry, new List<SelectListItem>{
                                              new SelectListItem{ Text="Select", Value = "" },
                                              new SelectListItem{ Text="NO", Value = "NO" },
                                              new SelectListItem{ Text="YES", Value = "YES" },
                                              }, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.EliminationEntry, "", new { @class = "text-danger" })
                                        </div>
                                        @Html.LabelFor(model => model.CategoryEntry, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-4">
                                            @Html.DropDownListFor(model => model.CategoryEntry, new List<SelectListItem>{
                                              new SelectListItem{ Text="Select Category Entry", Value = "" },
                                              new SelectListItem{ Text="NA", Value = "NA" },
                                              new SelectListItem{ Text="NO", Value = "NO" },
                                              new SelectListItem{ Text="YES", Value = "YES" },
                                              }, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.CategoryEntry, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.SortOrder, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-4">
                                            @Html.EditorFor(model => model.SortOrder, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.SortOrder, "", new { @class = "text-danger" })
                                        </div>
                                        @Html.LabelFor(model => model.xFactor, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-4">
                                            @Html.DropDownListFor(model => model.xFactor, new List<SelectListItem>{
                                              new SelectListItem{ Text="Select Category Entry", Value = "" },
                                              new SelectListItem{ Text="+Ve", Value = "1" },
                                              new SelectListItem{ Text="-Ve", Value = "0" },
                                              }, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.xFactor, "", new { @class = "text-danger" })
                                        </div>
                                    </div>


                                    <div class="form-actions">
                                        <div class="row">
                                            <div class="col-md-8 col-md-offset-2">
                                                <a href="@Url.Action("NotesList","Notes")" style="margin-right:5px" class="btn btn-info pull-left"><i class="glyphicon glyphicon-arrow-left"></i> Back  </a>

                                                <button type="submit" class="btn btn-info" id="save_button" style="float: left; margin-left: 5px">
                                                    <i class="glyphicon glyphicon-floppy-disk"></i> Save
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }

                        </div>





                    </div>


                </div>
            </article>

        </div>
    </section>

</div>

@section Scripts {
    <script type="text/javascript">
        function SubmitNote(formData) {
            $("#save_button").prop('disabled', true);
            var url = '@Url.Action("EditNoteData", "Notes")';
            var ajaxConfig = {
                type: "post",
                url: url,
                data: new FormData(formData),
                success: function (response) {
                    $("#save_button").prop('disabled', false);
                    if (response == "Success") {
                        swal("Note saved successfully", { icon: "success" })
                            .then((value) => {
                                var url = '@Url.Action("NotesList", "Notes")';
                                window.location.replace(url);
                            });
                    }
                    else {
                        swal(response);
                    }
                }
            }
            if ($(formData).attr('enctype') == "multipart/form-data") {
                ajaxConfig["contentType"] = false;
                ajaxConfig["processData"] = false;
            }
            $.ajax(ajaxConfig);
            return false;
        }
    </script>
    }
  
