@model IFMIS.Areas.Gacs.Models.EntityListVM

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Create";
}

<div id="content" style="margin: 5px; padding-top: 30px">

    <div class="row">


    </div>


    <!-- widget grid -->
    <section id="widget-grid" class="">


        <!-- START ROW -->

        <div class="row">

            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">

                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">

                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2> GACS Entities Managaement </h2>

                    </header>


                    <div>
                        <div class="widget-body " style="padding-top:10px;width:100%">

                            @using (Html.BeginForm())
{
                            @Html.AntiForgeryToken()

                            <div class="form-horizontal">
                                <h4>Add New Entity</h4>
                                <hr />
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                @Html.HiddenFor(model => model.ID)
                                <div class="form-group">
                                    @Html.LabelFor(model => model.SectorID, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4">
                                        @Html.DropDownListFor(model => model.SectorID, Model.SectorList, "Select Sector", new { @class = "form-control select2", @required = "required" })
                                        @Html.ValidationMessageFor(model => model.SectorID, "", new { @class = "text-danger" })
                                    </div>
                                    @Html.LabelFor(model => model.SubSectorID, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4">
                                        @Html.DropDownListFor(model => model.SubSectorID, Model.SubSectorList, "Select Sector", new { @class = "form-control select2", @required = "required" })
                                        @Html.ValidationMessageFor(model => model.SubSectorID, "", new { @class = "text-danger" })
                                    </div>
                                    @Html.LabelFor(model => model.SubSectorID, htmlAttributes: new { @class = "control-label col-md-2" })
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.InstitutionalCode, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4">
                                        @Html.EditorFor(model => model.InstitutionalCode, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.InstitutionalCode, "", new { @class = "text-danger" })
                                    </div>
                                    @Html.LabelFor(model => model.VoteCode, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4">
                                        @Html.EditorFor(model => model.VoteCode, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.VoteCode, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.EntityCode, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4">
                                        @Html.EditorFor(model => model.EntityCode, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.EntityCode, "", new { @class = "text-danger" })
                                    </div>
                                    @Html.LabelFor(model => model.EntityDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4">
                                        @Html.EditorFor(model => model.EntityDescription, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.EntityDescription, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">

                                    @Html.LabelFor(model => model.ActiveFlag, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4">
                                        @Html.DropDownList("ActiveFlag", new List<SelectListItem>{
                                           new SelectListItem{ Text="Select Active Flag", Value = "" },
                                           new SelectListItem{ Text="Active", Value = "1" },
                                           new SelectListItem{ Text="InActive", Value = "0" },
                                           }, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.ActiveFlag, "", new { @class = "text-danger" })
                                    </div>
                                </div>


                                <div class="form-actions">
                                    <div class="row">
                                        <div class="col-md-8 col-md-offset-2">
                                            <a href="@Url.Action("EntitiesList","EntitiesManagement")" style="margin-right:5px" class="btn btn-info pull-left"><i class="glyphicon glyphicon-arrow-left"></i> Back  </a>

                                            <button type="submit" class="btn btn-info" id="save_button" style="float: left; margin-left: 5px">
                                                <i class="glyphicon glyphicon-floppy-disk"></i> Save
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
}

                        </div>





                    </div>


                </div>
            </article>

        </div>
    </section>

</div>

@section pagespecific {
    <!-- PAGE RELATED PLUGIN(S) -->

    <script type="text/javascript">

            //SHOW LOADER ICON
            $(document).ajaxStart(function () {
                $(".loadingImg").show();

            });
            //HIDE LOADER ICON
            $(document).ajaxStop(function () {
                $(".loadingImg").hide();
            });


        $("#SectorID").on("change", function () {
            var sectorId = $(this).val();
            $.ajax({
                type: "GET",
                url: '@Url.Action("GetSubSectors", "EntitiesManagement")',
                data: { id: sectorId },
                success: function (data, status, jqXHR) {
                    $("#SubSectorID option").remove();
                    $("#SubSectorID").append('<option value="">Select Sub Sector</option>');
                    $.each(data.SubSectors, function (i, subSectors) {
                        $("#SubSectorID").append('<option value="'
                            + subSectors.SubSectorID + '">'
                            + subSectors.SubSectorDescription + '</option>');
                    });
                },
                error: function () {
                    swal({
                        text: "Error on accessing Sub Chapters",
                        icon: "error",
                        button: "OK",
                    })
                }
            })
        })

    </script>
}
