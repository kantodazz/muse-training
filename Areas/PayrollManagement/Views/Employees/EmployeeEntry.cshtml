@model IFMIS.Areas.PayrollManagement.Models.EditEmployeeDetailVM
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<br/>
<div id="divLoader"></div>
<div id="content" style="margin: 5px; padding-top: 30px">
    <div class="row">
        <div class="col-xs-12 col-sm-3 col-md-3 col-lg-3"></div>
    </div>
    <!-- widget grid -->
    <section id="widget-grid" class="">
        <!-- START ROW -->
        <div class="row">
            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">
                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">
                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2> New Hire </h2>
                    </header>
                    <!-- widget div-->
                    <div>
                        <!-- widget edit box -->
                        <div class="jarviswidget-editbox">
                            <!-- This area used as dropdown edit box -->
                        </div>
                        <!--end widget edit box-->
                        <!-- widget content -->
                        <div class="widget-body">
                            @using (Html.BeginForm("", "", FormMethod.Post, new { id = "form" }))
                            {
                                @Html.AntiForgeryToken()
                                <div class="step-pane active" style="margin-top:20px">
                                    <!-- wizard form starts here -->
                                    <div class="form-group row">
                                        <label class="col-md-2 control-label"> CheckNumber </label>
                                        <div class="col-md-3">
                                            @Html.TextBoxFor(model => model.EmployeeId, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.EmployeeId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div id="amend">
                                        <div class="form-group row">
                                            <label class="col-md-2 control-label">Check number</label>
                                            <div class="col-md-2">
                                                @Html.EditorFor(model => model.CheckNumber, new { htmlAttributes = new { @class = "form-control"} })
                                                @Html.ValidationMessageFor(model => model.CheckNumber, "", new { @class = "text-danger" })
                                            </div>
                                            <label class="col-md-1 control-label">Force Number</label>
                                            <div class="col-lg-2">
                                                @Html.EditorFor(model => model.ForceNumber, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.ForceNumber, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <label class="col-md-2 control-label">FirstName</label>
                                            <div class="col-md-2">
                                                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                                            </div>
                                            <label class="col-md-1 control-label">MiddleName</label>
                                            <div class="col-lg-2">
                                                @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
                                            </div>
                                            <label class="col-md-1 control-label">LastName</label>
                                            <div class="col-lg-2">
                                                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <label class="col-md-2 control-label">Institution</label>
                                            <div class="col-md-2">
                                                @Html.DropDownListFor(model => model.CompanyId, ViewBag.Company as SelectList, "Select", new { @class = "form-control select2" })
                                                @Html.ValidationMessageFor(model => model.CompanyId, "", new { @class = "text-danger" })
                                            </div>
                                            <label class="col-md-1 control-label">Department</label>
                                            <div class="col-lg-2">
                                                @Html.DropDownListFor(model => model.DepartmentId, ViewBag.Department as SelectList, "Select Department", new { @class = "form-control select2" })
                                                @Html.ValidationMessageFor(model => model.DepartmentId, "", new { @class = "text-danger" })
                                            </div>
                                            <label class="col-md-1 control-label">Workstation</label>
                                            <div class="col-lg-2">
                                                @Html.DropDownListFor(model => model.WorstationId, ViewBag.WorkStation as SelectList, "Select Workstation", new { @class = "form-control select2" })
                                                @Html.ValidationMessageFor(model => model.WorstationId, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <label class="col-md-2 control-label">Region</label>
                                            <div class="col-lg-2">
                                                @Html.EditorFor(model => model.RegionName, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                                @Html.ValidationMessageFor(model => model.RegionName, "", new { @class = "text-danger" })
                                            </div>
                                            <label class="col-md-1 control-label">Position</label>
                                            <div class="col-md-5">
                                                @Html.DropDownListFor(model => model.PositionId, ViewBag.Position as SelectList, "Select Position", new { @class = "form-control select2" })
                                                @Html.ValidationMessageFor(model => model.PositionId, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="panel panel-default" style="border-radius: 0px">
                                        <!-- Default panel contents -->
                                        <div class="panel-heading">
                                            <h3 class="panel-title">Actions</h3>
                                        </div>
                                        <div class="panel-body">
                                            <label class="col-md-2 control-label">Employee Status</label>
                                            <div class="col-md-5">
                                                @Html.DropDownListFor(model => model.EmployeeStatusId, ViewBag.EmployeeStatus as SelectList, "Select Status", new { @class = "form-control select2", @readonly = true })
                                                @Html.ValidationMessageFor(model => model.EmployeeStatusId, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="panel-footer">
                                        <a href="@Url.Action("AmendEmployeelist", "Employees")" class="btn btn-default btn-flat" style="margin-left:200px">
                                            <span class="glyphicon glyphicon-arrow-left" aria-hidden="true"></span>
                                            Back
                                        </a>
                                        <button type="button" onclick="amendEmployee()" class="btn btn-info">
                                            <span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"></span> Save
                                        </button>

                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </article>
        </div>
    </section>
    <!-- end widget grid -->
</div>
<!-- end widget div -->
@section pagespecific {
    <!--PAGE RELATED PLUGIN(S)-->
    <script src="~/Scripts/libs/jquery.validate.min.js"></script>
    <script src="~/Scripts/libs/jquery.validate.unobtrusive.js"></script>
    <script src="~/Scripts/libs/jquery.unobtrusive-ajax.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            var url = '@Url.Action("GetEmployee", "Employees")';
            $("#EmployeeId").select2({
                minimumInputLength: 4,
                width: 'resolve',
                ajax: {
                    url: url,
                    type: "POST",
                    dataType: 'json',
                    data: function (searchQuery) {
                        return {
                            searchQuery: searchQuery,
                        };
                    },
                    results: function (data, page) {
                        return {
                            results: data.employees
                        };
                    }
                }
            });
        });

       var amendEmployee1 = function (){
            debugger
            ///$.validator.unobtrusive.parse("#form");

            var url = '@Url.Action("AmendSaveEmployee", "Employees")';

            var url1 = '@Url.Action("Amendemployeelist", "Employees")';

            var model = $("#form").serialize();
            $.ajax({
                type: "POST",
                url: url,
                data: model,
                success: function (response) {
                    if (response == "success") {
                        swal("Employee modified Successfully!", { icon: "success" })
                            .then((value) => {
                                window.location.href = url1;
                            })
                    }
                    else if (response == "error") {
                        swal("Error on amending employee!", { icon: "warning" })
                            .then((value) => {
                            })
                    }
                    else {
                        swal("Error on amending employee!", { icon: "error"})
                            .then((value) =>{
                            })
                    }
                },
                error: function (response) {
                    swal("Error on saving employee!")
                    location.reload();
                }
            });
        };

        var amendEmployee = function () {
           // $.validator.unobtrusive.parse("#form");
            if (!$("#form").valid()) {
                return false;
            }

    var url = '@Url.Action("AmendSaveEmployee", "Employees")';
    var url1 = '@Url.Action("employeeamendnewlist", "Employees")';

    var model = $("#form").serialize();

    $.ajax({
        type: "POST",
        url: url,
        data: model,
        success: function (response) {
            if (response[1] == "success") {
                swal("Employee modified Successfully!", { icon: "success" })
                    .then(() => {
                        window.location.href = url1;
                    });
            } else {
                swal("Error on amending employee!", { icon: "error" });
            }
        },
        error: function () {
            swal("Error on saving employee!");
        }
    });
};


        @*var amendEmployee = function (){
            debugger
            $.validator.unobtrusive.parse("#form");
            if (!$("#form").valid()) {
                return false;
            }

            $('input[type=checkbox]').each(function (){
                if (this.checked) {
                    var id = $(this).val();
                    $('#JobSalaryScaleId').val(id);
                }
            });

            var url = '@Url.Action("AmendSaveEmployee", "Employees")';

            var url1 = '@Url.Action("Amendemployeelist", "Employees")';

            var model = $("#form").serialize();

            $.ajax({
                type: "POST",
                url: url,
                data: model,
                success: function (response){
                    if(response == "success"){
                        swal("Employee modified Successfully!", { icon: "success" })
                            .then((value) => {
                                window.location.href = url1;
                            })
                    }
                    else{
                        swal("Error on editing employee!", { icon: "error" })
                            .then((value) => {
                                location.reload();
                            })
                    }
                },
                error: function (response){
                    swal("Error on editing employee!")
                    location.reload();
                }
            });
        };*@

        $("#EmployeeId").change(function () {
            debugger
            var employeeId = $("#EmployeeId").val();
            var url = '@Url.Action("GetEmployeeParsonalAction", "Employees")';
            url += '?employeeId=' + employeeId;

            $('#divLoader').show();
            $.ajax({
                url: url,
                datatype: "json",
                type: "Post",
                contenttype: 'application/json; charset=utf-8',
                async: true,
                success: function (data) {
                    $("#amend").html(data);
                    $('#divLoader').hide();
                },
                error: function (xhr) {
                    swal('Error please contact system admin');
                }
            })
        });

        $("#BankId").change(function () {
            var id = $("#BankId").val();
            var url = '@Url.Action("GetBankBranches", "Employees")';
            url += '?id=' + id;
            $.ajax({
                type: "POST",
                url: url,
                contentType: "html",
                success: function (response) {
                    $("#BankBranchId").empty();
                    $("#BankBranchId").append(response);
                }
            })
        });

        $("#WorstationId").change(function () {
            var url = "@Url.Action("PopulateRegionField", "Employees")";
            var id = $("#WorstationId").val();
            $.ajax({
                type: "POST",
                url: url,
                data: { id: id },
                success: function (response) {
                    $("#RegionName").val(response.regionName);
                },
                error: function (err) {
                    alert(err.statusText);
                },
            })
        });

        $(document).ready(function () {
            $('#sal').hide();
        });

        $("#JobCodeId").change(function (){
            debugger
            var id = $("#JobCodeId").val();
            var url = '@Url.Action("JobCodeAmount", "Employees")';
            url += '?id=' + id;
            $.ajax({
                url: url,
                datatype: "json",
                type: "Post",
                contenttype: 'application/json; charset=utf-8',
                async: true,
                success: function (data) {
                    console.log(data);
                    $("#list").html(data);
                    $('#sal').show();
                },
                error: function (xhr) {
                    swal('Error please contact system admin');
                }
            })
        });
    </script>
}


