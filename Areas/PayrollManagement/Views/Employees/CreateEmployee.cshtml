@model IFMIS.Areas.PayrollManagement.Models.EmployeeDetailVM
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<br />
<style>
    #form label {
        text-align: right;
    }
</style>
<div id="content" style="margin: 5px; padding-top: 30px">
    <div class="row">
        <div class="col-xs-12 col-sm-3 col-md-3 col-lg-3">
        </div>
    </div>
    <!-- widget grid -->
    <section id="widget-grid" class="">
        <!-- START ROW -->
        <div class="row">
            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">
                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">
                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2> New Hire Entry </h2>
                    </header>
                    <!-- widget div-->
                    <div>
                        <!-- widget edit box -->
                        <div class="jarviswidget-editbox">
                            <!-- This area used as dropdown edit box -->
                        </div>
                        <!-- end widget edit box -->
                        <!-- widget content -->
                        <div class="widget-body">
                            @using (Html.BeginForm("", "", FormMethod.Post, new { id = "form" }))
                            {
                                @Html.AntiForgeryToken()
                                <div class="step-pane active" style="margin-top:20px">
                                    <!-- wizard form starts here -->
                                    <div class="form-group row">
                                        <label class="col-md-2 control-label">Check number</label>
                                        <div class="col-md-2">
                                            @Html.EditorFor(model => model.CheckNumber, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                                            @Html.ValidationMessageFor(model => model.CheckNumber, "", new { @class = "text-danger" })
                                        </div>
                                        <label class="col-md-1 control-label">TYR Number</label>
                                        <div class="col-lg-2">
                                            @Html.EditorFor(model => model.TYRNumber, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.TYRNumber, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <label class="col-md-2 control-label">FirstName</label>
                                        <div class="col-md-2">
                                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                                        </div>
                                        <label class="col-md-1 control-label">MiddleName</label>
                                        <div class="col-lg-2">
                                            @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
                                        </div>
                                        <label class="col-md-1 control-label">LastName</label>
                                        <div class="col-lg-2">
                                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <label class="col-md-2 control-label">Institution</label>
                                        <div class="col-md-2">
                                            @Html.DropDownListFor(model => model.CompanyId, ViewBag.EmployeeInstitution as SelectList, "Select", new { @class = "form-control select2" })
                                            @Html.ValidationMessageFor(model => model.CompanyId, "", new { @class = "text-danger" })
                                        </div>
                                        <label class="col-md-1 control-label">Department</label>
                                        <div class="col-lg-2">
                                            @Html.DropDownListFor(model => model.DepartmentId, ViewBag.EmployeeDepartment as SelectList, "Select Department", new { @class = "form-control select2" })
                                            @Html.ValidationMessageFor(model => model.DepartmentId, "", new { @class = "text-danger" })
                                        </div>
                                        @*<label class="col-md-1 control-label">Department</label>
                                            <div class="col-lg-2">
                                                @Html.DropDownListFor(model => model.DepartmentId, ViewBag.Department as SelectList, "Select Department", new { @class = "form-control select2" })
                                                @Html.ValidationMessageFor(model => model.DepartmentId, "", new { @class = "text-danger" })
                                            </div>*@
                                        <label class="col-md-1 control-label">Workstation</label>
                                        <div class="col-lg-2">
                                            @Html.DropDownListFor(model => model.WorkstationId, ViewBag.EmployeeWorkStation as SelectList, "Select Workstation", new { @class = "form-control select2" })
                                            @Html.ValidationMessageFor(model => model.WorkstationId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <label class="col-md-2 control-label">Region</label>
                                        <div class="col-lg-2">
                                            @Html.EditorFor(model => model.RegionName, new { htmlAttributes = new { @class = "form-control", disabled = "true" } })
                                            @Html.ValidationMessageFor(model => model.RegionName, "", new { @class = "text-danger" })
                                        </div>
                                        <label class="col-md-1 control-label">Position</label>
                                        <div class="col-md-5">
                                            @Html.DropDownListFor(model => model.PositionId, ViewBag.EmployeePosition as SelectList, "Select Position", new { @class = "form-control select2" })
                                            @Html.ValidationMessageFor(model => model.PositionId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <label class="col-md-2 control-label">Date of Birth</label>
                                        <div class="col-md-2">
                                            @Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
                                        </div>
                                        <label class="col-md-1 control-label">Gender</label>
                                        <div class="col-md-2">
                                            Male
                                            @Html.RadioButtonFor(model => model.Gender, "Male", new { @checked = true })
                                            Female
                                            @Html.RadioButtonFor(model => model.Gender, "Female")
                                        </div>
                                        <label class="col-md-1 control-label">Marital Status</label>
                                        <div class="col-md-2">
                                            @Html.EnumDropDownListFor(model => model.MaritalStatus, "--Select--", new { @class = "form-control select2" })
                                            @Html.ValidationMessageFor(model => model.MaritalStatus, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <label class="col-md-2 control-label">NationalId</label>
                                        <div class="col-md-2">
                                            @Html.EditorFor(model => model.NationalId, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.NationalId, "", new { @class = "text-danger" })
                                        </div>
                                        <label class="col-md-1 control-label">Date of Enrollment</label>
                                        <div class="col-md-2">
                                            @Html.EditorFor(model => model.AppointmentDate, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.AppointmentDate, "", new { @class = "text-danger" })
                                        </div>
                                        <label class="col-md-1 control-label">Date of Promotion(DOP)</label>
                                        <div class="col-md-2">
                                            @Html.EditorFor(model => model.DateOfPromotion, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.DateOfPromotion, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <label class="col-md-2 control-label">Educational Level</label>
                                        <div class="col-md-2">
                                            @Html.DropDownListFor(model => model.EducationalLevelId, ViewBag.Educations as SelectList, "Select Education Level", new { @class = "form-control select2" })
                                            @Html.ValidationMessageFor(model => model.EducationalLevelId, "", new { @class = "text-danger" })
                                        </div>
                                        <label class="col-md-1 control-label">Course</label>
                                        @*<div class="col-lg-5">
                                                @Html.DropDownListFor(model => model.EducationSubLevelId, new SelectList(""), "Select", new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.EducationSubLevelId, "", new { @class = "text-danger" })
                                            </div>*@
                                    <div class="col-lg-5">
                                        @Html.TextAreaFor(model => model.CourseName, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.CourseName, "", new { @class = "text-danger" })
                                    </div>
                                    </div>
                                    <div class="form-group row">
                                        <label class="col-md-2 control-label"> Payment Mode </label>
                                        <div class="col-md-2">
                                            Auto
                                            @Html.RadioButtonFor(model => model.PaymentMode, "AUTO", new { @checked = true, id = "a1" })
                                            Cash
                                            @Html.RadioButtonFor(model => model.PaymentMode, "CASH", new { id = "c1" })
                                        </div>
                                        <label class="col-md-1 control-label">Bank</label>
                                        <div class="col-md-5">
                                            @Html.DropDownListFor(model => model.BankId, ViewBag.Banks as SelectList, "Select Bank", new { @class = "form-control select2", id = "bank1" })
                                            @Html.ValidationMessageFor(model => model.BankId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <label class="col-md-2 control-label">Branch</label>
                                        <div class="col-md-2">
                                            @Html.DropDownListFor(model => model.BankBranchId, new SelectList(""), "Select Branch", new { @class = "form-control select2", id = "branch1" })
                                            @Html.ValidationMessageFor(model => model.BankBranchId, "", new { @class = "text-danger" })
                                        </div>
                                        <label class="col-md-1 control-label">Account No#</label>
                                        <div class="col-md-2">
                                            @Html.EditorFor(model => model.AccountNumber, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.AccountNumber, "", new { @class = "text-danger" })
                                        </div>
                                        <label class="col-md-1 control-label">Postal Address</label>
                                        <div class="col-md-2">
                                            @Html.EditorFor(model => model.PostalAddress, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.PostalAddress, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        @Html.HiddenFor(model => model.JobSalaryScaleId)
                                        <label class="col-md-2 control-label">MobileNo1</label>
                                        <div class="col-md-2">
                                            @Html.EditorFor(model => model.MobileNo1, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.MobileNo1, "", new { @class = "text-danger" })
                                        </div>
                                        <label class="col-md-1 control-label">MobileNo2</label>
                                        <div class="col-md-2">
                                            @Html.EditorFor(model => model.MobileNo2, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.MobileNo2, "", new { @class = "text-danger" })
                                        </div>
                                        <label class="col-md-1 control-label">Email1</label>
                                        <div class="col-md-2">
                                            @Html.EditorFor(model => model.Email1, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Email1, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <label class="col-md-2 control-label"> Job Code </label>
                                        <div class="col-lg-2">
                                            @Html.DropDownListFor(model => model.JobCodeId, ViewBag.EmployeeJobCodes as SelectList, "Select code", new { @class = "form-control select2" })
                                            @Html.ValidationMessageFor(model => model.JobCodeId, "", new { @class = "text-danger" })
                                        </div>
                                        <label class="col-md-1 control-label">Employee Status</label>
                                        <div class="col-md-5">
                                            @Html.DropDownListFor(model => model.PayStatusId, ViewBag.EmployeeStatus as SelectList, "Select status", new { @class = "form-control select2" })
                                            @Html.ValidationMessageFor(model => model.PayStatusId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group row" id="sal">
                                        <label class="col-md-2 control-label">Salary Scale</label>
                                        <div class="col-md-8" id="list"></div>
                                    </div>
                                </div>
                            }
                            <div class="panel-footer">
                                <a href="@Url.Action("NewEmployeeList", "Employees")" class="btn btn-default btn-flat" style="margin-left:230px">
                                    <span class="glyphicon glyphicon-arrow-left" aria-hidden="true"></span>
                                    Back
                                </a>
                                <button style="margin-right:245px" onclick="addEmployee()" value="save" class="btn btn-info">
                                    <span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"></span>
                                    Save
                                    <img src="~/Content/img/loading.gif" id="saveLoader" />
                                </button>

                            </div>
                        </div>
                    </div>
                </div>
            </article>
        </div>
    </section>
    <!-- end widget grid -->
</div>
<!-- end widget div -->
@section pagespecific {
    <!--PAGE RELATED PLUGIN(S)-->
    <script src="~/Scripts/libs/jquery.validate.min.js"></script>
    <script src="~/Scripts/libs/jquery.validate.unobtrusive.js"></script>
    <script src="~/Scripts/libs/jquery.unobtrusive-ajax.min.js"></script>
    <script type="text/javascript">

        $(document).ready(function () {
            $("#CompanyId, #DepartmentId").select2();
        });

        $("#c1").click(function (){
            $("#AccountNumber").prop("disabled", true);
            $("#bank1").prop("disabled", true);
            $("#branch1").prop("disabled", true);
            $("#AccountNumber").val('');
            $("#BankId").val('');
            $("#branch1").val('');
        })

        $("#a1").click(function (){
            $("#AccountNumber").prop("disabled", false);
            $("#bank1").prop("disabled", false);
            $("#branch1").prop("disabled", false);
            $("#BankId").prop("disabled", false);
        })

        $("#saveLoader").toggle(false);
        var addEmployee = function () {
            //$.validator.unobtrusive.parse("#form");
            if (!$("#form").valid()){
                return false;
            }

            if ($('.chBox:checked').length < 1) {
                swal("Please Select salary amount!", { icon: "info" })
                    .then((value) => {
                    })

               return false;
            }

            $('input[type=checkbox]').each(function () {
                if (this.checked) {
                    var id = $(this).val();
                    $('#JobSalaryScaleId').val(id);
                }
            });

            $("#saveLoader").toggle(true);
            var url = '@Url.Action("CreateEmployee", "Employees")';
            var url1 = '@Url.Action("NewEmployeeList", "Employees")'
            var model = $("#form").serialize();
            $.ajax({
                type: "POST",
                url: url,
                data: model,
                success: function (response) {
                    if (response == "success") {
                        swal("Employee Saved Successfully!", { icon: "success" })
                            .then((value) => {
                                window.location.href = url1;
                            })
                    }
                    else if (response == "exist") {
                        swal("Employee Exist!", { icon: "info" })
                            .then((value) => {

                            })
                    } else if (response == "acccountExist"){
                        swal("Account number exist!", { icon: "info" })
                            .then((value) => {
                            })
                    } else if (response == "Please fill account number or bank") {
                        swal("Please fill account number or bank!", { icon: "info" })
                            .then((value) => {
                            })
                    }
                    else {
                        swal("Error on saving employee!", { icon: "error"})
                            .then((value) =>{

                            })
                    }
                },
                error: function (response) {
                    swal("Error on saving employee!")

                }
            });
        };

        $("#BankId").change(function () {
            var id = $("#BankId").val();
            var url = '@Url.Action("GetBankBranches", "Employees")';
            url += '?id=' + id;
            $.ajax({
                type: "POST",
                url: url,
                contentType: "html",
                success: function (response) {
                    $("#BankBranchId").empty();
                    $("#BankBranchId").append(response);
                }
            })
        });

        $("#WorstationId").change(function () {
            var url = "@Url.Action("PopulateRegionField", "Employees")";
            var id = $("#WorstationId").val();
            $.ajax({
                type: "POST",
                url: url,
                data: { id: id },
                success: function (response) {
                    $("#RegionName").val(response.regionName);
                },
                error: function (err) {
                    alert(err.statusText);
                },
            })
        });

        $(document).ready(function () {
            $('#sal').hide();
        });


        $("#JobCodeId").change(function () {
            debugger
            var id = $("#JobCodeId").val();
            var url = '@Url.Action("JobCodeAmount", "Employees")';
            url += '?id=' + id;
            $.ajax({
                url: url,
                datatype: "json",
                type: "Post",
                contenttype: 'application/json; charset=utf-8',
                async: true,
                success: function (data){
                    console.log(data);
                    $("#list").html(data);
                    $('#sal').show();
                },
                error: function (xhr) {
                    swal('Error please contact system admin');
                }
            })
        });

        $("#EducationalLevelId1").change(function () {
            debugger
               var url = '@Url.Action("GetCourse", "Employees")';
               var id = $("#EducationalLevelId").val();
                url += '?id=' + id;
                $.ajax({
                    type: "POST",
                    url: url,
                    contentType: "html",
                    success: function (response){
                        $("#EducationSubLevelId").empty();
                        $("#EducationSubLevelId").append(response);
                    }
                })
        });

        $("#CompanyId1").change(function () {
            debugger
               var url = '@Url.Action("GetCourse", "Employees")';
               var id = $("#InstitutionId").val();
                url += '?id=' + id;
                $.ajax({
                    type: "POST",
                    url: url,
                    contentType: "html",
                    success: function (response){
                        $("#InstitutionSubLevelId").empty();
                        $("#InstitutionSubLevelId").append(response);
                    }
                })
        });

        $("#CompanyId11").on("change", function () {

            var institutionId = $("#CompanyId").val();
            var url = '@Url.Action("GetPayStations", "Employees")';
            $("#CompanyId").select2({
                minimumInputLength: 2,  // minimumInputLength for sending ajax request to server
                width: 'resolve',   // to adjust proper width of select2 wrapped elements
                ajax: {
                    url: url, // Controller - Select2Demo and Action -AccessRemoteData
                    type: "GET",
                    dataType: 'json',
                    data: function (term) {
                        return {
                            institutionId: institutionId,
                            term: term
                        };
                    },
                    results: function (data, page) {
                        return { results: data.payStations }; // data.CountryList returning json data from Controlle
                    }
                }
            });
        });

    $("#CompanyId").on("change", function () {
        var institutionId = $(this).val();
        var url = '@Url.Action("GetPayStations", "Employees")';

        if (institutionId) {
            $.ajax({
                url: url,
                type: "GET",
                dataType: "json",
                data: { institutionId: institutionId, term: '' },  //Pass empty term initially
                success: function (response) {
                    var departmentDropdown = $("#DepartmentId");
                    departmentDropdown.empty();  //Clear existing options
                    departmentDropdown.append($('<option>').text("Select Department").attr("value", ""));

                    $.each(response.payStations, function (index, item) {
                        departmentDropdown.append($('<option>').text(item.text).attr("value", item.id));
                    });

                    departmentDropdown.trigger("change");  // Ensure select2 updates
                },
                error: function () {
                    alert("Error fetching departments.");
                }
            });
        } else {
            $("#DepartmentId").empty().append($('<option>').text("Select Department").attr("value", ""));
        }
});

    </script>
}
