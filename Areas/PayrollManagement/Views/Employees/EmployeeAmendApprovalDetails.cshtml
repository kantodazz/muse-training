@model IFMIS.Areas.PayrollManagement.Models.EmployeeDetailAmendVM
@{
    ViewBag.Title = "Details";
}
<style>
    fieldset.scheduler-border {
        border: 1px groove #ddd !important;
        padding: 0 1.4em 1.4em 1.4em !important;
        margin: 0 0 1.5em 0 !important;
        -webkit-box-shadow: 0px 0px 0px 0px #000;
        box-shadow: 0px 0px 0px 0px #000;
    }

    legend.scheduler-border {
        width: inherit; /* Or auto */
        padding: 0 10px; /* To give a bit of padding on the left and right */
        border-bottom: none;
    }
</style>
<div id="content">
    <!-- widget grid -->
    <section id="widget-grid" class="">
        <!-- row -->
        <div class="row">
            <!-- NEW WIDGET START -->
            <article class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget jarviswidget-color-white" id="wid-id-0" data-widget-editbutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">
                    <!-- widget options:
                    usage: <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false">
                    data-widget-colorbutton="false"
                    data-widget-editbutton="false"
                    data-widget-togglebutton="false"
                    data-widget-deletebutton="false"
                    data-widget-fullscreenbutton="false"
                    data-widget-custombutton="false"
                    data-widget-collapsed="true"
                    data-widget-sortable="false"
                    -->
                    <header>
                        <span class="widget-icon"> <i class="fa fa-table"></i> </span>
                        <h2>Employee Details</h2>
                    </header>
                    <!-- widget content -->
                    <div class="widget-body">
                        <div class="col-md-12">
                            <div class="col-md-12">
                                <div class="panel-heading">
                                    @*<h3 class="panel-title"><strong><u> Employee Details </u></strong></h3>*@
                                </div>
                                <div class="form-group row">
                                    <label class="col-md-1 control-label">Company</label>
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.CompanyName, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                    </div>
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.CompanyNameOld, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="col-md-1 control-label">Check number</label>
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.CheckNumber, new { htmlAttributes = new { @class = "form-control",@readOnly=true } })
                                    </div>
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.CheckNumberOld, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="col-md-1 control-label">Force Number</label>
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.ForceNumber, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                    </div>
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.ForceNumberOld, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="col-md-1 control-label">FirstName</label>
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                    </div>
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.FirstNameOld, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="col-md-1 control-label">MiddleName</label>
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                    </div>
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.MiddleNameOld, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="col-md-1 control-label">LastName</label>
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                    </div>
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.LastNameOld, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    <label class="col-md-1 control-label">Department</label>
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.DepartmentName, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                    </div>
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.DepartmentNameOld, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="col-md-1 control-label">Educational Level</label>
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.EducationalLevelName, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                    </div>
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.EducationalLevelNameOld, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="col-md-1 control-label">Course</label>
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.EducationSublevelName, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                    </div>
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.EducationSublevelNameOld, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="col-md-1 control-label">WorkStation</label>
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.WorkstationName, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                    </div>
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.WorkstationNameOld, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="col-md-1 control-label">Region</label>
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.RegionName, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                    </div>
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.RegionNameOld, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="col-md-1 control-label">Position</label>
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.PositionDescription, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                    </div>
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.PositionDescriptionOld, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="col-md-1 control-label">BirthDate</label>
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                    </div>
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.BirthDateOld, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="col-md-1 control-label">Gender</label>
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                    </div>
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.GenderOld, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="col-md-1 control-label">Marital Status</label>
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.MaritalStatusName, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                    </div>
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.MaritalStatusNameOld, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="col-md-1 control-label">Payment Mode</label>
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.PaymentTypeTemp, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                    </div>
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.PaymentTypeTempOld, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="col-md-1 control-label">Date of Enrollment</label>
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.AppointmentDate, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                    </div>
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.AppointmentDateOld, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="col-md-1 control-label"> Promotion Date</label>
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.DateOfPromotion, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                    </div>
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.DateOfPromotionOld, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="col-md-1 control-label"> NationalId</label>
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.NationalId, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                    </div>
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.NationalIdOld, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="col-md-1 control-label"> Bank</label>
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.BankName, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                    </div>
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.BankNameOld, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="col-md-1 control-label"> Account</label>
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.AccountNumber, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                    </div>
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.AccountNumberOld, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="col-md-1 control-label"> Job Code</label>
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.JobCodeName, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                    </div>
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.JobCodeNameOld, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="col-md-1 control-label"> Salary Amount</label>
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.SalaryAmount, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                    </div>
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.SalaryAmountOld, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="col-md-1 control-label"> Postal Address</label>
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.PostalAddress, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                    </div>
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.PostalAddressOld, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="col-md-1 control-label"> MobileNo</label>
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.MobileNo1, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                    </div>
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.MobileNo1Old, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="col-md-1 control-label"> Email</label>
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.Email1, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                    </div>
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.Email1Old, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <a href="@Request.UrlReferrer" class="btn btn-default">
                            <span class="glyphicon glyphicon-backward" aria-hidden="true"></span>
                            Back
                        </a>
                        <button onclick="confirmEmployee(@Model.EmployeeAmendId)" value="save" class="btn btn-info">
                            <span class="glyphicon glyphicon-thumbs-up" aria-hidden="true"> </span>
                            Approve
                        </button>
                        <button onclick="reject(@Model.EmployeeAmendId)" value="save" class="btn btn-info">
                            <span class="glyphicon glyphicon-thumbs-up" aria-hidden="true"> </span>
                            Reject
                        </button>
                    </div>
                    <!-- end widget div -->
                </div>
                <!-- end widget -->
            </article>
        </div>
    </section>
    <!-- end widget grid -->
</div>
@section Scripts {
    <script>
          $(document).ready(function (){
            $("#dt_basic").DataTable({

            });
        });

      function confirmEmployee(i, id){
            debugger;
            if (i == 'x') i = id;
            swal({
                title: "Approval!",
                text: "Are you sure you want to Approve Employee?",
                buttons: [
                  'Yes',
                  'No'
                ],
            }).then(function (isConfirm){
                if (isConfirm) {
                    swal("Cancelled", "No change was made");
                } else {
                    confirm(i)
                }
            });
        };

        var confirm = function (id) {
            debugger;
            var url = '@Url.Action("ApproveEmployeeAmend", "Employees")/' + id;
            var url1 = '@Url.Action("AmendEmployeeApprovalNewList", "Employees")/' + id;
            $.ajax({
                type: "POST",
                url: url,
                data: { id: id },
                success: function (response) {
                    if (response == "success") {
                        swal("Employee Approved Successfully!",{ icon: "success" }).then((e) =>{
                            window.location.href = url1;
                        });
                    } else if (response == "DbException") {
                        swal("Error on approved Employee!", { icon: "error" }).then((e) =>{
                           
                        });
                    }
                },
                error: function (xhr){
                    swal("An error has occured, contact system support");
                },
            });
        };

          function reject(i, id) {
            debugger
            if (i == 'x') i = id;
            swal({
                text: 'Rejection Reason',
                content: "input",
                button: {
                    text: "Save",
                    closeModal: true,
                },
            }).then(remark => {
                if (!remark) {
                    swal("No reason was provided");
                } else {
                    rejectPost(i, remark);
                };
            });
            $('#confirmModal').modal('hide');
        }

        function rejectPost(Id, remark){
           debugger
           var url1 = '@Url.Action("AmendEmployeeApprovalNewList", "Employees")/' + Id;
            $.ajax({
                type: "post",
                url: '@Url.Action("RejectEmployeeAmend", "Employees")',
                data: { "Id": Id, "Remark": remark },
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {
                    if (response == "success") {
                        swal("Saved Successfully!", { icon: "success" }).then((e) => {
                            window.location.href = url1;
                        });
                    }
                    else if(response == "DbException") {
                        swal("Error on rejecting Employee!", { icon: "error" }).then((e) => {
  
                        });
                    }
                },
                failure: function (error) {
                    swal(error);
                }
            });
        }
    </script>
}

