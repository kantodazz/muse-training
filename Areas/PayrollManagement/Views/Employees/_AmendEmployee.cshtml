@model IFMIS.Areas.PayrollManagement.Models.EmployeeDetailVM
@using (Html.BeginForm("", "", FormMethod.Post, new { id = "form" }))
{
    @Html.AntiForgeryToken()
    <div class="form-group row">
        @Html.HiddenFor(model => model.EmployeeId)
    </div>
    <div class="form-group row">
        @Html.HiddenFor(model => model.EmployeeId)
        @Html.LabelFor(model => model.HasCheckNumber, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @Html.EnumDropDownListFor(model => model.HasCheckNumber, "Please Select", new { @class = "form-control select2" })
            @Html.ValidationMessageFor(model => model.HasCheckNumber, "", new { @class = "text-danger" })
        </div>
        @Html.LabelFor(model => model.CheckNumber, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @Html.EditorFor(model => model.CheckNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CheckNumber, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group row">
        @Html.LabelFor(model => model.TYRNumber, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @Html.EditorFor(model => model.TYRNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TYRNumber, "", new { @class = "text-danger" })
        </div>
        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group row">
        @Html.LabelFor(model => model.MiddleName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
        </div>
        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group row">
        @Html.LabelFor(model => model.InstitutionCode, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @Html.DropDownListFor(model => model.InstitutionCode, ViewBag.EmployeeInstitution as SelectList, "Select", new { @class = "form-control select2" })
            @Html.ValidationMessageFor(model => model.InstitutionCode, "", new { @class = "text-danger" })
        </div>
        @Html.LabelFor(model => model.InstitutionSubLevelId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @Html.DropDownListFor(model => model.InstitutionSubLevelId, ViewBag.EmployeeDepartment as SelectList, "Select Department", new { @class = "form-control select2" })
            @Html.ValidationMessageFor(model => model.InstitutionSubLevelId, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group row">
        @Html.LabelFor(model => model.PositionId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @Html.DropDownListFor(model => model.PositionId, ViewBag.Position as SelectList, "Select Position", new { @class = "form-control select2" })
            @Html.ValidationMessageFor(model => model.PositionId, "", new { @class = "text-danger" })
        </div>
        @Html.LabelFor(model => model.BirthDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group row">
        @Html.LabelFor(model => model.GenderId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @Html.DropDownListFor(model => model.GenderId, ViewBag.Gender as SelectList, "Select Gender", new { @class = "form-control select2" })
            @Html.ValidationMessageFor(model => model.GenderId, "", new { @class = "text-danger" })
        </div>
        @Html.LabelFor(model => model.AppointmentDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @Html.EditorFor(model => model.AppointmentDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.AppointmentDate, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group row">
        @Html.LabelFor(model => model.BankId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @Html.DropDownListFor(model => model.BankId, ViewBag.Banks as SelectList, "Select Bank", new { @class = "form-control select2" })
            @Html.ValidationMessageFor(model => model.BankId, "", new { @class = "text-danger" })
        </div>
        @Html.LabelFor(model => model.AccountNumber, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @Html.EditorFor(model => model.AccountNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.AccountNumber, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group row">
        @Html.LabelFor(model => model.BeneficiaryCategory, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @Html.DropDownListFor(model => model.BeneficiaryCategory, Model.BeneficiaryCategories, "Select Category", new { @class = "form-control select2" })
            @Html.ValidationMessageFor(model => model.BeneficiaryCategory, "", new { @class = "text-danger" })
        </div>
        @Html.LabelFor(model => model.PayStatusId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @Html.DropDownListFor(model => model.PayStatusId, ViewBag.EmployeeStatus as SelectList, "Select status", new { @class = "form-control select2" })
            @Html.ValidationMessageFor(model => model.PayStatusId, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group row">
        @if (Model.InstitutionCode == "00230000")
        {
            @Html.LabelFor(model => model.SalaryAmount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3" style="">
                <div class="input-group">
                    <span class="input-group-addon"><i class="fa">TZS</i></span>
                    @Html.EditorFor(model => model.SalaryAmount, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SalaryAmount, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        @if (Model.InstitutionCode != "00230000")
        {
            @Html.LabelFor(model => model.JobCodeId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.HiddenFor(model => model.JobSalaryScaleId)
                @Html.DropDownListFor(model => model.JobCodeId, ViewBag.EmployeeJobCodes as SelectList, "Select code", new { @class = "form-control select2" })
                @Html.ValidationMessageFor(model => model.JobCodeId, "", new { @class = "text-danger" })
            </div>
        }
    </div>
    <div class="form-group row" id="sal">
        <label class="col-md-2 control-label">Salary Scale</label>
        <div class="col-md-8" id="list"></div>
    </div>
}

<script>

        $("input[type=datetime]")
            .wrap('<div class="input-group">')
            .datepicker({
                dateFormat: "yy-mm-dd",
                changeMonth: true,
                changeYear: true,
                showOn: "both",
                buttonImage: '@Url.Content("~/Content/img/calendar.gif")'
                //maxDate: "+0D"
            })
            .next("button").button({
                icons: { primary: "ui-icon-calendar" },
                label: "Select Date",
                text: false
            })
            .addClass("btn btn-default")
            .wrap('<span class="input-group-btn">')
            .find('.ui-button-text')
            .css({
                'visibility': 'hidden',
                'display': 'inline'
            });
    $(document).ready(function () {
        $('#sal').hide();
        $('#termination').hide();
    });

    $("#PayStatusId").change(function () {
        var id = $("#PayStatusId").val();

        if (id == "4") {
            $('#termination').show();
        }
        else {
            $('#termination').hide();
        }
    });

    $("#JobCodeId").change(function (){
        var id = $("#JobCodeId").val();
        var url = '@Url.Action("JobCodeAmount", "Employees")';
        url += '?id=' + id;
        $.ajax({
            url: url,
            datatype: "json",
            type: "Post",
            contenttype: 'application/json; charset=utf-8',
            async: true,
            success: function (data) {
                console.log(data);
                $("#list").html(data);
                $('#sal').show();
            },
            error: function (xhr) {
                swal('Error please contact system admin');
            }
        })
    });
</script>

