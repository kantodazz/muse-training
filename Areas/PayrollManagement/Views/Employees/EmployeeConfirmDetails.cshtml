@model IFMIS.Areas.PayrollManagement.Models.EmployeeDetailVM
@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    fieldset.scheduler-border {
        border: 1px groove #ddd !important;
        padding: 0 1.4em 1.4em 1.4em !important;
        margin: 0 0 1.5em 0 !important;
        -webkit-box-shadow: 0px 0px 0px 0px #000;
        box-shadow: 0px 0px 0px 0px #000;
    }

    legend.scheduler-border {
        width: inherit; /* Or auto */
        padding: 0 10px; /* To give a bit of padding on the left and right */
        border-bottom: none;
    }

    label {
        float: right;
        text-align: right
    }

    input[type=text] {
        float: right;
    }
</style>
<div id="content">
    <!-- widget grid -->
    <section id="widget-grid" class="">
        <!-- row -->
        <div class="row">
            <!-- NEW WIDGET START -->
            <article class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget jarviswidget-color-white" id="wid-id-0" data-widget-editbutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">
                    <!-- widget options:
                    usage: <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false">
                    data-widget-colorbutton="false"
                    data-widget-editbutton="false"
                    data-widget-togglebutton="false"
                    data-widget-deletebutton="false"
                    data-widget-fullscreenbutton="false"
                    data-widget-custombutton="false"
                    data-widget-collapsed="true"
                    data-widget-sortable="false"
                    -->
                    <header>
                        <span class="widget-icon"> <i class="fa fa-table"></i> </span>
                        <h2>Employee Details</h2>
                    </header>
                    <!-- widget content -->
                    <div class="widget-body">
                        <div class="col-md-12">
                            <div class="form-group row">
                                <label class="col-md-2 control-label">Company</label>
                                <div class="col-md-3">
                                    @Html.EditorFor(model => model.CompanyName, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="col-md-2 control-label">Check number</label>
                                <div class="col-md-3">
                                    @Html.EditorFor(model => model.CheckNumber, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                </div>
                                <label class="col-md-2 control-label">Force Number</label>
                                <div class="col-md-3">
                                    @Html.EditorFor(model => model.ForceNumber, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="col-md-2 control-label">First Name</label>
                                <div class="col-md-3">
                                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                </div>
                                <label class="col-md-2 control-label">Midd leName</label>
                                <div class="col-md-3">
                                    @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="col-md-2 control-label">Last Name</label>
                                <div class="col-md-3">
                                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                </div>
                                <label class="col-md-2 control-label">Region</label>
                                <div class="col-md-3">
                                    @Html.EditorFor(model => model.RegionName, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="col-md-2 control-label">Position</label>
                                <div class="col-md-3">
                                    @Html.EditorFor(model => model.PositionDescription, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                </div>
                                <label class="col-md-2 control-label">Date Of Birth</label>
                                <div class="col-md-3">
                                    @Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="col-md-2 control-label">Gender</label>
                                <div class="col-md-3">
                                    @Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                </div>
                                <label class="col-md-2 control-label">Marital Status</label>
                                <div class="col-md-3">
                                    @Html.EditorFor(model => model.MaritalStatusName, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="col-md-2 control-label">Payment Mode</label>
                                <div class="col-md-3">
                                    @Html.EditorFor(model => model.PaymentTypeTemp, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                </div>
                                <label class="col-md-2 control-label"> Bank</label>
                                <div class="col-md-3">
                                    @Html.EditorFor(model => model.BankName, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="col-md-2 control-label"> Account</label>
                                <div class="col-md-3">
                                    @Html.EditorFor(model => model.AccountNumber, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                </div>
                                <label class="col-md-2 control-label"> Job Code</label>
                                <div class="col-md-3">
                                    @Html.EditorFor(model => model.JobCodeName, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="col-md-2 control-label"> Salary Scale</label>
                                <div class="col-md-3">
                                    @Html.EditorFor(model => model.SalaryScaleName, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                </div>
                                <label class="col-md-2 control-label"> Salary Amount</label>
                                <div class="col-md-3">
                                    @Html.EditorFor(model => model.SalaryAmount, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="col-md-2 control-label">Department</label>
                                <div class="col-md-3">
                                    @Html.EditorFor(model => model.DepartmentName, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                </div>
                                <label class="col-md-2 control-label">WorkStation</label>
                                <div class="col-md-3">
                                    @Html.EditorFor(model => model.WorkstationName, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="col-md-2 control-label">Region</label>
                                <div class="col-md-3">
                                    @Html.EditorFor(model => model.RegionName, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                </div>
                                <label class="col-md-2 control-label"> NationalId</label>
                                <div class="col-md-3">
                                    @Html.EditorFor(model => model.NationalId, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="col-md-2 control-label"> Postal Address</label>
                                <div class="col-md-3">
                                    @Html.EditorFor(model => model.PostalAddress, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                </div>
                                <label class="col-md-2 control-label"> Mobile No</label>
                                <div class="col-md-3">
                                    @Html.EditorFor(model => model.MobileNo1, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="col-md-2 control-label">Date of Enrollment</label>
                                <div class="col-md-3">
                                    @Html.EditorFor(model => model.AppointmentDate, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                </div>
                                <label class="col-md-2 control-label"> Promotion Date</label>
                                <div class="col-md-3">
                                    @Html.EditorFor(model => model.DateOfPromotion, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="col-md-2 control-label"> Email</label>
                                <div class="col-md-3">
                                    @Html.EditorFor(model => model.Email1, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                </div>
                                <label class="col-md-2 control-label"> Employee Status</label>
                                <div class="col-md-3">
                                    @Html.EditorFor(model => model.StatusName, new { htmlAttributes = new { @class = "form-control", @readOnly = true } })
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="col-md-2"> Employee Status</label>
                                <div class="col-md-3">
                                    @Html.EditorFor(model => model.StatusName, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                </div>
                            </div>
                        </div>
                        <div style="margin-left:118px">
                            <a href="@Request.UrlReferrer" class="btn btn-default">
                                <span class="glyphicon glyphicon-backward
                                      aria-hidden="true"></span>
                                Back
                            </a>
                            <button onclick="confirmEmployee(@Model.EmployeeId)" value="save" class="btn btn-info">
                                <span class="glyphicon glyphicon-thumbs-up" aria-hidden="true"> </span>
                                Approve
                            </button>
                            <button onclick="reject(@Model.EmployeeId)" value="save" class="btn btn-info">
                                <span class="glyphicon glyphicon-thumbs-down" aria-hidden="true"> </span>
                                Reject
                            </button>
                        </div>
                    </div>
                    <!-- end widget div -->
                </div>
                <!-- end widget -->
            </article>
        </div>
    </section>
    <!-- end widget grid -->
</div>
@section Scripts {
    <script>
          $(document).ready(function (){
            $("#dt_basic").DataTable({

            });
        });

    function confirmEmployee(i, id){
            debugger;
            if (i == 'x') i = id;
            swal({
                title: "Approval!",
                text: "Are you sure you want to Approve Employee?",
                buttons: [
                  'Yes',
                  'No'
                ],
            }).then(function (isConfirm){
                if (isConfirm) {
                    swal("Cancelled", "No change was made");
                } else {
                    confirm(i)
                }
            });
        };

        var confirm = function (id) {
            debugger;
            var url = '@Url.Action("VerifyEmployee", "Employees")/' + id;
            var url1 = '@Url.Action("EmployeeConfirmedNewlist", "Employees")/' + id;
            $.ajax({
                type: "POST",
                url: url,
                data: { id: id },
                success: function (response) {
                    if (response == "success") {
                        swal("Employee Approved Successfully!",{ icon: "success" }).then((e) =>{
                            window.location.href = url1;
                        });
                    } else if (response == "DbException") {
                        swal("Error on Approved Employee!", { icon: "error" }).then((e) =>{
                            window.location.reload();
                        });
                    }
                },
                error: function (xhr) {
                    swal("An error has occured, contact system support");
                },
            });
        };

          function reject(i, id) {
        debugger
        if (i == 'x') i = id;
        swal({
            text: 'Rejection Reason',
            content: "input",
            button: {
                text: "Save",
                closeModal: true,
            },
        }).then(remark => {
            if (!remark) {
                swal("No reason was provided");
            } else {
                rejectPost(i, remark);
            };
        });
        $('#confirmModal').modal('hide');
    }

    function rejectPost(Id, remark) {
        debugger
        var url1 = '@Url.Action("EmployeeConfirmedNewList", "Employees")/' + Id;
        $.ajax({
            type: "post",
            url: '@Url.Action("RejectEmployee", "Employees")',
            data: { "Id": Id, "Remark": remark },
            contenttype: "application/json; charset=utf-8",
            datatype: "json",
            success: function (response) {
                if (response == "success") {
                    swal("Saved Successfully!", { icon: "success" }).then((e) => {
                        window.location.href = url1;
                    });
                }
                else if (response == "DbException") {
                    swal("Error on rejecting Employee!", { icon: "error" }).then((e) => {

                    });
                }
            },
            failure: function (error) {
                swal(error);
            }
        });
    }
    </script>
}

