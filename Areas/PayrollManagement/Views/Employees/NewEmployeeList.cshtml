@{
    ViewBag.Title = "Beneficiaries";
    Layout = "~/Views/Shared/_Layout.cshtml";

}
<div id="divLoader"></div>
<div id="content" style="margin: 5px; margin-top: 30px">
    <div class="row">
        <div class="col-xs-12 col-sm-3 col-md-3 col-lg-3">
        </div>
    </div>
    <!-- widget grid -->
    <section id="widget-grid" class="">
        <!-- START ROW -->
        <div class="row">
            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">
                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">
                    <header>
                        <span class="widget-icon"><i class="fa fa-edit"></i></span>
                        <h2> New Employee(s) </h2>
                    </header>
                    <div>
                        <div class="jarviswidget-editbox">
                        </div>
                        <div class="widget-body">
                            
                            <div class="row">
                                <a class="btn btn-info " onclick="location.href='@Url.Action("NewEmployee", "Employees")'" style="margin-left:15px" class="btn btn-action mr-1">
                                    <i class="glyphicon glyphicon-plus" aria-hidden="true"></i>
                                    Add New
                                </a>
                                <a class="btn btn-info " onclick="approveAmendEmployee()">
                                    <i class="glyphicon glyphicon-thumbs-up"></i> Confirm
                                </a>
                            </div>
                            <br /><br />
                            <br />
                            <table class="table table-striped table-bordered table-hover table-condensed" id="tblUsers">
                                <thead>
                                    <tr>
                                        <th>SN</th>
                                        <th></th>
                                        <th>Fullname </th>
                                        <th>CheckNumber </th>
                                        <th>TYR Number</th>
                                        <th>Account Number </th>
                                        <th>Salary Amount </th>
                                        <th>Status</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                            <!-- end widget content -->
                        </div>
                        <!-- end widget div -->
                    </div>
                    <!-- end widget -->
                </div>
            </article>
        </div>
    </section>
    <!-- end widget grid -->
</div>
@section pagespecific {
    <script type="text/javascript">
       $(function () {
           BindDataTable();
           $("#divLoader").show();
       });

    var BindDataTable = function (response) {
   $('#divLoader').show(); 

    var url = '@Url.Action("GetNewEmployeeList", "Employees")';
    $("#tblUsers").DataTable({
        "bServerSide": true,
        "sAjaxSource": url,
        "fnServerData": function (sSource, aoData, fnCallback) {
            $.ajax({
                type: "GET",
                url: sSource,
                data: aoData,
                success: function (data) {
                    fnCallback(data); 
                    $('#divLoader').hide(); 
                },
                error: function () {
                    $('#divLoader').hide(); 
                    swal("An error occurred while fetching data.");
                },
                complete: function () {
                    $('#divLoader').hide();
                }
            });
        },
        "aoColumns": [
            {
                render: function (data, type, row, meta) {
                    return meta.row + meta.settings._iDisplayStart + 1;
                }
            },
            {
                "bSortable": false,
                "render": function (data, type, row, meta) {
                    return '<input type="checkbox" value="' + row.EmployeeId + '" class="checkBoxConfirm">';
                }
            },
            { "mData": "FullName" },
            { "mData": "CheckNumber" },
            { "mData": "TYRNumber" },    
            { "mData": "AccountNumber" },
            { "mData": "SalaryAmount" },
            { "mData": "OverallStatus" },
            {
                "mData": "EmployeeId",
                "bSortable": false,
                "render": function (EmployeeId, type, full, meta) {
                    return '<div class="btn-group">\
                                  <button type="button" class="btn btn-info btn-xs dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\
                                 <span class="caret"></span\
                                     <span class="sr-only"></span>\
                             </button>\
                                <ul class="dropdown-menu">\
                                    <li><a href="@Url.Action("EditEmployee", "Employees")/' + EmployeeId + '"> Edit </a></li>\
                                    <li><a href="@Url.Action("EmployeeDetails", "Employees")/' + EmployeeId + '"> Details </a></li>\
                                    <li><a href="#" onclick="deleteEmployee(' + EmployeeId + ')"> Delete </a></li>\
                                </ul>\
                            </div>';
                }
            }
        ]
    });
};

 

        function deleteEmployee(i, id) {
           
            if (i == 'x') i = id;
            swal({
                title: "Deletion!",
                text: "Are you sure you want to Delete Employee?",
                buttons: [
                  'Yes',
                  'No'
                ],
            }).then(function (isConfirm) {
                if (isConfirm) {
                    swal("Cancelled", "No change was made");
                } else {
                    confirmdelete(i)
                }
            });
        };

        var confirmdelete = function (id) {
            $('#divLoader').show();
         
            var url = '@Url.Action("DeleteEmployee", "Employees")/' + id;
            $.ajax({
                type: "POST",
                url: url,
                data: { id: id },
                success: function (response) {
                    $('#divLoader').hide();
                    if (response == "success") {
                        swal("Employee Deleted Successfully!",{ icon: "success" }).then((e) =>{
                            window.location.reload();
                        });
                    } else if (response == "DbException") {
                        swal("Error on Deleting Employee!", { icon: "error" }).then((e) =>{
                            window.location.reload();
                        });
                    }
                },
                error: function (xhr) {
                    swal("An error has occured, contact system support");
                },
            });
        };

        var approveAmendEmployee = function () {
            debugger
            var csvIds = [];

            $("input:checkbox.checkBoxConfirm").each(function () {
                if ($(this).prop("checked")) {
                    csvIds.push($(this).val());
                }
            });

            if (csvIds.length == 0) {
                swal("No record selected!");
                return;
            }

            swal({
                title: "Confirmation!",
                text: "Are you sure you want to Confirm?",
                buttons: [
                    'Yes',
                    'No'
                ],
            }).then(function (isConfirm) {
                if (isConfirm) {
                    swal("Cancelled", "No change was made");
                } else {
                    confirmAmend(csvIds)
                }
            });
        }

        function confirmAmend(csvIds) {

            $('#resultLoading').show();

            var url = '@Url.Action("ConfirmNewEmployee", "Employees")';

            $.ajax({
                type: "POST",
                url: url,
                data: { ids: csvIds },
                success: function (response) {
                    //$('#resultLoading').hide();
                    if (response == "success") {
                        swal("Employee Confirmed Successfully!", { icon: "success" }).then((e) => {
                            window.location.reload();
                        });
                    } else if (response == "DbException") {
                        swal("Error on confirmation!", { icon: "error" }).then((e) => {
                            window.location.reload();
                        });
                    }
                },
                error: function (xhr){
                    swal("An error has occured, contact system support");
                },
            });
        };

         function rejectEarning() {
             debugger

             var csvIds = [];

             $("input:checkbox.checkBoxConfirm").each(function () {
                 if ($(this).prop("checked")) {
                     csvIds.push($(this).val());
                 }
             });

             if (csvIds.length == 0) {
                 swal("No record selected!");
                 return;
             }

            swal({
                text: 'Rejection Reason',
                content: "input",
                button: {
                    text: "Save",
                    closeModal: true,
                },
            }).then(remark => {
                if (!remark) {
                    swal("No reason was provided");
                } else {
                    rejectPost(remark, csvIds);
                };
            });

            $('#confirmModal').modal('hide');
        }

         function rejectPost(remark, csvIds){
            debugger
            $('#resultLoading').show();
            $.ajax({
                type: "post",
                url:  '@Url.Action("RejectEarning", "Employees")',
                data: { "ids": csvIds, "Remark": remark },
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {
                    if (response == "success") {
                        swal("Saved Successfully!", { icon: "success" }).then((e) => {
                            window.location.reload();
                        });
                    }
                    else if(response == "DbException") {
                        swal("Error on rejecting Employee!", { icon: "error" }).then((e) => {

                        });
                    }
                },
                failure: function (error) {
                    swal(error);
                }
            });
        }

          function confirmEmployee(i, id) {
            debugger;
            if (i == 'x') i = id;
            swal({
                title: "Confirmation!",
                text: "Are you sure you want to Confirm?",
                buttons: [
                  'Yes',
                  'No'
                ],
            }).then(function (isConfirm) {
                if (isConfirm){
                    swal("Cancelled", "No change was made");
                } else {
                    confirm(i)
                }
            });
        };

     var confirm = function (id) {
            debugger;
            var url = '@Url.Action("ConfirmAutomaticEarning", "Employees")/' + id;
            $.ajax({
                type: "POST",
                url: url,
                data: { id: id },
                success: function (response) {
                    if (response == "success") {
                        swal("Confirmed Successfully!",{ icon: "success" }).then((e) =>{
                            window.location.reload();
                        });
                    } else if (response == "DbException") {
                        swal("Error on Confirming!", { icon: "error" }).then((e) =>{
                            window.location.reload();
                        });
                    }
                },
                error: function (xhr) {
                    swal("An error has occured, contact system support");
                },
            });
        };

    </script>
}








