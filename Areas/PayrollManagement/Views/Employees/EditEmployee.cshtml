@model IFMIS.Areas.PayrollManagement.Models.EmployeeDetailVM
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div id="divLoader"></div>
<div id="content" style="margin:5px; padding-top: 50px">
    <div class="row">
        <div class="col-xs-12 col-sm-3 col-md-3 col-lg-3"></div>
    </div>
    <!-- widget grid -->
    <section id="widget-grid" class="">
        <!-- START ROW -->
        <div class="row">
            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">
                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">
                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i></span>
                        <h2>New Empployee</h2>
                    </header>
                    <!-- widget div-->
                    <div>
                        <!-- widget edit box -->
                        <div class="jarviswidget-editbox">
                            <!-- This area used as dropdown edit box -->
                        </div>
                        <div class="widget-body">
                            @using (Html.BeginForm("", "", FormMethod.Post, new { id = "form" }))
                            {
                                @Html.AntiForgeryToken()
                                <div class="form-horizontal">
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    <div class="form-group row">
                                        @Html.HiddenFor(model => model.EmployeeId)
                                        @Html.LabelFor(model => model.HasCheckNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-3">
                                            @Html.EnumDropDownListFor(model => model.HasCheckNumber, "Please Select", new { @class = "form-control select2" })
                                            @Html.ValidationMessageFor(model => model.HasCheckNumber, "", new { @class = "text-danger" })
                                        </div>
                                        @Html.LabelFor(model => model.CheckNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-3">
                                            @Html.EditorFor(model => model.CheckNumber, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.CheckNumber, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        @Html.LabelFor(model => model.TYRNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-3">
                                            @Html.EditorFor(model => model.TYRNumber, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.TYRNumber, "", new { @class = "text-danger" })
                                        </div>
                                        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-3">
                                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        @Html.LabelFor(model => model.MiddleName, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-3">
                                            @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
                                        </div>
                                        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-3">
                                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        @Html.LabelFor(model => model.InstitutionCode, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-3">
                                            @Html.DropDownListFor(model => model.InstitutionCode, ViewBag.EmployeeInstitution as SelectList, "Select", new { @class = "form-control select2" })
                                            @Html.ValidationMessageFor(model => model.InstitutionCode, "", new { @class = "text-danger" })
                                        </div>
                                        @Html.LabelFor(model => model.InstitutionSubLevelId, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-3">
                                            @Html.DropDownListFor(model => model.InstitutionSubLevelId, ViewBag.EmployeeDepartment as SelectList, "Select Department", new { @class = "form-control select2" })
                                            @Html.ValidationMessageFor(model => model.InstitutionSubLevelId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        @Html.LabelFor(model => model.PositionId, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-3">
                                            @Html.DropDownListFor(model => model.PositionId, ViewBag.Position as SelectList, "Select Position", new { @class = "form-control select2" })
                                            @Html.ValidationMessageFor(model => model.PositionId, "", new { @class = "text-danger" })
                                        </div>
                                        @Html.LabelFor(model => model.BirthDate, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-3">
                                            @Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        @Html.LabelFor(model => model.GenderId, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-3">
                                            @Html.DropDownListFor(model => model.GenderId, ViewBag.Gender as SelectList, "Select Gender", new { @class = "form-control select2" })
                                            @Html.ValidationMessageFor(model => model.GenderId, "", new { @class = "text-danger" })
                                        </div>
                                        @Html.LabelFor(model => model.AppointmentDate, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-3">
                                            @Html.EditorFor(model => model.AppointmentDate, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.AppointmentDate, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        @Html.LabelFor(model => model.BankId, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-3">
                                            @Html.DropDownListFor(model => model.BankId, ViewBag.Banks as SelectList, "Select Bank", new { @class = "form-control select2" })
                                            @Html.ValidationMessageFor(model => model.BankId, "", new { @class = "text-danger" })
                                        </div>
                                        @Html.LabelFor(model => model.AccountNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-3">
                                            @Html.EditorFor(model => model.AccountNumber, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.AccountNumber, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        @Html.LabelFor(model => model.BeneficiaryCategory, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-3">
                                            @Html.DropDownListFor(model => model.BeneficiaryCategory, Model.BeneficiaryCategories, "Select Category", new { @class = "form-control select2" })
                                            @Html.ValidationMessageFor(model => model.BeneficiaryCategory, "", new { @class = "text-danger" })
                                        </div>
                                        @Html.LabelFor(model => model.PayStatusId, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-3">
                                            @Html.DropDownListFor(model => model.PayStatusId, ViewBag.EmployeeStatus as SelectList, "Select status", new { @class = "form-control select2" })
                                            @Html.ValidationMessageFor(model => model.PayStatusId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        @if (Model.InstitutionCode == "00230000")
                                        {
                                            @Html.LabelFor(model => model.SalaryAmount, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-3" style="">
                                                <div class="input-group">
                                                    <span class="input-group-addon"><i class="fa">TZS</i></span>
                                                    @Html.EditorFor(model => model.SalaryAmount, new { htmlAttributes = new { @class = "form-control" } })
                                                    @Html.ValidationMessageFor(model => model.SalaryAmount, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        }
                                        @if (Model.InstitutionCode != "00230000")
                                        {
                                            @Html.LabelFor(model => model.JobCodeId, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-3">
                                                @Html.HiddenFor(model => model.JobSalaryScaleId)
                                                @Html.DropDownListFor(model => model.JobCodeId, ViewBag.EmployeeJobCodes as SelectList, "Select code", new { @class = "form-control select2" })
                                                @Html.ValidationMessageFor(model => model.JobCodeId, "", new { @class = "text-danger" })
                                            </div>
                                        }
                                    </div>
                                    <div class="form-group row" id="sal">
                                        <label class="col-md-2 control-label">Salary Scale</label>
                                        <div class="col-md-8" id="list"></div>
                                    </div>
                                    <div class="form-actions">
                                        <div class="row">
                                            <div class="col-md-8 col-lg-offset-1">
                                                <button type="button" class="btn btn-info" onclick="addEmployee()" style="float: left">
                                                    <i class="fa fa-save"></i>
                                                    Save
                                                </button>
                                                <a href="@Url.Action("BeneficiaryList")" class="btn btn-info" style="float: left; margin-left: 5px">
                                                    <i class="fa fa-arrow-left"></i>
                                                    Back
                                                </a>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </article>
        </div>
    </section>
</div>
@section Scripts{
    <script>
        $('#SalaryAmount').autoNumeric('init');
        $(document).ready(function () {
           $('#sal').hide();
           $("#JobCodeId").change(function () {
            $("#divLoader").show();
            var id = $("#JobCodeId").val();
            var url = '@Url.Action("JobCodeAmount", "Employees")';
            url += '?id=' + id;
            $.ajax({
                url: url,
                datatype: "json",
                type: "Post",
                contenttype: 'application/json; charset=utf-8',
                async: true,
                success: function (data) {
                    $("#divLoader").hide();
                    $("#list").html(data);
                    $('#sal').show();
                },
                error: function (xhr) {
                    swal('Error please contact system admin');
                }
             })
           });
        })

        $("#HasCheckNumber").change(function () {
            $("#divLoader").toggle(true);
            var hasCheckNumber = $("#HasCheckNumber option:selected").text();

            if (hasCheckNumber == "No") {

                $("#CheckNumber").prop("readonly", true);

                var url = "GetEmpTempBenCode";

                $.ajax({
                    type: "POST",
                    url: url,
                    success: function (data, status, jqXHR) {
                        if (data.success) {
                            $("#CheckNumber").val(data.beneficiaryCode);
                        } else {
                            $("#CheckNumber").val("");
                        }
                    },
                    complete: function () {
                        $("#divLoader").toggle(false);
                    }
                })
            } else {
                $("#CheckNumber").val("");
                $("#CheckNumber").prop("readonly", false);
                $("#divLoader").toggle(false);
            }
        });

        var addEmployee = function () {
            $.validator.unobtrusive.parse("#form");
            if (!$("#form").valid()){
                return false;
            }

            var institution = $("#InstitutionCode").val();

            if (institution != "00230000") {
                if ($('.chBox:checked').length < 1) {
                    swal("Please Select salary amount!", { icon: "info" })
                        .then((value) => {
                        })

                    return false;
                }

                $('input[type=checkbox]').each(function () {
                    if (this.checked) {
                        var id = $(this).val();
                        $('#JobSalaryScaleId').val(id);
                    }
                });
            }

            $("#divLoader").toggle(true);

            var url = '@Url.Action("EditEmployee", "Employees")';
            var url1 = '@Url.Action("NewEmployeeList", "Employees")'
            var model = $("#form").serialize();

            $.ajax({
                type: "POST",
                url: url,
                data: model,
                success: function (response) {
                    $("#divLoader").toggle(false);
                    if (response == "success") {
                        swal("Modified successfully!", { icon: "success" })
                            .then((value) => {
                                window.location.href = url1;
                            })
                    }
                    else if (response == "exist") {
                        swal("Employee exist!", { icon: "info" })
                            .then((value) => {
                            })
                    } else if (response == "acccountExist"){
                        swal("Account number exist!", { icon: "info" })
                            .then((value) => {
                            })

                    } else if (response == "Please fill account number or bank") {
                        swal("Please fill account number or bank!", { icon: "info" })
                            .then((value) => {
                            })
                    }
                    else {
                        swal("Error on modifiying employee!", { icon: "error"})
                            .then((value) =>{
                            })
                    }
                },
                error: function (response) {
                    swal("Error on modifiying employee!")
                }
            });
        };
    </script>
}
