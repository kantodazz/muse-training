@model IEnumerable<IFMIS.Areas.PayrollManagement.Models.EmployeeEarning>
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<!-- MAIN CONTENT -->
<div id="content" style="margin: 5px; padding-top: 30px">

    <div class="row">
        <div class="col-xs-12 col-sm-3 col-md-3 col-lg-3">
        </div>
    </div>
    <!-- widget grid -->
    <section id="widget-grid" class="">
        <!-- START ROW -->
        <div class="row">
            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">
                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">
                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2>Earning Approval</h2>
                    </header>
                    <!-- widget div-->
                    <div>
                        <!-- widget edit box -->
                        <div class="jarviswidget-editbox">
                            <!-- This area used as dropdown edit box -->
                        </div>
                        <!--end widget edit box-->
                        <!-- widget content -->

                        <br />
                        <table id="tblDataList" class="table table-striped table-bordered table-hover table-condensed table-condensed">
                            <thead>
                                <tr>
                                    <th>#</th>
                                    <th>Employee</th>
                                    <th>CheckNumber</th>
                                    <th>ForceNumber</th>
                                    <th>Job Code</th>
                                    <th>PaymentCode</th>
                                    <th>Amount</th>
                                    <th>Status</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            @{
                                int i = 0;
                            }
                            <tbody>
                                @foreach (var item in Model)
                                {
                                    i++;
                                <tr>
                                    <td>@i</td>
                                    <td>@string.Concat(item.Employees.FirstName + " " + @item.Employees.MiddleName + " " + @item.Employees.LastName)</td>
                                    <td>@item.Employees.CheckNumber</td>
                                    <td>@item.Employees.ForceNumber</td>
                                    <td>@item.Employees.JobSalaryScales.JobCode.JobCodeName</td>
                                    <td>@string.Concat(item.EarningJobCodeMap.PaymentCode.PaymentCodeIdentifier + "-" + @item.EarningJobCodeMap.PaymentCode.PaymentCodeDescription)</td>
                                    <td>@Convert.ToDecimal(item.EarningJobCodeMap.Amount).ToString("#,##0.00")</td>
                                    <td>@item.OverallStatus</td>
                                    <td>
                                        <div class="btn-group">
                                            <button type="button" class="btn btn-info btn-xs "><i class="fa fa-tasks"></i></button>
                                            <button type="button" class="btn btn-info btn-xs dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                <span class="caret"></span>
                                                <span class="sr-only">Toggle Dropdown</span>
                                            </button>
                                            <ul class="dropdown-menu" style="width:30px">
                                                <li>
                                                    <a href="#" onclick="confirmEarning(@item.EmployeeEarningId)">Approve</a>
                                                    <a href="#" onclick="rejectEarning(@item.EmployeeEarningId)">Reject</a>
                                                </li>
                                            </ul>
                                        </div>
                                    </td>
                                </tr>
                                }
                            </tbody>

                        </table>
                        <!-- end widget content -->
                    </div>
                    <!-- end widget div -->
                </div>
                <!-- end widget -->
            </article>
        </div>
    </section>
    <!-- end widget grid -->
</div>
@section pagespecific {
    <link href="~/Content/DataTable/css/jquery.dataTables.css" rel="stylesheet" />
    <script src="~/assets/DataTable/jquery.dataTables.min.js"></script>
    <!-- PAGE RELATED PLUGIN(S) -->
    <script type="text/javascript">
        $(document).ready(function () {
            $("#tblDataList").DataTable();
        });

        function confirmEarning(i, id) {
            debugger;
            if (i == 'x') i = id;
            swal({
                title: "Approval!",
                text: "Are you sure you want to approve?",
                buttons: [
                  'Yes',
                  'No'
                ],
            }).then(function (isConfirm) {
                if (isConfirm) {
                    swal("Cancelled", "No change was made");
                } else {
                    confirm1(i)
                }
            });
        };

        var confirm1 = function (id){
            var url = '@Url.Action("ApproveAutomaticEarning", "AutomaticEarnings")/' + id;
            $.ajax({
                type: "POST",
                url: url,
                data: { id: id },
                success: function (response){
                    if (response == "success"){
                        swal("Earning approved successfully!",{ icon: "success" }).then((e) => {
                            window.location.reload();
                        });
                    } else if (response == "DbException"){
                        swal("Error on approving!", { icon: "error" }).then((e) => {
                            window.location.reload();
                        });
                    }
                },
                error: function (xhr) {
                    swal("An error has occured, contact system support");
                },
            });
        };

         @*function rejectEarning(i, id) {
    
            if (i == 'x') i = id;
            swal({
                title: "Confirmation!",
                text: "Are you sure you want to reject?",
                buttons: [
                  'Yes',
                  'No'
                ],
            }).then(function (isConfirm) {
                if (isConfirm) {
                    swal("Cancelled", "No change was made");
                } else {
                    confirm(i)
                }
            });
        };

        var confirm = function (id) {
            var url = '@Url.Action("RejectAutomaticEarning", "AutomaticEarnings")/' + id;
            $.ajax({
                type: "POST",
                url: url,
                data: { id: id },
                success: function (response){
                    if (response == "success"){
                        swal("Earning rejected Successfully!",{ icon: "success" }).then((e) => {
                            window.location.reload();
                        });
                    } else if (response == "DbException"){
                        swal("Error on rejecting!", { icon: "error" }).then((e) => {
                            window.location.reload();
                        });
                    }
                },
                error: function (xhr){
                    swal("An error has occured, contact system support");
                },
            });
        };*@

        function rejectEarning(i, id) {
            debugger
            if (i == 'x') i = id;
            swal({
                text: 'Rejection Reason',
                content: "input",
                button: {
                    text: "Save",
                    closeModal: true,
                },
            }).then(remark => {
                if (!remark) {
                    swal("No reason was provided");
                } else {
                    rejectPost(i, remark);
                };
            });
            $('#confirmModal').modal('hide');
        }

        function rejectPost(Id, remark){
           debugger
            $.ajax({
                type: "post",
                url:  '@Url.Action("RejectAutomaticEarning", "AutomaticEarnings")',
                data: { "Id": Id, "Remark": remark },
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {
                    if (response == "success") {
                        swal("Saved Successfully!", { icon: "success" }).then((e) => {
                            window.location.reload();
                        });
                    }
                    else if(response == "DbException") {
                        swal("Error on rejecting Employee!", { icon: "error" }).then((e) => {
  
                        });
                    }
                },
                failure: function (error) {
                    swal(error);
                }
            });
        }
    </script>
}