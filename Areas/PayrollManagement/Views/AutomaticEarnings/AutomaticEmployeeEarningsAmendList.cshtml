@model IEnumerable<IFMIS.Areas.PayrollManagement.Models.EmployeeEarningAmend>
@{
    ViewBag.Title = "Automatic Earnings List";
     Layout = "~/Views/Shared/_Layout.cshtml";
}
<br/>
<!-- MAIN CONTENT -->
<div id="content" style="margin: 5px; padding-top: 30px">
    <div class="row">
        <div class="col-xs-12 col-sm-3 col-md-3 col-lg-3">
        </div>
    </div>
    <!-- widget grid -->
    <section id="widget-grid" class="">
        <!-- START ROW -->
        <div class="row">
            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">
                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-colorbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">
                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2> Amend Earning(s)</h2>
                    </header>
                    <!-- widget div-->
                    <div>
                        <!-- widget edit box -->
                        <div class="jarviswidget-editbox">
                            <!-- This area used as dropdown edit box -->
                        </div>
                        <!-- end widget edit box -->
                        <!-- widget content -->
                        <div class="widget-body">
                            <div class="row">
                                <div class="col-md-6">
                                    <a class="btn btn-info" href='@Url.Action("EarningEntryAmend", "AutomaticEarnings")'>
                                        <i class="glyphicon glyphicon-plus"></i> Amend Earning
                                    </a>
                                </div>
                            </div>
                            <br />
                            <table id="tblDataList" class="table table-striped table-bordered table-hover table-condensed table-condensed">
                                <thead>
                                    <tr>
                                        <th>#</th>
                                        <th>Employee</th>
                                        <th>CheckNumber</th>
                                        <th>TYR Number</th>
                                        <th>Job Code</th>
                                        <th>PaymentCode</th>
                                        <th>Amount</th>
                                        <th>Prev Status</th>
                                        <th>New Status</th>
                                        <th>Overall Status</th>
                                        <th>Action</th>
                                    </tr>
                                </thead>
                                @{
                                    int i = 0;
                                }
                                <tbody>
                                    @foreach (var item in Model)
                                    {
                                        i++;
                                        <tr>
                                            <td>@i</td>
                                            <td>@string.Concat(item.Employee.FirstName + " " + @item.Employee.MiddleName + " " + @item.Employee.LastName)</td>
                                            <td>@item.Employee.CheckNumber</td>
                                            <td>@item.Employee.ForceNumber</td>
                                            <td>@item.Employee.JobSalaryScales.JobCode.JobCodeName</td>
                                            <td>@string.Concat(item.EarningJobCodeMap.PaymentCode.PaymentCodeIdentifier + "-" + @item.EarningJobCodeMap.PaymentCode.PaymentCodeDescription)</td>
                                            <td>@Convert.ToDecimal(item.EarningJobCodeMap.Amount).ToString("#,##0.00")</td>
                                            <td>
                                                @if (item.IsActiveOld == true)
                                                {
                                                    <h6>Active</h6>
                                                }
                                                else
                                                {
                                                    <h6>In Active</h6>
                                                }
                                            </td>
                                            <td>
                                                @if (item.IsActive == true)
                                                {
                                                    <h6>Active</h6>
                                                }
                                                else
                                                {
                                                    <h6>InActive</h6>
                                                }
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.OverallStatus)
                                                @if (item.RejectionReason != null)
                                                {
                                                    <h6>Reasons:</h6>
                                                    @Html.DisplayFor(modelItem => item.RejectionReason)
                                                }
                                            </td>
                                            <td>
                                                <div class="btn-group">
                                                    <button type="button" class="btn btn-info btn-xs "><i class="fa fa-tasks"></i></button>
                                                    <button type="button" class="btn btn-info btn-xs dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                        <span class="caret"></span>
                                                        <span class="sr-only">Toggle Dropdown</span>
                                                    </button>
                                                    <ul class="dropdown-menu" style="width:30px">
                                                        <li>
                                                            @Html.ActionLink("Edit", "EmployeeEarningsAmendEdit", new { id = item.EmployeeEarningAmendId })
                                                            <a href="#" onclick="confirmEmployee(@item.EmployeeEarningAmendId)"> Confirm </a>
                                                            <a href="#" onclick="deleteEarning(@item.EmployeeEarningAmendId)"> Delete </a>
                                                        </li>
                                                    </ul>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                            <!-- end widget content -->
                        </div>
                        <!-- end widget div -->
                    </div>
                    <!-- end widget -->
                </div>
            </article>
        </div>
    </section>
    <!-- end widget grid -->
</div>
@section pagespecific {
    <link href="~/Content/DataTable/css/jquery.dataTables.css" rel="stylesheet" />
    <script src="~/assets/DataTable/jquery.dataTables.min.js"></script>
    <!-- PAGE RELATED PLUGIN(S) -->
    <script type="text/javascript">
        $(document).ready(function () {
            $("#tblDataList").DataTable();
        });

        function confirmEmployee(i, id) {
            debugger;
            if (i == 'x') i = id;
            swal({
                title: "Confirmation!",
                text: "Are you sure you want to Confirm?",
                buttons: [
                  'Yes',
                  'No'
                ],
            }).then(function (isConfirm) {
                if (isConfirm) {
                    swal("Cancelled", "No change was made");
                } else {
                    confirm(i)
                }
            });
        };

    var confirm = function (id) {
            debugger;
            var url = '@Url.Action("ConfirmManualAmend", "AutomaticEarnings")/' + id;
            $.ajax({
                type: "POST",
                url: url,
                data: { id: id },
                success: function (response) {
                    if (response == "success") {
                        swal("Confirmed Successfully!",{ icon: "success" }).then((e) =>{
                            window.location.reload();
                        });
                    } else if (response == "DbException") {
                        swal("Error on Confirming!", { icon: "error" }).then((e) =>{
                            window.location.reload();
                        });
                    }
                },
                error: function (xhr) {
                    swal("An error has occured, contact system support");
                },
            });
    };

    function deleteEarning(i, id){
            debugger;
            if (i == 'x') i = id;
            swal({
                title: "Confirmation!",
                text: "Are you sure you want to delete?",
                buttons: [
                  'Yes',
                  'No'
                ],
            }).then(function (isConfirm) {
                if (isConfirm) {
                    swal("Cancelled", "No change was made");
                } else {
                    delconfirm(i)
                }
            });
        };

    var delconfirm = function (id){
            debugger;
            var url = '@Url.Action("DeleteEarningAmend", "AutomaticEarnings")/' + id;
            $.ajax({
                type: "POST",
                url: url,
                data: { id: id },
                success: function (response) {
                    if (response == "success") {
                        swal("Deleted Successfully!",{ icon: "success" }).then((e) =>{
                            window.location.reload();
                        });
                    } else if (response == "DbException") {
                        swal("Error on deletion!", { icon: "error" }).then((e) =>{
                            window.location.reload();
                        });
                    }
                },
                error: function (xhr) {
                    swal("An error has occured, contact system support");
                },
            });
        };
    </script>
}