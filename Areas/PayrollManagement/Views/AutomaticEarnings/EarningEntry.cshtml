@model IFMIS.Areas.PayrollManagement.Models.EarningCreateVM
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<br/>
<style>
    .search-btn {
        border: 1px solid #ccc;
        border-radius: 4px;
        padding: 5px;
        padding-right: 10px;
    }

    .search-container {
        display: inline-flex;
        flex: 1 1 300px;
        position: relative;
        border: 1px solid #ccc;
        border-radius: 5px;
        overflow: hidden;
        padding-left: 10px;
    }

    .name-input-container {
        display: inline-flex;
        flex: 1 1 300px;
        position: relative;
        overflow: hidden;
    }

    .search-icon {
        padding: 0.5rem;
    }

    input[type=text], input[type=number] {
        padding: 8px;
        border: 1px solid #ccc;
    }

    select {
        padding: 8px;
        border: 1px solid #ccc;
        resize: vertical;
        width: 230px;
    }

    td {
        padding: 5px;
    }

    input[type=search] {
        padding: 4px;
        border: hidden;
        border-radius: 4px;
    }
</style>
<div id="content" style="margin: 5px; padding-top: 30px">
    <div class="row">
        <div class="col-xs-12 col-sm-3 col-md-3 col-lg-3">
        </div>
    </div>
    <section id="widget-grid" class="">
        <div class="row">
            <article class="col-sm-12 col-md-12 col-lg-12">
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false"
                     data-widget-custombutton="false" data-widget-colorbutton="false"
                     data-widget-deletebutton="false" data-widget-togglebutton="false">
                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2>Earning Entry</h2>
                    </header>
                    <div>
                        <div class="widget-body " style="padding-top:10px">
                            @using (Html.BeginForm("", "", FormMethod.Post, new { id = "form" }))
                            {
                                @Html.AntiForgeryToken()
                                <table style="margin-left: 25%">
                                    <tr>
                                        <td class="form-label">
                                            Employee
                                            <i class="fa fa-times" style="color:white" id="Employee_1"></i>
                                        </td>
                                        <td>
                                            <div class="name-input-container">
                                                <input type="text" readonly id="Employee" placeholder="No Employee Selected" style="width:260px" />
                                                <a class="search-btn" onclick="SearchEmployee()"
                                                   href="#" style="float:right">
                                                    <i class="fa fa-search search-icon"></i>
                                                </a>
                                            </div>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td class="form-label">
                                            Check No
                                            <i class="fa fa-times" style="color:white" id="CheckNo_1"></i>
                                        </td>
                                        <td>
                                            <input id="CheckNo" disabled style="width:300px" type="text" />
                                        </td>
                                    </tr>
                                    <tr>
                                        <td class="form-label">
                                            TYR Number
                                            <i class="fa fa-times" style="color:white" id="ForceNumber_1"></i>
                                        </td>
                                        <td>
                                            <input id="ForceNumber" disabled style="width:300px" type="text" />
                                        </td>
                                    </tr>
                                    <tr>
                                        <td class="form-label">
                                            Department Name
                                            <i class="fa fa-times" style="color:white" id="DepartmentName_1"></i>
                                        </td>
                                        <td>
                                            <input id="DepartmentName" disabled style="width:300px" type="text" />
                                        </td>
                                    </tr>
                                    <tr>
                                        <td class="form-label">
                                            Institution Name
                                            <i class="fa fa-times" style="color:white" id="CompanyName_1"></i>
                                        </td>
                                        <td>
                                            <input id="CompanyName" disabled style="width:300px" type="text" />
                                        </td>
                                    </tr>
                                    <tr>
                                        <td class="form-label">
                                            Job Code
                                            <i class="fa fa-times" style="color:white" id="JobCodeName_1"></i>
                                        </td>
                                        <td>
                                            <input id="JobCodeName" disabled style="width:300px" type="text" />
                                        </td>
                                    </tr>
                                    <tr>
                                        <td>
                                            @Html.HiddenFor(model => model.EmployeeId)
                                        </td>
                                        <td>
                                            <input id="JobCodeId" hidden style="width:300px" type="text" />
                                        </td>
                                    </tr>
                                    <tr>
                                        <td class="form-label">
                                            Is  Jobcode dependent
                                            <i class="fa fa-times" style="color:white" id="DeductionCode_1"></i>
                                        </td>
                                        <td>
                                            <div style="width:300px">
                                                @Html.DropDownListFor(model => model.JobCodeDependantId, ViewBag.Jobcodedependant as SelectList, "Select--", new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.JobCodeDependantId, "", new { @class = "text-danger" })
                                            </div>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td class="form-label">
                                            PaymentCode
                                            <i class="fa fa-times" style="color:white" id="PaymentCode_1"></i>
                                        </td>
                                        <td>
                                            <div style="width:300px">
                                                @Html.DropDownListFor(model => model.PaymentCodeId, new SelectList(""), "Select Payment Code", new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.PaymentCodeId, "", new { @class = "text-danger" })
                                            </div>
                                        </td>
                                    </tr>
                                    <tr id="pay">
                                        <td class="form-label">
                                            Description
                                            <i class="fa fa-times" style="color:white" id="PaymentCode_1"></i>
                                        </td>
                                        <td>
                                            <div style="width:300px">
                                                @Html.DropDownListFor(model => model.JobCodeDescription, new SelectList(""), "Select Description", new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.JobCodeDescription, "", new { @class = "text-danger" })
                                            </div>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td class="form-label">
                                            Amount
                                            <i class="fa fa-times" style="color:white" id="Amount_1"></i>
                                        </td>
                                        <td>
                                            <input id="Amount" disabled style="width:300px" type="text" />
                                        </td>
                                        <td>
                                            @Html.HiddenFor(model => model.EarningJobCodeMapId)
                                        </td>
                                    </tr>
                                </table>
                            }
                        </div>
                    </div>
                    <div class="row" style="padding-bottom:10px;padding-left:500px">
                        <a class="btn btn-info" style="margin-right:5px" onclick="window.history.back()">
                            <i class="glyphicon glyphicon-arrow-left"></i>Back
                        </a>
                        <button style="margin-right:245px" onclick="addmanualEarning()" class="btn btn-info">
                            <i class="fa fa-save"></i>Save
                            <img src="~/Content/img/loading.gif" id="saveLoader" />
                        </button>
                    </div>
                </div>
            </article>
        </div>
    </section>
</div>
<!----------- Search Payee ----------------->
<div class="modal fade" id="payeeModal" style="left:4%">
    <div class="modal-dialog" style="width:80%;">
        <div class="modal-content panel-info">
            <div class="modal-header panel-heading">
                <a href="#" class="close" data-dismiss="modal"> &times; </a>
                <h3 class="modal-title"> Search Employee </h3>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-6">
                    </div>
                    <div class="col-md-6">
                        <div class="search-container " style="float:right">
                            <i class="fa fa-search search-icon"></i>
                            <input type="search" name="search" placeholder="Search checknumber..." id="searchbox">
                            <button type="submit" id="button1" class=" btn btn-block btn-primary">Search</button>
                        </div>
                    </div>
                </div>
                <table class="table" id="dt_search_payee">
                    <thead>
                        <tr>
                            <th>#</th>
                            <th>PaymentId</th>
                            <th>CheckNo</th>
                            <th>Force Number</th>
                            <th>FirstName</th>
                            <th>Middle Name</th>
                            <th>LastName</th>
                            <th>Account Number</th>
                            <th>Department Name</th>
                            <th>CompanyName</th>
                            <th>JobCodeName</th>
                            <th>JobCodeId</th>
                            <th>EmployeeId</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>
                    </tbody>
                </table>
            </div>
            <div class="modal-footer">
                <button class="btn btn-info" data-dismiss="modal">
                    <i class="fa  fa-times"></i>Close
                </button>
            </div>
        </div>
    </div>
</div>
@section pagespecific {
    <script src="~/Scripts/libs/jquery.validate.min.js"></script>
    <script>

        $(document).ready(function () {
            $("#pay").hide();
        });

        $("#saveLoader").toggle(false);
        var isSubmitted = false
        var dt_search_payee = $('#dt_search_payee').dataTable({
            "aoColumnDefs": [{ "bVisible": false, "aTargets": [1, 7, 8, 9, 10, 11,12]}],
        });

        $("#dt_search_payee_wrapper .dt-toolbar").remove();

        $('#button1').click(function () {           
            var search = $("#searchbox").val()
            
            var url = '@Url.Action("GetEmployee", "AutomaticEarnings")';
            $.ajax({
                type: "get",
                url: url + "/?search=" + search + "",
                contenttype: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {
                    data = response.data;
                    dt_search_payee.fnClearTable();
                    for (var i = 0; i < data.length; i++){
                        dt_search_payee.fnAddData([i + 1,
                        data[i]["EmployeeId"],
                        data[i]["CheckNumber"],
                        data[i]["ForceNumber"],
                        data[i]["FirstName"],
                        data[i]["MiddleName"],
                        data[i]["LastName"],
                        data[i]["AccountNumber"],
                        data[i]["DepartmentName"],
                        data[i]["CompanyName"],
                        data[i]["JobCodeName"],
                        data[i]["JobCodeId"],
                        data[i]["EmployeeId"],
                        '<a href="#" onclick="payeeClicked(' + i + ')"><i class="glyphicon glyphicon-plus-sign"></i></a>'
                        ]);
                    }
                },
                failure: function (error) {
                    swal(error);
                }
            });
        });

        var payeeId = null;
        function payeeClicked(rowId) {
            var data = dt_search_payee.DataTable().rows().data();
            var row = data[rowId];
            E = row[1];
            $("#Employee").val(row[4] + " " + row[5] + " " + row[6]);
            $("#CheckNo").val(row[2]);
            $("#ForceNumber").val(row[3]);
            $("#AccountNumber").val(row[7]);
            $("#DepartmentName").val(row[8]);
            $("#CompanyName").val(row[9]);
            $("#JobCodeName").val(row[10]);
            $("#JobCodeId").val(row[11]);
            $("#EmployeeId").val(row[12]);
            $("#payeeModal").modal("hide");
        };

        $("#JobCodeDependantId").change(function () {         
            
            var id = $("#JobCodeDependantId").val();
            var jobcodeId = $("#JobCodeId").val();
            if (id == 1){
                var url = '@Url.Action("GetJobCodeDependants", "Employees")';
                url += '?id=' + id + '&jobcodeId=' + jobcodeId;
                $.ajax({
                    type: "POST",
                    url: url,
                    contentType: "html",
                    success: function (response) {
                        $("#PaymentCodeId").empty();
                        $("#PaymentCodeId").append(response);
                    }
                })
                hidediv();
            } else {
                var url = '@Url.Action("GetJobCodeDependantsManual", "Employees")';
                idz = 0
                url += '?idz=' + idz;
                $.ajax({
                    type: "POST",
                    url: url,
                    contentType: "html",
                    success: function (response) {
                        $("#PaymentCodeId").empty();
                        $("#PaymentCodeId").append(response);
                    }
                })
                showdiv();
            }
        });

        function showdiv(){
            $("#pay").show();
        };

        function hidediv(){
            $("#pay").hide();
        };

        $("#EarningJobCodeMapId").change(function () {
            
            var url = "@Url.Action("PopulateAmount", "Employees")";
            var earningJobCodeMapId = $("#EarningJobCodeMapId").val();

            var idz = $("#JobCodeDependantId").val();
            var jobcodeId = $("#JobCodeId").val();
            if (idz == 1) {
                $.ajax({
                    type: "POST",
                    url: url,
                    data: { earningJobCodeMapId: earningJobCodeMapId },
                    success: function (response){                       
                        $("#Amount").val(response.amount);
                        $("#Amount").autoNumeric({ aNeg: "-" }).trigger("change");
                    },
                    error: function (err) {
                        alert(err.statusText);
                    },
                })
            } else {
                var url = '@Url.Action("GetJobCodeDescription", "Employees")';
                var jobcodeIdz = $("#EarningJobCodeMapId").val();
                url += '?idz=' + jobcodeIdz;
                $.ajax({
                    type: "POST",
                    url: url,
                    contentType: "html",
                    success: function (response){
                        $("#JobCodeDescription").empty();
                        $("#JobCodeDescription").append(response);
                    }
                })
            }
        });

        $("#PaymentCodeId").change(function () {
           
            var url = "@Url.Action("PopulateAmount", "Employees")";
            var id = $("#PaymentCodeId").val();
            var ids = $("#JobCodeId").val();
            var idz = $("#JobCodeDependantId").val();
            if (idz == 1){
                $.ajax({
                    type: "POST",
                    url: url,
                    data: { id: id, ids: ids },
                    success: function (response) {
                        $("#EarningJobCodeMapId").val(response.EarningJobCodeMapId);
                        $("#Amount").val(response.amount);
                        $("#Amount").autoNumeric({ aNeg: "-" }).trigger("change");
                    },
                    error: function (err){
                        alert(err.statusText);
                    },
                })
            } else {
                var url = '@Url.Action("GetJobCodeDescription", "Employees")';
                var id = $("#PaymentCodeId").val();
                
                url += '?id=' + id;
                $.ajax({
                    type: "POST",
                    url: url,
                    contentType: "html",
                    success: function (response) {
                        $("#JobCodeDescription").empty();
                        $("#JobCodeDescription").append(response);
                    }
                })
            }
        });

        $("#JobCodeDescription").change(function (){
            
            var url = "@Url.Action("PopulateAmountManual", "Employees")";
            var descriptionId = $("#JobCodeDescription").val();

            $.ajax({
                type: "POST",
                url: url,
                data: { id: descriptionId },
                success: function (response){
                    $("#EarningJobCodeMapId").val(response.EarningJobCodeMapId);
                    $("#Amount").val(response.amount);
                    $("#Amount").autoNumeric({ aNeg: "-" }).trigger("change");
                },
                error: function (err){
                    swal(err.statusText);
                },
            })
        });

        var addmanualEarning = function () {

            //$.validator.unobtrusive.parse("#form");
            //if (!$("#form").valid()) {
            //    return false;
            //}
            debugger
            var amount = $("#Amount").val();

            if (amount == "") {
                swal("Please fill amount")
                return false;
            }

            var url = '@Url.Action("CreateEarningEntry", "AutomaticEarnings")';
            var url1 = '@Url.Action("AutomaticEarningsnewlist", "AutomaticEarnings")'
            $("#saveLoader").toggle(true);
            var model = $("#form").serialize();
            $.ajax({
                type: "POST",
                url: url,
                data: model,
                success: function (response){
                    if (response == "success") {
                        swal("Payment Saved Successfully!", { icon: "success" })
                            .then((value) => {
                                window.location.href = url1;
                            })
                    } else if (response == "exist") {
                        swal("Payment  Exist!", { icon: "info" })
                           .then((value) => {
                               $("#saveLoader").toggle(false);
                           })
                    }
                    else {
                        swal("Error on Saving Payment!", { icon: "error" })
                            .then((value) => {
                                $("#saveLoader").toggle(false);
                            })
                    }
                },
                error: function (response) {
                    swal("Error on Saving!")
                    location.reload();
                }
            });
        };

        function SearchEmployee() {
            $('#payeeModal').modal('show');
        }

        function voucherSummaryFormValidation() {
            var isNotValid = validateInputsParameters([
                "#Employee",
                "#CheckNo",
                "#DeductionCode",
                "#DeductionType",
                "#BalanceAmount",
                "#DeductionAmount",
                "#EffectiveDate",
                "#Reason"
            ]);
            if (isNotValid) {
                $(isNotValid + "_1").attr("style", "color: red;");
                return false
            }
            return true
        }

        function validateInputsParameters(parameterList) {
            var resetStyle = function (parameterList) {
                for (var i = 0; i < parameterList.length; i++) {
                    $(parameterList[i] + "_1").attr("style", "color: white;");
                }
            }

            resetStyle(parameterList);
            for (var i = 0; i < parameterList.length; i++) {
                if (!$(parameterList[i]).val()) {
                    return parameterList[i];
                }
            }
            return null;
        }

    </script>
}